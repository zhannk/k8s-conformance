I0831 11:46:46.683595      22 e2e.go:132] Starting e2e run "ff1e17f4-0fc2-424f-a55a-76c18747b6ee" on Ginkgo node 1
{"msg":"Test Suite starting","total":346,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1661946406 - Will randomize all specs
Will run 346 of 7050 specs

Aug 31 11:46:48.961: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
E0831 11:46:48.962161      22 progress.go:119] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
Aug 31 11:46:48.962: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug 31 11:46:48.990: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug 31 11:46:49.053: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:49.053: INFO: The status of Pod csi-azuredisk-controller-54668dc445-g8tf7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:49.053: INFO: The status of Pod csi-azurefile-controller-59b55cddbd-4zl4l is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:49.053: INFO: The status of Pod external-dns-9b89bc6d9-xntr5 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:49.053: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:49.053: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:49.053: INFO: 51 / 57 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug 31 11:46:49.053: INFO: expected 14 pod replicas in namespace 'kube-system', 11 are Running and Ready.
Aug 31 11:46:49.053: INFO: POD                                        NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:49.053: INFO: csi-azuredisk-controller-54668dc445-g8tf7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:49.053: INFO: csi-azurefile-controller-59b55cddbd-4zl4l  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:49.053: INFO: external-dns-9b89bc6d9-xntr5               nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:49.053: INFO: vertical-pod-autoscaler-certgen-2nqw7      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:49.053: INFO: vertical-pod-autoscaler-cleanup-vr8qn      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:49.053: INFO: 
Aug 31 11:46:51.105: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:51.105: INFO: The status of Pod csi-azuredisk-controller-54668dc445-g8tf7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:51.105: INFO: The status of Pod csi-azurefile-controller-59b55cddbd-4zl4l is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:51.105: INFO: The status of Pod external-dns-9b89bc6d9-xntr5 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:51.105: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:51.105: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:51.105: INFO: 51 / 57 pods in namespace 'kube-system' are running and ready (2 seconds elapsed)
Aug 31 11:46:51.105: INFO: expected 14 pod replicas in namespace 'kube-system', 11 are Running and Ready.
Aug 31 11:46:51.105: INFO: POD                                        NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:51.105: INFO: csi-azuredisk-controller-54668dc445-g8tf7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:51.105: INFO: csi-azurefile-controller-59b55cddbd-4zl4l  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:51.105: INFO: external-dns-9b89bc6d9-xntr5               nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:51.105: INFO: vertical-pod-autoscaler-certgen-2nqw7      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:51.105: INFO: vertical-pod-autoscaler-cleanup-vr8qn      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:51.105: INFO: 
Aug 31 11:46:53.102: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:53.102: INFO: The status of Pod csi-azuredisk-controller-54668dc445-g8tf7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:53.102: INFO: The status of Pod csi-azurefile-controller-59b55cddbd-4zl4l is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:53.102: INFO: The status of Pod external-dns-9b89bc6d9-xntr5 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:53.102: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:53.102: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:53.102: INFO: 51 / 57 pods in namespace 'kube-system' are running and ready (4 seconds elapsed)
Aug 31 11:46:53.102: INFO: expected 14 pod replicas in namespace 'kube-system', 11 are Running and Ready.
Aug 31 11:46:53.102: INFO: POD                                        NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:53.102: INFO: csi-azuredisk-controller-54668dc445-g8tf7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:53.102: INFO: csi-azurefile-controller-59b55cddbd-4zl4l  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:53.102: INFO: external-dns-9b89bc6d9-xntr5               nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [external-dns]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:53.102: INFO: vertical-pod-autoscaler-certgen-2nqw7      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:53.102: INFO: vertical-pod-autoscaler-cleanup-vr8qn      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:53.102: INFO: 
Aug 31 11:46:55.102: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:55.102: INFO: The status of Pod csi-azuredisk-controller-54668dc445-g8tf7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:55.102: INFO: The status of Pod csi-azurefile-controller-59b55cddbd-4zl4l is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:55.102: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:55.102: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:55.102: INFO: 52 / 57 pods in namespace 'kube-system' are running and ready (6 seconds elapsed)
Aug 31 11:46:55.102: INFO: expected 14 pod replicas in namespace 'kube-system', 12 are Running and Ready.
Aug 31 11:46:55.102: INFO: POD                                        NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:55.103: INFO: csi-azuredisk-controller-54668dc445-g8tf7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azuredisk]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:55.103: INFO: csi-azurefile-controller-59b55cddbd-4zl4l  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [csi-provisioner csi-attacher csi-snapshotter csi-resizer liveness-probe azurefile]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:55.103: INFO: vertical-pod-autoscaler-certgen-2nqw7      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:55.103: INFO: vertical-pod-autoscaler-cleanup-vr8qn      nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:55.103: INFO: 
Aug 31 11:46:57.102: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:57.102: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:57.102: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:57.102: INFO: 54 / 57 pods in namespace 'kube-system' are running and ready (8 seconds elapsed)
Aug 31 11:46:57.102: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:46:57.102: INFO: POD                                    NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:57.102: INFO: vertical-pod-autoscaler-certgen-2nqw7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:57.102: INFO: vertical-pod-autoscaler-cleanup-vr8qn  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:57.102: INFO: 
Aug 31 11:46:59.107: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:46:59.107: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:59.107: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:46:59.107: INFO: 54 / 57 pods in namespace 'kube-system' are running and ready (10 seconds elapsed)
Aug 31 11:46:59.107: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:46:59.107: INFO: POD                                    NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:46:59.107: INFO: vertical-pod-autoscaler-certgen-2nqw7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:59.107: INFO: vertical-pod-autoscaler-cleanup-vr8qn  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:46:59.107: INFO: 
Aug 31 11:47:01.107: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:47:01.107: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:01.107: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:01.107: INFO: 54 / 57 pods in namespace 'kube-system' are running and ready (12 seconds elapsed)
Aug 31 11:47:01.107: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:47:01.107: INFO: POD                                    NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:47:01.107: INFO: vertical-pod-autoscaler-certgen-2nqw7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:01.107: INFO: vertical-pod-autoscaler-cleanup-vr8qn  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:01.107: INFO: 
Aug 31 11:47:03.099: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:47:03.099: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:03.099: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:03.099: INFO: 54 / 57 pods in namespace 'kube-system' are running and ready (14 seconds elapsed)
Aug 31 11:47:03.099: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:47:03.099: INFO: POD                                    NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:47:03.099: INFO: vertical-pod-autoscaler-certgen-2nqw7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:03.099: INFO: vertical-pod-autoscaler-cleanup-vr8qn  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:03.099: INFO: 
Aug 31 11:47:06.241: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:47:06.241: INFO: The status of Pod vertical-pod-autoscaler-certgen-2nqw7 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:06.241: INFO: The status of Pod vertical-pod-autoscaler-cleanup-vr8qn is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 31 11:47:06.241: INFO: 54 / 57 pods in namespace 'kube-system' are running and ready (17 seconds elapsed)
Aug 31 11:47:06.241: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:47:06.241: INFO: POD                                    NODE                   PHASE    GRACE  CONDITIONS
Aug 31 11:47:06.241: INFO: vertical-pod-autoscaler-certgen-2nqw7  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [certgen]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:06.241: INFO: vertical-pod-autoscaler-cleanup-vr8qn  nodepool-qycy5-000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC ContainersNotReady containers with unready status: [cleanup]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 11:46:32 +0000 UTC  }]
Aug 31 11:47:06.241: INFO: 
Aug 31 11:47:07.097: INFO: The status of Pod calico-crd-installer-v3.21.6-qjh4v is Succeeded, skipping waiting
Aug 31 11:47:07.097: INFO: 56 / 57 pods in namespace 'kube-system' are running and ready (18 seconds elapsed)
Aug 31 11:47:07.097: INFO: expected 14 pod replicas in namespace 'kube-system', 14 are Running and Ready.
Aug 31 11:47:07.097: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug 31 11:47:07.104: INFO: 1 / 1 pods ready in namespace 'kube-system' in daemonset 'azure-cloud-controller-manager' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'azure-cloud-node-manager' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'azure-scheduled-events' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'cert-exporter-daemonset' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'csi-azuredisk-node' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'csi-azurefile-node-win' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'net-exporter' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'node-exporter-v1-3-1' (0 seconds elapsed)
Aug 31 11:47:07.104: INFO: e2e test version: v1.23.9
Aug 31 11:47:07.105: INFO: kube-apiserver version: v1.23.9
Aug 31 11:47:07.105: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 11:47:07.107: INFO: Cluster IP family: ipv4
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:07.107: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename custom-resource-definition
W0831 11:47:07.129244      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 31 11:47:07.129: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Aug 31 11:47:07.140: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0831 11:47:07.142779      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0831 11:47:07.145178      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 31 11:47:07.150: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:47:07.263: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:07.819: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8867" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":346,"completed":1,"skipped":2,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:07.826: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7338
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Aug 31 11:47:09.002: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
W0831 11:47:09.002107      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 31 11:47:09.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7338" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":346,"completed":2,"skipped":3,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:09.009: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/disruption.go:69
[It] should update/patch PodDisruptionBudget status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug 31 11:47:11.156: INFO: running pods: 0 < 1
Aug 31 11:47:13.164: INFO: running pods: 0 < 1
Aug 31 11:47:15.160: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:17.181: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4512" for this suite.

• [SLOW TEST:8.178 seconds]
[sig-apps] DisruptionController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":346,"completed":3,"skipped":34,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:17.187: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-206
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:17.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-206" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":346,"completed":4,"skipped":59,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:17.354: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-5001
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:53
STEP: create the container to handle the HTTPGet hook request.
Aug 31 11:47:17.503: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:47:19.514: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:47:21.510: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:47:23.510: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the pod with lifecycle hook
Aug 31 11:47:23.520: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:47:25.526: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:47:27.529: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 31 11:47:27.540: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 31 11:47:27.543: INFO: Pod pod-with-poststart-http-hook still exists
Aug 31 11:47:29.543: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 31 11:47:29.550: INFO: Pod pod-with-poststart-http-hook still exists
Aug 31 11:47:31.543: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 31 11:47:31.557: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:31.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-5001" for this suite.

• [SLOW TEST:14.212 seconds]
[sig-node] Container Lifecycle Hook
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:44
    should execute poststart http hook properly [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":346,"completed":5,"skipped":67,"failed":0}
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:31.566: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should verify changes to a daemon set status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 31 11:47:31.723: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:31.729: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:31.729: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 11:47:32.736: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:32.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:32.739: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 11:47:33.735: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:33.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:33.738: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 11:47:34.736: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:34.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:34.738: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 11:47:35.736: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:35.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:35.738: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 11:47:36.742: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:36.745: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 31 11:47:36.745: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 11:47:37.737: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 11:47:37.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 31 11:47:37.739: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Aug 31 11:47:37.745: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug 31 11:47:37.752: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug 31 11:47:37.754: INFO: Observed &DaemonSet event: ADDED
Aug 31 11:47:37.754: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.754: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.754: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.755: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.755: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.755: INFO: Found daemon set daemon-set in namespace daemonsets-5508 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 31 11:47:37.755: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug 31 11:47:37.764: INFO: Observed &DaemonSet event: ADDED
Aug 31 11:47:37.764: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.764: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.764: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.765: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.765: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.765: INFO: Observed daemon set daemon-set in namespace daemonsets-5508 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 31 11:47:37.765: INFO: Observed &DaemonSet event: MODIFIED
Aug 31 11:47:37.765: INFO: Found daemon set daemon-set in namespace daemonsets-5508 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug 31 11:47:37.765: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5508, will wait for the garbage collector to delete the pods
Aug 31 11:47:37.823: INFO: Deleting DaemonSet.extensions daemon-set took: 3.227714ms
Aug 31 11:47:37.923: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.270924ms
Aug 31 11:47:42.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 11:47:42.127: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 11:47:42.129: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4295"},"items":null}

Aug 31 11:47:42.131: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4295"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:42.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5508" for this suite.

• [SLOW TEST:10.581 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":346,"completed":6,"skipped":67,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:42.147: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-22
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 11:47:42.570: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug 31 11:47:44.583: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6c69dbd86b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 11:47:46.590: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 47, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6c69dbd86b\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 11:47:49.650: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:49.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-22" for this suite.
STEP: Destroying namespace "webhook-22-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:7.595 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":346,"completed":7,"skipped":79,"failed":0}
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:49.742: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-741
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: validating cluster-info
Aug 31 11:47:49.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-741 cluster-info'
Aug 31 11:47:50.262: INFO: stderr: ""
Aug 31 11:47:50.262: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://172.31.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:47:50.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-741" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":346,"completed":8,"skipped":79,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:47:50.270: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a service externalname-service with the type=ExternalName in namespace services-6403
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-6403
I0831 11:47:50.416691      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6403, replica count: 2
I0831 11:47:53.467959      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 11:47:56.469: INFO: Creating new exec pod
I0831 11:47:56.469198      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 11:47:59.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 31 11:47:59.607: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 31 11:47:59.607: INFO: stdout: ""
Aug 31 11:48:00.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 31 11:48:00.728: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 31 11:48:00.728: INFO: stdout: "externalname-service-xtmvp"
Aug 31 11:48:00.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.176.80 80'
Aug 31 11:48:00.841: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.176.80 80\nConnection to 172.31.176.80 80 port [tcp/http] succeeded!\n"
Aug 31 11:48:00.841: INFO: stdout: ""
Aug 31 11:48:01.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.176.80 80'
Aug 31 11:48:02.030: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.176.80 80\nConnection to 172.31.176.80 80 port [tcp/http] succeeded!\n"
Aug 31 11:48:02.030: INFO: stdout: ""
Aug 31 11:48:02.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.176.80 80'
Aug 31 11:48:03.003: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.176.80 80\nConnection to 172.31.176.80 80 port [tcp/http] succeeded!\n"
Aug 31 11:48:03.003: INFO: stdout: ""
Aug 31 11:48:03.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6403 exec execpodhstz8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.176.80 80'
Aug 31 11:48:03.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.176.80 80\nConnection to 172.31.176.80 80 port [tcp/http] succeeded!\n"
Aug 31 11:48:03.961: INFO: stdout: "externalname-service-xtmvp"
Aug 31 11:48:03.961: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:48:03.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6403" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:13.724 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":346,"completed":9,"skipped":87,"failed":0}
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:48:03.994: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6064
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:46
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:48:04.138: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add" in namespace "security-context-test-6064" to be "Succeeded or Failed"
Aug 31 11:48:04.141: INFO: Pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add": Phase="Pending", Reason="", readiness=false. Elapsed: 2.310008ms
Aug 31 11:48:06.147: INFO: Pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008369631s
Aug 31 11:48:08.155: INFO: Pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add": Phase="Running", Reason="", readiness=false. Elapsed: 4.016791684s
Aug 31 11:48:10.159: INFO: Pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.020838849s
Aug 31 11:48:10.159: INFO: Pod "busybox-readonly-false-1954ffea-2e5e-4d4c-bfbe-18fc2f783add" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:48:10.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6064" for this suite.

• [SLOW TEST:6.171 seconds]
[sig-node] Security Context
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:171
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":346,"completed":10,"skipped":88,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:48:10.166: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4943
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 31 11:48:10.295: INFO: Waiting up to 5m0s for pod "pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61" in namespace "emptydir-4943" to be "Succeeded or Failed"
Aug 31 11:48:10.305: INFO: Pod "pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61": Phase="Pending", Reason="", readiness=false. Elapsed: 10.322934ms
Aug 31 11:48:12.310: INFO: Pod "pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61": Phase="Running", Reason="", readiness=false. Elapsed: 2.014885428s
Aug 31 11:48:14.317: INFO: Pod "pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021772765s
STEP: Saw pod success
Aug 31 11:48:14.317: INFO: Pod "pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61" satisfied condition "Succeeded or Failed"
Aug 31 11:48:14.319: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61 container test-container: <nil>
STEP: delete the pod
Aug 31 11:48:14.339: INFO: Waiting for pod pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61 to disappear
Aug 31 11:48:14.341: INFO: Pod pod-8bdbf66d-e1b7-4f56-a004-41253ceccd61 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:48:14.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4943" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":11,"skipped":92,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:48:14.347: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8704;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8704;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8704.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8704.svc;check="$$(dig +notcp +noall +answer +search 152.192.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.192.152_udp@PTR;check="$$(dig +tcp +noall +answer +search 152.192.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.192.152_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8704;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8704;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8704.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8704.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8704.svc;check="$$(dig +notcp +noall +answer +search 152.192.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.192.152_udp@PTR;check="$$(dig +tcp +noall +answer +search 152.192.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.192.152_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 11:48:22.520: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.523: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.525: INFO: Unable to read wheezy_udp@dns-test-service.dns-8704 from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.528: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8704 from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.531: INFO: Unable to read wheezy_udp@dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.533: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.536: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.539: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.552: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.557: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.560: INFO: Unable to read jessie_udp@dns-test-service.dns-8704 from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.562: INFO: Unable to read jessie_tcp@dns-test-service.dns-8704 from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.565: INFO: Unable to read jessie_udp@dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.567: INFO: Unable to read jessie_tcp@dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.570: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.572: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc from pod dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf: the server could not find the requested resource (get pods dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf)
Aug 31 11:48:22.581: INFO: Lookups using dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8704 wheezy_tcp@dns-test-service.dns-8704 wheezy_udp@dns-test-service.dns-8704.svc wheezy_tcp@dns-test-service.dns-8704.svc wheezy_udp@_http._tcp.dns-test-service.dns-8704.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8704.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8704 jessie_tcp@dns-test-service.dns-8704 jessie_udp@dns-test-service.dns-8704.svc jessie_tcp@dns-test-service.dns-8704.svc jessie_udp@_http._tcp.dns-test-service.dns-8704.svc jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc]

Aug 31 11:48:27.648: INFO: DNS probes using dns-8704/dns-test-18c2ff36-23ee-4e24-a3f3-c464f467fabf succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:48:27.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8704" for this suite.

• [SLOW TEST:13.393 seconds]
[sig-network] DNS
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":346,"completed":12,"skipped":105,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:48:27.740: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5418
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 11:48:28.224: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug 31 11:48:30.236: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 11, 48, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 48, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 11, 48, 28, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 11, 48, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6c69dbd86b\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 11:48:33.250: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:48:33.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5418" for this suite.
STEP: Destroying namespace "webhook-5418-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:5.616 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":346,"completed":13,"skipped":109,"failed":0}
SS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:48:33.356: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:50:01.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-777" for this suite.

• [SLOW TEST:88.192 seconds]
[sig-apps] CronJob
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":346,"completed":14,"skipped":111,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:50:01.549: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug 31 11:50:01.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5411 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:01.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5411 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug 31 11:50:01.695: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5412 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:01.695: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5412 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug 31 11:50:01.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5413 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:01.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5413 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug 31 11:50:01.703: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5414 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:01.703: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6231  1bbe6465-edee-41ea-85fc-a95ea25e8afa 5414 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug 31 11:50:01.705: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6231  b9f68d95-7f4c-4a3d-9303-e93979eacb3f 5415 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:01.705: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6231  b9f68d95-7f4c-4a3d-9303-e93979eacb3f 5415 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug 31 11:50:11.712: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6231  b9f68d95-7f4c-4a3d-9303-e93979eacb3f 5478 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:11.712: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6231  b9f68d95-7f4c-4a3d-9303-e93979eacb3f 5478 0 2022-08-31 11:50:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:50:21.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6231" for this suite.

• [SLOW TEST:20.175 seconds]
[sig-api-machinery] Watchers
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":346,"completed":15,"skipped":143,"failed":0}
SSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:50:21.724: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug 31 11:50:21.863: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5529 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:21.864: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5530 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:21.864: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5531 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug 31 11:50:31.884: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5586 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:31.884: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5587 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 11:50:31.885: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7110  32535083-0dd1-44d7-b410-9d0709725630 5588 0 2022-08-31 11:50:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-31 11:50:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:50:31.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7110" for this suite.

• [SLOW TEST:10.167 seconds]
[sig-api-machinery] Watchers
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":346,"completed":16,"skipped":146,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:50:31.892: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1289
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-upd-44b5efe0-0206-4539-9b36-56117d3295a7
STEP: Creating the pod
Aug 31 11:50:32.076: INFO: The status of Pod pod-configmaps-9a9a8daf-e772-4a7e-a4d6-1eaf8865da74 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:50:34.081: INFO: The status of Pod pod-configmaps-9a9a8daf-e772-4a7e-a4d6-1eaf8865da74 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-44b5efe0-0206-4539-9b36-56117d3295a7
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:50:36.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1289" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":17,"skipped":167,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:50:36.109: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6401
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-6401
Aug 31 11:50:36.248: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:50:38.257: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 31 11:50:38.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 31 11:50:38.368: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 31 11:50:38.368: INFO: stdout: "iptables"
Aug 31 11:50:38.368: INFO: proxyMode: iptables
Aug 31 11:50:38.378: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 31 11:50:38.381: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-6401
STEP: creating replication controller affinity-nodeport-timeout in namespace services-6401
I0831 11:50:38.393670      22 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-6401, replica count: 3
I0831 11:50:41.444128      22 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 11:50:41.451: INFO: Creating new exec pod
Aug 31 11:50:44.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug 31 11:50:44.592: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug 31 11:50:44.592: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 11:50:44.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.191.38 80'
Aug 31 11:50:44.702: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.191.38 80\nConnection to 172.31.191.38 80 port [tcp/http] succeeded!\n"
Aug 31 11:50:44.702: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 11:50:44.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.4 30768'
Aug 31 11:50:44.821: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.4 30768\nConnection to 10.4.3.4 30768 port [tcp/*] succeeded!\n"
Aug 31 11:50:44.821: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 11:50:44.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.6 30768'
Aug 31 11:50:44.933: INFO: stderr: "+ nc -v -t -w 2 10.4.3.6 30768\n+ echo hostName\nConnection to 10.4.3.6 30768 port [tcp/*] succeeded!\n"
Aug 31 11:50:44.933: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 11:50:44.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.4.3.4:30768/ ; done'
Aug 31 11:50:45.136: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n"
Aug 31 11:50:45.136: INFO: stdout: "\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm\naffinity-nodeport-timeout-5htnm"
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Received response from host: affinity-nodeport-timeout-5htnm
Aug 31 11:50:45.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.4.3.4:30768/'
Aug 31 11:50:45.250: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n"
Aug 31 11:50:45.250: INFO: stdout: "affinity-nodeport-timeout-5htnm"
Aug 31 11:51:05.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-6401 exec execpod-affinityhn56q -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.4.3.4:30768/'
Aug 31 11:51:05.376: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.4.3.4:30768/\n"
Aug 31 11:51:05.376: INFO: stdout: "affinity-nodeport-timeout-8pqlb"
Aug 31 11:51:05.376: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-6401, will wait for the garbage collector to delete the pods
Aug 31 11:51:05.445: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 3.73092ms
Aug 31 11:51:05.546: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.758051ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:51:08.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6401" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:31.964 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":346,"completed":18,"skipped":185,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:51:08.073: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-663
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-663
[It] Should recreate evicted statefulset [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-663
STEP: Waiting until pod test-pod will start running in namespace statefulset-663
STEP: Creating statefulset with conflicting port in namespace statefulset-663
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-663
Aug 31 11:51:10.261: INFO: Observed stateful pod in namespace: statefulset-663, name: ss-0, uid: 811fc4da-4781-449e-a7b3-9feb417654fa, status phase: Pending. Waiting for statefulset controller to delete.
Aug 31 11:51:10.273: INFO: Observed stateful pod in namespace: statefulset-663, name: ss-0, uid: 811fc4da-4781-449e-a7b3-9feb417654fa, status phase: Failed. Waiting for statefulset controller to delete.
Aug 31 11:51:10.281: INFO: Observed stateful pod in namespace: statefulset-663, name: ss-0, uid: 811fc4da-4781-449e-a7b3-9feb417654fa, status phase: Failed. Waiting for statefulset controller to delete.
Aug 31 11:51:10.284: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-663
STEP: Removing pod with conflicting port in namespace statefulset-663
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-663 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 11:51:12.313: INFO: Deleting all statefulset in ns statefulset-663
Aug 31 11:51:12.315: INFO: Scaling statefulset ss to 0
Aug 31 11:51:22.333: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 11:51:22.335: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:51:22.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-663" for this suite.

• [SLOW TEST:14.276 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    Should recreate evicted statefulset [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":346,"completed":19,"skipped":228,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:51:22.351: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 31 11:51:22.485: INFO: Waiting up to 5m0s for pod "pod-774c7834-cbfc-462c-9a8f-0b570ee0953a" in namespace "emptydir-836" to be "Succeeded or Failed"
Aug 31 11:51:22.488: INFO: Pod "pod-774c7834-cbfc-462c-9a8f-0b570ee0953a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.784915ms
Aug 31 11:51:24.495: INFO: Pod "pod-774c7834-cbfc-462c-9a8f-0b570ee0953a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010408575s
Aug 31 11:51:26.500: INFO: Pod "pod-774c7834-cbfc-462c-9a8f-0b570ee0953a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015452873s
STEP: Saw pod success
Aug 31 11:51:26.500: INFO: Pod "pod-774c7834-cbfc-462c-9a8f-0b570ee0953a" satisfied condition "Succeeded or Failed"
Aug 31 11:51:26.503: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-774c7834-cbfc-462c-9a8f-0b570ee0953a container test-container: <nil>
STEP: delete the pod
Aug 31 11:51:26.516: INFO: Waiting for pod pod-774c7834-cbfc-462c-9a8f-0b570ee0953a to disappear
Aug 31 11:51:26.519: INFO: Pod pod-774c7834-cbfc-462c-9a8f-0b570ee0953a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:51:26.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-836" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":20,"skipped":281,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:51:26.527: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5139
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 31 11:51:26.659: INFO: Waiting up to 5m0s for pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384" in namespace "emptydir-5139" to be "Succeeded or Failed"
Aug 31 11:51:26.661: INFO: Pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384": Phase="Pending", Reason="", readiness=false. Elapsed: 2.116411ms
Aug 31 11:51:28.668: INFO: Pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384": Phase="Running", Reason="", readiness=true. Elapsed: 2.009069267s
Aug 31 11:51:30.674: INFO: Pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384": Phase="Running", Reason="", readiness=false. Elapsed: 4.015037172s
Aug 31 11:51:32.681: INFO: Pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021601836s
STEP: Saw pod success
Aug 31 11:51:32.681: INFO: Pod "pod-ea004876-7d7e-42d9-ba56-d7d59d102384" satisfied condition "Succeeded or Failed"
Aug 31 11:51:32.683: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-ea004876-7d7e-42d9-ba56-d7d59d102384 container test-container: <nil>
STEP: delete the pod
Aug 31 11:51:32.697: INFO: Waiting for pod pod-ea004876-7d7e-42d9-ba56-d7d59d102384 to disappear
Aug 31 11:51:32.701: INFO: Pod pod-ea004876-7d7e-42d9-ba56-d7d59d102384 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:51:32.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5139" for this suite.

• [SLOW TEST:6.181 seconds]
[sig-storage] EmptyDir volumes
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":21,"skipped":285,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:51:32.708: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6995
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-6995
[It] should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating statefulset ss in namespace statefulset-6995
Aug 31 11:51:32.841: INFO: Found 0 stateful pods, waiting for 1
Aug 31 11:51:42.849: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 11:51:42.873: INFO: Deleting all statefulset in ns statefulset-6995
Aug 31 11:51:42.881: INFO: Scaling statefulset ss to 0
Aug 31 11:51:52.901: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 11:51:52.903: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:51:52.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6995" for this suite.

• [SLOW TEST:20.211 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    should have a working scale subresource [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":346,"completed":22,"skipped":294,"failed":0}
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:51:52.919: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6589
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-7821
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-6677
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:52:08.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6589" for this suite.
STEP: Destroying namespace "nsdeletetest-7821" for this suite.
Aug 31 11:52:08.318: INFO: Namespace nsdeletetest-7821 was already deleted
STEP: Destroying namespace "nsdeletetest-6677" for this suite.

• [SLOW TEST:15.403 seconds]
[sig-api-machinery] Namespaces [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":346,"completed":23,"skipped":296,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:52:08.322: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Aug 31 11:52:48.504: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0831 11:52:48.504652      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 31 11:52:48.504: INFO: Deleting pod "simpletest.rc-2frff" in namespace "gc-9836"
Aug 31 11:52:48.515: INFO: Deleting pod "simpletest.rc-2qsz6" in namespace "gc-9836"
Aug 31 11:52:48.524: INFO: Deleting pod "simpletest.rc-2r4g2" in namespace "gc-9836"
Aug 31 11:52:48.535: INFO: Deleting pod "simpletest.rc-4hhcp" in namespace "gc-9836"
Aug 31 11:52:48.545: INFO: Deleting pod "simpletest.rc-4wvx2" in namespace "gc-9836"
Aug 31 11:52:48.552: INFO: Deleting pod "simpletest.rc-4xz28" in namespace "gc-9836"
Aug 31 11:52:48.565: INFO: Deleting pod "simpletest.rc-52v2f" in namespace "gc-9836"
Aug 31 11:52:48.583: INFO: Deleting pod "simpletest.rc-59qq5" in namespace "gc-9836"
Aug 31 11:52:48.589: INFO: Deleting pod "simpletest.rc-5djp7" in namespace "gc-9836"
Aug 31 11:52:48.604: INFO: Deleting pod "simpletest.rc-5fd4k" in namespace "gc-9836"
Aug 31 11:52:48.616: INFO: Deleting pod "simpletest.rc-5hf5r" in namespace "gc-9836"
Aug 31 11:52:48.637: INFO: Deleting pod "simpletest.rc-5hj99" in namespace "gc-9836"
Aug 31 11:52:48.655: INFO: Deleting pod "simpletest.rc-5sls4" in namespace "gc-9836"
Aug 31 11:52:48.663: INFO: Deleting pod "simpletest.rc-5z29r" in namespace "gc-9836"
Aug 31 11:52:48.675: INFO: Deleting pod "simpletest.rc-685mw" in namespace "gc-9836"
Aug 31 11:52:48.689: INFO: Deleting pod "simpletest.rc-6hzbf" in namespace "gc-9836"
Aug 31 11:52:48.702: INFO: Deleting pod "simpletest.rc-6wxw6" in namespace "gc-9836"
Aug 31 11:52:48.712: INFO: Deleting pod "simpletest.rc-78v62" in namespace "gc-9836"
Aug 31 11:52:48.726: INFO: Deleting pod "simpletest.rc-7qmr4" in namespace "gc-9836"
Aug 31 11:52:48.737: INFO: Deleting pod "simpletest.rc-7tp7n" in namespace "gc-9836"
Aug 31 11:52:48.746: INFO: Deleting pod "simpletest.rc-8ffmg" in namespace "gc-9836"
Aug 31 11:52:48.756: INFO: Deleting pod "simpletest.rc-8vqtk" in namespace "gc-9836"
Aug 31 11:52:48.768: INFO: Deleting pod "simpletest.rc-97w24" in namespace "gc-9836"
Aug 31 11:52:48.792: INFO: Deleting pod "simpletest.rc-99fst" in namespace "gc-9836"
Aug 31 11:52:48.800: INFO: Deleting pod "simpletest.rc-9fdlq" in namespace "gc-9836"
Aug 31 11:52:48.814: INFO: Deleting pod "simpletest.rc-9k98s" in namespace "gc-9836"
Aug 31 11:52:48.823: INFO: Deleting pod "simpletest.rc-9x88k" in namespace "gc-9836"
Aug 31 11:52:48.829: INFO: Deleting pod "simpletest.rc-b2fwk" in namespace "gc-9836"
Aug 31 11:52:48.839: INFO: Deleting pod "simpletest.rc-b6zs6" in namespace "gc-9836"
Aug 31 11:52:48.858: INFO: Deleting pod "simpletest.rc-b7rsq" in namespace "gc-9836"
Aug 31 11:52:48.882: INFO: Deleting pod "simpletest.rc-bcbq5" in namespace "gc-9836"
Aug 31 11:52:48.901: INFO: Deleting pod "simpletest.rc-bkp9s" in namespace "gc-9836"
Aug 31 11:52:48.910: INFO: Deleting pod "simpletest.rc-bnlhn" in namespace "gc-9836"
Aug 31 11:52:48.919: INFO: Deleting pod "simpletest.rc-bsfz5" in namespace "gc-9836"
Aug 31 11:52:48.925: INFO: Deleting pod "simpletest.rc-btcm7" in namespace "gc-9836"
Aug 31 11:52:48.934: INFO: Deleting pod "simpletest.rc-bttzr" in namespace "gc-9836"
Aug 31 11:52:48.942: INFO: Deleting pod "simpletest.rc-cp2lm" in namespace "gc-9836"
Aug 31 11:52:48.953: INFO: Deleting pod "simpletest.rc-ctxkd" in namespace "gc-9836"
Aug 31 11:52:48.964: INFO: Deleting pod "simpletest.rc-cwx84" in namespace "gc-9836"
Aug 31 11:52:48.971: INFO: Deleting pod "simpletest.rc-d48nf" in namespace "gc-9836"
Aug 31 11:52:48.978: INFO: Deleting pod "simpletest.rc-dk64w" in namespace "gc-9836"
Aug 31 11:52:48.991: INFO: Deleting pod "simpletest.rc-f8v2p" in namespace "gc-9836"
Aug 31 11:52:48.999: INFO: Deleting pod "simpletest.rc-fnxwq" in namespace "gc-9836"
Aug 31 11:52:49.013: INFO: Deleting pod "simpletest.rc-fq4g8" in namespace "gc-9836"
Aug 31 11:52:49.022: INFO: Deleting pod "simpletest.rc-g2ktc" in namespace "gc-9836"
Aug 31 11:52:49.030: INFO: Deleting pod "simpletest.rc-g7rt9" in namespace "gc-9836"
Aug 31 11:52:49.047: INFO: Deleting pod "simpletest.rc-g9pd2" in namespace "gc-9836"
Aug 31 11:52:49.057: INFO: Deleting pod "simpletest.rc-gdmq4" in namespace "gc-9836"
Aug 31 11:52:49.069: INFO: Deleting pod "simpletest.rc-gg842" in namespace "gc-9836"
Aug 31 11:52:49.077: INFO: Deleting pod "simpletest.rc-gwb99" in namespace "gc-9836"
Aug 31 11:52:49.085: INFO: Deleting pod "simpletest.rc-gxl9t" in namespace "gc-9836"
Aug 31 11:52:49.094: INFO: Deleting pod "simpletest.rc-h6jl7" in namespace "gc-9836"
Aug 31 11:52:49.102: INFO: Deleting pod "simpletest.rc-h7rtv" in namespace "gc-9836"
Aug 31 11:52:49.118: INFO: Deleting pod "simpletest.rc-h7smv" in namespace "gc-9836"
Aug 31 11:52:49.126: INFO: Deleting pod "simpletest.rc-hwvdb" in namespace "gc-9836"
Aug 31 11:52:49.134: INFO: Deleting pod "simpletest.rc-j7p82" in namespace "gc-9836"
Aug 31 11:52:49.141: INFO: Deleting pod "simpletest.rc-j8dvm" in namespace "gc-9836"
Aug 31 11:52:49.148: INFO: Deleting pod "simpletest.rc-j8xcr" in namespace "gc-9836"
Aug 31 11:52:49.154: INFO: Deleting pod "simpletest.rc-jl5sw" in namespace "gc-9836"
Aug 31 11:52:49.164: INFO: Deleting pod "simpletest.rc-k9vtm" in namespace "gc-9836"
Aug 31 11:52:49.179: INFO: Deleting pod "simpletest.rc-kc6kg" in namespace "gc-9836"
Aug 31 11:52:49.188: INFO: Deleting pod "simpletest.rc-kcjhr" in namespace "gc-9836"
Aug 31 11:52:49.197: INFO: Deleting pod "simpletest.rc-l2kfs" in namespace "gc-9836"
Aug 31 11:52:49.231: INFO: Deleting pod "simpletest.rc-lv7gc" in namespace "gc-9836"
Aug 31 11:52:49.285: INFO: Deleting pod "simpletest.rc-lxgwp" in namespace "gc-9836"
Aug 31 11:52:49.337: INFO: Deleting pod "simpletest.rc-m56kw" in namespace "gc-9836"
Aug 31 11:52:49.382: INFO: Deleting pod "simpletest.rc-mb89w" in namespace "gc-9836"
Aug 31 11:52:49.432: INFO: Deleting pod "simpletest.rc-mdct4" in namespace "gc-9836"
Aug 31 11:52:49.482: INFO: Deleting pod "simpletest.rc-mmsvh" in namespace "gc-9836"
Aug 31 11:52:49.532: INFO: Deleting pod "simpletest.rc-n7rt9" in namespace "gc-9836"
Aug 31 11:52:49.584: INFO: Deleting pod "simpletest.rc-ndc44" in namespace "gc-9836"
Aug 31 11:52:49.633: INFO: Deleting pod "simpletest.rc-nqn5l" in namespace "gc-9836"
Aug 31 11:52:49.684: INFO: Deleting pod "simpletest.rc-p9mff" in namespace "gc-9836"
Aug 31 11:52:49.733: INFO: Deleting pod "simpletest.rc-phb9p" in namespace "gc-9836"
Aug 31 11:52:49.785: INFO: Deleting pod "simpletest.rc-pjsmh" in namespace "gc-9836"
Aug 31 11:52:49.832: INFO: Deleting pod "simpletest.rc-pjsqj" in namespace "gc-9836"
Aug 31 11:52:49.881: INFO: Deleting pod "simpletest.rc-qqvhr" in namespace "gc-9836"
Aug 31 11:52:49.931: INFO: Deleting pod "simpletest.rc-qqz7w" in namespace "gc-9836"
Aug 31 11:52:49.983: INFO: Deleting pod "simpletest.rc-qtlzz" in namespace "gc-9836"
Aug 31 11:52:50.033: INFO: Deleting pod "simpletest.rc-rc6l6" in namespace "gc-9836"
Aug 31 11:52:50.081: INFO: Deleting pod "simpletest.rc-rd7lh" in namespace "gc-9836"
Aug 31 11:52:50.130: INFO: Deleting pod "simpletest.rc-rmvjj" in namespace "gc-9836"
Aug 31 11:52:50.183: INFO: Deleting pod "simpletest.rc-rvcjk" in namespace "gc-9836"
Aug 31 11:52:50.243: INFO: Deleting pod "simpletest.rc-rwf4n" in namespace "gc-9836"
Aug 31 11:52:50.298: INFO: Deleting pod "simpletest.rc-rznbt" in namespace "gc-9836"
Aug 31 11:52:50.334: INFO: Deleting pod "simpletest.rc-s9d6f" in namespace "gc-9836"
Aug 31 11:52:50.385: INFO: Deleting pod "simpletest.rc-smgmc" in namespace "gc-9836"
Aug 31 11:52:50.431: INFO: Deleting pod "simpletest.rc-t8zvc" in namespace "gc-9836"
Aug 31 11:52:50.483: INFO: Deleting pod "simpletest.rc-tmdhp" in namespace "gc-9836"
Aug 31 11:52:50.530: INFO: Deleting pod "simpletest.rc-tnbhp" in namespace "gc-9836"
Aug 31 11:52:50.581: INFO: Deleting pod "simpletest.rc-tzbvn" in namespace "gc-9836"
Aug 31 11:52:50.631: INFO: Deleting pod "simpletest.rc-vft86" in namespace "gc-9836"
Aug 31 11:52:50.683: INFO: Deleting pod "simpletest.rc-vgw8h" in namespace "gc-9836"
Aug 31 11:52:50.734: INFO: Deleting pod "simpletest.rc-vpc6l" in namespace "gc-9836"
Aug 31 11:52:50.781: INFO: Deleting pod "simpletest.rc-wpzc6" in namespace "gc-9836"
Aug 31 11:52:50.831: INFO: Deleting pod "simpletest.rc-x9t8w" in namespace "gc-9836"
Aug 31 11:52:50.882: INFO: Deleting pod "simpletest.rc-xxrz6" in namespace "gc-9836"
Aug 31 11:52:50.933: INFO: Deleting pod "simpletest.rc-z2wdb" in namespace "gc-9836"
Aug 31 11:52:50.980: INFO: Deleting pod "simpletest.rc-z5nn7" in namespace "gc-9836"
Aug 31 11:52:51.031: INFO: Deleting pod "simpletest.rc-zxggz" in namespace "gc-9836"
[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:52:51.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9836" for this suite.

• [SLOW TEST:42.856 seconds]
[sig-api-machinery] Garbage collector
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":346,"completed":24,"skipped":393,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:52:51.180: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6351
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should test the lifecycle of an Endpoint [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:52:51.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6351" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":346,"completed":25,"skipped":426,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:52:51.354: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7516
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 11:52:51.484: INFO: Waiting up to 5m0s for pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf" in namespace "downward-api-7516" to be "Succeeded or Failed"
Aug 31 11:52:51.486: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Pending", Reason="", readiness=false. Elapsed: 1.940434ms
Aug 31 11:52:53.493: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008406317s
Aug 31 11:52:55.498: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013682224s
Aug 31 11:52:57.507: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022866049s
Aug 31 11:52:59.515: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Pending", Reason="", readiness=false. Elapsed: 8.030734506s
Aug 31 11:53:01.520: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.035825079s
STEP: Saw pod success
Aug 31 11:53:01.520: INFO: Pod "downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf" satisfied condition "Succeeded or Failed"
Aug 31 11:53:01.522: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf container client-container: <nil>
STEP: delete the pod
Aug 31 11:53:01.536: INFO: Waiting for pod downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf to disappear
Aug 31 11:53:01.538: INFO: Pod downwardapi-volume-62ddca8e-4a4a-4ce1-abc5-329d2fdc10bf no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:01.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7516" for this suite.

• [SLOW TEST:10.189 seconds]
[sig-storage] Downward API volume
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":26,"skipped":434,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:01.544: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-1935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug 31 11:53:01.677: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 31 11:53:06.686: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug 31 11:53:06.688: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug 31 11:53:06.693: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug 31 11:53:06.695: INFO: Observed &ReplicaSet event: ADDED
Aug 31 11:53:06.695: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.695: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.695: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.695: INFO: Found replicaset test-rs in namespace replicaset-1935 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 31 11:53:06.695: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug 31 11:53:06.695: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 31 11:53:06.702: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug 31 11:53:06.704: INFO: Observed &ReplicaSet event: ADDED
Aug 31 11:53:06.704: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.704: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.704: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.704: INFO: Observed replicaset test-rs in namespace replicaset-1935 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 31 11:53:06.704: INFO: Observed &ReplicaSet event: MODIFIED
Aug 31 11:53:06.704: INFO: Found replicaset test-rs in namespace replicaset-1935 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug 31 11:53:06.705: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:06.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-1935" for this suite.

• [SLOW TEST:5.167 seconds]
[sig-apps] ReplicaSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":346,"completed":27,"skipped":440,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:06.711: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 31 11:53:06.846: INFO: Waiting up to 5m0s for pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0" in namespace "emptydir-1627" to be "Succeeded or Failed"
Aug 31 11:53:06.854: INFO: Pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0": Phase="Pending", Reason="", readiness=false. Elapsed: 8.086131ms
Aug 31 11:53:08.859: INFO: Pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0": Phase="Running", Reason="", readiness=true. Elapsed: 2.0125788s
Aug 31 11:53:10.863: INFO: Pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0": Phase="Running", Reason="", readiness=false. Elapsed: 4.016368445s
Aug 31 11:53:12.869: INFO: Pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02266032s
STEP: Saw pod success
Aug 31 11:53:12.869: INFO: Pod "pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0" satisfied condition "Succeeded or Failed"
Aug 31 11:53:12.871: INFO: Trying to get logs from node nodepool-qycy5-000000 pod pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0 container test-container: <nil>
STEP: delete the pod
Aug 31 11:53:12.885: INFO: Waiting for pod pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0 to disappear
Aug 31 11:53:12.887: INFO: Pod pod-85fbea47-ea57-4fc8-afdc-10b4a52cfac0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:12.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1627" for this suite.

• [SLOW TEST:6.182 seconds]
[sig-storage] EmptyDir volumes
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":28,"skipped":453,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:12.893: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6315.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6315.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 226.189.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.189.226_udp@PTR;check="$$(dig +tcp +noall +answer +search 226.189.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.189.226_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6315.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6315.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6315.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6315.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6315.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 226.189.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.189.226_udp@PTR;check="$$(dig +tcp +noall +answer +search 226.189.31.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.31.189.226_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 11:53:15.105: INFO: Unable to read wheezy_udp@dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.108: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.110: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.127: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.153: INFO: Unable to read jessie_tcp@dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.156: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.158: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local from pod dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02: the server could not find the requested resource (get pods dns-test-75dce2a9-ca25-44e4-979a-cce816062d02)
Aug 31 11:53:15.167: INFO: Lookups using dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02 failed for: [wheezy_udp@dns-test-service.dns-6315.svc.cluster.local wheezy_tcp@dns-test-service.dns-6315.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local jessie_tcp@dns-test-service.dns-6315.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6315.svc.cluster.local]

Aug 31 11:53:20.208: INFO: DNS probes using dns-6315/dns-test-75dce2a9-ca25-44e4-979a-cce816062d02 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:20.251: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6315" for this suite.

• [SLOW TEST:7.371 seconds]
[sig-network] DNS
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":346,"completed":29,"skipped":471,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Docker Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:20.264: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-8000
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test override all
Aug 31 11:53:20.397: INFO: Waiting up to 5m0s for pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c" in namespace "containers-8000" to be "Succeeded or Failed"
Aug 31 11:53:20.400: INFO: Pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.161148ms
Aug 31 11:53:22.408: INFO: Pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c": Phase="Running", Reason="", readiness=true. Elapsed: 2.010705234s
Aug 31 11:53:24.413: INFO: Pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c": Phase="Running", Reason="", readiness=false. Elapsed: 4.016321608s
Aug 31 11:53:26.420: INFO: Pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02304852s
STEP: Saw pod success
Aug 31 11:53:26.420: INFO: Pod "client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c" satisfied condition "Succeeded or Failed"
Aug 31 11:53:26.422: INFO: Trying to get logs from node nodepool-qycy5-000001 pod client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c container agnhost-container: <nil>
STEP: delete the pod
Aug 31 11:53:26.440: INFO: Waiting for pod client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c to disappear
Aug 31 11:53:26.442: INFO: Pod client-containers-54cf9683-35d7-4c54-bbde-4a58426c8c7c no longer exists
[AfterEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:26.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-8000" for this suite.

• [SLOW TEST:6.184 seconds]
[sig-node] Docker Containers
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":346,"completed":30,"skipped":485,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:26.448: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] deployment should delete old replica sets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:53:26.580: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug 31 11:53:31.584: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 31 11:53:31.585: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 11:53:31.598: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-2598  a6fb27d5-d870-4d40-991f-3e4eee5fe9c9 9152 1 2022-08-31 11:53:31 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-08-31 11:53:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004564f68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Aug 31 11:53:31.599: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:53:31.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2598" for this suite.

• [SLOW TEST:5.167 seconds]
[sig-apps] Deployment
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":346,"completed":31,"skipped":495,"failed":0}
SSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:53:31.615: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod liveness-6872d215-31b6-4293-8e67-22a7a507d565 in namespace container-probe-4712
Aug 31 11:53:33.763: INFO: Started pod liveness-6872d215-31b6-4293-8e67-22a7a507d565 in namespace container-probe-4712
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 11:53:33.765: INFO: Initial restart count of pod liveness-6872d215-31b6-4293-8e67-22a7a507d565 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:34.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4712" for this suite.

• [SLOW TEST:243.247 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":346,"completed":32,"skipped":502,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:34.863: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 11:57:35.626: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 11:57:38.648: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:57:38.653: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:41.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7518" for this suite.
STEP: Destroying namespace "webhook-7518-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:6.941 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":346,"completed":33,"skipped":562,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:41.804: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5364
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-50ec21ed-06d7-4b7d-9828-a0a9768da273
STEP: Creating a pod to test consume secrets
Aug 31 11:57:41.945: INFO: Waiting up to 5m0s for pod "pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53" in namespace "secrets-5364" to be "Succeeded or Failed"
Aug 31 11:57:41.947: INFO: Pod "pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.387917ms
Aug 31 11:57:43.953: INFO: Pod "pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007807687s
Aug 31 11:57:45.964: INFO: Pod "pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018508157s
STEP: Saw pod success
Aug 31 11:57:45.964: INFO: Pod "pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53" satisfied condition "Succeeded or Failed"
Aug 31 11:57:45.966: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53 container secret-env-test: <nil>
STEP: delete the pod
Aug 31 11:57:45.981: INFO: Waiting for pod pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53 to disappear
Aug 31 11:57:45.983: INFO: Pod pod-secrets-e7efaed8-dac5-4bf2-8f13-f5b82a56ba53 no longer exists
[AfterEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:45.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5364" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":346,"completed":34,"skipped":580,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:45.991: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8951
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/instrumentation/events.go:81
[It] should delete a collection of events [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug 31 11:57:46.129: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:46.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8951" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":346,"completed":35,"skipped":610,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:46.147: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8558
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 11:57:46.276: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300" in namespace "downward-api-8558" to be "Succeeded or Failed"
Aug 31 11:57:46.278: INFO: Pod "downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300": Phase="Pending", Reason="", readiness=false. Elapsed: 2.102415ms
Aug 31 11:57:48.287: INFO: Pod "downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011313034s
Aug 31 11:57:50.294: INFO: Pod "downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018466702s
STEP: Saw pod success
Aug 31 11:57:50.294: INFO: Pod "downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300" satisfied condition "Succeeded or Failed"
Aug 31 11:57:50.303: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300 container client-container: <nil>
STEP: delete the pod
Aug 31 11:57:50.341: INFO: Waiting for pod downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300 to disappear
Aug 31 11:57:50.349: INFO: Pod downwardapi-volume-d44e96ad-69d0-4a32-b86f-cc4e6ee9b300 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:50.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8558" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":36,"skipped":628,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:50.380: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-3f53bae5-efa1-4778-b837-499963887e8a
STEP: Creating a pod to test consume configMaps
Aug 31 11:57:50.533: INFO: Waiting up to 5m0s for pod "pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363" in namespace "configmap-7379" to be "Succeeded or Failed"
Aug 31 11:57:50.536: INFO: Pod "pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363": Phase="Pending", Reason="", readiness=false. Elapsed: 2.596618ms
Aug 31 11:57:52.542: INFO: Pod "pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009000443s
Aug 31 11:57:54.551: INFO: Pod "pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017253746s
STEP: Saw pod success
Aug 31 11:57:54.551: INFO: Pod "pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363" satisfied condition "Succeeded or Failed"
Aug 31 11:57:54.553: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 11:57:54.565: INFO: Waiting for pod pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363 to disappear
Aug 31 11:57:54.567: INFO: Pod pod-configmaps-b98896e0-44bc-4046-8048-68742ae94363 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:57:54.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7379" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":346,"completed":37,"skipped":628,"failed":0}
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:57:54.573: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-511
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:46
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:57:54.705: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e" in namespace "security-context-test-511" to be "Succeeded or Failed"
Aug 31 11:57:54.708: INFO: Pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.229016ms
Aug 31 11:57:56.713: INFO: Pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007430962s
Aug 31 11:57:58.721: INFO: Pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015783897s
Aug 31 11:58:00.727: INFO: Pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021883384s
Aug 31 11:58:00.727: INFO: Pod "alpine-nnp-false-400288a9-4b1c-4cdb-8d39-3694d9eff10e" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:00.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-511" for this suite.

• [SLOW TEST:6.168 seconds]
[sig-node] Security Context
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:296
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":38,"skipped":635,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:00.741: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-1355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:47
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:00.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-1355" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":346,"completed":39,"skipped":640,"failed":0}
SSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:00.880: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name s-test-opt-del-eb725016-1c31-446e-8b06-f742c21e3ea7
STEP: Creating secret with name s-test-opt-upd-b28de8c8-35e5-46f1-bf96-8cd0e1cbe6d7
STEP: Creating the pod
Aug 31 11:58:01.025: INFO: The status of Pod pod-secrets-6d40da85-a735-47dd-bf66-0a37e10509f1 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 11:58:03.032: INFO: The status of Pod pod-secrets-6d40da85-a735-47dd-bf66-0a37e10509f1 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-eb725016-1c31-446e-8b06-f742c21e3ea7
STEP: Updating secret s-test-opt-upd-b28de8c8-35e5-46f1-bf96-8cd0e1cbe6d7
STEP: Creating secret with name s-test-opt-create-e4bac5f0-840a-4210-808e-5482185b7314
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:07.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4491" for this suite.

• [SLOW TEST:6.216 seconds]
[sig-storage] Secrets
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":40,"skipped":646,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:07.097: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5801
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:33.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5801" for this suite.

• [SLOW TEST:26.406 seconds]
[sig-node] Container Runtime
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  blackbox test
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/runtime.go:41
    when starting a container that exits
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/runtime.go:42
      should run with the expected status [NodeConformance] [Conformance]
      /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":346,"completed":41,"skipped":689,"failed":0}
SSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:33.503: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6580
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-map-2ead7860-86da-4754-990c-05d7953637be
STEP: Creating a pod to test consume secrets
Aug 31 11:58:33.637: INFO: Waiting up to 5m0s for pod "pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1" in namespace "secrets-6580" to be "Succeeded or Failed"
Aug 31 11:58:33.640: INFO: Pod "pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.553618ms
Aug 31 11:58:35.645: INFO: Pod "pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007737209s
Aug 31 11:58:37.652: INFO: Pod "pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014706488s
STEP: Saw pod success
Aug 31 11:58:37.652: INFO: Pod "pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1" satisfied condition "Succeeded or Failed"
Aug 31 11:58:37.654: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1 container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 11:58:37.668: INFO: Waiting for pod pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1 to disappear
Aug 31 11:58:37.670: INFO: Pod pod-secrets-18a87d39-466a-46a7-b714-e7dd91a5d1c1 no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:37.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6580" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":346,"completed":42,"skipped":692,"failed":0}

------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:37.676: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:37.822: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9779" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":346,"completed":43,"skipped":692,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:37.828: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:58:37.950: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:44.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-670" for this suite.

• [SLOW TEST:6.339 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:48
    listing custom resource definition objects works  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":346,"completed":44,"skipped":701,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:44.167: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7926
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting the auto-created API token
Aug 31 11:58:44.840: INFO: created pod pod-service-account-defaultsa
Aug 31 11:58:44.840: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug 31 11:58:44.848: INFO: created pod pod-service-account-mountsa
Aug 31 11:58:44.848: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug 31 11:58:44.857: INFO: created pod pod-service-account-nomountsa
Aug 31 11:58:44.857: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug 31 11:58:44.867: INFO: created pod pod-service-account-defaultsa-mountspec
Aug 31 11:58:44.867: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug 31 11:58:44.879: INFO: created pod pod-service-account-mountsa-mountspec
Aug 31 11:58:44.879: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug 31 11:58:44.889: INFO: created pod pod-service-account-nomountsa-mountspec
Aug 31 11:58:44.889: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug 31 11:58:44.898: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug 31 11:58:44.898: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug 31 11:58:44.908: INFO: created pod pod-service-account-mountsa-nomountspec
Aug 31 11:58:44.908: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug 31 11:58:44.916: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug 31 11:58:44.917: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:58:44.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7926" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":346,"completed":45,"skipped":703,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:58:44.927: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2675
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-2675
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:58:45.066: INFO: Found 0 stateful pods, waiting for 1
Aug 31 11:58:55.073: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug 31 11:58:55.090: INFO: Found 1 stateful pods, waiting for 2
Aug 31 11:59:05.095: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 11:59:05.095: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 11:59:05.108: INFO: Deleting all statefulset in ns statefulset-2675
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:05.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2675" for this suite.

• [SLOW TEST:20.193 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    should list, patch and delete a collection of StatefulSets [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":346,"completed":46,"skipped":748,"failed":0}
S
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:05.120: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap configmap-8902/configmap-test-51fb8e9a-2847-48d8-8104-e31c993a97e7
STEP: Creating a pod to test consume configMaps
Aug 31 11:59:05.264: INFO: Waiting up to 5m0s for pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1" in namespace "configmap-8902" to be "Succeeded or Failed"
Aug 31 11:59:05.267: INFO: Pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.407016ms
Aug 31 11:59:07.271: INFO: Pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006348458s
Aug 31 11:59:09.279: INFO: Pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014940412s
Aug 31 11:59:11.285: INFO: Pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.020694129s
STEP: Saw pod success
Aug 31 11:59:11.285: INFO: Pod "pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1" satisfied condition "Succeeded or Failed"
Aug 31 11:59:11.287: INFO: Trying to get logs from node nodepool-qycy5-000002 pod pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1 container env-test: <nil>
STEP: delete the pod
Aug 31 11:59:11.304: INFO: Waiting for pod pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1 to disappear
Aug 31 11:59:11.306: INFO: Pod pod-configmaps-cd4eb769-b751-4087-a001-fa3de65bc6c1 no longer exists
[AfterEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:11.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8902" for this suite.

• [SLOW TEST:6.192 seconds]
[sig-node] ConfigMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":346,"completed":47,"skipped":749,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:11.313: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2437
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should delete a collection of pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create set of pods
Aug 31 11:59:11.441: INFO: created test-pod-1
Aug 31 11:59:13.451: INFO: running and ready test-pod-1
Aug 31 11:59:13.462: INFO: created test-pod-2
Aug 31 11:59:15.470: INFO: running and ready test-pod-2
Aug 31 11:59:15.477: INFO: created test-pod-3
Aug 31 11:59:17.487: INFO: running and ready test-pod-3
STEP: waiting for all 3 pods to be located
STEP: waiting for all pods to be deleted
Aug 31 11:59:17.505: INFO: Pod quantity 3 is different from expected quantity 0
Aug 31 11:59:18.510: INFO: Pod quantity 3 is different from expected quantity 0
Aug 31 11:59:19.511: INFO: Pod quantity 1 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:20.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2437" for this suite.

• [SLOW TEST:9.201 seconds]
[sig-node] Pods
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":346,"completed":48,"skipped":755,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:20.514: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2742
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 11:59:20.639: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug 31 11:59:20.645: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 31 11:59:25.652: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 31 11:59:25.652: INFO: Creating deployment "test-rolling-update-deployment"
Aug 31 11:59:25.656: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug 31 11:59:25.682: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug 31 11:59:27.691: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug 31 11:59:27.693: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 11:59:27.699: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-2742  dc3cb7fc-6a68-4cba-8550-d79236c485e8 11796 1 2022-08-31 11:59:25 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-31 11:59:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000b86368 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-31 11:59:25 +0000 UTC,LastTransitionTime:2022-08-31 11:59:25 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-8656fc4b57" has successfully progressed.,LastUpdateTime:2022-08-31 11:59:26 +0000 UTC,LastTransitionTime:2022-08-31 11:59:25 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 31 11:59:27.702: INFO: New ReplicaSet "test-rolling-update-deployment-8656fc4b57" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-8656fc4b57  deployment-2742  9f28c86d-de6c-4be0-a3c9-b4815880ae36 11785 1 2022-08-31 11:59:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:8656fc4b57] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment dc3cb7fc-6a68-4cba-8550-d79236c485e8 0xc000b86877 0xc000b86878}] []  [{kube-controller-manager Update apps/v1 2022-08-31 11:59:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dc3cb7fc-6a68-4cba-8550-d79236c485e8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 8656fc4b57,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:8656fc4b57] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000b86938 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 31 11:59:27.702: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug 31 11:59:27.702: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-2742  034a4fc3-f482-4908-8ee5-ffbc090b0295 11795 2 2022-08-31 11:59:20 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment dc3cb7fc-6a68-4cba-8550-d79236c485e8 0xc000b86737 0xc000b86738}] []  [{e2e.test Update apps/v1 2022-08-31 11:59:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dc3cb7fc-6a68-4cba-8550-d79236c485e8\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc000b86808 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 11:59:27.704: INFO: Pod "test-rolling-update-deployment-8656fc4b57-gbbdc" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-8656fc4b57-gbbdc test-rolling-update-deployment-8656fc4b57- deployment-2742  b49149aa-5707-4aed-9c15-77b2b0f41c8b 11784 0 2022-08-31 11:59:25 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:8656fc4b57] map[cni.projectcalico.org/containerID:0dbd74f3676c20ebd46b0096689f00f627a140db1143e7b8dddffeb7996e9285 cni.projectcalico.org/podIP:10.4.130.55/32 cni.projectcalico.org/podIPs:10.4.130.55/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-8656fc4b57 9f28c86d-de6c-4be0-a3c9-b4815880ae36 0xc000b86dd7 0xc000b86dd8}] []  [{kube-controller-manager Update v1 2022-08-31 11:59:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9f28c86d-de6c-4be0-a3c9-b4815880ae36\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 11:59:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.55\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kf28d,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kf28d,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 11:59:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 11:59:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 11:59:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 11:59:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.55,StartTime:2022-08-31 11:59:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 11:59:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://0cc5aaa3aee716be748af8797327b0c0a4c979dd2abbb3a9465318d19221eeb9,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.55,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:27.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2742" for this suite.

• [SLOW TEST:7.197 seconds]
[sig-apps] Deployment
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":346,"completed":49,"skipped":756,"failed":0}
[sig-node] Lease 
  lease API should be available [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Lease
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:27.711: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-4483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] Lease
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:27.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-4483" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":346,"completed":50,"skipped":756,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:27.875: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4264
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:38
STEP: Setting up data
[It] should support subpaths with downward pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod pod-subpath-test-downwardapi-n4bm
STEP: Creating a pod to test atomic-volume-subpath
Aug 31 11:59:28.017: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-n4bm" in namespace "subpath-4264" to be "Succeeded or Failed"
Aug 31 11:59:28.020: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.646317ms
Aug 31 11:59:30.023: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 2.00629126s
Aug 31 11:59:32.030: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 4.012652104s
Aug 31 11:59:34.037: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 6.019940038s
Aug 31 11:59:36.043: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 8.025424546s
Aug 31 11:59:38.048: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 10.03107584s
Aug 31 11:59:40.053: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 12.03546381s
Aug 31 11:59:42.056: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 14.039185362s
Aug 31 11:59:44.062: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 16.044976012s
Aug 31 11:59:46.068: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 18.051124551s
Aug 31 11:59:48.075: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=true. Elapsed: 20.058331883s
Aug 31 11:59:50.078: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Running", Reason="", readiness=false. Elapsed: 22.061350374s
Aug 31 11:59:52.083: INFO: Pod "pod-subpath-test-downwardapi-n4bm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.06567326s
STEP: Saw pod success
Aug 31 11:59:52.083: INFO: Pod "pod-subpath-test-downwardapi-n4bm" satisfied condition "Succeeded or Failed"
Aug 31 11:59:52.085: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-subpath-test-downwardapi-n4bm container test-container-subpath-downwardapi-n4bm: <nil>
STEP: delete the pod
Aug 31 11:59:52.097: INFO: Waiting for pod pod-subpath-test-downwardapi-n4bm to disappear
Aug 31 11:59:52.099: INFO: Pod pod-subpath-test-downwardapi-n4bm no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-n4bm
Aug 31 11:59:52.099: INFO: Deleting pod "pod-subpath-test-downwardapi-n4bm" in namespace "subpath-4264"
[AfterEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:52.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4264" for this suite.

• [SLOW TEST:24.232 seconds]
[sig-storage] Subpath
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:34
    should support subpaths with downward pod [Excluded:WindowsDocker] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Excluded:WindowsDocker] [Conformance]","total":346,"completed":51,"skipped":794,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:52.108: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4592
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/init_container.go:162
[It] should invoke init containers on a RestartAlways pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
Aug 31 11:59:52.232: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 11:59:56.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4592" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":346,"completed":52,"skipped":824,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 11:59:56.092: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Update Demo
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:296
[It] should create and stop a replication controller  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a replication controller
Aug 31 11:59:56.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 create -f -'
Aug 31 11:59:57.512: INFO: stderr: ""
Aug 31 11:59:57.512: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 31 11:59:57.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 11:59:57.573: INFO: stderr: ""
Aug 31 11:59:57.573: INFO: stdout: "update-demo-nautilus-kdbhj update-demo-nautilus-mbhqd "
Aug 31 11:59:57.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods update-demo-nautilus-kdbhj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 11:59:57.622: INFO: stderr: ""
Aug 31 11:59:57.622: INFO: stdout: ""
Aug 31 11:59:57.622: INFO: update-demo-nautilus-kdbhj is created but not running
Aug 31 12:00:02.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:00:02.682: INFO: stderr: ""
Aug 31 12:00:02.682: INFO: stdout: "update-demo-nautilus-kdbhj update-demo-nautilus-mbhqd "
Aug 31 12:00:02.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods update-demo-nautilus-kdbhj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:00:02.736: INFO: stderr: ""
Aug 31 12:00:02.736: INFO: stdout: "true"
Aug 31 12:00:02.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods update-demo-nautilus-kdbhj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:00:02.787: INFO: stderr: ""
Aug 31 12:00:02.787: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:00:02.787: INFO: validating pod update-demo-nautilus-kdbhj
Aug 31 12:00:02.791: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:00:02.791: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:00:02.791: INFO: update-demo-nautilus-kdbhj is verified up and running
Aug 31 12:00:02.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods update-demo-nautilus-mbhqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:00:02.840: INFO: stderr: ""
Aug 31 12:00:02.840: INFO: stdout: "true"
Aug 31 12:00:02.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods update-demo-nautilus-mbhqd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:00:02.896: INFO: stderr: ""
Aug 31 12:00:02.896: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:00:02.896: INFO: validating pod update-demo-nautilus-mbhqd
Aug 31 12:00:02.901: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:00:02.901: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:00:02.901: INFO: update-demo-nautilus-mbhqd is verified up and running
STEP: using delete to clean up resources
Aug 31 12:00:02.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 delete --grace-period=0 --force -f -'
Aug 31 12:00:02.951: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:00:02.951: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 31 12:00:02.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get rc,svc -l name=update-demo --no-headers'
Aug 31 12:00:03.028: INFO: stderr: "No resources found in kubectl-4909 namespace.\n"
Aug 31 12:00:03.028: INFO: stdout: ""
Aug 31 12:00:03.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-4909 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 31 12:00:03.092: INFO: stderr: ""
Aug 31 12:00:03.092: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:03.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4909" for this suite.

• [SLOW TEST:7.010 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Update Demo
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:294
    should create and stop a replication controller  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":346,"completed":53,"skipped":837,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:03.102: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-3870
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/rc.go:54
[It] should adopt matching pods on creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug 31 12:00:03.241: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:00:05.247: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:06.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3870" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":346,"completed":54,"skipped":847,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:06.268: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7230
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check if kubectl can dry-run update Pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 31 12:00:06.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7230 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 31 12:00:06.446: INFO: stderr: ""
Aug 31 12:00:06.446: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug 31 12:00:06.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7230 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug 31 12:00:06.627: INFO: stderr: ""
Aug 31 12:00:06.627: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 31 12:00:06.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7230 delete pods e2e-test-httpd-pod'
Aug 31 12:00:08.998: INFO: stderr: ""
Aug 31 12:00:08.998: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:08.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7230" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":346,"completed":55,"skipped":864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:09.009: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug 31 12:00:09.151: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:00:11.159: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug 31 12:00:12.176: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:13.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5395" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":346,"completed":56,"skipped":936,"failed":0}
SSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:13.199: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2323
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name secret-emptykey-test-2473f293-4640-491c-8a26-d40e1311ddec
[AfterEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:13.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2323" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":346,"completed":57,"skipped":942,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:13.327: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9740
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-803dcaea-446d-4a4b-ad18-e4356219f919
STEP: Creating a pod to test consume secrets
Aug 31 12:00:13.456: INFO: Waiting up to 5m0s for pod "pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df" in namespace "secrets-9740" to be "Succeeded or Failed"
Aug 31 12:00:13.458: INFO: Pod "pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.436615ms
Aug 31 12:00:15.463: INFO: Pod "pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007437463s
Aug 31 12:00:17.469: INFO: Pod "pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013095703s
STEP: Saw pod success
Aug 31 12:00:17.469: INFO: Pod "pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df" satisfied condition "Succeeded or Failed"
Aug 31 12:00:17.471: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:00:17.483: INFO: Waiting for pod pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df to disappear
Aug 31 12:00:17.485: INFO: Pod pod-secrets-147334fd-c1c5-4240-a522-c3dbfb1818df no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:17.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9740" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":346,"completed":58,"skipped":950,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:17.492: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test env composition
Aug 31 12:00:17.625: INFO: Waiting up to 5m0s for pod "var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e" in namespace "var-expansion-3432" to be "Succeeded or Failed"
Aug 31 12:00:17.628: INFO: Pod "var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.315715ms
Aug 31 12:00:19.635: INFO: Pod "var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009132251s
Aug 31 12:00:21.639: INFO: Pod "var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013482361s
STEP: Saw pod success
Aug 31 12:00:21.639: INFO: Pod "var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e" satisfied condition "Succeeded or Failed"
Aug 31 12:00:21.641: INFO: Trying to get logs from node nodepool-qycy5-000001 pod var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e container dapi-container: <nil>
STEP: delete the pod
Aug 31 12:00:21.655: INFO: Waiting for pod var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e to disappear
Aug 31 12:00:21.657: INFO: Pod var-expansion-506d6106-85d9-4705-97b6-52aa774e6d2e no longer exists
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:21.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3432" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":346,"completed":59,"skipped":962,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:21.663: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2778
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] should run the lifecycle of a Deployment [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug 31 12:00:21.799: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.799: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.827: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.827: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.843: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.843: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.855: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:21.855: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 31 12:00:23.038: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 31 12:00:23.038: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 31 12:00:23.185: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug 31 12:00:23.202: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug 31 12:00:23.203: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.203: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.203: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.203: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 0
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.204: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.222: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.222: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.252: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.252: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.280: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.280: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:23.288: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:23.288: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:24.194: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:24.194: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:24.217: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
STEP: listing Deployments
Aug 31 12:00:24.223: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug 31 12:00:24.231: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug 31 12:00:24.237: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:24.244: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:24.270: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:24.296: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:24.310: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:25.054: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:25.070: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:25.087: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:25.107: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 31 12:00:26.214: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 1
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:26.264: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:26.265: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:26.265: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 2
Aug 31 12:00:26.265: INFO: observed Deployment test-deployment in namespace deployment-2778 with ReadyReplicas 3
STEP: deleting the Deployment
Aug 31 12:00:26.269: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
Aug 31 12:00:26.270: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 12:00:26.272: INFO: Log out all the ReplicaSets if there is no deployment created
Aug 31 12:00:26.275: INFO: ReplicaSet "test-deployment-5ddd8b47d8":
&ReplicaSet{ObjectMeta:{test-deployment-5ddd8b47d8  deployment-2778  42b386fa-e4db-4afb-9f5d-e8c7d4953403 12612 4 2022-08-31 12:00:23 +0000 UTC <nil> <nil> map[pod-template-hash:5ddd8b47d8 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 64e61ff9-a1bb-421d-b93d-c646d6d480c4 0xc00446e5c7 0xc00446e5c8}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:00:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"64e61ff9-a1bb-421d-b93d-c646d6d480c4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:00:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 5ddd8b47d8,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:5ddd8b47d8 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.6 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00446e650 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 31 12:00:26.278: INFO: pod: "test-deployment-5ddd8b47d8-c9hk5":
&Pod{ObjectMeta:{test-deployment-5ddd8b47d8-c9hk5 test-deployment-5ddd8b47d8- deployment-2778  a40f58e5-2065-4d5c-b42d-98b547ce262b 12608 0 2022-08-31 12:00:23 +0000 UTC 2022-08-31 12:00:27 +0000 UTC 0xc00458a058 map[pod-template-hash:5ddd8b47d8 test-deployment-static:true] map[cni.projectcalico.org/containerID:bc0e027621972fdea80baa28733109b04f74a8bbaaf567a11e2bd463d6c304db cni.projectcalico.org/podIP:10.4.131.89/32 cni.projectcalico.org/podIPs:10.4.131.89/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-5ddd8b47d8 42b386fa-e4db-4afb-9f5d-e8c7d4953403 0xc00458a0a7 0xc00458a0a8}] []  [{calico Update v1 2022-08-31 12:00:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:00:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"42b386fa-e4db-4afb-9f5d-e8c7d4953403\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.89\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pw5nf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.6,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pw5nf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.89,StartTime:2022-08-31 12:00:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:00:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.6,ImageID:k8s.gcr.io/pause@sha256:3d380ca8864549e74af4b29c10f9cb0956236dfb01c40ca076fb6c37253234db,ContainerID:containerd://3e5a27c3cdbc8d97361d9f86e4967865b8f8b0273f382422c9a6357a6b794a08,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.89,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 31 12:00:26.278: INFO: pod: "test-deployment-5ddd8b47d8-jsbl6":
&Pod{ObjectMeta:{test-deployment-5ddd8b47d8-jsbl6 test-deployment-5ddd8b47d8- deployment-2778  1772b95d-676c-4390-a567-20a4cbcc35af 12593 0 2022-08-31 12:00:24 +0000 UTC 2022-08-31 12:00:26 +0000 UTC 0xc00458a280 map[pod-template-hash:5ddd8b47d8 test-deployment-static:true] map[cni.projectcalico.org/containerID:9d2c31a05ec0a21446f51c7f6e1d6b5e317f6b7e0799825eec3535627a8f9c4b cni.projectcalico.org/podIP:10.4.129.51/32 cni.projectcalico.org/podIPs:10.4.129.51/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-5ddd8b47d8 42b386fa-e4db-4afb-9f5d-e8c7d4953403 0xc00458a2d7 0xc00458a2d8}] []  [{calico Update v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"42b386fa-e4db-4afb-9f5d-e8c7d4953403\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:00:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6n62h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.6,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6n62h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:10.4.129.51,StartTime:2022-08-31 12:00:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:00:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.6,ImageID:k8s.gcr.io/pause@sha256:3d380ca8864549e74af4b29c10f9cb0956236dfb01c40ca076fb6c37253234db,ContainerID:containerd://662cfd5769a2f5aa312424ad16781cb69a410fdb99a3288b6881e5f5617f51e9,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.129.51,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 31 12:00:26.278: INFO: ReplicaSet "test-deployment-6d7ffcf7fb":
&ReplicaSet{ObjectMeta:{test-deployment-6d7ffcf7fb  deployment-2778  a9d5f675-b8c9-4bb0-879e-337ad7a01d2f 12529 3 2022-08-31 12:00:21 +0000 UTC <nil> <nil> map[pod-template-hash:6d7ffcf7fb test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 64e61ff9-a1bb-421d-b93d-c646d6d480c4 0xc00446e6b7 0xc00446e6b8}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:00:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"64e61ff9-a1bb-421d-b93d-c646d6d480c4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6d7ffcf7fb,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6d7ffcf7fb test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00446e740 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 31 12:00:26.282: INFO: ReplicaSet "test-deployment-854fdc678":
&ReplicaSet{ObjectMeta:{test-deployment-854fdc678  deployment-2778  c84bfc54-9720-48af-ab51-24d18f99b240 12604 2 2022-08-31 12:00:24 +0000 UTC <nil> <nil> map[pod-template-hash:854fdc678 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 64e61ff9-a1bb-421d-b93d-c646d6d480c4 0xc00446e7a7 0xc00446e7a8}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"64e61ff9-a1bb-421d-b93d-c646d6d480c4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:00:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 854fdc678,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:854fdc678 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00446e830 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug 31 12:00:26.293: INFO: pod: "test-deployment-854fdc678-7pkjz":
&Pod{ObjectMeta:{test-deployment-854fdc678-7pkjz test-deployment-854fdc678- deployment-2778  8e1a681d-d0c9-42d3-8d23-2ce75331b51f 12603 0 2022-08-31 12:00:25 +0000 UTC <nil> <nil> map[pod-template-hash:854fdc678 test-deployment-static:true] map[cni.projectcalico.org/containerID:15a4f93238d681220860757ab9351168c65789f7322ea3105f88721f727ba7c3 cni.projectcalico.org/podIP:10.4.131.90/32 cni.projectcalico.org/podIPs:10.4.131.90/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-854fdc678 c84bfc54-9720-48af-ab51-24d18f99b240 0xc00458b947 0xc00458b948}] []  [{calico Update v1 2022-08-31 12:00:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:00:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c84bfc54-9720-48af-ab51-24d18f99b240\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:00:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.90\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pq8pb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pq8pb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.90,StartTime:2022-08-31 12:00:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:00:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://068ef24138c13a4a3c1ffb57d7302f4b2ba4ab0edef796e3375a9ec8149c9de2,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.90,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 31 12:00:26.293: INFO: pod: "test-deployment-854fdc678-lr75m":
&Pod{ObjectMeta:{test-deployment-854fdc678-lr75m test-deployment-854fdc678- deployment-2778  225e3560-fd68-48b9-89fc-0599e6febc9a 12564 0 2022-08-31 12:00:24 +0000 UTC <nil> <nil> map[pod-template-hash:854fdc678 test-deployment-static:true] map[cni.projectcalico.org/containerID:d2b50efd8237d91f63229c584b9fe9b3f1c941b0044a9cb4768076f5f44d1600 cni.projectcalico.org/podIP:10.4.130.60/32 cni.projectcalico.org/podIPs:10.4.130.60/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-854fdc678 c84bfc54-9720-48af-ab51-24d18f99b240 0xc00458bb67 0xc00458bb68}] []  [{calico Update v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:00:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c84bfc54-9720-48af-ab51-24d18f99b240\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:00:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lx65l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lx65l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:00:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.60,StartTime:2022-08-31 12:00:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:00:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://a4a949dbf244e6287e981deaf681c6ffd27e8082c58782d5f55691ffd68acea3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.60,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:26.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2778" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":346,"completed":60,"skipped":970,"failed":0}
SSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:26.305: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7202
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug 31 12:00:28.950: INFO: Successfully updated pod "adopt-release-8x5qz"
STEP: Checking that the Job readopts the Pod
Aug 31 12:00:28.950: INFO: Waiting up to 15m0s for pod "adopt-release-8x5qz" in namespace "job-7202" to be "adopted"
Aug 31 12:00:28.953: INFO: Pod "adopt-release-8x5qz": Phase="Running", Reason="", readiness=true. Elapsed: 2.932418ms
Aug 31 12:00:30.960: INFO: Pod "adopt-release-8x5qz": Phase="Running", Reason="", readiness=true. Elapsed: 2.009550395s
Aug 31 12:00:30.960: INFO: Pod "adopt-release-8x5qz" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug 31 12:00:31.553: INFO: Successfully updated pod "adopt-release-8x5qz"
STEP: Checking that the Job releases the Pod
Aug 31 12:00:31.553: INFO: Waiting up to 15m0s for pod "adopt-release-8x5qz" in namespace "job-7202" to be "released"
Aug 31 12:00:31.558: INFO: Pod "adopt-release-8x5qz": Phase="Running", Reason="", readiness=true. Elapsed: 5.406034ms
Aug 31 12:00:33.576: INFO: Pod "adopt-release-8x5qz": Phase="Running", Reason="", readiness=true. Elapsed: 2.022964867s
Aug 31 12:00:33.576: INFO: Pod "adopt-release-8x5qz" satisfied condition "released"
[AfterEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:00:33.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7202" for this suite.

• [SLOW TEST:7.353 seconds]
[sig-apps] Job
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":346,"completed":61,"skipped":974,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:00:33.658: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1547
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:90
Aug 31 12:00:33.851: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:01:33.908: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create pods that use 4/5 of node resources.
Aug 31 12:01:33.932: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 31 12:01:33.956: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 31 12:01:33.987: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 31 12:01:34.010: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 31 12:01:34.027: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 31 12:01:34.034: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:01:50.084: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1547" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:78

• [SLOW TEST:76.468 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":346,"completed":62,"skipped":979,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:01:50.126: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3542
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:01:50.330: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: client-side validation (kubectl create and apply) allows request with any unknown properties
Aug 31 12:01:53.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-3542 --namespace=crd-publish-openapi-3542 create -f -'
Aug 31 12:01:54.309: INFO: stderr: ""
Aug 31 12:01:54.309: INFO: stdout: "e2e-test-crd-publish-openapi-1130-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 31 12:01:54.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-3542 --namespace=crd-publish-openapi-3542 delete e2e-test-crd-publish-openapi-1130-crds test-cr'
Aug 31 12:01:54.364: INFO: stderr: ""
Aug 31 12:01:54.364: INFO: stdout: "e2e-test-crd-publish-openapi-1130-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug 31 12:01:54.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-3542 --namespace=crd-publish-openapi-3542 apply -f -'
Aug 31 12:01:54.536: INFO: stderr: ""
Aug 31 12:01:54.536: INFO: stdout: "e2e-test-crd-publish-openapi-1130-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 31 12:01:54.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-3542 --namespace=crd-publish-openapi-3542 delete e2e-test-crd-publish-openapi-1130-crds test-cr'
Aug 31 12:01:54.591: INFO: stderr: ""
Aug 31 12:01:54.591: INFO: stdout: "e2e-test-crd-publish-openapi-1130-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 31 12:01:54.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-3542 explain e2e-test-crd-publish-openapi-1130-crds'
Aug 31 12:01:54.781: INFO: stderr: ""
Aug 31 12:01:54.781: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1130-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:01:57.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3542" for this suite.

• [SLOW TEST:7.054 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":346,"completed":63,"skipped":980,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:01:57.181: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5553
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:90
Aug 31 12:01:57.313: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 31 12:01:57.321: INFO: Waiting for terminating namespaces to be deleted...
Aug 31 12:01:57.323: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000000 before test
Aug 31 12:01:57.332: INFO: azure-cloud-node-manager-wwzl5 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:01:57.332: INFO: azure-scheduled-events-228j9 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:01:57.332: INFO: calico-node-wqzj4 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:01:57.332: INFO: cert-exporter-daemonset-sjcjs from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:01:57.332: INFO: csi-azuredisk-node-kvgvp from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.332: INFO: csi-azurefile-node-2rlbt from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.332: INFO: kube-proxy-skgwk from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:01:57.332: INFO: kube-state-metrics-7549f69f7b-4wz2d from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 31 12:01:57.332: INFO: net-exporter-j45lm from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:01:57.332: INFO: node-exporter-v1-3-1-6zbf7 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:01:57.332: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-sxrpf from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:01:57.332: INFO: vertical-pod-autoscaler-updater-7bdddf5b-t6lgw from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:01:57.332: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-l2q54 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:01:57.332: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:01:57.332: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000001 before test
Aug 31 12:01:57.341: INFO: azure-cloud-node-manager-jgc5k from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:01:57.341: INFO: azure-scheduled-events-v8sjf from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:01:57.341: INFO: calico-node-wc6pv from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:01:57.341: INFO: cert-exporter-daemonset-qgrcx from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:01:57.341: INFO: csi-azuredisk-controller-54668dc445-g8tf7 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (6 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.341: INFO: csi-azuredisk-node-2qvkc from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.341: INFO: csi-azurefile-controller-59b55cddbd-4zl4l from kube-system started at 2022-08-31 11:46:32 +0000 UTC (6 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.341: INFO: csi-azurefile-node-6p9mh from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.341: INFO: external-dns-9b89bc6d9-xntr5 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container external-dns ready: true, restart count 0
Aug 31 12:01:57.341: INFO: kube-proxy-rhrp2 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:01:57.341: INFO: metrics-server-5fb454cbc5-2glzg from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container metrics-server ready: true, restart count 0
Aug 31 12:01:57.341: INFO: net-exporter-hkzv6 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:01:57.341: INFO: node-exporter-v1-3-1-wn7v7 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:01:57.341: INFO: vertical-pod-autoscaler-recommender-67b5d54d5f-qgbp7 from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:01:57.341: INFO: sonobuoy from sonobuoy started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 31 12:01:57.341: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-hfx7z from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:01:57.341: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:01:57.341: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000002 before test
Aug 31 12:01:57.379: INFO: azure-cloud-node-manager-bdkwc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.379: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:01:57.379: INFO: azure-scheduled-events-fvclm from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.379: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:01:57.379: INFO: calico-node-g6p5m from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:01:57.380: INFO: cert-exporter-daemonset-ctrtd from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:01:57.380: INFO: coredns-workers-8666c764cd-5k24f from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:01:57.380: INFO: coredns-workers-8666c764cd-fh979 from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:01:57.380: INFO: csi-azuredisk-node-qvvqc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.380: INFO: csi-azurefile-node-ql4sl from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:01:57.380: INFO: kube-proxy-gvjs4 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:01:57.380: INFO: net-exporter-dggpf from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:01:57.380: INFO: node-exporter-v1-3-1-q226d from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:01:57.380: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-7f5cd from kube-system started at 2022-08-31 11:53:16 +0000 UTC (1 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:01:57.380: INFO: sonobuoy-e2e-job-61cdc82114084168 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container e2e ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:01:57.380: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-ln45x from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:01:57.380: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:01:57.380: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.17106c47a37dd0ef], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate, 3 node(s) didn't match Pod's node affinity/selector.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:01:58.441: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5553" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:81
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":346,"completed":64,"skipped":1080,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:01:58.450: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8823
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:01:59.259: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:02:02.279: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:02:02.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8823" for this suite.
STEP: Destroying namespace "webhook-8823-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":346,"completed":65,"skipped":1147,"failed":0}
S
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:02:02.326: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2646
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod busybox-4c4a4c19-52c8-4c76-b3e6-91dd086d0bd8 in namespace container-probe-2646
Aug 31 12:02:04.472: INFO: Started pod busybox-4c4a4c19-52c8-4c76-b3e6-91dd086d0bd8 in namespace container-probe-2646
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 12:02:04.474: INFO: Initial restart count of pod busybox-4c4a4c19-52c8-4c76-b3e6-91dd086d0bd8 is 0
Aug 31 12:02:54.630: INFO: Restart count of pod container-probe-2646/busybox-4c4a4c19-52c8-4c76-b3e6-91dd086d0bd8 is now 1 (50.155499084s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:02:54.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2646" for this suite.

• [SLOW TEST:52.320 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":346,"completed":66,"skipped":1148,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:02:54.647: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:02:54.777: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d" in namespace "downward-api-8194" to be "Succeeded or Failed"
Aug 31 12:02:54.779: INFO: Pod "downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.045524ms
Aug 31 12:02:56.787: INFO: Pod "downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d": Phase="Running", Reason="", readiness=false. Elapsed: 2.009625094s
Aug 31 12:02:58.793: INFO: Pod "downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016021074s
STEP: Saw pod success
Aug 31 12:02:58.793: INFO: Pod "downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d" satisfied condition "Succeeded or Failed"
Aug 31 12:02:58.795: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d container client-container: <nil>
STEP: delete the pod
Aug 31 12:02:58.809: INFO: Waiting for pod downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d to disappear
Aug 31 12:02:58.812: INFO: Pod downwardapi-volume-dfbb6112-252f-453c-bb75-70d20b8bd82d no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:02:58.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8194" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":346,"completed":67,"skipped":1195,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] IngressClass API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:02:58.818: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-44
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/ingressclass.go:186
[It]  should support creating IngressClass API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 31 12:02:58.959: INFO: starting watch
STEP: patching
STEP: updating
Aug 31 12:02:58.965: INFO: waiting for watch events with expected annotations
Aug 31 12:02:58.965: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:02:58.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-44" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":346,"completed":68,"skipped":1207,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:02:58.991: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-2781
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/rc.go:54
[It] should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating replication controller my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8
Aug 31 12:02:59.124: INFO: Pod name my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8: Found 0 pods out of 1
Aug 31 12:03:04.133: INFO: Pod name my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8: Found 1 pods out of 1
Aug 31 12:03:04.133: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8" are running
Aug 31 12:03:04.138: INFO: Pod "my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8-5h9w8" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:02:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:03:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:03:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:02:59 +0000 UTC Reason: Message:}])
Aug 31 12:03:04.138: INFO: Trying to dial the pod
Aug 31 12:03:09.152: INFO: Controller my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8: Got expected result from replica 1 [my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8-5h9w8]: "my-hostname-basic-892984e6-6f9c-4865-a0a0-772e5b1d5bf8-5h9w8", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:09.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-2781" for this suite.

• [SLOW TEST:10.169 seconds]
[sig-apps] ReplicationController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":346,"completed":69,"skipped":1227,"failed":0}
SSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] version v1
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:09.160: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:03:09.288: INFO: Creating pod...
Aug 31 12:03:09.307: INFO: Pod Quantity: 1 Status: Pending
Aug 31 12:03:10.310: INFO: Pod Quantity: 1 Status: Pending
Aug 31 12:03:11.313: INFO: Pod Status: Running
Aug 31 12:03:11.313: INFO: Creating service...
Aug 31 12:03:11.323: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/DELETE
Aug 31 12:03:11.329: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 31 12:03:11.329: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/GET
Aug 31 12:03:11.335: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 31 12:03:11.336: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/HEAD
Aug 31 12:03:11.338: INFO: http.Client request:HEAD | StatusCode:200
Aug 31 12:03:11.338: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/OPTIONS
Aug 31 12:03:11.340: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 31 12:03:11.340: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/PATCH
Aug 31 12:03:11.345: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 31 12:03:11.345: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/POST
Aug 31 12:03:11.351: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 31 12:03:11.351: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/pods/agnhost/proxy/some/path/with/PUT
Aug 31 12:03:11.364: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 31 12:03:11.364: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/DELETE
Aug 31 12:03:11.368: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 31 12:03:11.368: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/GET
Aug 31 12:03:11.373: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 31 12:03:11.373: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/HEAD
Aug 31 12:03:11.377: INFO: http.Client request:HEAD | StatusCode:200
Aug 31 12:03:11.377: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/OPTIONS
Aug 31 12:03:11.381: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 31 12:03:11.381: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/PATCH
Aug 31 12:03:11.384: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 31 12:03:11.384: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/POST
Aug 31 12:03:11.387: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 31 12:03:11.387: INFO: Starting http.Client for https://172.31.0.1:443/api/v1/namespaces/proxy-2208/services/test-service/proxy/some/path/with/PUT
Aug 31 12:03:11.393: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:11.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2208" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":346,"completed":70,"skipped":1233,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:11.402: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:03:12.064: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:03:15.086: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:15.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8454" for this suite.
STEP: Destroying namespace "webhook-8454-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":346,"completed":71,"skipped":1233,"failed":0}
SSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:15.176: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:03:17.332: INFO: Deleting pod "var-expansion-1bd8fcb4-2a2d-4edb-97ed-eddb3ee5d591" in namespace "var-expansion-8369"
Aug 31 12:03:17.336: INFO: Wait up to 5m0s for pod "var-expansion-1bd8fcb4-2a2d-4edb-97ed-eddb3ee5d591" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:21.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8369" for this suite.

• [SLOW TEST:6.175 seconds]
[sig-node] Variable Expansion
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":346,"completed":72,"skipped":1236,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:21.351: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2527
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 31 12:03:25.509: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:25.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2527" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]","total":346,"completed":73,"skipped":1246,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:25.526: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-5025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:25.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5025" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":346,"completed":74,"skipped":1270,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:25.694: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-9260
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug 31 12:03:25.829: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:03:27.837: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug 31 12:03:27.850: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:03:29.856: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug 31 12:03:29.858: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:29.858: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:29.859: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:29.859: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:29.927: INFO: Exec stderr: ""
Aug 31 12:03:29.927: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:29.927: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:29.928: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:29.928: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:29.992: INFO: Exec stderr: ""
Aug 31 12:03:29.992: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:29.992: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:29.992: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:29.992: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.061: INFO: Exec stderr: ""
Aug 31 12:03:30.061: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.061: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.061: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.061: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.120: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug 31 12:03:30.120: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.120: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.121: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.121: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.176: INFO: Exec stderr: ""
Aug 31 12:03:30.176: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.176: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.176: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.176: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.233: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug 31 12:03:30.233: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.233: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.233: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.233: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.299: INFO: Exec stderr: ""
Aug 31 12:03:30.299: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.299: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.300: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.300: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.364: INFO: Exec stderr: ""
Aug 31 12:03:30.364: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.364: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.364: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.364: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.430: INFO: Exec stderr: ""
Aug 31 12:03:30.430: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9260 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:03:30.430: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:03:30.430: INFO: ExecWithOptions: Clientset creation
Aug 31 12:03:30.430: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9260/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:03:30.491: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:30.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-9260" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":75,"skipped":1291,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected combined
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:30.499: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-projected-all-test-volume-b37716c1-4439-4f85-b61f-d17e9c87fb2f
STEP: Creating secret with name secret-projected-all-test-volume-325ee97d-1fc5-4c27-bf5d-b2f260f0a9da
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug 31 12:03:30.646: INFO: Waiting up to 5m0s for pod "projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68" in namespace "projected-5429" to be "Succeeded or Failed"
Aug 31 12:03:30.648: INFO: Pod "projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.098124ms
Aug 31 12:03:32.652: INFO: Pod "projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68": Phase="Running", Reason="", readiness=false. Elapsed: 2.005909972s
Aug 31 12:03:34.660: INFO: Pod "projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014038002s
STEP: Saw pod success
Aug 31 12:03:34.660: INFO: Pod "projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68" satisfied condition "Succeeded or Failed"
Aug 31 12:03:34.663: INFO: Trying to get logs from node nodepool-qycy5-000002 pod projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug 31 12:03:34.680: INFO: Waiting for pod projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68 to disappear
Aug 31 12:03:34.682: INFO: Pod projected-volume-8473e1b3-b0cb-4005-9057-99f87481ca68 no longer exists
[AfterEach] [sig-storage] Projected combined
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:34.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5429" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":346,"completed":76,"skipped":1311,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:34.690: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9040
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:03:34.828: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:03:36.834: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:38.834: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:40.834: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:42.834: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:44.835: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:46.832: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:48.835: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:50.832: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:52.833: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:54.836: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = false)
Aug 31 12:03:56.833: INFO: The status of Pod test-webserver-b162cfd8-8c40-4edd-8534-65a9e87fd479 is Running (Ready = true)
Aug 31 12:03:56.835: INFO: Container started at 2022-08-31 12:03:35 +0000 UTC, pod became ready at 2022-08-31 12:03:55 +0000 UTC
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:03:56.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9040" for this suite.

• [SLOW TEST:22.152 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":346,"completed":77,"skipped":1366,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:03:56.843: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4496
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:03:57.688: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:04:00.709: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:00.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4496" for this suite.
STEP: Destroying namespace "webhook-4496-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":346,"completed":78,"skipped":1369,"failed":0}

------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:00.805: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7574
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 31 12:04:04.976: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:04.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7574" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]","total":346,"completed":79,"skipped":1369,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:05.000: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-2662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:04:05.123: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:08.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2662" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":346,"completed":80,"skipped":1377,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:08.333: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7238
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 31 12:04:08.465: INFO: Waiting up to 5m0s for pod "pod-4b413f21-324f-48ef-a44f-4886257fc87b" in namespace "emptydir-7238" to be "Succeeded or Failed"
Aug 31 12:04:08.468: INFO: Pod "pod-4b413f21-324f-48ef-a44f-4886257fc87b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.744229ms
Aug 31 12:04:10.471: INFO: Pod "pod-4b413f21-324f-48ef-a44f-4886257fc87b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006298008s
Aug 31 12:04:12.477: INFO: Pod "pod-4b413f21-324f-48ef-a44f-4886257fc87b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011926353s
STEP: Saw pod success
Aug 31 12:04:12.477: INFO: Pod "pod-4b413f21-324f-48ef-a44f-4886257fc87b" satisfied condition "Succeeded or Failed"
Aug 31 12:04:12.479: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-4b413f21-324f-48ef-a44f-4886257fc87b container test-container: <nil>
STEP: delete the pod
Aug 31 12:04:12.493: INFO: Waiting for pod pod-4b413f21-324f-48ef-a44f-4886257fc87b to disappear
Aug 31 12:04:12.496: INFO: Pod pod-4b413f21-324f-48ef-a44f-4886257fc87b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:12.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7238" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":81,"skipped":1385,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:12.505: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7654
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should list and delete a collection of DaemonSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 31 12:04:12.652: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:04:12.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:04:12.655: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 12:04:13.661: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:04:13.664: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 31 12:04:13.664: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:04:14.662: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:04:14.664: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 31 12:04:14.664: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
Aug 31 12:04:14.682: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14814"},"items":null}

Aug 31 12:04:14.690: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14814"},"items":[{"metadata":{"name":"daemon-set-t6qrc","generateName":"daemon-set-","namespace":"daemonsets-7654","uid":"d14fcdf0-2ea0-488f-aec3-19f85bc4731f","resourceVersion":"14803","creationTimestamp":"2022-08-31T12:04:12Z","labels":{"controller-revision-hash":"5b46c58f6f","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"380850f1d94611d5e1ef3630a1debd366ba896bb108b5c088589724b0125bbcd","cni.projectcalico.org/podIP":"10.4.129.56/32","cni.projectcalico.org/podIPs":"10.4.129.56/32","kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"078a185b-aa61-47bb-8010-83e4b104f9e4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"078a185b-aa61-47bb-8010-83e4b104f9e4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g265x","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g265x","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodepool-qycy5-000002","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodepool-qycy5-000002"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"}],"hostIP":"10.4.3.6","podIP":"10.4.129.56","podIPs":[{"ip":"10.4.129.56"}],"startTime":"2022-08-31T12:04:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-31T12:04:13Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://35f0ec01fee215ce2a1cf89be7c14593db5b534ae2d56cc836805312079dd193","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wp2pk","generateName":"daemon-set-","namespace":"daemonsets-7654","uid":"4311ff88-f4ee-4c28-87a0-ac967fad0a75","resourceVersion":"14810","creationTimestamp":"2022-08-31T12:04:12Z","labels":{"controller-revision-hash":"5b46c58f6f","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1f6bd2e0a5dd3f0d2f6e3938fc7d8b1a0697d74808d5fe29b932df2b681aedee","cni.projectcalico.org/podIP":"10.4.131.107/32","cni.projectcalico.org/podIPs":"10.4.131.107/32","kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"078a185b-aa61-47bb-8010-83e4b104f9e4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"078a185b-aa61-47bb-8010-83e4b104f9e4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.107\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bs64q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bs64q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodepool-qycy5-000001","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodepool-qycy5-000001"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"}],"hostIP":"10.4.3.5","podIP":"10.4.131.107","podIPs":[{"ip":"10.4.131.107"}],"startTime":"2022-08-31T12:04:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-31T12:04:13Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://201a4ba69172af50b50596362b95f0663b7837237009fb0af021f9c4e2892079","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-znxlr","generateName":"daemon-set-","namespace":"daemonsets-7654","uid":"9b47841a-5a12-401e-8709-68c71b762c46","resourceVersion":"14805","creationTimestamp":"2022-08-31T12:04:12Z","labels":{"controller-revision-hash":"5b46c58f6f","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"77af6ab75bbf27cc3faa2e3e056a41ccb47ef4703cfe4cce08cb4b94e96bb60a","cni.projectcalico.org/podIP":"10.4.130.65/32","cni.projectcalico.org/podIPs":"10.4.130.65/32","kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"078a185b-aa61-47bb-8010-83e4b104f9e4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"078a185b-aa61-47bb-8010-83e4b104f9e4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-31T12:04:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-f286n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-f286n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodepool-qycy5-000000","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodepool-qycy5-000000"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:13Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-31T12:04:12Z"}],"hostIP":"10.4.3.4","podIP":"10.4.130.65","podIPs":[{"ip":"10.4.130.65"}],"startTime":"2022-08-31T12:04:12Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-31T12:04:13Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://13f8c29e511c1d50a738413881240846f194d30a5f33a29565c99e1ff6de1bf2","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:14.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7654" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":346,"completed":82,"skipped":1402,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:14.711: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-847
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should create and stop a working application  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating all guestbook components
Aug 31 12:04:14.835: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug 31 12:04:14.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:15.974: INFO: stderr: ""
Aug 31 12:04:15.975: INFO: stdout: "service/agnhost-replica created\n"
Aug 31 12:04:15.975: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug 31 12:04:15.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:16.249: INFO: stderr: ""
Aug 31 12:04:16.249: INFO: stdout: "service/agnhost-primary created\n"
Aug 31 12:04:16.249: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug 31 12:04:16.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:16.461: INFO: stderr: ""
Aug 31 12:04:16.461: INFO: stdout: "service/frontend created\n"
Aug 31 12:04:16.461: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug 31 12:04:16.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:16.650: INFO: stderr: ""
Aug 31 12:04:16.650: INFO: stdout: "deployment.apps/frontend created\n"
Aug 31 12:04:16.650: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 31 12:04:16.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:16.845: INFO: stderr: ""
Aug 31 12:04:16.845: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug 31 12:04:16.846: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 31 12:04:16.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 create -f -'
Aug 31 12:04:17.037: INFO: stderr: ""
Aug 31 12:04:17.037: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug 31 12:04:17.037: INFO: Waiting for all frontend pods to be Running.
Aug 31 12:04:22.088: INFO: Waiting for frontend to serve content.
Aug 31 12:04:22.100: INFO: Trying to add a new entry to the guestbook.
Aug 31 12:04:22.112: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Aug 31 12:04:22.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.199: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.199: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug 31 12:04:22.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.270: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.270: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 31 12:04:22.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.360: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.360: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 31 12:04:22.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.417: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.417: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 31 12:04:22.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.480: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.480: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 31 12:04:22.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-847 delete --grace-period=0 --force -f -'
Aug 31 12:04:22.536: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:04:22.536: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:22.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-847" for this suite.

• [SLOW TEST:7.834 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Guestbook application
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:339
    should create and stop a working application  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":346,"completed":83,"skipped":1423,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:22.545: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-9280
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:04:22.696: INFO: The status of Pod pod-secrets-4c2c325c-aaf8-4104-ad37-8cd323f1bb83 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:04:24.702: INFO: The status of Pod pod-secrets-4c2c325c-aaf8-4104-ad37-8cd323f1bb83 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:24.719: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-9280" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":346,"completed":84,"skipped":1431,"failed":0}

------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:24.727: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5305
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:04:27.632: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5305" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":346,"completed":85,"skipped":1431,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:04:27.735: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/init_container.go:162
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
Aug 31 12:04:27.870: INFO: PodSpec: initContainers in spec.initContainers
Aug 31 12:05:14.116: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-116e45a7-0277-4917-8d43-2fd3b5803dd2", GenerateName:"", Namespace:"init-container-8907", SelfLink:"", UID:"bd1c8afc-4776-4b56-9c42-654baaf1fb37", ResourceVersion:"15558", Generation:0, CreationTimestamp:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"870146104"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"5e1f484cbd9811e1dbddca6651aa4d3ffc598d21043fa83f6f71c7a491c8c95a", "cni.projectcalico.org/podIP":"10.4.131.111/32", "cni.projectcalico.org/podIPs":"10.4.131.111/32", "kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004221de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 31, 12, 4, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004221e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 31, 12, 4, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004221e48), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5md77", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0035d9f20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5md77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5md77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.6", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5md77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00401a0d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nodepool-qycy5-000001", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003c2f3b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00401a150)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00401a170)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00401a178), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00401a17c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004578280), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.4.3.5", PodIP:"10.4.131.111", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.4.131.111"}}, StartTime:time.Date(2022, time.August, 31, 12, 4, 27, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c2f500)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c2f570)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://1562b583df5f90e949d7a5fb8502663f161547125e4b60d73bacfbc9d49cb2f8", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0035d9fa0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0035d9f80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.6", ImageID:"", ContainerID:"", Started:(*bool)(0xc00401a1dc)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:05:14.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8907" for this suite.

• [SLOW TEST:46.395 seconds]
[sig-node] InitContainer [NodeConformance]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":346,"completed":86,"skipped":1448,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:05:14.130: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7389
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug 31 12:05:20.298: INFO: 80 pods remaining
Aug 31 12:05:20.298: INFO: 80 pods has nil DeletionTimestamp
Aug 31 12:05:20.298: INFO: 
Aug 31 12:05:21.318: INFO: 71 pods remaining
Aug 31 12:05:21.333: INFO: 70 pods has nil DeletionTimestamp
Aug 31 12:05:21.333: INFO: 
Aug 31 12:05:22.298: INFO: 60 pods remaining
Aug 31 12:05:22.298: INFO: 60 pods has nil DeletionTimestamp
Aug 31 12:05:22.298: INFO: 
Aug 31 12:05:23.302: INFO: 40 pods remaining
Aug 31 12:05:23.302: INFO: 40 pods has nil DeletionTimestamp
Aug 31 12:05:23.302: INFO: 
Aug 31 12:05:24.306: INFO: 30 pods remaining
Aug 31 12:05:24.306: INFO: 30 pods has nil DeletionTimestamp
Aug 31 12:05:24.306: INFO: 
Aug 31 12:05:25.293: INFO: 20 pods remaining
Aug 31 12:05:25.293: INFO: 20 pods has nil DeletionTimestamp
Aug 31 12:05:25.293: INFO: 
STEP: Gathering metrics
Aug 31 12:05:26.318: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0831 12:05:26.317977      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:05:26.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7389" for this suite.

• [SLOW TEST:12.194 seconds]
[sig-api-machinery] Garbage collector
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":346,"completed":87,"skipped":1450,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:05:26.324: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-412
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 31 12:05:26.456: INFO: Waiting up to 5m0s for pod "pod-45543c81-f8f6-4303-b408-ff68828633f2" in namespace "emptydir-412" to be "Succeeded or Failed"
Aug 31 12:05:26.459: INFO: Pod "pod-45543c81-f8f6-4303-b408-ff68828633f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.544825ms
Aug 31 12:05:28.466: INFO: Pod "pod-45543c81-f8f6-4303-b408-ff68828633f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01018022s
Aug 31 12:05:30.471: INFO: Pod "pod-45543c81-f8f6-4303-b408-ff68828633f2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014937646s
Aug 31 12:05:32.477: INFO: Pod "pod-45543c81-f8f6-4303-b408-ff68828633f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.020512338s
STEP: Saw pod success
Aug 31 12:05:32.477: INFO: Pod "pod-45543c81-f8f6-4303-b408-ff68828633f2" satisfied condition "Succeeded or Failed"
Aug 31 12:05:32.479: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-45543c81-f8f6-4303-b408-ff68828633f2 container test-container: <nil>
STEP: delete the pod
Aug 31 12:05:32.495: INFO: Waiting for pod pod-45543c81-f8f6-4303-b408-ff68828633f2 to disappear
Aug 31 12:05:32.499: INFO: Pod pod-45543c81-f8f6-4303-b408-ff68828633f2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:05:32.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-412" for this suite.

• [SLOW TEST:6.183 seconds]
[sig-storage] EmptyDir volumes
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":88,"skipped":1480,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:05:32.507: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:46
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:05:32.644: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54" in namespace "security-context-test-508" to be "Succeeded or Failed"
Aug 31 12:05:32.646: INFO: Pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54": Phase="Pending", Reason="", readiness=false. Elapsed: 2.271722ms
Aug 31 12:05:34.652: INFO: Pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54": Phase="Running", Reason="", readiness=true. Elapsed: 2.007826868s
Aug 31 12:05:36.658: INFO: Pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54": Phase="Running", Reason="", readiness=false. Elapsed: 4.013842378s
Aug 31 12:05:38.660: INFO: Pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.016342714s
Aug 31 12:05:38.660: INFO: Pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54" satisfied condition "Succeeded or Failed"
Aug 31 12:05:38.664: INFO: Got logs for pod "busybox-privileged-false-5a2f36ce-c5b2-4b0d-99f3-c83502ddba54": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:05:38.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-508" for this suite.

• [SLOW TEST:6.163 seconds]
[sig-node] Security Context
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:232
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":89,"skipped":1514,"failed":0}
SSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:05:38.671: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3311
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward api env vars
Aug 31 12:05:38.801: INFO: Waiting up to 5m0s for pod "downward-api-91726515-dc63-4553-9821-4a544dd90a66" in namespace "downward-api-3311" to be "Succeeded or Failed"
Aug 31 12:05:38.803: INFO: Pod "downward-api-91726515-dc63-4553-9821-4a544dd90a66": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02512ms
Aug 31 12:05:40.808: INFO: Pod "downward-api-91726515-dc63-4553-9821-4a544dd90a66": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006803334s
Aug 31 12:05:42.814: INFO: Pod "downward-api-91726515-dc63-4553-9821-4a544dd90a66": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012706518s
STEP: Saw pod success
Aug 31 12:05:42.814: INFO: Pod "downward-api-91726515-dc63-4553-9821-4a544dd90a66" satisfied condition "Succeeded or Failed"
Aug 31 12:05:42.816: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downward-api-91726515-dc63-4553-9821-4a544dd90a66 container dapi-container: <nil>
STEP: delete the pod
Aug 31 12:05:42.832: INFO: Waiting for pod downward-api-91726515-dc63-4553-9821-4a544dd90a66 to disappear
Aug 31 12:05:42.834: INFO: Pod downward-api-91726515-dc63-4553-9821-4a544dd90a66 no longer exists
[AfterEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:05:42.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3311" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":346,"completed":90,"skipped":1521,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:05:42.840: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7711
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod test-webserver-b6df8306-5e89-4902-81d1-20db0c83c2d4 in namespace container-probe-7711
Aug 31 12:05:44.984: INFO: Started pod test-webserver-b6df8306-5e89-4902-81d1-20db0c83c2d4 in namespace container-probe-7711
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 12:05:44.987: INFO: Initial restart count of pod test-webserver-b6df8306-5e89-4902-81d1-20db0c83c2d4 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:09:45.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7711" for this suite.

• [SLOW TEST:242.939 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":346,"completed":91,"skipped":1525,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:09:45.780: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6991
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:38
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod pod-subpath-test-configmap-s6v9
STEP: Creating a pod to test atomic-volume-subpath
Aug 31 12:09:45.919: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-s6v9" in namespace "subpath-6991" to be "Succeeded or Failed"
Aug 31 12:09:45.922: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.443319ms
Aug 31 12:09:47.929: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 2.009339066s
Aug 31 12:09:49.936: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 4.017078605s
Aug 31 12:09:51.944: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 6.024363625s
Aug 31 12:09:53.951: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 8.032086334s
Aug 31 12:09:55.969: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 10.049418803s
Aug 31 12:09:57.977: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 12.057576685s
Aug 31 12:09:59.987: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 14.067886069s
Aug 31 12:10:01.992: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 16.072358193s
Aug 31 12:10:04.000: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 18.080122128s
Aug 31 12:10:06.005: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=true. Elapsed: 20.085829133s
Aug 31 12:10:08.013: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Running", Reason="", readiness=false. Elapsed: 22.093397638s
Aug 31 12:10:10.021: INFO: Pod "pod-subpath-test-configmap-s6v9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.10120033s
STEP: Saw pod success
Aug 31 12:10:10.021: INFO: Pod "pod-subpath-test-configmap-s6v9" satisfied condition "Succeeded or Failed"
Aug 31 12:10:10.023: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-subpath-test-configmap-s6v9 container test-container-subpath-configmap-s6v9: <nil>
STEP: delete the pod
Aug 31 12:10:10.033: INFO: Waiting for pod pod-subpath-test-configmap-s6v9 to disappear
Aug 31 12:10:10.036: INFO: Pod pod-subpath-test-configmap-s6v9 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-s6v9
Aug 31 12:10:10.036: INFO: Deleting pod "pod-subpath-test-configmap-s6v9" in namespace "subpath-6991"
[AfterEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:10.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6991" for this suite.

• [SLOW TEST:24.263 seconds]
[sig-storage] Subpath
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:34
    should support subpaths with configmap pod with mountPath of existing file [Excluded:WindowsDocker] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Excluded:WindowsDocker] [Conformance]","total":346,"completed":92,"skipped":1555,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:10.044: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4764
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/disruption.go:69
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug 31 12:10:12.183: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:18.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4764" for this suite.

• [SLOW TEST:8.260 seconds]
[sig-apps] DisruptionController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":346,"completed":93,"skipped":1585,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:18.305: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9117
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating the pod
Aug 31 12:10:18.471: INFO: The status of Pod labelsupdate64ef5a2c-3827-4e83-a129-30cb21ca0c2d is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:10:20.475: INFO: The status of Pod labelsupdate64ef5a2c-3827-4e83-a129-30cb21ca0c2d is Running (Ready = true)
Aug 31 12:10:20.994: INFO: Successfully updated pod "labelsupdate64ef5a2c-3827-4e83-a129-30cb21ca0c2d"
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:25.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9117" for this suite.

• [SLOW TEST:6.730 seconds]
[sig-storage] Projected downwardAPI
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":346,"completed":94,"skipped":1602,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:25.035: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3435
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 31 12:10:25.166: INFO: Waiting up to 5m0s for pod "pod-f2cfe1e2-2505-4300-a684-38556bc354c9" in namespace "emptydir-3435" to be "Succeeded or Failed"
Aug 31 12:10:25.169: INFO: Pod "pod-f2cfe1e2-2505-4300-a684-38556bc354c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.518519ms
Aug 31 12:10:27.178: INFO: Pod "pod-f2cfe1e2-2505-4300-a684-38556bc354c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011440004s
Aug 31 12:10:29.183: INFO: Pod "pod-f2cfe1e2-2505-4300-a684-38556bc354c9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016805848s
STEP: Saw pod success
Aug 31 12:10:29.183: INFO: Pod "pod-f2cfe1e2-2505-4300-a684-38556bc354c9" satisfied condition "Succeeded or Failed"
Aug 31 12:10:29.185: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-f2cfe1e2-2505-4300-a684-38556bc354c9 container test-container: <nil>
STEP: delete the pod
Aug 31 12:10:29.197: INFO: Waiting for pod pod-f2cfe1e2-2505-4300-a684-38556bc354c9 to disappear
Aug 31 12:10:29.199: INFO: Pod pod-f2cfe1e2-2505-4300-a684-38556bc354c9 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:29.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3435" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":95,"skipped":1618,"failed":0}
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:29.205: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-5164
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:10:29.332: INFO: Got root ca configmap in namespace "svcaccounts-5164"
Aug 31 12:10:29.335: INFO: Deleted root ca configmap in namespace "svcaccounts-5164"
STEP: waiting for a new root ca configmap created
Aug 31 12:10:29.838: INFO: Recreated root ca configmap in namespace "svcaccounts-5164"
Aug 31 12:10:29.841: INFO: Updated root ca configmap in namespace "svcaccounts-5164"
STEP: waiting for the root ca configmap reconciled
Aug 31 12:10:30.345: INFO: Reconciled root ca configmap in namespace "svcaccounts-5164"
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:30.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5164" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":346,"completed":96,"skipped":1625,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:30.353: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-1891
STEP: creating service affinity-nodeport-transition in namespace services-1891
STEP: creating replication controller affinity-nodeport-transition in namespace services-1891
I0831 12:10:30.487830      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1891, replica count: 3
I0831 12:10:33.538991      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:10:33.549: INFO: Creating new exec pod
Aug 31 12:10:36.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug 31 12:10:36.707: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug 31 12:10:36.707: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:10:36.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.152.195 80'
Aug 31 12:10:36.828: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.152.195 80\nConnection to 172.31.152.195 80 port [tcp/http] succeeded!\n"
Aug 31 12:10:36.828: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:10:36.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.4 31075'
Aug 31 12:10:36.943: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.4 31075\nConnection to 10.4.3.4 31075 port [tcp/*] succeeded!\n"
Aug 31 12:10:36.943: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:10:36.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.6 31075'
Aug 31 12:10:37.075: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.6 31075\nConnection to 10.4.3.6 31075 port [tcp/*] succeeded!\n"
Aug 31 12:10:37.075: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:10:37.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.4.3.4:31075/ ; done'
Aug 31 12:10:37.372: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n"
Aug 31 12:10:37.372: INFO: stdout: "\naffinity-nodeport-transition-27xgc\naffinity-nodeport-transition-27xgc\naffinity-nodeport-transition-9hln7\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-27xgc\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-27xgc\naffinity-nodeport-transition-9hln7\naffinity-nodeport-transition-9hln7\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-9hln7"
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-27xgc
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-27xgc
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-9hln7
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-27xgc
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-27xgc
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-9hln7
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-9hln7
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.372: INFO: Received response from host: affinity-nodeport-transition-9hln7
Aug 31 12:10:37.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1891 exec execpod-affinity2fbm6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.4.3.4:31075/ ; done'
Aug 31 12:10:37.612: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:31075/\n"
Aug 31 12:10:37.612: INFO: stdout: "\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd\naffinity-nodeport-transition-d2xhd"
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Received response from host: affinity-nodeport-transition-d2xhd
Aug 31 12:10:37.612: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1891, will wait for the garbage collector to delete the pods
Aug 31 12:10:37.681: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.941138ms
Aug 31 12:10:37.782: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.144381ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:40.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1891" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:10.168 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":346,"completed":97,"skipped":1682,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:40.522: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:10:40.650: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 31 12:10:40.664: INFO: The status of Pod pod-logs-websocket-115fd06b-3876-473c-bd43-db90b66c30e3 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:10:42.670: INFO: The status of Pod pod-logs-websocket-115fd06b-3876-473c-bd43-db90b66c30e3 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:42.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1878" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":346,"completed":98,"skipped":1684,"failed":0}
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:42.688: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-7428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/init_container.go:162
[It] should invoke init containers on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
Aug 31 12:10:42.811: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:48.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-7428" for this suite.

• [SLOW TEST:6.025 seconds]
[sig-node] InitContainer [NodeConformance]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":346,"completed":99,"skipped":1688,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:48.713: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:10:48.844: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add" in namespace "projected-3497" to be "Succeeded or Failed"
Aug 31 12:10:48.848: INFO: Pod "downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add": Phase="Pending", Reason="", readiness=false. Elapsed: 3.747529ms
Aug 31 12:10:50.853: INFO: Pod "downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008436233s
Aug 31 12:10:52.857: INFO: Pod "downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013227026s
STEP: Saw pod success
Aug 31 12:10:52.857: INFO: Pod "downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add" satisfied condition "Succeeded or Failed"
Aug 31 12:10:52.860: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add container client-container: <nil>
STEP: delete the pod
Aug 31 12:10:52.877: INFO: Waiting for pod downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add to disappear
Aug 31 12:10:52.879: INFO: Pod downwardapi-volume-3b2f90ea-fa24-42c5-8a4c-96c066ea6add no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:52.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3497" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":346,"completed":100,"skipped":1699,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:52.886: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should contain environment variables for services [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:10:53.030: INFO: The status of Pod server-envvars-28b0a086-23dd-4088-b785-a556f0e84fe5 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:10:55.033: INFO: The status of Pod server-envvars-28b0a086-23dd-4088-b785-a556f0e84fe5 is Running (Ready = true)
Aug 31 12:10:55.050: INFO: Waiting up to 5m0s for pod "client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18" in namespace "pods-9359" to be "Succeeded or Failed"
Aug 31 12:10:55.053: INFO: Pod "client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18": Phase="Pending", Reason="", readiness=false. Elapsed: 2.656621ms
Aug 31 12:10:57.061: INFO: Pod "client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010515712s
Aug 31 12:10:59.068: INFO: Pod "client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017182383s
STEP: Saw pod success
Aug 31 12:10:59.068: INFO: Pod "client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18" satisfied condition "Succeeded or Failed"
Aug 31 12:10:59.070: INFO: Trying to get logs from node nodepool-qycy5-000001 pod client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18 container env3cont: <nil>
STEP: delete the pod
Aug 31 12:10:59.086: INFO: Waiting for pod client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18 to disappear
Aug 31 12:10:59.088: INFO: Pod client-envvars-36210837-ac15-496b-bd0f-cf8784fa6d18 no longer exists
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:10:59.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9359" for this suite.

• [SLOW TEST:6.209 seconds]
[sig-node] Pods
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":346,"completed":101,"skipped":1717,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:10:59.095: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8498
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:11:10.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8498" for this suite.

• [SLOW TEST:11.182 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":346,"completed":102,"skipped":1740,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:11:10.277: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3376
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:16:10.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3376" for this suite.

• [SLOW TEST:300.149 seconds]
[sig-apps] CronJob
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":346,"completed":103,"skipped":1780,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:16:10.427: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod busybox-427183ca-f97f-477b-bb7a-b9ec569b75f8 in namespace container-probe-9743
Aug 31 12:16:12.570: INFO: Started pod busybox-427183ca-f97f-477b-bb7a-b9ec569b75f8 in namespace container-probe-9743
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 12:16:12.572: INFO: Initial restart count of pod busybox-427183ca-f97f-477b-bb7a-b9ec569b75f8 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:13.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9743" for this suite.

• [SLOW TEST:242.952 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":346,"completed":104,"skipped":1798,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:13.379: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/disruption.go:69
[It] should create a PodDisruptionBudget [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:19.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4605" for this suite.

• [SLOW TEST:6.182 seconds]
[sig-apps] DisruptionController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":346,"completed":105,"skipped":1811,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:19.562: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-91fd76b0-c3cf-48d0-a30a-36e4357f87c2
STEP: Creating a pod to test consume secrets
Aug 31 12:20:19.700: INFO: Waiting up to 5m0s for pod "pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1" in namespace "secrets-6483" to be "Succeeded or Failed"
Aug 31 12:20:19.702: INFO: Pod "pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007726ms
Aug 31 12:20:21.709: INFO: Pod "pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009318876s
Aug 31 12:20:23.712: INFO: Pod "pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012547933s
STEP: Saw pod success
Aug 31 12:20:23.712: INFO: Pod "pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1" satisfied condition "Succeeded or Failed"
Aug 31 12:20:23.714: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1 container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:20:23.730: INFO: Waiting for pod pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1 to disappear
Aug 31 12:20:23.732: INFO: Pod pod-secrets-48573c19-22b9-404a-9fbe-90068ce8a7b1 no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:23.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6483" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":346,"completed":106,"skipped":1869,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:23.738: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-1054
STEP: creating service affinity-clusterip in namespace services-1054
STEP: creating replication controller affinity-clusterip in namespace services-1054
I0831 12:20:23.871960      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1054, replica count: 3
I0831 12:20:26.924355      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:20:26.932: INFO: Creating new exec pod
Aug 31 12:20:29.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1054 exec execpod-affinitykfkpn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug 31 12:20:30.443: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug 31 12:20:30.443: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:20:30.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1054 exec execpod-affinitykfkpn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.28.120 80'
Aug 31 12:20:30.577: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.28.120 80\nConnection to 172.31.28.120 80 port [tcp/http] succeeded!\n"
Aug 31 12:20:30.577: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:20:30.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-1054 exec execpod-affinitykfkpn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.28.120:80/ ; done'
Aug 31 12:20:30.770: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.28.120:80/\n"
Aug 31 12:20:30.770: INFO: stdout: "\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg\naffinity-clusterip-qhdvg"
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Received response from host: affinity-clusterip-qhdvg
Aug 31 12:20:30.770: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-1054, will wait for the garbage collector to delete the pods
Aug 31 12:20:30.837: INFO: Deleting ReplicationController affinity-clusterip took: 4.216753ms
Aug 31 12:20:30.938: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.384983ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:33.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1054" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:9.721 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":346,"completed":107,"skipped":1875,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:33.460: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:20:33.582: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: client-side validation (kubectl create and apply) allows request with any unknown properties
Aug 31 12:20:35.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 create -f -'
Aug 31 12:20:36.879: INFO: stderr: ""
Aug 31 12:20:36.879: INFO: stdout: "e2e-test-crd-publish-openapi-2997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 31 12:20:36.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 delete e2e-test-crd-publish-openapi-2997-crds test-cr'
Aug 31 12:20:36.941: INFO: stderr: ""
Aug 31 12:20:36.941: INFO: stdout: "e2e-test-crd-publish-openapi-2997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug 31 12:20:36.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 apply -f -'
Aug 31 12:20:37.138: INFO: stderr: ""
Aug 31 12:20:37.138: INFO: stdout: "e2e-test-crd-publish-openapi-2997-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 31 12:20:37.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-9409 --namespace=crd-publish-openapi-9409 delete e2e-test-crd-publish-openapi-2997-crds test-cr'
Aug 31 12:20:37.205: INFO: stderr: ""
Aug 31 12:20:37.205: INFO: stdout: "e2e-test-crd-publish-openapi-2997-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 31 12:20:37.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-9409 explain e2e-test-crd-publish-openapi-2997-crds'
Aug 31 12:20:37.415: INFO: stderr: ""
Aug 31 12:20:37.415: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2997-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:39.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9409" for this suite.

• [SLOW TEST:6.200 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":346,"completed":108,"skipped":1910,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:39.661: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should update annotations on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating the pod
Aug 31 12:20:39.801: INFO: The status of Pod annotationupdate0e90c35d-5fff-4ef8-8b81-3d20b5dbfdeb is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:20:41.808: INFO: The status of Pod annotationupdate0e90c35d-5fff-4ef8-8b81-3d20b5dbfdeb is Running (Ready = true)
Aug 31 12:20:42.334: INFO: Successfully updated pod "annotationupdate0e90c35d-5fff-4ef8-8b81-3d20b5dbfdeb"
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:44.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1051" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":346,"completed":109,"skipped":1996,"failed":0}
SS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:44.356: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug 31 12:20:44.488: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4032  238991f8-2020-4df3-bd72-7904a6a73973 22075 0 2022-08-31 12:20:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-31 12:20:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 12:20:44.488: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4032  238991f8-2020-4df3-bd72-7904a6a73973 22076 0 2022-08-31 12:20:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-31 12:20:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug 31 12:20:44.497: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4032  238991f8-2020-4df3-bd72-7904a6a73973 22077 0 2022-08-31 12:20:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-31 12:20:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 12:20:44.497: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4032  238991f8-2020-4df3-bd72-7904a6a73973 22078 0 2022-08-31 12:20:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-31 12:20:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:44.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4032" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":346,"completed":110,"skipped":1998,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:44.503: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2884
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Kubectl run pod
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1539
[It] should create a pod from an image when restart is Never  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 31 12:20:44.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2884 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug 31 12:20:44.688: INFO: stderr: ""
Aug 31 12:20:44.688: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1543
Aug 31 12:20:44.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2884 delete pods e2e-test-httpd-pod'
Aug 31 12:20:47.312: INFO: stderr: ""
Aug 31 12:20:47.312: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:47.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2884" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":346,"completed":111,"skipped":2012,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:47.323: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5451
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:20:47.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 create -f -'
Aug 31 12:20:48.165: INFO: stderr: ""
Aug 31 12:20:48.165: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug 31 12:20:48.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 create -f -'
Aug 31 12:20:48.341: INFO: stderr: ""
Aug 31 12:20:48.341: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 31 12:20:49.345: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 12:20:49.345: INFO: Found 1 / 1
Aug 31 12:20:49.345: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 31 12:20:49.348: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 12:20:49.348: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 31 12:20:49.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 describe pod agnhost-primary-wg5h6'
Aug 31 12:20:49.407: INFO: stderr: ""
Aug 31 12:20:49.408: INFO: stdout: "Name:         agnhost-primary-wg5h6\nNamespace:    kubectl-5451\nPriority:     0\nNode:         nodepool-qycy5-000001/10.4.3.5\nStart Time:   Wed, 31 Aug 2022 12:20:48 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  cni.projectcalico.org/containerID: 56e09a2b8eab0587451f395be517860ef1a62ce2a78685180a2aba3acc45feb1\n              cni.projectcalico.org/podIP: 10.4.131.164/32\n              cni.projectcalico.org/podIPs: 10.4.131.164/32\n              kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           10.4.131.164\nIPs:\n  IP:           10.4.131.164\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6c604d12a5771c8395f99e0743db862922de0adba0a3866cc1fc2cc1f4a730cb\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 31 Aug 2022 12:20:48 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-47srt (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-47srt:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-5451/agnhost-primary-wg5h6 to nodepool-qycy5-000001\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Aug 31 12:20:49.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 describe rc agnhost-primary'
Aug 31 12:20:49.471: INFO: stderr: ""
Aug 31 12:20:49.471: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5451\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-wg5h6\n"
Aug 31 12:20:49.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 describe service agnhost-primary'
Aug 31 12:20:49.535: INFO: stderr: ""
Aug 31 12:20:49.535: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5451\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                172.31.86.0\nIPs:               172.31.86.0\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.4.131.164:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug 31 12:20:49.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 describe node c2zfv-master-c2zfv-000000'
Aug 31 12:20:49.651: INFO: stderr: ""
Aug 31 12:20:49.651: INFO: stdout: "Name:               c2zfv-master-c2zfv-000000\nRoles:              master\nLabels:             azure-operator.giantswarm.io/version=6.0.0\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=Standard_D4s_v3\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=westeurope\n                    failure-domain.beta.kubernetes.io/zone=0\n                    giantswarm.io/provider=azure\n                    ip=10.4.0.4\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=c2zfv-master-c2zfv-000000\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\n                    node-role.kubernetes.io/master=\n                    node.kubernetes.io/instance-type=Standard_D4s_v3\n                    node.kubernetes.io/master=\n                    release.giantswarm.io/version=18.0.0-1661945026\n                    role=master\n                    topology.disk.csi.azure.com/zone=\n                    topology.kubernetes.io/region=westeurope\n                    topology.kubernetes.io/zone=0\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.4.0.4\n                    csi.volume.kubernetes.io/nodeid: {\"disk.csi.azure.com\":\"c2zfv-master-c2zfv-000000\",\"file.csi.azure.com\":\"c2zfv-master-c2zfv-000000\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.4.0.4/24\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 31 Aug 2022 11:38:25 +0000\nTaints:             node-role.kubernetes.io/master:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  c2zfv-master-c2zfv-000000\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 31 Aug 2022 12:20:43 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 31 Aug 2022 11:44:02 +0000   Wed, 31 Aug 2022 11:44:02 +0000   RouteCreated                 RouteController created a route\n  MemoryPressure       False   Wed, 31 Aug 2022 12:17:49 +0000   Wed, 31 Aug 2022 11:38:04 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 31 Aug 2022 12:17:49 +0000   Wed, 31 Aug 2022 11:38:04 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 31 Aug 2022 12:17:49 +0000   Wed, 31 Aug 2022 11:38:04 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 31 Aug 2022 12:17:49 +0000   Wed, 31 Aug 2022 11:46:10 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.4.0.4\n  Hostname:    c2zfv-master-c2zfv-000000\nCapacity:\n  cpu:                4\n  ephemeral-storage:  102350Mi\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16390448Ki\n  pods:               110\nAllocatable:\n  cpu:                3400m\n  ephemeral-storage:  101326Mi\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             14481712Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 39df727dbc924b72a1bed0751a839c9e\n  System UUID:                183cb92d-2ae9-1341-b432-cdef45a7d49f\n  Boot ID:                    206767d6-69a7-4284-8d62-828cad3252cd\n  Kernel Version:             5.15.58-flatcar\n  OS Image:                   Flatcar Container Linux by Kinvolk 3227.2.1 (Oklo)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.6\n  Kubelet Version:            v1.23.9\n  Kube-Proxy Version:         v1.23.9\nPodCIDR:                      10.4.128.0/24\nPodCIDRs:                     10.4.128.0/24\nProviderID:                   azure:///subscriptions/44641206-ce9c-4ae7-a872-c347faaea2e3/resourceGroups/c2zfv/providers/Microsoft.Compute/virtualMachineScaleSets/c2zfv-master-c2zfv/virtualMachines/0\nNon-terminated Pods:          (23 in total)\n  Namespace                   Name                                                        CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                        ------------  ----------  ---------------  -------------  ---\n  giantswarm                  chart-operator-54858cf9cf-qz9h6                             50m (1%)      0 (0%)      100Mi (0%)       350Mi (2%)     40m\n  giantswarm                  etcd-kubernetes-resources-count-exporter-56f4c57c9-c4p6t    100m (2%)     100m (2%)   100Mi (0%)       100Mi (0%)     37m\n  kube-system                 azure-cloud-controller-manager-4k9r2                        200m (5%)     200m (5%)   200Mi (1%)       200Mi (1%)     37m\n  kube-system                 azure-cloud-node-manager-hnsqh                              200m (5%)     200m (5%)   200Mi (1%)       200Mi (1%)     37m\n  kube-system                 calico-node-fkz6c                                           250m (7%)     0 (0%)      150Mi (1%)       0 (0%)         41m\n  kube-system                 cert-exporter-daemonset-dkphp                               50m (1%)      150m (4%)   50Mi (0%)        50Mi (0%)      37m\n  kube-system                 cert-exporter-deployment-7fd565d7dc-grk67                   50m (1%)      150m (4%)   50Mi (0%)        50Mi (0%)      37m\n  kube-system                 cluster-autoscaler-6dc45fcf8d-jlls6                         100m (2%)     0 (0%)      400Mi (2%)       400Mi (2%)     39m\n  kube-system                 coredns-controlplane-564bffc48d-hfvbr                       250m (7%)     0 (0%)      192Mi (1%)       192Mi (1%)     39m\n  kube-system                 csi-azuredisk-controller-54668dc445-vdx6m                   60m (1%)      0 (0%)      120Mi (0%)       2200Mi (15%)   37m\n  kube-system                 csi-azuredisk-node-w6bm7                                    30m (0%)      0 (0%)      60Mi (0%)        400Mi (2%)     37m\n  kube-system                 csi-azurefile-controller-59b55cddbd-v6vmg                   60m (1%)      6 (176%)    120Mi (0%)       1900Mi (13%)   37m\n  kube-system                 csi-azurefile-node-ps6px                                    30m (0%)      0 (0%)      60Mi (0%)        600Mi (4%)     37m\n  kube-system                 csi-snapshot-controller-767c5986f8-fffnq                    10m (0%)      0 (0%)      20Mi (0%)        100Mi (0%)     37m\n  kube-system                 csi-snapshot-controller-767c5986f8-fswfh                    10m (0%)      0 (0%)      20Mi (0%)        100Mi (0%)     37m\n  kube-system                 k8s-api-healthz-c2zfv-master-c2zfv-000000                   50m (1%)      0 (0%)      20Mi (0%)        0 (0%)         41m\n  kube-system                 k8s-api-server-c2zfv-master-c2zfv-000000                    300m (8%)     0 (0%)      300Mi (2%)       0 (0%)         41m\n  kube-system                 k8s-controller-manager-c2zfv-master-c2zfv-000000            200m (5%)     0 (0%)      200Mi (1%)       0 (0%)         41m\n  kube-system                 k8s-scheduler-c2zfv-master-c2zfv-000000                     100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         41m\n  kube-system                 kube-proxy-kx9vm                                            23m (0%)      0 (0%)      104857600 (0%)   0 (0%)         25m\n  kube-system                 net-exporter-77c9n                                          50m (1%)      0 (0%)      75Mi (0%)        150Mi (1%)     35m\n  kube-system                 node-exporter-v1-3-1-xlxt7                                  75m (2%)      0 (0%)      50Mi (0%)        75Mi (0%)      35m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-v484h     0 (0%)        0 (0%)      0 (0%)           0 (0%)         34m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                2248m (66%)   6800m (200%)\n  memory             2687Mi (18%)  7067Mi (49%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-1Gi      0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:\n  Type     Reason                   Age                From        Message\n  ----     ------                   ----               ----        -------\n  Normal   Starting                 25m                kube-proxy  \n  Normal   Starting                 41m                kube-proxy  \n  Normal   NodeAllocatableEnforced  42m                kubelet     Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      42m                kubelet     invalid capacity 0 on image filesystem\n  Normal   Starting                 42m                kubelet     Starting kubelet.\n  Normal   NodeHasSufficientPID     42m (x7 over 42m)  kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    42m (x7 over 42m)  kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  42m (x8 over 42m)  kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasSufficientMemory\n  Normal   Starting                 34m                kubelet     Starting kubelet.\n  Normal   NodeHasSufficientMemory  34m                kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    34m                kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     34m                kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             34m                kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeNotReady\n  Normal   NodeAllocatableEnforced  34m                kubelet     Updated Node Allocatable limit across pods\n  Normal   NodeReady                34m                kubelet     Node c2zfv-master-c2zfv-000000 status is now: NodeReady\n  Warning  InvalidDiskCapacity      34m                kubelet     invalid capacity 0 on image filesystem\n"
Aug 31 12:20:49.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5451 describe namespace kubectl-5451'
Aug 31 12:20:49.711: INFO: stderr: ""
Aug 31 12:20:49.711: INFO: stdout: "Name:         kubectl-5451\nLabels:       e2e-framework=kubectl\n              e2e-run=ff1e17f4-0fc2-424f-a55a-76c18747b6ee\n              kubernetes.io/metadata.name=kubectl-5451\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:49.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5451" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":346,"completed":112,"skipped":2014,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:49.718: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:20:51.880: INFO: DNS probes using dns-6976/dns-test-c98598d0-fb6a-4ec2-9e49-a581437ebfde succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:20:51.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6976" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":346,"completed":113,"skipped":2045,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:20:51.906: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 31 12:20:52.048: INFO: The status of Pod pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:20:54.052: INFO: The status of Pod pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 31 12:20:54.568: INFO: Successfully updated pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d"
Aug 31 12:20:54.568: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d" in namespace "pods-8025" to be "terminated due to deadline exceeded"
Aug 31 12:20:54.572: INFO: Pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d": Phase="Running", Reason="", readiness=true. Elapsed: 4.00425ms
Aug 31 12:20:56.579: INFO: Pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d": Phase="Running", Reason="", readiness=true. Elapsed: 2.01123782s
Aug 31 12:20:58.586: INFO: Pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d": Phase="Running", Reason="", readiness=false. Elapsed: 4.017889844s
Aug 31 12:21:00.590: INFO: Pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.022130101s
Aug 31 12:21:00.590: INFO: Pod "pod-update-activedeadlineseconds-853666e7-91a2-4a38-bf4f-689230c5045d" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:21:00.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8025" for this suite.

• [SLOW TEST:8.690 seconds]
[sig-node] Pods
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":346,"completed":114,"skipped":2066,"failed":0}
SSSS
------------------------------
[sig-node] Docker Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:21:00.597: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-4433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:21:02.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-4433" for this suite.
•{"msg":"PASSED [sig-node] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":346,"completed":115,"skipped":2070,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Docker Containers 
  should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:21:02.745: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-3853
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test override arguments
Aug 31 12:21:02.881: INFO: Waiting up to 5m0s for pod "client-containers-db6ca75e-6f94-4f27-b916-bf404091060b" in namespace "containers-3853" to be "Succeeded or Failed"
Aug 31 12:21:02.883: INFO: Pod "client-containers-db6ca75e-6f94-4f27-b916-bf404091060b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.207528ms
Aug 31 12:21:04.890: INFO: Pod "client-containers-db6ca75e-6f94-4f27-b916-bf404091060b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008393329s
Aug 31 12:21:06.898: INFO: Pod "client-containers-db6ca75e-6f94-4f27-b916-bf404091060b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016460617s
STEP: Saw pod success
Aug 31 12:21:06.898: INFO: Pod "client-containers-db6ca75e-6f94-4f27-b916-bf404091060b" satisfied condition "Succeeded or Failed"
Aug 31 12:21:06.908: INFO: Trying to get logs from node nodepool-qycy5-000001 pod client-containers-db6ca75e-6f94-4f27-b916-bf404091060b container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:21:06.921: INFO: Waiting for pod client-containers-db6ca75e-6f94-4f27-b916-bf404091060b to disappear
Aug 31 12:21:06.926: INFO: Pod client-containers-db6ca75e-6f94-4f27-b916-bf404091060b no longer exists
[AfterEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:21:06.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-3853" for this suite.
•{"msg":"PASSED [sig-node] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance]","total":346,"completed":116,"skipped":2120,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:21:06.932: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-2012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:21:07.053: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:21:07.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2012" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":346,"completed":117,"skipped":2126,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:21:07.592: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8919
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:21:08.135: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:21:11.155: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:21:11.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8919" for this suite.
STEP: Destroying namespace "webhook-8919-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":346,"completed":118,"skipped":2132,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:21:11.275: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-3906
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:21:11.398: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Creating first CR 
Aug 31 12:21:13.942: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:13Z]] name:name1 resourceVersion:22558 uid:681823e0-1793-4141-b3c5-20315f97da6c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug 31 12:21:23.948: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:23Z]] name:name2 resourceVersion:22624 uid:e1411d4c-3838-4d16-a10b-5d9ad1822b26] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug 31 12:21:33.981: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:33Z]] name:name1 resourceVersion:22671 uid:681823e0-1793-4141-b3c5-20315f97da6c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug 31 12:21:43.987: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:43Z]] name:name2 resourceVersion:22717 uid:e1411d4c-3838-4d16-a10b-5d9ad1822b26] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug 31 12:21:53.994: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:33Z]] name:name1 resourceVersion:22763 uid:681823e0-1793-4141-b3c5-20315f97da6c] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug 31 12:22:04.004: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-31T12:21:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-31T12:21:43Z]] name:name2 resourceVersion:22812 uid:e1411d4c-3838-4d16-a10b-5d9ad1822b26] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:22:14.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-3906" for this suite.

• [SLOW TEST:63.251 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:42
    watch on custom resource definition objects [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":346,"completed":119,"skipped":2160,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:22:14.526: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8593
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Performing setup for networking test in namespace pod-network-test-8593
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 31 12:22:14.664: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 31 12:22:14.721: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:22:16.726: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:18.728: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:20.730: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:22.725: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:24.727: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:26.727: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:28.730: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:30.726: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:32.724: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:34.726: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:36.728: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 31 12:22:36.733: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 31 12:22:36.737: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 31 12:22:38.772: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 31 12:22:38.772: INFO: Going to poll 10.4.130.101 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 31 12:22:38.773: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.4.130.101 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8593 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:22:38.773: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:22:38.774: INFO: ExecWithOptions: Clientset creation
Aug 31 12:22:38.774: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-8593/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.4.130.101+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:22:39.836: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 31 12:22:39.836: INFO: Going to poll 10.4.131.170 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 31 12:22:39.841: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.4.131.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8593 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:22:39.841: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:22:39.841: INFO: ExecWithOptions: Clientset creation
Aug 31 12:22:39.841: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-8593/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.4.131.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:22:40.902: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 31 12:22:40.902: INFO: Going to poll 10.4.129.93 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 31 12:22:40.906: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.4.129.93 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8593 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:22:40.906: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:22:40.906: INFO: ExecWithOptions: Clientset creation
Aug 31 12:22:40.906: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-8593/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.4.129.93+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:22:41.967: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:22:41.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8593" for this suite.

• [SLOW TEST:27.449 seconds]
[sig-network] Networking
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/networking.go:30
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":120,"skipped":2176,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:22:41.976: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] should validate Deployment Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a Deployment
Aug 31 12:22:42.107: INFO: Creating simple deployment test-deployment-v2zf6
Aug 31 12:22:42.113: INFO: new replicaset for deployment "test-deployment-v2zf6" is yet to be created
STEP: Getting /status
Aug 31 12:22:44.129: INFO: Deployment test-deployment-v2zf6 has Conditions: [{Available True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v2zf6-764bc7c4b7" has successfully progressed.}]
STEP: updating Deployment Status
Aug 31 12:22:44.139: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 22, 43, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 22, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 22, 43, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 22, 42, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-v2zf6-764bc7c4b7\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug 31 12:22:44.140: INFO: Observed &Deployment event: ADDED
Aug 31 12:22:44.140: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v2zf6-764bc7c4b7"}
Aug 31 12:22:44.140: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.140: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v2zf6-764bc7c4b7"}
Aug 31 12:22:44.140: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 31 12:22:44.141: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v2zf6-764bc7c4b7" is progressing.}
Aug 31 12:22:44.141: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v2zf6-764bc7c4b7" has successfully progressed.}
Aug 31 12:22:44.141: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 31 12:22:44.141: INFO: Observed Deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v2zf6-764bc7c4b7" has successfully progressed.}
Aug 31 12:22:44.141: INFO: Found Deployment test-deployment-v2zf6 in namespace deployment-1462 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 31 12:22:44.141: INFO: Deployment test-deployment-v2zf6 has an updated status
STEP: patching the Statefulset Status
Aug 31 12:22:44.141: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 31 12:22:44.145: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug 31 12:22:44.148: INFO: Observed &Deployment event: ADDED
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v2zf6-764bc7c4b7"}
Aug 31 12:22:44.148: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v2zf6-764bc7c4b7"}
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 31 12:22:44.148: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:42 +0000 UTC 2022-08-31 12:22:42 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v2zf6-764bc7c4b7" is progressing.}
Aug 31 12:22:44.148: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 31 12:22:44.148: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v2zf6-764bc7c4b7" has successfully progressed.}
Aug 31 12:22:44.149: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.149: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 31 12:22:44.149: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-31 12:22:43 +0000 UTC 2022-08-31 12:22:42 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v2zf6-764bc7c4b7" has successfully progressed.}
Aug 31 12:22:44.149: INFO: Observed deployment test-deployment-v2zf6 in namespace deployment-1462 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 31 12:22:44.149: INFO: Observed &Deployment event: MODIFIED
Aug 31 12:22:44.149: INFO: Found deployment test-deployment-v2zf6 in namespace deployment-1462 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug 31 12:22:44.149: INFO: Deployment test-deployment-v2zf6 has a patched status
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 12:22:44.153: INFO: Deployment "test-deployment-v2zf6":
&Deployment{ObjectMeta:{test-deployment-v2zf6  deployment-1462  24967281-faea-44ae-9ba3-6139d5f64b96 23091 1 2022-08-31 12:22:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-31 12:22:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:22:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2022-08-31 12:22:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001323ff8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 31 12:22:44.155: INFO: New ReplicaSet "test-deployment-v2zf6-764bc7c4b7" of Deployment "test-deployment-v2zf6":
&ReplicaSet{ObjectMeta:{test-deployment-v2zf6-764bc7c4b7  deployment-1462  50e2c20c-e8bd-4f5e-8bf9-8c2e52809038 23084 1 2022-08-31 12:22:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:764bc7c4b7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-v2zf6 24967281-faea-44ae-9ba3-6139d5f64b96 0xc003b223d0 0xc003b223d1}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:22:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24967281-faea-44ae-9ba3-6139d5f64b96\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:22:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 764bc7c4b7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:764bc7c4b7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003b22478 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:22:44.161: INFO: Pod "test-deployment-v2zf6-764bc7c4b7-56fj5" is available:
&Pod{ObjectMeta:{test-deployment-v2zf6-764bc7c4b7-56fj5 test-deployment-v2zf6-764bc7c4b7- deployment-1462  466ad39d-1528-4d17-941c-8a0b808b3d13 23081 0 2022-08-31 12:22:42 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:764bc7c4b7] map[cni.projectcalico.org/containerID:2d30833656d4b570bcd3b0024a304d5f0998ac45d8238c3b85a29be9bcdbaa0b cni.projectcalico.org/podIP:10.4.131.172/32 cni.projectcalico.org/podIPs:10.4.131.172/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-v2zf6-764bc7c4b7 50e2c20c-e8bd-4f5e-8bf9-8c2e52809038 0xc003b22850 0xc003b22851}] []  [{calico Update v1 2022-08-31 12:22:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:22:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50e2c20c-e8bd-4f5e-8bf9-8c2e52809038\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:22:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.172\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-trk9t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-trk9t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:22:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:22:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:22:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:22:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.172,StartTime:2022-08-31 12:22:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:22:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://cc28569fcfad832d2bf3554cb710ceb7b4093bf38ff6b7ed8d21541afac4fe45,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.172,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:22:44.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1462" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":346,"completed":121,"skipped":2219,"failed":0}
SS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:22:44.179: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-6237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Performing setup for networking test in namespace pod-network-test-6237
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 31 12:22:44.370: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 31 12:22:44.416: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:22:46.423: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:48.423: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:50.422: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:52.424: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:54.421: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:56.424: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:22:58.424: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:23:00.420: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:23:02.421: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:23:04.420: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 12:23:06.421: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 31 12:23:06.425: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 31 12:23:06.429: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 31 12:23:08.451: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 31 12:23:08.451: INFO: Breadth first check of 10.4.130.102 on host 10.4.3.4...
Aug 31 12:23:08.453: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.131.174:9080/dial?request=hostname&protocol=udp&host=10.4.130.102&port=8081&tries=1'] Namespace:pod-network-test-6237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:23:08.453: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:23:08.453: INFO: ExecWithOptions: Clientset creation
Aug 31 12:23:08.453: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-6237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.131.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.4.130.102%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:23:08.518: INFO: Waiting for responses: map[]
Aug 31 12:23:08.518: INFO: reached 10.4.130.102 after 0/1 tries
Aug 31 12:23:08.518: INFO: Breadth first check of 10.4.131.173 on host 10.4.3.5...
Aug 31 12:23:08.520: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.131.174:9080/dial?request=hostname&protocol=udp&host=10.4.131.173&port=8081&tries=1'] Namespace:pod-network-test-6237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:23:08.520: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:23:08.521: INFO: ExecWithOptions: Clientset creation
Aug 31 12:23:08.521: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-6237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.131.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.4.131.173%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:23:08.583: INFO: Waiting for responses: map[]
Aug 31 12:23:08.583: INFO: reached 10.4.131.173 after 0/1 tries
Aug 31 12:23:08.583: INFO: Breadth first check of 10.4.129.94 on host 10.4.3.6...
Aug 31 12:23:08.586: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.131.174:9080/dial?request=hostname&protocol=udp&host=10.4.129.94&port=8081&tries=1'] Namespace:pod-network-test-6237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:23:08.586: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:23:08.586: INFO: ExecWithOptions: Clientset creation
Aug 31 12:23:08.586: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-6237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.131.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.4.129.94%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:23:08.648: INFO: Waiting for responses: map[]
Aug 31 12:23:08.648: INFO: reached 10.4.129.94 after 0/1 tries
Aug 31 12:23:08.648: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:23:08.648: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-6237" for this suite.

• [SLOW TEST:24.476 seconds]
[sig-network] Networking
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/networking.go:30
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":346,"completed":122,"skipped":2221,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:23:08.657: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8034
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 31 12:23:12.825: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:23:12.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8034" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":346,"completed":123,"skipped":2247,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:23:12.847: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5443
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:23:13.191: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug 31 12:23:15.200: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 12, 23, 13, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 23, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 23, 13, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 23, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6c69dbd86b\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:23:18.235: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:23:28.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5443" for this suite.
STEP: Destroying namespace "webhook-5443-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:15.525 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":346,"completed":124,"skipped":2248,"failed":0}
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:23:28.372: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:53
STEP: create the container to handle the HTTPGet hook request.
Aug 31 12:23:28.526: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:23:30.532: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the pod with lifecycle hook
Aug 31 12:23:30.548: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:23:32.554: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 31 12:23:32.560: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 31 12:23:32.564: INFO: Pod pod-with-prestop-http-hook still exists
Aug 31 12:23:34.564: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 31 12:23:34.572: INFO: Pod pod-with-prestop-http-hook still exists
Aug 31 12:23:36.566: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 31 12:23:36.569: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:23:36.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4198" for this suite.

• [SLOW TEST:8.212 seconds]
[sig-node] Container Lifecycle Hook
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:44
    should execute prestop http hook properly [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":346,"completed":125,"skipped":2249,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:23:36.585: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/endpointslice.go:49
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug 31 12:23:56.804: INFO: EndpointSlice for Service endpointslice-1258/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:06.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1258" for this suite.

• [SLOW TEST:30.238 seconds]
[sig-network] EndpointSlice
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":346,"completed":126,"skipped":2304,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:06.824: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5834
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5834.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5834.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5834.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5834.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:24:08.989: INFO: DNS probes using dns-5834/dns-test-311a3a37-8ca1-4e69-a4e5-bb7beb3b509e succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:09.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5834" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance]","total":346,"completed":127,"skipped":2306,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:09.018: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should serve a basic endpoint from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service endpoint-test2 in namespace services-5935
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5935 to expose endpoints map[]
Aug 31 12:24:09.154: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug 31 12:24:10.161: INFO: successfully validated that service endpoint-test2 in namespace services-5935 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5935
Aug 31 12:24:10.175: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:24:12.184: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5935 to expose endpoints map[pod1:[80]]
Aug 31 12:24:12.202: INFO: successfully validated that service endpoint-test2 in namespace services-5935 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug 31 12:24:12.202: INFO: Creating new exec pod
Aug 31 12:24:15.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 31 12:24:15.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 31 12:24:15.397: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:24:15.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.169.30 80'
Aug 31 12:24:15.581: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.169.30 80\nConnection to 172.31.169.30 80 port [tcp/http] succeeded!\n"
Aug 31 12:24:15.581: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-5935
Aug 31 12:24:15.593: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:24:17.600: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5935 to expose endpoints map[pod1:[80] pod2:[80]]
Aug 31 12:24:17.613: INFO: successfully validated that service endpoint-test2 in namespace services-5935 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug 31 12:24:18.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 31 12:24:18.726: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 31 12:24:18.727: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:24:18.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.169.30 80'
Aug 31 12:24:18.846: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.169.30 80\nConnection to 172.31.169.30 80 port [tcp/http] succeeded!\n"
Aug 31 12:24:18.846: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-5935
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5935 to expose endpoints map[pod2:[80]]
Aug 31 12:24:18.872: INFO: successfully validated that service endpoint-test2 in namespace services-5935 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug 31 12:24:19.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 31 12:24:19.985: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 31 12:24:19.985: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:24:19.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-5935 exec execpodj6xg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.169.30 80'
Aug 31 12:24:20.108: INFO: stderr: "+ nc -v -t -w 2 172.31.169.30 80\nConnection to 172.31.169.30 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Aug 31 12:24:20.108: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-5935
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5935 to expose endpoints map[]
Aug 31 12:24:20.130: INFO: successfully validated that service endpoint-test2 in namespace services-5935 exposes endpoints map[]
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:20.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5935" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:11.132 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":346,"completed":128,"skipped":2338,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:20.150: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-849
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-726b6015-2767-4a53-a63f-5f9ede0b33ed
STEP: Creating a pod to test consume configMaps
Aug 31 12:24:20.304: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2" in namespace "projected-849" to be "Succeeded or Failed"
Aug 31 12:24:20.307: INFO: Pod "pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.822031ms
Aug 31 12:24:22.315: INFO: Pod "pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010251015s
Aug 31 12:24:24.321: INFO: Pod "pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016990366s
STEP: Saw pod success
Aug 31 12:24:24.321: INFO: Pod "pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2" satisfied condition "Succeeded or Failed"
Aug 31 12:24:24.325: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug 31 12:24:24.337: INFO: Waiting for pod pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2 to disappear
Aug 31 12:24:24.339: INFO: Pod pod-projected-configmaps-b21af1a2-b26c-4db2-8fd4-320b8d0732b2 no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:24.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-849" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":346,"completed":129,"skipped":2347,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:24.346: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1903
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:24:24.476: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6" in namespace "downward-api-1903" to be "Succeeded or Failed"
Aug 31 12:24:24.479: INFO: Pod "downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.418927ms
Aug 31 12:24:26.486: INFO: Pod "downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009579955s
Aug 31 12:24:28.495: INFO: Pod "downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018235075s
STEP: Saw pod success
Aug 31 12:24:28.495: INFO: Pod "downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6" satisfied condition "Succeeded or Failed"
Aug 31 12:24:28.497: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6 container client-container: <nil>
STEP: delete the pod
Aug 31 12:24:28.510: INFO: Waiting for pod downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6 to disappear
Aug 31 12:24:28.513: INFO: Pod downwardapi-volume-1395eb23-336d-4c57-a888-26e5bea122f6 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:28.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1903" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":346,"completed":130,"skipped":2381,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:28.520: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4210
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:38
STEP: Setting up data
[It] should support subpaths with secret pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod pod-subpath-test-secret-ckfj
STEP: Creating a pod to test atomic-volume-subpath
Aug 31 12:24:28.658: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-ckfj" in namespace "subpath-4210" to be "Succeeded or Failed"
Aug 31 12:24:28.660: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Pending", Reason="", readiness=false. Elapsed: 2.571228ms
Aug 31 12:24:30.665: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 2.007091876s
Aug 31 12:24:32.669: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 4.011120994s
Aug 31 12:24:34.677: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 6.019388633s
Aug 31 12:24:36.682: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 8.024358612s
Aug 31 12:24:38.690: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 10.032132897s
Aug 31 12:24:40.696: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 12.038122538s
Aug 31 12:24:42.700: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 14.042460437s
Aug 31 12:24:44.715: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 16.057624129s
Aug 31 12:24:46.723: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 18.065109514s
Aug 31 12:24:48.732: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=true. Elapsed: 20.074225492s
Aug 31 12:24:50.738: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Running", Reason="", readiness=false. Elapsed: 22.079891109s
Aug 31 12:24:52.744: INFO: Pod "pod-subpath-test-secret-ckfj": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.086171909s
STEP: Saw pod success
Aug 31 12:24:52.744: INFO: Pod "pod-subpath-test-secret-ckfj" satisfied condition "Succeeded or Failed"
Aug 31 12:24:52.746: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-subpath-test-secret-ckfj container test-container-subpath-secret-ckfj: <nil>
STEP: delete the pod
Aug 31 12:24:52.758: INFO: Waiting for pod pod-subpath-test-secret-ckfj to disappear
Aug 31 12:24:52.761: INFO: Pod pod-subpath-test-secret-ckfj no longer exists
STEP: Deleting pod pod-subpath-test-secret-ckfj
Aug 31 12:24:52.761: INFO: Deleting pod "pod-subpath-test-secret-ckfj" in namespace "subpath-4210"
[AfterEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:52.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4210" for this suite.

• [SLOW TEST:24.251 seconds]
[sig-storage] Subpath
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:34
    should support subpaths with secret pod [Excluded:WindowsDocker] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Excluded:WindowsDocker] [Conformance]","total":346,"completed":131,"skipped":2411,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:52.771: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7877
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name projected-secret-test-2886007a-e995-4f8d-9316-85b6cf0e5def
STEP: Creating a pod to test consume secrets
Aug 31 12:24:52.905: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374" in namespace "projected-7877" to be "Succeeded or Failed"
Aug 31 12:24:52.907: INFO: Pod "pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374": Phase="Pending", Reason="", readiness=false. Elapsed: 2.600628ms
Aug 31 12:24:54.917: INFO: Pod "pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012189338s
Aug 31 12:24:56.925: INFO: Pod "pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020744413s
STEP: Saw pod success
Aug 31 12:24:56.925: INFO: Pod "pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374" satisfied condition "Succeeded or Failed"
Aug 31 12:24:56.928: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:24:56.945: INFO: Waiting for pod pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374 to disappear
Aug 31 12:24:56.947: INFO: Pod pod-projected-secrets-9919539a-af6d-4bfa-b50a-b09511585374 no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:24:56.947: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7877" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":346,"completed":132,"skipped":2451,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:24:56.954: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:24:59.095: INFO: Deleting pod "var-expansion-8165b10a-050d-404b-a57d-6b2ea4a4e2f2" in namespace "var-expansion-9194"
Aug 31 12:24:59.106: INFO: Wait up to 5m0s for pod "var-expansion-8165b10a-050d-404b-a57d-6b2ea4a4e2f2" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:25:01.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9194" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":346,"completed":133,"skipped":2473,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:25:01.123: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8897
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:25:12.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8897" for this suite.

• [SLOW TEST:11.178 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":346,"completed":134,"skipped":2484,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:25:12.301: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-33
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] deployment should support proportional scaling [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:25:12.424: INFO: Creating deployment "webserver-deployment"
Aug 31 12:25:12.427: INFO: Waiting for observed generation 1
Aug 31 12:25:14.435: INFO: Waiting for all required pods to come up
Aug 31 12:25:14.439: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug 31 12:25:16.448: INFO: Waiting for deployment "webserver-deployment" to complete
Aug 31 12:25:16.452: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug 31 12:25:16.459: INFO: Updating deployment webserver-deployment
Aug 31 12:25:16.459: INFO: Waiting for observed generation 2
Aug 31 12:25:18.467: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug 31 12:25:18.469: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug 31 12:25:18.471: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 31 12:25:18.476: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug 31 12:25:18.476: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug 31 12:25:18.478: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 31 12:25:18.481: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug 31 12:25:18.481: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug 31 12:25:18.486: INFO: Updating deployment webserver-deployment
Aug 31 12:25:18.486: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug 31 12:25:18.490: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug 31 12:25:20.495: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 12:25:20.499: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-33  8a141c51-1fe5-4045-a6e9-ddd34ec12370 24848 3 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0038b31d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-31 12:25:18 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-566f96c878" is progressing.,LastUpdateTime:2022-08-31 12:25:18 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug 31 12:25:20.501: INFO: New ReplicaSet "webserver-deployment-566f96c878" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-566f96c878  deployment-33  d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 24847 3 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 8a141c51-1fe5-4045-a6e9-ddd34ec12370 0xc0022be717 0xc0022be718}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a141c51-1fe5-4045-a6e9-ddd34ec12370\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 566f96c878,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0022be7b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:25:20.501: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug 31 12:25:20.501: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-5d9fdcc779  deployment-33  fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 24841 3 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 8a141c51-1fe5-4045-a6e9-ddd34ec12370 0xc0022be817 0xc0022be818}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a141c51-1fe5-4045-a6e9-ddd34ec12370\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 5d9fdcc779,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0022be978 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:25:20.508: INFO: Pod "webserver-deployment-566f96c878-6r7fx" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-6r7fx webserver-deployment-566f96c878- deployment-33  2faa7ed6-3f2c-4fdd-95c6-15758187cc72 24874 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:69647c19e651677718bd765bebe8978c3ac653dcc42acfec6a08c3e493dcf436 cni.projectcalico.org/podIP:10.4.130.112/32 cni.projectcalico.org/podIPs:10.4.130.112/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94477 0xc005f94478}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wswhw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wswhw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.508: INFO: Pod "webserver-deployment-566f96c878-bhshx" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-bhshx webserver-deployment-566f96c878- deployment-33  2c57b369-24ed-44b7-9577-4140ae546370 24833 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94690 0xc005f94691}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qnvm4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qnvm4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.508: INFO: Pod "webserver-deployment-566f96c878-dlgvm" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-dlgvm webserver-deployment-566f96c878- deployment-33  30972fec-108e-48aa-881f-c8d3962fba84 24905 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:8d1c838adc9d8515aa2cee4f589bbc07d917c47d71c15ade4af2a1076d242ca6 cni.projectcalico.org/podIP:10.4.130.115/32 cni.projectcalico.org/podIPs:10.4.130.115/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94820 0xc005f94821}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h9llb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h9llb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.508: INFO: Pod "webserver-deployment-566f96c878-klsfq" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-klsfq webserver-deployment-566f96c878- deployment-33  b88d31df-d34f-4ca1-802d-cc18369b2c4c 24738 0 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:a545ec0bf726a2da30ee21d19ebe6cdf0cbf34066ae785b096ab135e2e946e94 cni.projectcalico.org/podIP:10.4.130.110/32 cni.projectcalico.org/podIPs:10.4.130.110/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94a60 0xc005f94a61}] []  [{calico Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.110\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ldx58,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ldx58,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.110,StartTime:2022-08-31 12:25:16 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.110,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-lcv5s" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-lcv5s webserver-deployment-566f96c878- deployment-33  c7eea10e-d7f2-4182-a0e8-a91133752a80 24921 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:a97f470d45a8f46e5ad92110dccedf02f8de77f4cda84e02c6c544a2077a72bb cni.projectcalico.org/podIP:10.4.131.196/32 cni.projectcalico.org/podIPs:10.4.131.196/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94ca0 0xc005f94ca1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pbmzw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pbmzw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-nprhg" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-nprhg webserver-deployment-566f96c878- deployment-33  0410ab87-1643-4256-af1d-98fa08d634b8 24744 0 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:366747d499491cb4d23dbec5b849c19069f5447079879b6dcc314d52d02b3cc1 cni.projectcalico.org/podIP:10.4.131.190/32 cni.projectcalico.org/podIPs:10.4.131.190/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f94eb0 0xc005f94eb1}] []  [{calico Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.190\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xwrls,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xwrls,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.190,StartTime:2022-08-31 12:25:16 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.190,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-nsgvv" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-nsgvv webserver-deployment-566f96c878- deployment-33  07fd999f-41a4-45c6-89b8-18b242aff979 24925 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:613ffa2581a09fe5d283209c30ac3fe233b98bbb4639e8381f5193be1306d569 cni.projectcalico.org/podIP:10.4.129.103/32 cni.projectcalico.org/podIPs:10.4.129.103/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f950f0 0xc005f950f1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8zm4q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8zm4q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-pk5v9" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-pk5v9 webserver-deployment-566f96c878- deployment-33  b096844e-2c9d-418d-97c8-83a3908b7809 24871 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:1f54b3bce0b0a48691cc5ddbbed38d871f494bd710e7b2791255131944c27999 cni.projectcalico.org/podIP:10.4.129.99/32 cni.projectcalico.org/podIPs:10.4.129.99/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95300 0xc005f95301}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rmhh9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rmhh9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-rrn9s" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-rrn9s webserver-deployment-566f96c878- deployment-33  d4202a45-84be-4be9-b24f-5998c5dec1ba 24886 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:09cc4c09bfa153191745cfda31295b9b67b5f61c22885a88ab40ded29cce5b45 cni.projectcalico.org/podIP:10.4.131.193/32 cni.projectcalico.org/podIPs:10.4.131.193/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95510 0xc005f95511}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wt9pv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wt9pv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.509: INFO: Pod "webserver-deployment-566f96c878-v7gtf" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-v7gtf webserver-deployment-566f96c878- deployment-33  478e0b05-13b9-43ed-8309-b376c28d095e 24741 0 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:3fb3e4a2312f4f0b25a37425bf5891b3bde91f8e416275d93b3e65fd8a3c8a4e cni.projectcalico.org/podIP:10.4.130.111/32 cni.projectcalico.org/podIPs:10.4.130.111/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95720 0xc005f95721}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:25:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.111\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-622v6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-622v6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.111,StartTime:2022-08-31 12:25:16 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.111,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.510: INFO: Pod "webserver-deployment-566f96c878-wnqzp" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-wnqzp webserver-deployment-566f96c878- deployment-33  4ad11dd8-e9e1-4822-948e-8322b9ecfcca 24855 0 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:b4ed3637fa52705f421d02480b749e90f9520f55ac379012b0bc045efd8c01d6 cni.projectcalico.org/podIP:10.4.129.98/32 cni.projectcalico.org/podIPs:10.4.129.98/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95960 0xc005f95961}] []  [{calico Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.98\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m76z4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m76z4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:10.4.129.98,StartTime:2022-08-31 12:25:16 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.129.98,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.510: INFO: Pod "webserver-deployment-566f96c878-wsmkb" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-wsmkb webserver-deployment-566f96c878- deployment-33  35aceca8-fe55-427a-9600-87193cc20646 24887 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:adfbd2cbdf8783802c4af2ca504769d04546ac85c03112da4f071720d4e1e4af cni.projectcalico.org/podIP:10.4.129.100/32 cni.projectcalico.org/podIPs:10.4.129.100/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95ba0 0xc005f95ba1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qbnn8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qbnn8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.510: INFO: Pod "webserver-deployment-566f96c878-xf9zb" is not available:
&Pod{ObjectMeta:{webserver-deployment-566f96c878-xf9zb webserver-deployment-566f96c878- deployment-33  c8e103bf-3c3d-4c90-907b-3ab29b8f8c47 24710 0 2022-08-31 12:25:16 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:566f96c878] map[cni.projectcalico.org/containerID:b73812fa5abea63593c0897131d3873cb44cb72307fbe44d88847a20ceb50c4c cni.projectcalico.org/podIP:10.4.131.191/32 cni.projectcalico.org/podIPs:10.4.131.191/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-566f96c878 d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3 0xc005f95db0 0xc005f95db1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d4d1ead6-da0b-4b92-91f0-5fbc83af8aa3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:16 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f6jvv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f6jvv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:16 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:16 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.510: INFO: Pod "webserver-deployment-5d9fdcc779-2m2mq" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-2m2mq webserver-deployment-5d9fdcc779- deployment-33  c57da0db-44ab-4624-ab81-0e460a5f1edf 24904 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:f0424265ba0f142597ec285e98a1fa62fa0bac11482356cff614e4287f34138c cni.projectcalico.org/podIP:10.4.129.102/32 cni.projectcalico.org/podIPs:10.4.129.102/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005f95fc0 0xc005f95fc1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gs6gs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gs6gs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.511: INFO: Pod "webserver-deployment-5d9fdcc779-2tdk7" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-2tdk7 webserver-deployment-5d9fdcc779- deployment-33  24622c8a-d5e5-49ac-bfcd-c84751f9e129 24621 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:8ede0329a0608eb0fe2d0080274d6518f36790c2af5241367af5843789f35b8d cni.projectcalico.org/podIP:10.4.130.109/32 cni.projectcalico.org/podIPs:10.4.130.109/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359e3e0 0xc00359e3e1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 12:25:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6gxsw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6gxsw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.109,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://1ce034954db6e56ac9085470c2b76bff5664305b8c51eb957841bb37c01b0f7f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.109,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.511: INFO: Pod "webserver-deployment-5d9fdcc779-6rjh5" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-6rjh5 webserver-deployment-5d9fdcc779- deployment-33  06b28f07-3683-49e4-9247-35d21f2eb330 24618 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:38f8d841bb928a977fbaff2e2ae942167adc168c94d717b193737cc0b4341eee cni.projectcalico.org/podIP:10.4.129.96/32 cni.projectcalico.org/podIPs:10.4.129.96/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359e5f0 0xc00359e5f1}] []  [{calico Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.96\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9m8xs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9m8xs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:10.4.129.96,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://10af5f56f64b32f24a7687520d73b897860b9cc6e03f4c82574c4b8624c31ffd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.129.96,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.511: INFO: Pod "webserver-deployment-5d9fdcc779-6s7n7" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-6s7n7 webserver-deployment-5d9fdcc779- deployment-33  c754a525-7348-46ce-a11c-82954849bd3f 24635 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:7ad6df06236f26d18e1d8206458407e80c85a5819b8eda3a299d26d7224a22bd cni.projectcalico.org/podIP:10.4.131.187/32 cni.projectcalico.org/podIPs:10.4.131.187/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359e800 0xc00359e801}] []  [{calico Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.187\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zm5fk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zm5fk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.187,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://80e595d0315dbcdd63369b84f2a17f408fd8f9826b22dc8ec96c340e0282a485,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.187,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.511: INFO: Pod "webserver-deployment-5d9fdcc779-7ncph" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-7ncph webserver-deployment-5d9fdcc779- deployment-33  cdd1fb79-f740-4137-b32b-20447412d8ef 24924 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:b4787007dea6b3718a2bbf4a526556084de8efeb52a3be01da2a93899d703280 cni.projectcalico.org/podIP:10.4.130.116/32 cni.projectcalico.org/podIPs:10.4.130.116/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359ea10 0xc00359ea11}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:25:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9n47z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9n47z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.511: INFO: Pod "webserver-deployment-5d9fdcc779-ffbr6" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-ffbr6 webserver-deployment-5d9fdcc779- deployment-33  b7026fd7-b356-4fea-ad1a-0f18f60b2161 24900 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:f693a61e71fa17c6c9aaa7025cc4148348a927dfabf9cf95ae9f647b10737820 cni.projectcalico.org/podIP:10.4.131.195/32 cni.projectcalico.org/podIPs:10.4.131.195/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359eba0 0xc00359eba1}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5bhsg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5bhsg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-kwnxh" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-kwnxh webserver-deployment-5d9fdcc779- deployment-33  7d840935-ced3-4ed6-95e7-811bfa9f889a 24826 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359ed70 0xc00359ed71}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zvn4g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zvn4g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-mdnj4" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-mdnj4 webserver-deployment-5d9fdcc779- deployment-33  b4f95ed7-9bf6-4089-b1d2-42460071f363 24614 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:ceb441112137facbc2a9af64a8559196687954db1f7b33f3b6415598fa17cf9d cni.projectcalico.org/podIP:10.4.129.95/32 cni.projectcalico.org/podIPs:10.4.129.95/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359f030 0xc00359f031}] []  [{calico Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.95\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4tm4f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4tm4f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:10.4.129.95,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9f5c992013e902c65ba47a36da4c299ce44cb527b0f73dd6d0f0ca1c7ea280cc,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.129.95,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-pbfm5" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-pbfm5 webserver-deployment-5d9fdcc779- deployment-33  9dc979ff-3c53-43c6-a03b-501a677ea955 24612 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:e15bd5cf74fe78889d34a6e9d3f280026362811ec5ef6a60e8c96fe498970a40 cni.projectcalico.org/podIP:10.4.129.97/32 cni.projectcalico.org/podIPs:10.4.129.97/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359f240 0xc00359f241}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.129.97\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pbjgf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pbjgf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:10.4.129.97,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b4aed4aa041d3ccaa9fc726b3b5c999d7f0b82dc3227e68855ca179e1f61d30a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.129.97,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-qx8p4" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-qx8p4 webserver-deployment-5d9fdcc779- deployment-33  cae5ef7a-329e-47e3-9e16-884ec5b55eec 24624 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:034dfc9970c3ce9feca9fedb9d6a646483df541f19f67601cfdc615b09da26e0 cni.projectcalico.org/podIP:10.4.131.188/32 cni.projectcalico.org/podIPs:10.4.131.188/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359f450 0xc00359f451}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:25:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 12:25:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.188\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-924pl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-924pl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.188,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://954d1e9dedf9b59a154220af70e670d4618807e463b472a2daca92828bc3444c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.188,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-r5p7l" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-r5p7l webserver-deployment-5d9fdcc779- deployment-33  ced259c1-a927-4269-999c-68dbff52db03 24623 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:06662f588a4a0c0911817dca04abbda4f82a8cd2e2389a456f201d702d2b2dea cni.projectcalico.org/podIP:10.4.130.107/32 cni.projectcalico.org/podIPs:10.4.130.107/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359f660 0xc00359f661}] []  [{calico Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.107\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qgp4n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qgp4n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.107,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b43be4dd2e23de642bf3a2a5c9adee930600b226ef101fd728900cdb738d65f6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.107,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.512: INFO: Pod "webserver-deployment-5d9fdcc779-rc24z" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-rc24z webserver-deployment-5d9fdcc779- deployment-33  a21ed244-cf39-4e96-b4b7-3edc4bb307fc 24888 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:9593fb341a846b74ec6f442fd0cdb9d503727881fc806ff6f9e4f42b728265e6 cni.projectcalico.org/podIP:10.4.131.194/32 cni.projectcalico.org/podIPs:10.4.131.194/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359f880 0xc00359f881}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-267fq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-267fq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.513: INFO: Pod "webserver-deployment-5d9fdcc779-twcrf" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-twcrf webserver-deployment-5d9fdcc779- deployment-33  3757471d-0353-4514-ad42-9d73bec2d554 24870 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:4636d008436eada4e3aaf53780680185c99194149036f013066d13bc5b685726 cni.projectcalico.org/podIP:10.4.131.192/32 cni.projectcalico.org/podIPs:10.4.131.192/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359fa70 0xc00359fa71}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pfpbc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pfpbc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.513: INFO: Pod "webserver-deployment-5d9fdcc779-vc96z" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-vc96z webserver-deployment-5d9fdcc779- deployment-33  2a91b3a4-63fc-4f2c-b0a6-d2facf7c2182 24908 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359fc40 0xc00359fc41}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wb5hz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wb5hz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.513: INFO: Pod "webserver-deployment-5d9fdcc779-vk95t" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-vk95t webserver-deployment-5d9fdcc779- deployment-33  c1e90c14-1cfb-430d-bbcd-cc117a3b5bcc 24929 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:2e9a0461eef77554f572a9cf4b3fe59e8691e4e41ecfc3f6f38ffb1b17fa7d42 cni.projectcalico.org/podIP:10.4.130.117/32 cni.projectcalico.org/podIPs:10.4.130.117/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc00359fe10 0xc00359fe11}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8tfqj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8tfqj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.513: INFO: Pod "webserver-deployment-5d9fdcc779-vq5tj" is available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-vq5tj webserver-deployment-5d9fdcc779- deployment-33  4996650d-df8a-4b34-bb8a-135e994f43af 24627 0 2022-08-31 12:25:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:8aaa041239e276e451a7f23956db611acd335700043ef6b1fdda4d9170317f6b cni.projectcalico.org/podIP:10.4.130.108/32 cni.projectcalico.org/podIPs:10.4.130.108/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005efe000 0xc005efe001}] []  [{calico Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2022-08-31 12:25:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.130.108\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wf6f6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wf6f6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:10.4.130.108,StartTime:2022-08-31 12:25:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:25:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9f5a006841dea0ca3f73e86c6c8fcf113132c020dec12309304e443d97ff5fff,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.130.108,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.513: INFO: Pod "webserver-deployment-5d9fdcc779-vqr6g" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-vqr6g webserver-deployment-5d9fdcc779- deployment-33  631e9da2-d118-4811-b852-04ade747edfb 24818 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005efe200 0xc005efe201}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5xqwv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5xqwv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.514: INFO: Pod "webserver-deployment-5d9fdcc779-wqpmf" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-wqpmf webserver-deployment-5d9fdcc779- deployment-33  376e8416-7b3a-4845-b10c-b65ca96f9fb8 24903 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:2406839c5ef6ebccf77860579c413c15b1ca7bce09eda8607e21e60469d54e79 cni.projectcalico.org/podIP:10.4.129.101/32 cni.projectcalico.org/podIPs:10.4.129.101/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005efe370 0xc005efe371}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zqjvp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zqjvp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.6,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.514: INFO: Pod "webserver-deployment-5d9fdcc779-zbjzs" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-zbjzs webserver-deployment-5d9fdcc779- deployment-33  6ae2fcd6-6d12-4efb-968a-c558297bb6ab 24902 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:a497d327297221687670132dbded1e4b025bba433e65291435f7142e45cde337 cni.projectcalico.org/podIP:10.4.130.114/32 cni.projectcalico.org/podIPs:10.4.130.114/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005efe560 0xc005efe561}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xj4wh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xj4wh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:25:20.514: INFO: Pod "webserver-deployment-5d9fdcc779-zrn77" is not available:
&Pod{ObjectMeta:{webserver-deployment-5d9fdcc779-zrn77 webserver-deployment-5d9fdcc779- deployment-33  cec624e6-29fd-47ea-bd71-e42ba734d559 24885 0 2022-08-31 12:25:18 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:65fdef9f77bc7d1ef643bda07513ff4856234c76e71ec06d25c48e38d9b6b353 cni.projectcalico.org/podIP:10.4.130.113/32 cni.projectcalico.org/podIPs:10.4.130.113/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-5d9fdcc779 fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad 0xc005efe750 0xc005efe751}] []  [{kube-controller-manager Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fc9cca22-70eb-4b50-a9f0-3bf0fb78b3ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:25:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-08-31 12:25:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vctxk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vctxk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:25:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.4,PodIP:,StartTime:2022-08-31 12:25:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:25:20.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-33" for this suite.

• [SLOW TEST:8.220 seconds]
[sig-apps] Deployment
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":346,"completed":135,"skipped":2527,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:25:20.522: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-416
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-map-2e719312-8478-4c96-b2e0-2b8239083b93
STEP: Creating a pod to test consume configMaps
Aug 31 12:25:20.657: INFO: Waiting up to 5m0s for pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88" in namespace "configmap-416" to be "Succeeded or Failed"
Aug 31 12:25:20.659: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016721ms
Aug 31 12:25:22.668: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010946204s
Aug 31 12:25:24.678: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02128668s
Aug 31 12:25:26.686: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88": Phase="Pending", Reason="", readiness=false. Elapsed: 6.028937505s
Aug 31 12:25:28.692: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.034952891s
STEP: Saw pod success
Aug 31 12:25:28.692: INFO: Pod "pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88" satisfied condition "Succeeded or Failed"
Aug 31 12:25:28.694: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:25:28.709: INFO: Waiting for pod pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88 to disappear
Aug 31 12:25:28.711: INFO: Pod pod-configmaps-fe457bd3-a847-48c8-9987-79da2bc74c88 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:25:28.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-416" for this suite.

• [SLOW TEST:8.196 seconds]
[sig-storage] ConfigMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":136,"skipped":2563,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:25:28.718: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4551
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 31 12:25:28.848: INFO: Waiting up to 5m0s for pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c" in namespace "emptydir-4551" to be "Succeeded or Failed"
Aug 31 12:25:28.850: INFO: Pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c": Phase="Pending", Reason="", readiness=false. Elapsed: 1.94662ms
Aug 31 12:25:30.856: INFO: Pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008004682s
Aug 31 12:25:32.860: INFO: Pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012137002s
Aug 31 12:25:34.867: INFO: Pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01905903s
STEP: Saw pod success
Aug 31 12:25:34.867: INFO: Pod "pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c" satisfied condition "Succeeded or Failed"
Aug 31 12:25:34.869: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c container test-container: <nil>
STEP: delete the pod
Aug 31 12:25:34.883: INFO: Waiting for pod pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c to disappear
Aug 31 12:25:34.884: INFO: Pod pod-4685aed8-ee6b-47eb-91bf-05b2aa040b7c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:25:34.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4551" for this suite.

• [SLOW TEST:6.172 seconds]
[sig-storage] EmptyDir volumes
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":137,"skipped":2568,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:25:34.892: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:90
Aug 31 12:25:35.019: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:26:35.067: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:26:35.071: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-4015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:488
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug 31 12:26:37.223: INFO: found a healthy node: nodepool-qycy5-000001
[It] runs ReplicaSets to verify preemption running path [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:26:53.292: INFO: pods created so far: [1 1 1]
Aug 31 12:26:53.292: INFO: length of pods created so far: 3
Aug 31 12:26:55.304: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:02.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-4015" for this suite.
[AfterEach] PreemptionExecutionPath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:462
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:02.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3462" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:78

• [SLOW TEST:87.484 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:451
    runs ReplicaSets to verify preemption running path [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":346,"completed":138,"skipped":2634,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:02.375: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-448
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:38
[BeforeEach] when scheduling a busybox command that always fails in a pod
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:82
[It] should be possible to delete [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:02.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-448" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":346,"completed":139,"skipped":2657,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/sysctl.go:36
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:02.540: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-4274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/sysctl.go:65
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:02.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-4274" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":346,"completed":140,"skipped":2699,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:02.672: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9445
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name projected-secret-test-dec2264d-0bff-4809-818c-9ab5e7f79d15
STEP: Creating a pod to test consume secrets
Aug 31 12:27:02.810: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81" in namespace "projected-9445" to be "Succeeded or Failed"
Aug 31 12:27:02.813: INFO: Pod "pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81": Phase="Pending", Reason="", readiness=false. Elapsed: 2.569726ms
Aug 31 12:27:04.823: INFO: Pod "pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81": Phase="Running", Reason="", readiness=false. Elapsed: 2.012794886s
Aug 31 12:27:06.830: INFO: Pod "pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019581193s
STEP: Saw pod success
Aug 31 12:27:06.830: INFO: Pod "pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81" satisfied condition "Succeeded or Failed"
Aug 31 12:27:06.833: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:27:06.846: INFO: Waiting for pod pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81 to disappear
Aug 31 12:27:06.848: INFO: Pod pod-projected-secrets-1dd1b50b-70a9-4bac-9307-9751be35ca81 no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:06.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9445" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":141,"skipped":2717,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:06.860: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4782
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Aug 31 12:27:17.036: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:17.036: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
W0831 12:27:17.036452      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
STEP: Destroying namespace "gc-4782" for this suite.

• [SLOW TEST:10.184 seconds]
[sig-api-machinery] Garbage collector
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":346,"completed":142,"skipped":2721,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:17.044: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:27:17.175: INFO: Creating ReplicaSet my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12
Aug 31 12:27:17.181: INFO: Pod name my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12: Found 0 pods out of 1
Aug 31 12:27:22.189: INFO: Pod name my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12: Found 1 pods out of 1
Aug 31 12:27:22.189: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12" is running
Aug 31 12:27:22.191: INFO: Pod "my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12-xx5pm" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:27:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:27:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:27:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-31 12:27:17 +0000 UTC Reason: Message:}])
Aug 31 12:27:22.191: INFO: Trying to dial the pod
Aug 31 12:27:27.204: INFO: Controller my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12: Got expected result from replica 1 [my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12-xx5pm]: "my-hostname-basic-2ea8d1f9-2fbe-4f7a-95eb-3dcd5d204c12-xx5pm", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:27.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-532" for this suite.

• [SLOW TEST:10.168 seconds]
[sig-apps] ReplicaSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":346,"completed":143,"skipped":2730,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:27.212: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7206
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Kubectl logs
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1411
STEP: creating an pod
Aug 31 12:27:27.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug 31 12:27:27.410: INFO: stderr: ""
Aug 31 12:27:27.410: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Waiting for log generator to start.
Aug 31 12:27:27.410: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug 31 12:27:27.410: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-7206" to be "running and ready, or succeeded"
Aug 31 12:27:27.412: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.313123ms
Aug 31 12:27:29.420: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.009889836s
Aug 31 12:27:29.420: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug 31 12:27:29.420: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug 31 12:27:29.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator'
Aug 31 12:27:29.491: INFO: stderr: ""
Aug 31 12:27:29.491: INFO: stdout: "I0831 12:27:28.089713       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/26t 227\nI0831 12:27:28.289897       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/pfb 303\nI0831 12:27:28.490419       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/nx7 302\nI0831 12:27:28.689744       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/sql 261\nI0831 12:27:28.890092       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/dl4 560\nI0831 12:27:29.090397       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wj8d 453\nI0831 12:27:29.289740       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/k22 526\n"
STEP: limiting log lines
Aug 31 12:27:29.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator --tail=1'
Aug 31 12:27:29.551: INFO: stderr: ""
Aug 31 12:27:29.551: INFO: stdout: "I0831 12:27:29.507156       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/6jn 306\n"
Aug 31 12:27:29.551: INFO: got output "I0831 12:27:29.507156       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/6jn 306\n"
STEP: limiting log bytes
Aug 31 12:27:29.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator --limit-bytes=1'
Aug 31 12:27:29.604: INFO: stderr: ""
Aug 31 12:27:29.604: INFO: stdout: "I"
Aug 31 12:27:29.604: INFO: got output "I"
STEP: exposing timestamps
Aug 31 12:27:29.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator --tail=1 --timestamps'
Aug 31 12:27:29.661: INFO: stderr: ""
Aug 31 12:27:29.661: INFO: stdout: "2022-08-31T12:27:29.507257132Z I0831 12:27:29.507156       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/6jn 306\n"
Aug 31 12:27:29.661: INFO: got output "2022-08-31T12:27:29.507257132Z I0831 12:27:29.507156       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/6jn 306\n"
STEP: restricting to a time range
Aug 31 12:27:32.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator --since=1s'
Aug 31 12:27:32.224: INFO: stderr: ""
Aug 31 12:27:32.224: INFO: stdout: "I0831 12:27:31.290615       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/tqk 468\nI0831 12:27:31.489940       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/8mbr 474\nI0831 12:27:31.690327       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/s4wl 255\nI0831 12:27:31.890655       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/jt56 363\nI0831 12:27:32.089848       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/c8bq 282\n"
Aug 31 12:27:32.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 logs logs-generator logs-generator --since=24h'
Aug 31 12:27:32.296: INFO: stderr: ""
Aug 31 12:27:32.296: INFO: stdout: "I0831 12:27:28.089713       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/26t 227\nI0831 12:27:28.289897       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/pfb 303\nI0831 12:27:28.490419       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/nx7 302\nI0831 12:27:28.689744       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/sql 261\nI0831 12:27:28.890092       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/dl4 560\nI0831 12:27:29.090397       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wj8d 453\nI0831 12:27:29.289740       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/k22 526\nI0831 12:27:29.507156       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/6jn 306\nI0831 12:27:29.690462       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/tdp9 594\nI0831 12:27:29.889725       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/mwjr 263\nI0831 12:27:30.090118       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/pqp 503\nI0831 12:27:30.290519       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/2528 510\nI0831 12:27:30.489858       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/gndw 486\nI0831 12:27:30.690245       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/ps2 365\nI0831 12:27:30.890668       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/cm8 415\nI0831 12:27:31.090396       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/cqq 323\nI0831 12:27:31.290615       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/tqk 468\nI0831 12:27:31.489940       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/8mbr 474\nI0831 12:27:31.690327       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/s4wl 255\nI0831 12:27:31.890655       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/jt56 363\nI0831 12:27:32.089848       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/c8bq 282\nI0831 12:27:32.290263       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/ns9h 576\n"
[AfterEach] Kubectl logs
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1416
Aug 31 12:27:32.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7206 delete pod logs-generator'
Aug 31 12:27:33.638: INFO: stderr: ""
Aug 31 12:27:33.638: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:33.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7206" for this suite.

• [SLOW TEST:6.433 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Kubectl logs
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1408
    should be able to retrieve and filter logs  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":346,"completed":144,"skipped":2763,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:33.646: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2226
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug 31 12:27:33.776: INFO: Waiting up to 5m0s for pod "pod-77abfb90-1723-43c0-8cf5-2e204a9a8462" in namespace "emptydir-2226" to be "Succeeded or Failed"
Aug 31 12:27:33.778: INFO: Pod "pod-77abfb90-1723-43c0-8cf5-2e204a9a8462": Phase="Pending", Reason="", readiness=false. Elapsed: 1.98852ms
Aug 31 12:27:35.784: INFO: Pod "pod-77abfb90-1723-43c0-8cf5-2e204a9a8462": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007920062s
Aug 31 12:27:37.792: INFO: Pod "pod-77abfb90-1723-43c0-8cf5-2e204a9a8462": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015738904s
STEP: Saw pod success
Aug 31 12:27:37.792: INFO: Pod "pod-77abfb90-1723-43c0-8cf5-2e204a9a8462" satisfied condition "Succeeded or Failed"
Aug 31 12:27:37.794: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-77abfb90-1723-43c0-8cf5-2e204a9a8462 container test-container: <nil>
STEP: delete the pod
Aug 31 12:27:37.807: INFO: Waiting for pod pod-77abfb90-1723-43c0-8cf5-2e204a9a8462 to disappear
Aug 31 12:27:37.809: INFO: Pod pod-77abfb90-1723-43c0-8cf5-2e204a9a8462 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:37.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2226" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":145,"skipped":2803,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:37.816: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1013
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should retry creating failed daemon pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 31 12:27:37.961: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:27:37.963: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:27:37.963: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 12:27:38.969: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:27:38.972: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:27:38.972: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 12:27:39.969: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:27:39.972: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 31 12:27:39.972: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug 31 12:27:39.986: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:27:39.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 31 12:27:39.988: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1013, will wait for the garbage collector to delete the pods
Aug 31 12:27:41.059: INFO: Deleting DaemonSet.extensions daemon-set took: 4.314943ms
Aug 31 12:27:41.159: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.435795ms
Aug 31 12:27:43.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:27:43.764: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 12:27:43.767: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26483"},"items":null}

Aug 31 12:27:43.769: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26483"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:43.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1013" for this suite.

• [SLOW TEST:5.972 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":346,"completed":146,"skipped":2813,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:43.789: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2099
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-d76346e5-9cec-428f-9e64-88532112e1ba
STEP: Creating a pod to test consume secrets
Aug 31 12:27:43.925: INFO: Waiting up to 5m0s for pod "pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99" in namespace "secrets-2099" to be "Succeeded or Failed"
Aug 31 12:27:43.928: INFO: Pod "pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99": Phase="Pending", Reason="", readiness=false. Elapsed: 3.02343ms
Aug 31 12:27:45.935: INFO: Pod "pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0104297s
Aug 31 12:27:47.943: INFO: Pod "pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018269256s
STEP: Saw pod success
Aug 31 12:27:47.943: INFO: Pod "pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99" satisfied condition "Succeeded or Failed"
Aug 31 12:27:47.945: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99 container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:27:47.958: INFO: Waiting for pod pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99 to disappear
Aug 31 12:27:47.962: INFO: Pod pod-secrets-b24b4e1d-4fb5-4689-b3b0-b0b0f741ac99 no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:27:47.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2099" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":147,"skipped":2815,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:27:47.970: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2381
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:90
Aug 31 12:27:48.101: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:28:48.152: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:28:48.155: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-1255
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:679
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:28:48.286: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug 31 12:28:48.288: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:28:48.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-1255" for this suite.
[AfterEach] PriorityClass endpoints
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:693
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:28:48.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2381" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:78

• [SLOW TEST:60.381 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:673
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":346,"completed":148,"skipped":2835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:28:48.351: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2304
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:28:48.486: INFO: created pod
Aug 31 12:28:48.486: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-2304" to be "Succeeded or Failed"
Aug 31 12:28:48.488: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 1.825817ms
Aug 31 12:28:50.493: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007025553s
Aug 31 12:28:52.500: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014106491s
STEP: Saw pod success
Aug 31 12:28:52.500: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug 31 12:29:22.500: INFO: polling logs
Aug 31 12:29:22.505: INFO: Pod logs: 
I0831 12:28:49.173854       1 log.go:195] OK: Got token
I0831 12:28:49.173882       1 log.go:195] validating with in-cluster discovery
I0831 12:28:49.174122       1 log.go:195] OK: got issuer https://api.c2zfv.k8s.godsmack.westeurope.azure.gigantic.io
I0831 12:28:49.174152       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.c2zfv.k8s.godsmack.westeurope.azure.gigantic.io", Subject:"system:serviceaccount:svcaccounts-2304:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661949528, NotBefore:1661948928, IssuedAt:1661948928, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2304", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2a12fa0e-af25-4303-bf29-7bc3a8a1e09d"}}}
I0831 12:28:49.239110       1 log.go:195] OK: Constructed OIDC provider for issuer https://api.c2zfv.k8s.godsmack.westeurope.azure.gigantic.io
I0831 12:28:49.240569       1 log.go:195] OK: Validated signature on JWT
I0831 12:28:49.240650       1 log.go:195] OK: Got valid claims from token!
I0831 12:28:49.240698       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.c2zfv.k8s.godsmack.westeurope.azure.gigantic.io", Subject:"system:serviceaccount:svcaccounts-2304:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661949528, NotBefore:1661948928, IssuedAt:1661948928, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2304", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2a12fa0e-af25-4303-bf29-7bc3a8a1e09d"}}}

Aug 31 12:29:22.505: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:29:22.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2304" for this suite.

• [SLOW TEST:34.169 seconds]
[sig-auth] ServiceAccounts
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":346,"completed":149,"skipped":2858,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:29:22.520: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8787
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:29:23.298: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:29:26.317: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:29:26.321: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2217-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:29:29.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8787" for this suite.
STEP: Destroying namespace "webhook-8787-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:7.000 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":346,"completed":150,"skipped":2880,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:29:29.520: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-723
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-723.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-723.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-723.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-723.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:29:31.693: INFO: DNS probes using dns-723/dns-test-b57dc5a0-db7b-468f-b801-22ed508b43f6 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:29:31.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-723" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance]","total":346,"completed":151,"skipped":2882,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:29:31.708: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:38
[BeforeEach] when scheduling a busybox command that always fails in a pod
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:82
[It] should have an terminated reason [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:29:35.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8262" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":346,"completed":152,"skipped":2900,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:29:35.871: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7834
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-map-55e38973-ebf5-4683-840f-43203acf7a48
STEP: Creating a pod to test consume secrets
Aug 31 12:29:36.011: INFO: Waiting up to 5m0s for pod "pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164" in namespace "secrets-7834" to be "Succeeded or Failed"
Aug 31 12:29:36.013: INFO: Pod "pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164": Phase="Pending", Reason="", readiness=false. Elapsed: 2.276322ms
Aug 31 12:29:38.020: INFO: Pod "pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009490639s
Aug 31 12:29:40.028: INFO: Pod "pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017098945s
STEP: Saw pod success
Aug 31 12:29:40.028: INFO: Pod "pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164" satisfied condition "Succeeded or Failed"
Aug 31 12:29:40.030: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164 container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:29:40.042: INFO: Waiting for pod pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164 to disappear
Aug 31 12:29:40.044: INFO: Pod pod-secrets-7233b108-f1f4-4d25-9d89-13771bdee164 no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:29:40.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7834" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":153,"skipped":2911,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:29:40.057: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 in namespace container-probe-6627
Aug 31 12:29:42.204: INFO: Started pod liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 in namespace container-probe-6627
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 12:29:42.217: INFO: Initial restart count of pod liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is 0
Aug 31 12:30:02.286: INFO: Restart count of pod container-probe-6627/liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is now 1 (20.068393615s elapsed)
Aug 31 12:30:22.349: INFO: Restart count of pod container-probe-6627/liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is now 2 (40.131344582s elapsed)
Aug 31 12:30:42.435: INFO: Restart count of pod container-probe-6627/liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is now 3 (1m0.218123524s elapsed)
Aug 31 12:31:02.505: INFO: Restart count of pod container-probe-6627/liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is now 4 (1m20.287575906s elapsed)
Aug 31 12:32:14.743: INFO: Restart count of pod container-probe-6627/liveness-f798b2c5-8a59-4b0c-b56b-65266bd09329 is now 5 (2m32.525805239s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:14.752: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6627" for this suite.

• [SLOW TEST:154.704 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":346,"completed":154,"skipped":2930,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:14.763: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should rollback without unnecessary restarts [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:32:14.907: INFO: Create a RollingUpdate DaemonSet
Aug 31 12:32:14.910: INFO: Check that daemon pods launch on every node of the cluster
Aug 31 12:32:14.913: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:14.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:32:14.915: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 12:32:15.922: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:15.924: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 31 12:32:15.924: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 12:32:16.922: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:16.924: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 31 12:32:16.924: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Aug 31 12:32:16.924: INFO: Update the DaemonSet to trigger a rollout
Aug 31 12:32:16.930: INFO: Updating DaemonSet daemon-set
Aug 31 12:32:19.945: INFO: Roll back the DaemonSet before rollout is complete
Aug 31 12:32:19.951: INFO: Updating DaemonSet daemon-set
Aug 31 12:32:19.951: INFO: Make sure DaemonSet rollback is complete
Aug 31 12:32:19.953: INFO: Wrong image for pod: daemon-set-6s8d8. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug 31 12:32:19.953: INFO: Pod daemon-set-6s8d8 is not available
Aug 31 12:32:19.956: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:20.966: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:21.965: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 12:32:22.961: INFO: Pod daemon-set-6lnbv is not available
Aug 31 12:32:22.965: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5168, will wait for the garbage collector to delete the pods
Aug 31 12:32:23.024: INFO: Deleting DaemonSet.extensions daemon-set took: 3.29253ms
Aug 31 12:32:23.131: INFO: Terminating DaemonSet.extensions daemon-set pods took: 107.423366ms
Aug 31 12:32:25.235: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:32:25.235: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 12:32:25.237: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28267"},"items":null}

Aug 31 12:32:25.239: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28267"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:25.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5168" for this suite.

• [SLOW TEST:10.493 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":346,"completed":155,"skipped":2950,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:25.256: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2766
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:32:25.395: INFO: Waiting up to 5m0s for pod "downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b" in namespace "projected-2766" to be "Succeeded or Failed"
Aug 31 12:32:25.397: INFO: Pod "downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.25342ms
Aug 31 12:32:27.405: INFO: Pod "downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009364057s
Aug 31 12:32:29.410: INFO: Pod "downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014803069s
STEP: Saw pod success
Aug 31 12:32:29.410: INFO: Pod "downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b" satisfied condition "Succeeded or Failed"
Aug 31 12:32:29.413: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b container client-container: <nil>
STEP: delete the pod
Aug 31 12:32:29.424: INFO: Waiting for pod downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b to disappear
Aug 31 12:32:29.426: INFO: Pod downwardapi-volume-102256e5-2f8b-4379-ab47-f448e3f39f7b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:29.426: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2766" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":346,"completed":156,"skipped":2978,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:29.433: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:32:29.564: INFO: Waiting up to 5m0s for pod "downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b" in namespace "projected-3828" to be "Succeeded or Failed"
Aug 31 12:32:29.566: INFO: Pod "downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b": Phase="Pending", Reason="", readiness=false. Elapsed: 1.893217ms
Aug 31 12:32:31.574: INFO: Pod "downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009359736s
Aug 31 12:32:33.579: INFO: Pod "downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014838029s
STEP: Saw pod success
Aug 31 12:32:33.579: INFO: Pod "downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b" satisfied condition "Succeeded or Failed"
Aug 31 12:32:33.581: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b container client-container: <nil>
STEP: delete the pod
Aug 31 12:32:33.594: INFO: Waiting for pod downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b to disappear
Aug 31 12:32:33.596: INFO: Pod downwardapi-volume-60412a44-1373-4bf9-aa95-00a2bb454b7b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:33.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3828" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":157,"skipped":2981,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:33.603: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:90
Aug 31 12:32:33.728: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 31 12:32:33.734: INFO: Waiting for terminating namespaces to be deleted...
Aug 31 12:32:33.735: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000000 before test
Aug 31 12:32:33.743: INFO: azure-cloud-node-manager-wwzl5 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:32:33.743: INFO: azure-scheduled-events-228j9 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:32:33.743: INFO: calico-node-wqzj4 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:32:33.743: INFO: cert-exporter-daemonset-sjcjs from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:32:33.743: INFO: csi-azuredisk-node-kvgvp from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:32:33.743: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.743: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.743: INFO: csi-azurefile-node-2rlbt from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:32:33.743: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.743: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.743: INFO: kube-proxy-skgwk from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.743: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:32:33.744: INFO: kube-state-metrics-7549f69f7b-4wz2d from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 31 12:32:33.744: INFO: net-exporter-j45lm from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:32:33.744: INFO: node-exporter-v1-3-1-6zbf7 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:32:33.744: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-sxrpf from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:32:33.744: INFO: vertical-pod-autoscaler-updater-7bdddf5b-t6lgw from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:32:33.744: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-l2q54 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:32:33.744: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:32:33.744: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:32:33.744: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000001 before test
Aug 31 12:32:33.758: INFO: azure-cloud-node-manager-jgc5k from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:32:33.758: INFO: azure-scheduled-events-v8sjf from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:32:33.758: INFO: calico-node-wc6pv from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:32:33.758: INFO: cert-exporter-daemonset-qgrcx from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:32:33.758: INFO: csi-azuredisk-controller-54668dc445-g8tf7 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (6 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.758: INFO: csi-azuredisk-node-2qvkc from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.758: INFO: csi-azurefile-controller-59b55cddbd-4zl4l from kube-system started at 2022-08-31 11:46:32 +0000 UTC (6 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.758: INFO: csi-azurefile-node-6p9mh from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.758: INFO: external-dns-9b89bc6d9-xntr5 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container external-dns ready: true, restart count 0
Aug 31 12:32:33.758: INFO: kube-proxy-rhrp2 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:32:33.758: INFO: metrics-server-5fb454cbc5-2glzg from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container metrics-server ready: true, restart count 0
Aug 31 12:32:33.758: INFO: net-exporter-hkzv6 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:32:33.758: INFO: node-exporter-v1-3-1-wn7v7 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:32:33.758: INFO: vertical-pod-autoscaler-recommender-67b5d54d5f-qgbp7 from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:32:33.758: INFO: sonobuoy from sonobuoy started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 31 12:32:33.758: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-hfx7z from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:32:33.758: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:32:33.758: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000002 before test
Aug 31 12:32:33.766: INFO: azure-cloud-node-manager-bdkwc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:32:33.766: INFO: azure-scheduled-events-fvclm from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:32:33.766: INFO: calico-node-g6p5m from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:32:33.766: INFO: cert-exporter-daemonset-ctrtd from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:32:33.766: INFO: coredns-workers-8666c764cd-5k24f from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:32:33.766: INFO: coredns-workers-8666c764cd-fh979 from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:32:33.766: INFO: csi-azuredisk-node-qvvqc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.766: INFO: csi-azurefile-node-ql4sl from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:32:33.766: INFO: kube-proxy-gvjs4 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:32:33.766: INFO: net-exporter-dggpf from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:32:33.766: INFO: node-exporter-v1-3-1-q226d from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:32:33.766: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-7f5cd from kube-system started at 2022-08-31 11:53:16 +0000 UTC (1 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:32:33.766: INFO: sonobuoy-e2e-job-61cdc82114084168 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container e2e ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:32:33.766: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-ln45x from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:32:33.766: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:32:33.766: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-145c5fe5-48df-4b7f-88e9-74d433f18136 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-145c5fe5-48df-4b7f-88e9-74d433f18136 off the node nodepool-qycy5-000001
STEP: verifying the node doesn't have the label kubernetes.io/e2e-145c5fe5-48df-4b7f-88e9-74d433f18136
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:37.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6321" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:81
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":346,"completed":158,"skipped":2993,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:37.838: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4183
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 31 12:32:37.968: INFO: Waiting up to 5m0s for pod "pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca" in namespace "emptydir-4183" to be "Succeeded or Failed"
Aug 31 12:32:37.971: INFO: Pod "pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.24632ms
Aug 31 12:32:39.978: INFO: Pod "pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009607699s
Aug 31 12:32:41.986: INFO: Pod "pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017136469s
STEP: Saw pod success
Aug 31 12:32:41.986: INFO: Pod "pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca" satisfied condition "Succeeded or Failed"
Aug 31 12:32:41.988: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca container test-container: <nil>
STEP: delete the pod
Aug 31 12:32:42.002: INFO: Waiting for pod pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca to disappear
Aug 31 12:32:42.010: INFO: Pod pod-9d006ac8-ccf7-44d4-ba8d-e5442a3d5cca no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:42.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4183" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":159,"skipped":3003,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:42.019: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check if v1 is in available api versions  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: validating api versions
Aug 31 12:32:42.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7997 api-versions'
Aug 31 12:32:42.205: INFO: stderr: ""
Aug 31 12:32:42.205: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napplication.giantswarm.io/v1alpha1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling.k8s.io/v1\nautoscaling.k8s.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nexternaldns.k8s.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\ninternal.apiserver.k8s.io/v1alpha1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1alpha1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1alpha1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:42.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7997" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":346,"completed":160,"skipped":3013,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:42.212: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9163
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to create a functioning NodePort service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service nodeport-test with type=NodePort in namespace services-9163
STEP: creating replication controller nodeport-test in namespace services-9163
I0831 12:32:42.348664      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9163, replica count: 2
Aug 31 12:32:45.400: INFO: Creating new exec pod
I0831 12:32:45.400135      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:32:48.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-9163 exec execpodb425r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 31 12:32:48.865: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 31 12:32:48.865: INFO: stdout: "nodeport-test-zfdnb"
Aug 31 12:32:48.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-9163 exec execpodb425r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.108.247 80'
Aug 31 12:32:48.984: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.108.247 80\nConnection to 172.31.108.247 80 port [tcp/http] succeeded!\n"
Aug 31 12:32:48.984: INFO: stdout: "nodeport-test-rlrqd"
Aug 31 12:32:48.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-9163 exec execpodb425r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.4 30587'
Aug 31 12:32:49.102: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.4 30587\nConnection to 10.4.3.4 30587 port [tcp/*] succeeded!\n"
Aug 31 12:32:49.102: INFO: stdout: "nodeport-test-zfdnb"
Aug 31 12:32:49.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-9163 exec execpodb425r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.5 30587'
Aug 31 12:32:49.215: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.5 30587\nConnection to 10.4.3.5 30587 port [tcp/*] succeeded!\n"
Aug 31 12:32:49.215: INFO: stdout: "nodeport-test-zfdnb"
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:32:49.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9163" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:7.009 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":346,"completed":161,"skipped":3057,"failed":0}
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:32:49.221: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-8519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/taints.go:164
Aug 31 12:32:49.355: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:33:49.402: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:33:49.404: INFO: Starting informer...
STEP: Starting pod...
Aug 31 12:33:49.624: INFO: Pod is running on nodepool-qycy5-000001. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug 31 12:33:49.639: INFO: Pod wasn't evicted. Proceeding
Aug 31 12:33:49.639: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug 31 12:35:04.667: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:35:04.667: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-8519" for this suite.

• [SLOW TEST:135.458 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":346,"completed":162,"skipped":3062,"failed":0}
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:35:04.680: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:90
Aug 31 12:35:04.817: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:36:04.870: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create pods that use 4/5 of node resources.
Aug 31 12:36:04.898: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 31 12:36:04.908: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 31 12:36:04.929: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 31 12:36:04.938: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 31 12:36:04.958: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 31 12:36:04.972: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:21.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3491" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/preemption.go:78

• [SLOW TEST:76.414 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":346,"completed":163,"skipped":3066,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:21.093: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8046
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-8046
STEP: creating service affinity-clusterip-transition in namespace services-8046
STEP: creating replication controller affinity-clusterip-transition in namespace services-8046
I0831 12:36:21.238305      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8046, replica count: 3
I0831 12:36:24.290404      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:36:24.296: INFO: Creating new exec pod
Aug 31 12:36:27.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8046 exec execpod-affinitytqhcr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug 31 12:36:27.447: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80+ \necho hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug 31 12:36:27.447: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:36:27.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8046 exec execpod-affinitytqhcr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.213.151 80'
Aug 31 12:36:27.604: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.213.151 80\nConnection to 172.31.213.151 80 port [tcp/http] succeeded!\n"
Aug 31 12:36:27.604: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:36:27.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8046 exec execpod-affinitytqhcr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.213.151:80/ ; done'
Aug 31 12:36:27.792: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n"
Aug 31 12:36:27.793: INFO: stdout: "\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-m7b9r\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-xdtgj\naffinity-clusterip-transition-xdtgj"
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-m7b9r
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.793: INFO: Received response from host: affinity-clusterip-transition-xdtgj
Aug 31 12:36:27.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8046 exec execpod-affinitytqhcr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.213.151:80/ ; done'
Aug 31 12:36:28.001: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.213.151:80/\n"
Aug 31 12:36:28.001: INFO: stdout: "\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg\naffinity-clusterip-transition-msvpg"
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Received response from host: affinity-clusterip-transition-msvpg
Aug 31 12:36:28.001: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8046, will wait for the garbage collector to delete the pods
Aug 31 12:36:28.068: INFO: Deleting ReplicationController affinity-clusterip-transition took: 3.104027ms
Aug 31 12:36:28.168: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.646757ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:30.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8046" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:9.397 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":346,"completed":164,"skipped":3078,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:30.491: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:36:30.622: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999" in namespace "downward-api-6458" to be "Succeeded or Failed"
Aug 31 12:36:30.626: INFO: Pod "downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999": Phase="Pending", Reason="", readiness=false. Elapsed: 3.59053ms
Aug 31 12:36:32.634: INFO: Pod "downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011542724s
Aug 31 12:36:34.639: INFO: Pod "downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016621988s
STEP: Saw pod success
Aug 31 12:36:34.639: INFO: Pod "downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999" satisfied condition "Succeeded or Failed"
Aug 31 12:36:34.641: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999 container client-container: <nil>
STEP: delete the pod
Aug 31 12:36:34.655: INFO: Waiting for pod downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999 to disappear
Aug 31 12:36:34.658: INFO: Pod downwardapi-volume-bb5cef47-7fd5-41e7-a3bb-ab2331142999 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:34.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6458" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":346,"completed":165,"skipped":3134,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:34.665: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check is all data is printed  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:36:34.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-257 version'
Aug 31 12:36:34.842: INFO: stderr: ""
Aug 31 12:36:34.842: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"23\", GitVersion:\"v1.23.9\", GitCommit:\"c1de2d70269039fe55efb98e737d9a29f9155246\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:26:51Z\", GoVersion:\"go1.17.11\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nServer Version: version.Info{Major:\"1\", Minor:\"23\", GitVersion:\"v1.23.9\", GitCommit:\"c1de2d70269039fe55efb98e737d9a29f9155246\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:19:57Z\", GoVersion:\"go1.17.11\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:34.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-257" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":346,"completed":166,"skipped":3147,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:34.848: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4853
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should update annotations on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating the pod
Aug 31 12:36:34.981: INFO: The status of Pod annotationupdate89e08936-d2fd-4631-b513-861763c38a31 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:36:36.989: INFO: The status of Pod annotationupdate89e08936-d2fd-4631-b513-861763c38a31 is Running (Ready = true)
Aug 31 12:36:37.509: INFO: Successfully updated pod "annotationupdate89e08936-d2fd-4631-b513-861763c38a31"
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:41.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4853" for this suite.

• [SLOW TEST:6.691 seconds]
[sig-storage] Projected downwardAPI
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":346,"completed":167,"skipped":3149,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:41.540: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-336
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-336.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-336.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-336.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-336.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:36:43.694: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.697: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.703: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.706: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.708: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.710: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.712: INFO: Unable to read jessie_udp@dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.715: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-336.svc.cluster.local from pod dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e: the server could not find the requested resource (get pods dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e)
Aug 31 12:36:43.715: INFO: Lookups using dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local wheezy_udp@dns-test-service-2.dns-336.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-336.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-336.svc.cluster.local jessie_udp@dns-test-service-2.dns-336.svc.cluster.local jessie_tcp@dns-test-service-2.dns-336.svc.cluster.local]

Aug 31 12:36:48.743: INFO: DNS probes using dns-336/dns-test-9e7eb275-faa2-4e31-8dda-7f1469a8e65e succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:36:48.775: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-336" for this suite.

• [SLOW TEST:7.243 seconds]
[sig-network] DNS
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":346,"completed":168,"skipped":3169,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:36:48.785: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:01.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7360" for this suite.

• [SLOW TEST:13.207 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":346,"completed":169,"skipped":3175,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:01.992: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-7151
STEP: creating service affinity-nodeport in namespace services-7151
STEP: creating replication controller affinity-nodeport in namespace services-7151
I0831 12:37:02.138293      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7151, replica count: 3
I0831 12:37:05.190018      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:37:05.199: INFO: Creating new exec pod
Aug 31 12:37:08.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-7151 exec execpod-affinityz7kzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug 31 12:37:08.344: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug 31 12:37:08.345: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:37:08.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-7151 exec execpod-affinityz7kzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.248.22 80'
Aug 31 12:37:08.455: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 172.31.248.22 80\nConnection to 172.31.248.22 80 port [tcp/http] succeeded!\n"
Aug 31 12:37:08.455: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:37:08.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-7151 exec execpod-affinityz7kzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.4 30811'
Aug 31 12:37:08.567: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.4 30811\nConnection to 10.4.3.4 30811 port [tcp/*] succeeded!\n"
Aug 31 12:37:08.567: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:37:08.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-7151 exec execpod-affinityz7kzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.5 30811'
Aug 31 12:37:08.676: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.5 30811\nConnection to 10.4.3.5 30811 port [tcp/*] succeeded!\n"
Aug 31 12:37:08.676: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:37:08.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-7151 exec execpod-affinityz7kzg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.4.3.4:30811/ ; done'
Aug 31 12:37:08.879: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.4.3.4:30811/\n"
Aug 31 12:37:08.879: INFO: stdout: "\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k\naffinity-nodeport-sjk4k"
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Received response from host: affinity-nodeport-sjk4k
Aug 31 12:37:08.879: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-7151, will wait for the garbage collector to delete the pods
Aug 31 12:37:08.947: INFO: Deleting ReplicationController affinity-nodeport took: 4.146935ms
Aug 31 12:37:09.048: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.787453ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:11.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7151" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:9.487 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":346,"completed":170,"skipped":3200,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:11.480: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6773
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-ea22a1c5-6839-446f-9eb8-3ec36ba7ccb9
STEP: Creating a pod to test consume configMaps
Aug 31 12:37:11.614: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6" in namespace "projected-6773" to be "Succeeded or Failed"
Aug 31 12:37:11.616: INFO: Pod "pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.069618ms
Aug 31 12:37:13.621: INFO: Pod "pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00732737s
Aug 31 12:37:15.626: INFO: Pod "pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01178341s
STEP: Saw pod success
Aug 31 12:37:15.626: INFO: Pod "pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6" satisfied condition "Succeeded or Failed"
Aug 31 12:37:15.628: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:37:15.639: INFO: Waiting for pod pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6 to disappear
Aug 31 12:37:15.641: INFO: Pod pod-projected-configmaps-40d093d7-9c0c-483d-81dd-9388c7dec4f6 no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:15.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6773" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":171,"skipped":3202,"failed":0}
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods Extended
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:15.647: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/pods.go:150
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:15.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7528" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":346,"completed":172,"skipped":3204,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:15.819: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:37:19.988: INFO: DNS probes using dns-test-06d416ab-f4f4-49e4-8dfd-02e9f76ff91a succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:37:22.023: INFO: File wheezy_udp@dns-test-service-3.dns-1698.svc.cluster.local from pod  dns-1698/dns-test-4160ecfd-2f85-4978-879d-a0d49e2b789f contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 31 12:37:22.026: INFO: File jessie_udp@dns-test-service-3.dns-1698.svc.cluster.local from pod  dns-1698/dns-test-4160ecfd-2f85-4978-879d-a0d49e2b789f contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 31 12:37:22.026: INFO: Lookups using dns-1698/dns-test-4160ecfd-2f85-4978-879d-a0d49e2b789f failed for: [wheezy_udp@dns-test-service-3.dns-1698.svc.cluster.local jessie_udp@dns-test-service-3.dns-1698.svc.cluster.local]

Aug 31 12:37:27.032: INFO: DNS probes using dns-test-4160ecfd-2f85-4978-879d-a0d49e2b789f succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1698.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1698.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 31 12:37:29.096: INFO: DNS probes using dns-test-5be2a1d9-2fbe-4dd9-bfe7-3b58a3751fd1 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:29.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1698" for this suite.

• [SLOW TEST:13.314 seconds]
[sig-network] DNS
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":346,"completed":173,"skipped":3224,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:29.133: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4204
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4204
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4204
STEP: creating replication controller externalsvc in namespace services-4204
I0831 12:37:29.285382      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4204, replica count: 2
I0831 12:37:32.336709      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug 31 12:37:32.349: INFO: Creating new exec pod
Aug 31 12:37:34.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-4204 exec execpod426zn -- /bin/sh -x -c nslookup clusterip-service.services-4204.svc.cluster.local'
Aug 31 12:37:34.551: INFO: stderr: "+ nslookup clusterip-service.services-4204.svc.cluster.local\n"
Aug 31 12:37:34.551: INFO: stdout: "Server:\t\t172.31.0.10\nAddress:\t172.31.0.10#53\n\nclusterip-service.services-4204.svc.cluster.local\tcanonical name = externalsvc.services-4204.svc.cluster.local.\nName:\texternalsvc.services-4204.svc.cluster.local\nAddress: 172.31.151.115\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4204, will wait for the garbage collector to delete the pods
Aug 31 12:37:34.607: INFO: Deleting ReplicationController externalsvc took: 3.404129ms
Aug 31 12:37:34.708: INFO: Terminating ReplicationController externalsvc pods took: 100.813049ms
Aug 31 12:37:37.024: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:37.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4204" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:7.906 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":346,"completed":174,"skipped":3228,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:37.039: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a service nodeport-service with the type=NodePort in namespace services-3491
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-3491
STEP: creating replication controller externalsvc in namespace services-3491
I0831 12:37:37.188384      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3491, replica count: 2
I0831 12:37:40.239156      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug 31 12:37:40.264: INFO: Creating new exec pod
Aug 31 12:37:42.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-3491 exec execpodfsbvc -- /bin/sh -x -c nslookup nodeport-service.services-3491.svc.cluster.local'
Aug 31 12:37:42.420: INFO: stderr: "+ nslookup nodeport-service.services-3491.svc.cluster.local\n"
Aug 31 12:37:42.420: INFO: stdout: "Server:\t\t172.31.0.10\nAddress:\t172.31.0.10#53\n\nnodeport-service.services-3491.svc.cluster.local\tcanonical name = externalsvc.services-3491.svc.cluster.local.\nName:\texternalsvc.services-3491.svc.cluster.local\nAddress: 172.31.132.162\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-3491, will wait for the garbage collector to delete the pods
Aug 31 12:37:42.482: INFO: Deleting ReplicationController externalsvc took: 7.521464ms
Aug 31 12:37:42.583: INFO: Terminating ReplicationController externalsvc pods took: 100.901149ms
Aug 31 12:37:44.598: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:44.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3491" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:7.578 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":346,"completed":175,"skipped":3251,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:44.618: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-139
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should provide secure master service  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:44.754: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-139" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":346,"completed":176,"skipped":3256,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:44.761: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2495
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-upd-86c90784-29ee-4e00-94f9-cb21a9ce1270
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:46.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2495" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":177,"skipped":3269,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:46.921: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8675
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide podname only [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:37:47.055: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0" in namespace "projected-8675" to be "Succeeded or Failed"
Aug 31 12:37:47.057: INFO: Pod "downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.093617ms
Aug 31 12:37:49.065: INFO: Pod "downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009616693s
Aug 31 12:37:51.071: INFO: Pod "downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015218748s
STEP: Saw pod success
Aug 31 12:37:51.071: INFO: Pod "downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0" satisfied condition "Succeeded or Failed"
Aug 31 12:37:51.076: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0 container client-container: <nil>
STEP: delete the pod
Aug 31 12:37:51.100: INFO: Waiting for pod downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0 to disappear
Aug 31 12:37:51.103: INFO: Pod downwardapi-volume-e4f7f9a6-7655-409f-a4cd-d52666b86ca0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:37:51.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8675" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":346,"completed":178,"skipped":3271,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:37:51.111: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6581
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug 31 12:37:51.243: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:37:54.974: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:38:06.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6581" for this suite.

• [SLOW TEST:15.448 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":346,"completed":179,"skipped":3302,"failed":0}
SSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:38:06.559: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7531
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test service account token: 
Aug 31 12:38:06.691: INFO: Waiting up to 5m0s for pod "test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed" in namespace "svcaccounts-7531" to be "Succeeded or Failed"
Aug 31 12:38:06.693: INFO: Pod "test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.38562ms
Aug 31 12:38:08.699: INFO: Pod "test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed": Phase="Running", Reason="", readiness=false. Elapsed: 2.008303233s
Aug 31 12:38:10.710: INFO: Pod "test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019266382s
STEP: Saw pod success
Aug 31 12:38:10.710: INFO: Pod "test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed" satisfied condition "Succeeded or Failed"
Aug 31 12:38:10.713: INFO: Trying to get logs from node nodepool-qycy5-000001 pod test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:38:10.723: INFO: Waiting for pod test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed to disappear
Aug 31 12:38:10.725: INFO: Pod test-pod-de254758-ecb6-4746-bf4a-b254acb5a8ed no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:38:10.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7531" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":346,"completed":180,"skipped":3305,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:38:10.731: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-963
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug 31 12:38:10.861: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-963  72133cff-60f7-4d25-8a79-ae90651e6e20 31541 0 2022-08-31 12:38:10 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-08-31 12:38:10 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5bhhv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5bhhv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 31 12:38:10.864: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:38:12.872: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug 31 12:38:12.872: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-963 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:38:12.872: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:38:12.872: INFO: ExecWithOptions: Clientset creation
Aug 31 12:38:12.872: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/dns-963/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
STEP: Verifying customized DNS server is configured on pod...
Aug 31 12:38:12.948: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-963 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:38:12.948: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:38:12.949: INFO: ExecWithOptions: Clientset creation
Aug 31 12:38:12.949: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/dns-963/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:38:13.022: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:38:13.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-963" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":346,"completed":181,"skipped":3309,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:38:13.040: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-602
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a new StatefulSet
Aug 31 12:38:13.180: INFO: Found 0 stateful pods, waiting for 3
Aug 31 12:38:23.191: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 12:38:23.191: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 12:38:23.191: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 31 12:38:23.214: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug 31 12:38:33.249: INFO: Updating stateful set ss2
Aug 31 12:38:33.255: INFO: Waiting for Pod statefulset-602/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug 31 12:38:43.335: INFO: Found 2 stateful pods, waiting for 3
Aug 31 12:38:53.339: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 12:38:53.339: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 12:38:53.339: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug 31 12:38:53.360: INFO: Updating stateful set ss2
Aug 31 12:38:53.365: INFO: Waiting for Pod statefulset-602/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug 31 12:39:03.388: INFO: Updating stateful set ss2
Aug 31 12:39:03.393: INFO: Waiting for StatefulSet statefulset-602/ss2 to complete update
Aug 31 12:39:03.393: INFO: Waiting for Pod statefulset-602/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 12:39:13.400: INFO: Deleting all statefulset in ns statefulset-602
Aug 31 12:39:13.402: INFO: Scaling statefulset ss2 to 0
Aug 31 12:39:23.415: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 12:39:23.417: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:39:23.425: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-602" for this suite.

• [SLOW TEST:70.392 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":346,"completed":182,"skipped":3325,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:39:23.432: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6174
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug 31 12:39:25.570: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6174 PodName:pod-sharedvolume-997c15a3-bc31-4e46-b4dc-e25bec9b860e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:39:25.570: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:39:25.571: INFO: ExecWithOptions: Clientset creation
Aug 31 12:39:25.571: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/emptydir-6174/pods/pod-sharedvolume-997c15a3-bc31-4e46-b4dc-e25bec9b860e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 12:39:25.633: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:39:25.633: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6174" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":346,"completed":183,"skipped":3345,"failed":0}
SSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:39:25.642: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1850
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] deployment should support rollover [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:39:25.773: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug 31 12:39:30.779: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 31 12:39:30.779: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug 31 12:39:32.785: INFO: Creating deployment "test-rollover-deployment"
Aug 31 12:39:32.792: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug 31 12:39:34.802: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug 31 12:39:34.808: INFO: Ensure that both replica sets have 1 created replica
Aug 31 12:39:34.813: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug 31 12:39:34.819: INFO: Updating deployment test-rollover-deployment
Aug 31 12:39:34.819: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug 31 12:39:36.825: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug 31 12:39:36.830: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug 31 12:39:36.834: INFO: all replica sets need to contain the pod-template-hash label
Aug 31 12:39:36.834: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77db6f9f48\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 12:39:38.844: INFO: all replica sets need to contain the pod-template-hash label
Aug 31 12:39:38.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77db6f9f48\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 12:39:40.844: INFO: all replica sets need to contain the pod-template-hash label
Aug 31 12:39:40.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77db6f9f48\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 12:39:42.845: INFO: all replica sets need to contain the pod-template-hash label
Aug 31 12:39:42.845: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77db6f9f48\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 12:39:44.844: INFO: all replica sets need to contain the pod-template-hash label
Aug 31 12:39:44.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 12, 39, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 12, 39, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77db6f9f48\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 12:39:46.841: INFO: 
Aug 31 12:39:46.841: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 12:39:46.849: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-1850  05f735f2-a81b-40c1-b47f-d7d88a106be5 32472 2 2022-08-31 12:39:32 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-31 12:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:39:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0061543e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-31 12:39:32 +0000 UTC,LastTransitionTime:2022-08-31 12:39:32 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-77db6f9f48" has successfully progressed.,LastUpdateTime:2022-08-31 12:39:45 +0000 UTC,LastTransitionTime:2022-08-31 12:39:32 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 31 12:39:46.852: INFO: New ReplicaSet "test-rollover-deployment-77db6f9f48" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-77db6f9f48  deployment-1850  7cdd1655-be97-46f5-bfcc-a63b7b0aeb76 32459 2 2022-08-31 12:39:34 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77db6f9f48] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 05f735f2-a81b-40c1-b47f-d7d88a106be5 0xc006154937 0xc006154938}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"05f735f2-a81b-40c1-b47f-d7d88a106be5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:39:45 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 77db6f9f48,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77db6f9f48] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0061549e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:39:46.852: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug 31 12:39:46.852: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-1850  85819c88-7787-4d75-a103-460360beb622 32470 2 2022-08-31 12:39:25 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 05f735f2-a81b-40c1-b47f-d7d88a106be5 0xc0061547f7 0xc0061547f8}] []  [{e2e.test Update apps/v1 2022-08-31 12:39:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:39:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"05f735f2-a81b-40c1-b47f-d7d88a106be5\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:39:45 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0061548b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:39:46.853: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-784bc44b77  deployment-1850  b1f1c269-24cd-4da1-b05c-d418c6c21836 32388 2 2022-08-31 12:39:32 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:784bc44b77] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 05f735f2-a81b-40c1-b47f-d7d88a106be5 0xc006154a57 0xc006154a58}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:39:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"05f735f2-a81b-40c1-b47f-d7d88a106be5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:39:34 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 784bc44b77,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:784bc44b77] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006154b18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:39:46.855: INFO: Pod "test-rollover-deployment-77db6f9f48-wng4t" is available:
&Pod{ObjectMeta:{test-rollover-deployment-77db6f9f48-wng4t test-rollover-deployment-77db6f9f48- deployment-1850  6c5cd892-60d5-4f6c-9d12-5d2c927a2586 32412 0 2022-08-31 12:39:34 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77db6f9f48] map[cni.projectcalico.org/containerID:4a57f5b8b8046126d1ad8ef50c95e9076d1160e131932a5d1f61ca81f24024b2 cni.projectcalico.org/podIP:10.4.131.9/32 cni.projectcalico.org/podIPs:10.4.131.9/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-77db6f9f48 7cdd1655-be97-46f5-bfcc-a63b7b0aeb76 0xc0061551c7 0xc0061551c8}] []  [{kube-controller-manager Update v1 2022-08-31 12:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7cdd1655-be97-46f5-bfcc-a63b7b0aeb76\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 12:39:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 12:39:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.131.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sdk64,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sdk64,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:39:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:39:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:39:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:39:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:10.4.131.9,StartTime:2022-08-31 12:39:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 12:39:35 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://d77a0ad5d0a255a787d478256c7e9584af6308a81906d694dbfcf05ccba11dbf,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.131.9,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:39:46.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1850" for this suite.

• [SLOW TEST:21.220 seconds]
[sig-apps] Deployment
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":346,"completed":184,"skipped":3351,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:39:46.863: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:38
STEP: Setting up data
[It] should support subpaths with configmap pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod pod-subpath-test-configmap-wdg8
STEP: Creating a pod to test atomic-volume-subpath
Aug 31 12:39:47.011: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-wdg8" in namespace "subpath-9321" to be "Succeeded or Failed"
Aug 31 12:39:47.014: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.608121ms
Aug 31 12:39:49.021: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 2.01016602s
Aug 31 12:39:51.027: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 4.015434795s
Aug 31 12:39:53.034: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 6.02237218s
Aug 31 12:39:55.037: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 8.02547933s
Aug 31 12:39:57.044: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 10.033126313s
Aug 31 12:39:59.051: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 12.040188486s
Aug 31 12:40:01.059: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 14.048160664s
Aug 31 12:40:03.069: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 16.057608149s
Aug 31 12:40:05.073: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 18.061750287s
Aug 31 12:40:07.080: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=true. Elapsed: 20.068577343s
Aug 31 12:40:09.087: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Running", Reason="", readiness=false. Elapsed: 22.075781098s
Aug 31 12:40:11.092: INFO: Pod "pod-subpath-test-configmap-wdg8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.080952433s
STEP: Saw pod success
Aug 31 12:40:11.092: INFO: Pod "pod-subpath-test-configmap-wdg8" satisfied condition "Succeeded or Failed"
Aug 31 12:40:11.094: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-subpath-test-configmap-wdg8 container test-container-subpath-configmap-wdg8: <nil>
STEP: delete the pod
Aug 31 12:40:11.108: INFO: Waiting for pod pod-subpath-test-configmap-wdg8 to disappear
Aug 31 12:40:11.110: INFO: Pod pod-subpath-test-configmap-wdg8 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-wdg8
Aug 31 12:40:11.110: INFO: Deleting pod "pod-subpath-test-configmap-wdg8" in namespace "subpath-9321"
[AfterEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:40:11.112: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9321" for this suite.

• [SLOW TEST:24.254 seconds]
[sig-storage] Subpath
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:34
    should support subpaths with configmap pod [Excluded:WindowsDocker] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Excluded:WindowsDocker] [Conformance]","total":346,"completed":185,"skipped":3406,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/sysctl.go:36
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:40:11.118: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-1655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/sysctl.go:65
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:40:15.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-1655" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":346,"completed":186,"skipped":3443,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:40:15.285: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4503
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/rc.go:54
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:40:15.414: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug 31 12:40:17.445: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:40:18.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4503" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":346,"completed":187,"skipped":3449,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:40:18.461: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-92
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-4df083f0-3055-413e-bf89-dafa430f6742
STEP: Creating a pod to test consume configMaps
Aug 31 12:40:18.593: INFO: Waiting up to 5m0s for pod "pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34" in namespace "configmap-92" to be "Succeeded or Failed"
Aug 31 12:40:18.596: INFO: Pod "pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34": Phase="Pending", Reason="", readiness=false. Elapsed: 2.37872ms
Aug 31 12:40:20.599: INFO: Pod "pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005869122s
Aug 31 12:40:22.606: INFO: Pod "pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01300885s
STEP: Saw pod success
Aug 31 12:40:22.606: INFO: Pod "pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34" satisfied condition "Succeeded or Failed"
Aug 31 12:40:22.609: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:40:22.625: INFO: Waiting for pod pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34 to disappear
Aug 31 12:40:22.627: INFO: Pod pod-configmaps-f667eb1f-49f3-45fc-bbc8-f82f96a7bf34 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:40:22.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-92" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":188,"skipped":3449,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:40:22.634: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-5583, will wait for the garbage collector to delete the pods
Aug 31 12:40:24.825: INFO: Deleting Job.batch foo took: 4.218735ms
Aug 31 12:40:24.926: INFO: Terminating Job.batch foo pods took: 100.555728ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:40:57.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5583" for this suite.

• [SLOW TEST:34.505 seconds]
[sig-apps] Job
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":346,"completed":189,"skipped":3461,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:40:57.140: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug 31 12:40:57.282: INFO: observed Pod pod-test in namespace pods-6769 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug 31 12:40:57.286: INFO: observed Pod pod-test in namespace pods-6769 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  }]
Aug 31 12:40:57.295: INFO: observed Pod pod-test in namespace pods-6769 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  }]
Aug 31 12:40:57.690: INFO: observed Pod pod-test in namespace pods-6769 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  }]
Aug 31 12:40:58.104: INFO: Found Pod pod-test in namespace pods-6769 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:58 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:58 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 12:40:57 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
Aug 31 12:40:58.113: INFO: observed event type ADDED
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug 31 12:40:58.128: INFO: observed event type ADDED
Aug 31 12:40:58.128: INFO: observed event type MODIFIED
Aug 31 12:40:58.128: INFO: observed event type MODIFIED
Aug 31 12:40:58.128: INFO: observed event type MODIFIED
Aug 31 12:40:58.128: INFO: observed event type MODIFIED
Aug 31 12:40:58.129: INFO: observed event type MODIFIED
Aug 31 12:40:58.129: INFO: observed event type MODIFIED
Aug 31 12:40:58.129: INFO: observed event type MODIFIED
Aug 31 12:40:59.504: INFO: observed event type MODIFIED
Aug 31 12:41:00.669: INFO: observed event type MODIFIED
Aug 31 12:41:01.116: INFO: observed event type MODIFIED
Aug 31 12:41:01.120: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:01.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6769" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":346,"completed":190,"skipped":3485,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:01.133: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7892
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should be submitted and removed [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug 31 12:41:01.257: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:06.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7892" for this suite.

• [SLOW TEST:5.017 seconds]
[sig-node] Pods
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":346,"completed":191,"skipped":3518,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:06.150: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-640
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name projected-secret-test-5e4dfb4e-bfb9-4deb-b8f7-76b7838cd96b
STEP: Creating a pod to test consume secrets
Aug 31 12:41:06.284: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc" in namespace "projected-640" to be "Succeeded or Failed"
Aug 31 12:41:06.287: INFO: Pod "pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.541921ms
Aug 31 12:41:08.291: INFO: Pod "pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc": Phase="Running", Reason="", readiness=false. Elapsed: 2.006997743s
Aug 31 12:41:10.295: INFO: Pod "pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011061559s
STEP: Saw pod success
Aug 31 12:41:10.295: INFO: Pod "pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc" satisfied condition "Succeeded or Failed"
Aug 31 12:41:10.298: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:41:10.312: INFO: Waiting for pod pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc to disappear
Aug 31 12:41:10.314: INFO: Pod pod-projected-secrets-5eca7048-ad82-415d-8726-53fd0f72b2fc no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:10.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-640" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":192,"skipped":3543,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:10.323: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7735
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should support proxy with --port 0  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: starting the proxy server
Aug 31 12:41:10.450: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-7735 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:10.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7735" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":346,"completed":193,"skipped":3557,"failed":0}
SS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] PodTemplates
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:10.502: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-5709
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create set of pod templates
Aug 31 12:41:10.636: INFO: created test-podtemplate-1
Aug 31 12:41:10.638: INFO: created test-podtemplate-2
Aug 31 12:41:10.640: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug 31 12:41:10.642: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug 31 12:41:10.651: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:10.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-5709" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":346,"completed":194,"skipped":3559,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Service endpoints latency
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:10.658: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-3755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:41:10.781: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: creating replication controller svc-latency-rc in namespace svc-latency-3755
I0831 12:41:10.785516      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3755, replica count: 1
I0831 12:41:11.836931      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0831 12:41:12.837295      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:41:12.947: INFO: Created: latency-svc-dwdcn
Aug 31 12:41:12.959: INFO: Got endpoints: latency-svc-dwdcn [21.638077ms]
Aug 31 12:41:12.968: INFO: Created: latency-svc-5clqs
Aug 31 12:41:12.972: INFO: Created: latency-svc-jct9j
Aug 31 12:41:12.976: INFO: Created: latency-svc-4fchm
Aug 31 12:41:12.982: INFO: Got endpoints: latency-svc-jct9j [22.529784ms]
Aug 31 12:41:12.982: INFO: Got endpoints: latency-svc-5clqs [22.742586ms]
Aug 31 12:41:12.988: INFO: Got endpoints: latency-svc-4fchm [28.805336ms]
Aug 31 12:41:12.990: INFO: Created: latency-svc-58jj8
Aug 31 12:41:12.997: INFO: Created: latency-svc-mqrps
Aug 31 12:41:13.002: INFO: Got endpoints: latency-svc-58jj8 [41.49864ms]
Aug 31 12:41:13.004: INFO: Created: latency-svc-92f8t
Aug 31 12:41:13.010: INFO: Got endpoints: latency-svc-mqrps [49.976109ms]
Aug 31 12:41:13.010: INFO: Created: latency-svc-2ljbt
Aug 31 12:41:13.013: INFO: Got endpoints: latency-svc-92f8t [52.718132ms]
Aug 31 12:41:13.016: INFO: Created: latency-svc-zdtl5
Aug 31 12:41:13.017: INFO: Got endpoints: latency-svc-2ljbt [56.724264ms]
Aug 31 12:41:13.028: INFO: Created: latency-svc-hglhl
Aug 31 12:41:13.028: INFO: Got endpoints: latency-svc-zdtl5 [67.482453ms]
Aug 31 12:41:13.031: INFO: Created: latency-svc-bpwfd
Aug 31 12:41:13.034: INFO: Got endpoints: latency-svc-hglhl [73.554303ms]
Aug 31 12:41:13.042: INFO: Created: latency-svc-d86mj
Aug 31 12:41:13.044: INFO: Got endpoints: latency-svc-bpwfd [83.06168ms]
Aug 31 12:41:13.050: INFO: Created: latency-svc-bx8zm
Aug 31 12:41:13.051: INFO: Got endpoints: latency-svc-d86mj [90.816944ms]
Aug 31 12:41:13.055: INFO: Created: latency-svc-mmxsg
Aug 31 12:41:13.057: INFO: Got endpoints: latency-svc-bx8zm [95.824784ms]
Aug 31 12:41:13.061: INFO: Created: latency-svc-7gh97
Aug 31 12:41:13.065: INFO: Got endpoints: latency-svc-mmxsg [104.599856ms]
Aug 31 12:41:13.069: INFO: Created: latency-svc-rzsdh
Aug 31 12:41:13.070: INFO: Got endpoints: latency-svc-7gh97 [109.432596ms]
Aug 31 12:41:13.076: INFO: Created: latency-svc-xgm7m
Aug 31 12:41:13.078: INFO: Got endpoints: latency-svc-rzsdh [117.206959ms]
Aug 31 12:41:13.086: INFO: Got endpoints: latency-svc-xgm7m [103.384747ms]
Aug 31 12:41:13.086: INFO: Created: latency-svc-b72fg
Aug 31 12:41:13.096: INFO: Got endpoints: latency-svc-b72fg [113.883433ms]
Aug 31 12:41:13.099: INFO: Created: latency-svc-j8zwg
Aug 31 12:41:13.102: INFO: Created: latency-svc-x5bgf
Aug 31 12:41:13.105: INFO: Got endpoints: latency-svc-j8zwg [116.440253ms]
Aug 31 12:41:13.110: INFO: Got endpoints: latency-svc-x5bgf [108.333987ms]
Aug 31 12:41:13.113: INFO: Created: latency-svc-h7vgt
Aug 31 12:41:13.117: INFO: Got endpoints: latency-svc-h7vgt [107.291479ms]
Aug 31 12:41:13.120: INFO: Created: latency-svc-nf56g
Aug 31 12:41:13.121: INFO: Created: latency-svc-6wtnm
Aug 31 12:41:13.127: INFO: Created: latency-svc-bmlr2
Aug 31 12:41:13.128: INFO: Got endpoints: latency-svc-nf56g [114.77414ms]
Aug 31 12:41:13.129: INFO: Got endpoints: latency-svc-6wtnm [112.608922ms]
Aug 31 12:41:13.135: INFO: Created: latency-svc-hcbnp
Aug 31 12:41:13.139: INFO: Got endpoints: latency-svc-bmlr2 [110.669906ms]
Aug 31 12:41:13.142: INFO: Got endpoints: latency-svc-hcbnp [107.48018ms]
Aug 31 12:41:13.143: INFO: Created: latency-svc-kp54x
Aug 31 12:41:13.155: INFO: Got endpoints: latency-svc-kp54x [111.075209ms]
Aug 31 12:41:13.156: INFO: Created: latency-svc-tbj4d
Aug 31 12:41:13.159: INFO: Created: latency-svc-hc8h4
Aug 31 12:41:13.164: INFO: Got endpoints: latency-svc-tbj4d [112.768023ms]
Aug 31 12:41:13.167: INFO: Got endpoints: latency-svc-hc8h4 [110.854307ms]
Aug 31 12:41:13.226: INFO: Created: latency-svc-48d82
Aug 31 12:41:13.226: INFO: Created: latency-svc-ndbnx
Aug 31 12:41:13.226: INFO: Created: latency-svc-bjbbk
Aug 31 12:41:13.226: INFO: Created: latency-svc-fsp7b
Aug 31 12:41:13.228: INFO: Created: latency-svc-pkmz9
Aug 31 12:41:13.228: INFO: Created: latency-svc-9456b
Aug 31 12:41:13.228: INFO: Created: latency-svc-lmp9q
Aug 31 12:41:13.228: INFO: Created: latency-svc-m4hrs
Aug 31 12:41:13.228: INFO: Created: latency-svc-26xwn
Aug 31 12:41:13.228: INFO: Created: latency-svc-njccm
Aug 31 12:41:13.228: INFO: Created: latency-svc-lk4tq
Aug 31 12:41:13.228: INFO: Created: latency-svc-ss7kh
Aug 31 12:41:13.228: INFO: Created: latency-svc-xc4rj
Aug 31 12:41:13.228: INFO: Created: latency-svc-zbxz6
Aug 31 12:41:13.229: INFO: Created: latency-svc-9qjrs
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-48d82 [118.193267ms]
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-pkmz9 [177.12735ms]
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-ndbnx [130.596169ms]
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-9456b [83.876587ms]
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-njccm [170.131293ms]
Aug 31 12:41:13.248: INFO: Got endpoints: latency-svc-26xwn [152.103145ms]
Aug 31 12:41:13.254: INFO: Got endpoints: latency-svc-bjbbk [111.976017ms]
Aug 31 12:41:13.257: INFO: Got endpoints: latency-svc-fsp7b [147.177905ms]
Aug 31 12:41:13.258: INFO: Created: latency-svc-9mgbf
Aug 31 12:41:13.263: INFO: Created: latency-svc-9gfw8
Aug 31 12:41:13.268: INFO: Created: latency-svc-6rm8s
Aug 31 12:41:13.273: INFO: Created: latency-svc-65pdn
Aug 31 12:41:13.276: INFO: Created: latency-svc-gqgkz
Aug 31 12:41:13.281: INFO: Created: latency-svc-h6r24
Aug 31 12:41:13.285: INFO: Created: latency-svc-v5xrq
Aug 31 12:41:13.289: INFO: Created: latency-svc-g7kv8
Aug 31 12:41:13.306: INFO: Got endpoints: latency-svc-m4hrs [167.25717ms]
Aug 31 12:41:13.313: INFO: Created: latency-svc-bn86s
Aug 31 12:41:13.353: INFO: Got endpoints: latency-svc-ss7kh [185.844922ms]
Aug 31 12:41:13.362: INFO: Created: latency-svc-c6bd6
Aug 31 12:41:13.403: INFO: Got endpoints: latency-svc-xc4rj [316.938495ms]
Aug 31 12:41:13.411: INFO: Created: latency-svc-rgnj2
Aug 31 12:41:13.454: INFO: Got endpoints: latency-svc-9qjrs [326.317471ms]
Aug 31 12:41:13.461: INFO: Created: latency-svc-dg4cb
Aug 31 12:41:13.504: INFO: Got endpoints: latency-svc-lk4tq [398.988967ms]
Aug 31 12:41:13.518: INFO: Created: latency-svc-d2rmf
Aug 31 12:41:13.554: INFO: Got endpoints: latency-svc-zbxz6 [399.790473ms]
Aug 31 12:41:13.563: INFO: Created: latency-svc-6gxhs
Aug 31 12:41:13.605: INFO: Got endpoints: latency-svc-lmp9q [539.897621ms]
Aug 31 12:41:13.612: INFO: Created: latency-svc-grhsf
Aug 31 12:41:13.653: INFO: Got endpoints: latency-svc-9mgbf [405.427419ms]
Aug 31 12:41:13.663: INFO: Created: latency-svc-89pfz
Aug 31 12:41:13.703: INFO: Got endpoints: latency-svc-9gfw8 [454.925925ms]
Aug 31 12:41:13.710: INFO: Created: latency-svc-x4s79
Aug 31 12:41:13.757: INFO: Got endpoints: latency-svc-6rm8s [509.425371ms]
Aug 31 12:41:13.765: INFO: Created: latency-svc-vn9wr
Aug 31 12:41:13.804: INFO: Got endpoints: latency-svc-65pdn [555.298447ms]
Aug 31 12:41:13.814: INFO: Created: latency-svc-65mrd
Aug 31 12:41:13.855: INFO: Got endpoints: latency-svc-gqgkz [607.009269ms]
Aug 31 12:41:13.862: INFO: Created: latency-svc-6hh45
Aug 31 12:41:13.903: INFO: Got endpoints: latency-svc-h6r24 [654.975163ms]
Aug 31 12:41:13.911: INFO: Created: latency-svc-2vx5x
Aug 31 12:41:13.953: INFO: Got endpoints: latency-svc-v5xrq [699.79693ms]
Aug 31 12:41:13.962: INFO: Created: latency-svc-dcgwh
Aug 31 12:41:14.005: INFO: Got endpoints: latency-svc-g7kv8 [747.692821ms]
Aug 31 12:41:14.013: INFO: Created: latency-svc-kmrq4
Aug 31 12:41:14.054: INFO: Got endpoints: latency-svc-bn86s [747.967924ms]
Aug 31 12:41:14.061: INFO: Created: latency-svc-wd6wm
Aug 31 12:41:14.103: INFO: Got endpoints: latency-svc-c6bd6 [750.124642ms]
Aug 31 12:41:14.117: INFO: Created: latency-svc-9vwzw
Aug 31 12:41:14.154: INFO: Got endpoints: latency-svc-rgnj2 [750.790747ms]
Aug 31 12:41:14.161: INFO: Created: latency-svc-rpjg6
Aug 31 12:41:14.212: INFO: Got endpoints: latency-svc-dg4cb [757.3158ms]
Aug 31 12:41:14.221: INFO: Created: latency-svc-cd69l
Aug 31 12:41:14.257: INFO: Got endpoints: latency-svc-d2rmf [753.463369ms]
Aug 31 12:41:14.266: INFO: Created: latency-svc-hwdf8
Aug 31 12:41:14.304: INFO: Got endpoints: latency-svc-6gxhs [749.386635ms]
Aug 31 12:41:14.311: INFO: Created: latency-svc-v8wg6
Aug 31 12:41:14.355: INFO: Got endpoints: latency-svc-grhsf [749.157533ms]
Aug 31 12:41:14.366: INFO: Created: latency-svc-xbpq4
Aug 31 12:41:14.406: INFO: Got endpoints: latency-svc-89pfz [753.091766ms]
Aug 31 12:41:14.414: INFO: Created: latency-svc-q7b8g
Aug 31 12:41:14.453: INFO: Got endpoints: latency-svc-x4s79 [750.311443ms]
Aug 31 12:41:14.466: INFO: Created: latency-svc-6l99n
Aug 31 12:41:14.504: INFO: Got endpoints: latency-svc-vn9wr [746.31301ms]
Aug 31 12:41:14.510: INFO: Created: latency-svc-hzx42
Aug 31 12:41:14.554: INFO: Got endpoints: latency-svc-65mrd [749.800939ms]
Aug 31 12:41:14.562: INFO: Created: latency-svc-t97nk
Aug 31 12:41:14.604: INFO: Got endpoints: latency-svc-6hh45 [748.310726ms]
Aug 31 12:41:14.612: INFO: Created: latency-svc-96zr8
Aug 31 12:41:14.653: INFO: Got endpoints: latency-svc-2vx5x [750.146541ms]
Aug 31 12:41:14.661: INFO: Created: latency-svc-msscd
Aug 31 12:41:14.704: INFO: Got endpoints: latency-svc-dcgwh [750.585445ms]
Aug 31 12:41:14.712: INFO: Created: latency-svc-zqrls
Aug 31 12:41:14.753: INFO: Got endpoints: latency-svc-kmrq4 [748.072424ms]
Aug 31 12:41:14.760: INFO: Created: latency-svc-r7gjl
Aug 31 12:41:14.804: INFO: Got endpoints: latency-svc-wd6wm [750.120541ms]
Aug 31 12:41:14.811: INFO: Created: latency-svc-xcbzv
Aug 31 12:41:14.853: INFO: Got endpoints: latency-svc-9vwzw [749.658337ms]
Aug 31 12:41:14.863: INFO: Created: latency-svc-7xrm9
Aug 31 12:41:14.903: INFO: Got endpoints: latency-svc-rpjg6 [749.624337ms]
Aug 31 12:41:14.915: INFO: Created: latency-svc-qvmmn
Aug 31 12:41:14.955: INFO: Got endpoints: latency-svc-cd69l [743.407186ms]
Aug 31 12:41:14.963: INFO: Created: latency-svc-hndxx
Aug 31 12:41:15.005: INFO: Got endpoints: latency-svc-hwdf8 [748.000524ms]
Aug 31 12:41:15.013: INFO: Created: latency-svc-j2md8
Aug 31 12:41:15.054: INFO: Got endpoints: latency-svc-v8wg6 [750.274043ms]
Aug 31 12:41:15.062: INFO: Created: latency-svc-f7vsb
Aug 31 12:41:15.103: INFO: Got endpoints: latency-svc-xbpq4 [748.338726ms]
Aug 31 12:41:15.110: INFO: Created: latency-svc-79sc4
Aug 31 12:41:15.163: INFO: Got endpoints: latency-svc-q7b8g [756.275691ms]
Aug 31 12:41:15.181: INFO: Created: latency-svc-x4ws8
Aug 31 12:41:15.205: INFO: Got endpoints: latency-svc-6l99n [751.884755ms]
Aug 31 12:41:15.216: INFO: Created: latency-svc-6fkcs
Aug 31 12:41:15.257: INFO: Got endpoints: latency-svc-hzx42 [753.112365ms]
Aug 31 12:41:15.264: INFO: Created: latency-svc-khbr2
Aug 31 12:41:15.303: INFO: Got endpoints: latency-svc-t97nk [749.493235ms]
Aug 31 12:41:15.312: INFO: Created: latency-svc-8djwg
Aug 31 12:41:15.354: INFO: Got endpoints: latency-svc-96zr8 [749.826938ms]
Aug 31 12:41:15.361: INFO: Created: latency-svc-67cvh
Aug 31 12:41:15.407: INFO: Got endpoints: latency-svc-msscd [753.64937ms]
Aug 31 12:41:15.417: INFO: Created: latency-svc-64nqg
Aug 31 12:41:15.456: INFO: Got endpoints: latency-svc-zqrls [752.209157ms]
Aug 31 12:41:15.464: INFO: Created: latency-svc-nftkr
Aug 31 12:41:15.511: INFO: Got endpoints: latency-svc-r7gjl [757.642802ms]
Aug 31 12:41:15.518: INFO: Created: latency-svc-882mh
Aug 31 12:41:15.553: INFO: Got endpoints: latency-svc-xcbzv [748.86103ms]
Aug 31 12:41:15.563: INFO: Created: latency-svc-sndvk
Aug 31 12:41:15.605: INFO: Got endpoints: latency-svc-7xrm9 [752.260658ms]
Aug 31 12:41:15.616: INFO: Created: latency-svc-mdxvt
Aug 31 12:41:15.655: INFO: Got endpoints: latency-svc-qvmmn [751.425151ms]
Aug 31 12:41:15.663: INFO: Created: latency-svc-dj4pb
Aug 31 12:41:15.705: INFO: Got endpoints: latency-svc-hndxx [749.446835ms]
Aug 31 12:41:15.714: INFO: Created: latency-svc-w2m8p
Aug 31 12:41:15.755: INFO: Got endpoints: latency-svc-j2md8 [749.427435ms]
Aug 31 12:41:15.762: INFO: Created: latency-svc-hshcc
Aug 31 12:41:15.807: INFO: Got endpoints: latency-svc-f7vsb [752.53756ms]
Aug 31 12:41:15.814: INFO: Created: latency-svc-dhcbq
Aug 31 12:41:15.855: INFO: Got endpoints: latency-svc-79sc4 [751.40415ms]
Aug 31 12:41:15.862: INFO: Created: latency-svc-lzqwj
Aug 31 12:41:15.903: INFO: Got endpoints: latency-svc-x4ws8 [740.573362ms]
Aug 31 12:41:15.912: INFO: Created: latency-svc-bfw6g
Aug 31 12:41:15.958: INFO: Got endpoints: latency-svc-6fkcs [752.843362ms]
Aug 31 12:41:15.969: INFO: Created: latency-svc-44g9l
Aug 31 12:41:16.006: INFO: Got endpoints: latency-svc-khbr2 [748.92363ms]
Aug 31 12:41:16.014: INFO: Created: latency-svc-f7l4f
Aug 31 12:41:16.060: INFO: Got endpoints: latency-svc-8djwg [756.545993ms]
Aug 31 12:41:16.067: INFO: Created: latency-svc-cnjg9
Aug 31 12:41:16.105: INFO: Got endpoints: latency-svc-67cvh [751.26065ms]
Aug 31 12:41:16.112: INFO: Created: latency-svc-vsmjk
Aug 31 12:41:16.153: INFO: Got endpoints: latency-svc-64nqg [746.239208ms]
Aug 31 12:41:16.162: INFO: Created: latency-svc-7pfr2
Aug 31 12:41:16.203: INFO: Got endpoints: latency-svc-nftkr [746.295709ms]
Aug 31 12:41:16.210: INFO: Created: latency-svc-vps7w
Aug 31 12:41:16.255: INFO: Got endpoints: latency-svc-882mh [743.730888ms]
Aug 31 12:41:16.261: INFO: Created: latency-svc-w525q
Aug 31 12:41:16.303: INFO: Got endpoints: latency-svc-sndvk [750.08034ms]
Aug 31 12:41:16.312: INFO: Created: latency-svc-9n8mp
Aug 31 12:41:16.353: INFO: Got endpoints: latency-svc-mdxvt [748.008123ms]
Aug 31 12:41:16.361: INFO: Created: latency-svc-tvw7z
Aug 31 12:41:16.405: INFO: Got endpoints: latency-svc-dj4pb [750.247641ms]
Aug 31 12:41:16.413: INFO: Created: latency-svc-sbh6d
Aug 31 12:41:16.453: INFO: Got endpoints: latency-svc-w2m8p [748.783729ms]
Aug 31 12:41:16.460: INFO: Created: latency-svc-qvxv4
Aug 31 12:41:16.503: INFO: Got endpoints: latency-svc-hshcc [748.052023ms]
Aug 31 12:41:16.510: INFO: Created: latency-svc-pvt2p
Aug 31 12:41:16.557: INFO: Got endpoints: latency-svc-dhcbq [750.523543ms]
Aug 31 12:41:16.565: INFO: Created: latency-svc-jb9ss
Aug 31 12:41:16.605: INFO: Got endpoints: latency-svc-lzqwj [750.657944ms]
Aug 31 12:41:16.612: INFO: Created: latency-svc-4lzl2
Aug 31 12:41:16.654: INFO: Got endpoints: latency-svc-bfw6g [751.127447ms]
Aug 31 12:41:16.666: INFO: Created: latency-svc-tnbl4
Aug 31 12:41:16.704: INFO: Got endpoints: latency-svc-44g9l [745.560502ms]
Aug 31 12:41:16.710: INFO: Created: latency-svc-jzzlw
Aug 31 12:41:16.753: INFO: Got endpoints: latency-svc-f7l4f [747.070615ms]
Aug 31 12:41:16.760: INFO: Created: latency-svc-ll6gd
Aug 31 12:41:16.803: INFO: Got endpoints: latency-svc-cnjg9 [743.435185ms]
Aug 31 12:41:16.811: INFO: Created: latency-svc-44tz8
Aug 31 12:41:16.854: INFO: Got endpoints: latency-svc-vsmjk [748.799129ms]
Aug 31 12:41:16.863: INFO: Created: latency-svc-kf25v
Aug 31 12:41:16.904: INFO: Got endpoints: latency-svc-7pfr2 [750.153639ms]
Aug 31 12:41:16.918: INFO: Created: latency-svc-kjtzh
Aug 31 12:41:16.954: INFO: Got endpoints: latency-svc-vps7w [750.794345ms]
Aug 31 12:41:16.964: INFO: Created: latency-svc-df7xz
Aug 31 12:41:17.003: INFO: Got endpoints: latency-svc-w525q [748.499326ms]
Aug 31 12:41:17.010: INFO: Created: latency-svc-ttdmj
Aug 31 12:41:17.054: INFO: Got endpoints: latency-svc-9n8mp [750.995447ms]
Aug 31 12:41:17.062: INFO: Created: latency-svc-frjsj
Aug 31 12:41:17.107: INFO: Got endpoints: latency-svc-tvw7z [752.928363ms]
Aug 31 12:41:17.114: INFO: Created: latency-svc-t2zfk
Aug 31 12:41:17.153: INFO: Got endpoints: latency-svc-sbh6d [747.675719ms]
Aug 31 12:41:17.161: INFO: Created: latency-svc-svqqf
Aug 31 12:41:17.203: INFO: Got endpoints: latency-svc-qvxv4 [749.962638ms]
Aug 31 12:41:17.212: INFO: Created: latency-svc-8wxcn
Aug 31 12:41:17.253: INFO: Got endpoints: latency-svc-pvt2p [750.101739ms]
Aug 31 12:41:17.262: INFO: Created: latency-svc-ck9hn
Aug 31 12:41:17.303: INFO: Got endpoints: latency-svc-jb9ss [745.520101ms]
Aug 31 12:41:17.312: INFO: Created: latency-svc-29l4v
Aug 31 12:41:17.353: INFO: Got endpoints: latency-svc-4lzl2 [748.150023ms]
Aug 31 12:41:17.362: INFO: Created: latency-svc-ggd2l
Aug 31 12:41:17.403: INFO: Got endpoints: latency-svc-tnbl4 [748.900329ms]
Aug 31 12:41:17.410: INFO: Created: latency-svc-6kcnz
Aug 31 12:41:17.453: INFO: Got endpoints: latency-svc-jzzlw [749.291332ms]
Aug 31 12:41:17.461: INFO: Created: latency-svc-mwrcb
Aug 31 12:41:17.508: INFO: Got endpoints: latency-svc-ll6gd [755.619284ms]
Aug 31 12:41:17.517: INFO: Created: latency-svc-qxrqp
Aug 31 12:41:17.553: INFO: Got endpoints: latency-svc-44tz8 [750.057239ms]
Aug 31 12:41:17.561: INFO: Created: latency-svc-gmwqh
Aug 31 12:41:17.605: INFO: Got endpoints: latency-svc-kf25v [750.767344ms]
Aug 31 12:41:17.616: INFO: Created: latency-svc-4c4nh
Aug 31 12:41:17.653: INFO: Got endpoints: latency-svc-kjtzh [749.779036ms]
Aug 31 12:41:17.669: INFO: Created: latency-svc-c5hln
Aug 31 12:41:17.707: INFO: Got endpoints: latency-svc-df7xz [753.650068ms]
Aug 31 12:41:17.714: INFO: Created: latency-svc-2hhdh
Aug 31 12:41:17.756: INFO: Got endpoints: latency-svc-ttdmj [752.673259ms]
Aug 31 12:41:17.763: INFO: Created: latency-svc-cmklg
Aug 31 12:41:17.804: INFO: Got endpoints: latency-svc-frjsj [749.083331ms]
Aug 31 12:41:17.811: INFO: Created: latency-svc-zc98x
Aug 31 12:41:17.855: INFO: Got endpoints: latency-svc-t2zfk [748.326324ms]
Aug 31 12:41:17.861: INFO: Created: latency-svc-lmcfr
Aug 31 12:41:17.904: INFO: Got endpoints: latency-svc-svqqf [751.509151ms]
Aug 31 12:41:17.912: INFO: Created: latency-svc-t5qpn
Aug 31 12:41:17.953: INFO: Got endpoints: latency-svc-8wxcn [749.786136ms]
Aug 31 12:41:17.969: INFO: Created: latency-svc-pbksd
Aug 31 12:41:18.005: INFO: Got endpoints: latency-svc-ck9hn [751.874554ms]
Aug 31 12:41:18.012: INFO: Created: latency-svc-9brkp
Aug 31 12:41:18.056: INFO: Got endpoints: latency-svc-29l4v [752.67606ms]
Aug 31 12:41:18.063: INFO: Created: latency-svc-vgrcl
Aug 31 12:41:18.104: INFO: Got endpoints: latency-svc-ggd2l [750.377641ms]
Aug 31 12:41:18.115: INFO: Created: latency-svc-z5hmz
Aug 31 12:41:18.154: INFO: Got endpoints: latency-svc-6kcnz [750.539442ms]
Aug 31 12:41:18.161: INFO: Created: latency-svc-8znjp
Aug 31 12:41:18.203: INFO: Got endpoints: latency-svc-mwrcb [750.439241ms]
Aug 31 12:41:18.213: INFO: Created: latency-svc-4bw6s
Aug 31 12:41:18.256: INFO: Got endpoints: latency-svc-qxrqp [747.677118ms]
Aug 31 12:41:18.263: INFO: Created: latency-svc-w8sn8
Aug 31 12:41:18.307: INFO: Got endpoints: latency-svc-gmwqh [753.417466ms]
Aug 31 12:41:18.315: INFO: Created: latency-svc-5n8k6
Aug 31 12:41:18.356: INFO: Got endpoints: latency-svc-4c4nh [751.418749ms]
Aug 31 12:41:18.362: INFO: Created: latency-svc-xhlfm
Aug 31 12:41:18.403: INFO: Got endpoints: latency-svc-c5hln [749.737536ms]
Aug 31 12:41:18.412: INFO: Created: latency-svc-gh5wb
Aug 31 12:41:18.455: INFO: Got endpoints: latency-svc-2hhdh [747.502717ms]
Aug 31 12:41:18.462: INFO: Created: latency-svc-cm7xf
Aug 31 12:41:18.505: INFO: Got endpoints: latency-svc-cmklg [748.753427ms]
Aug 31 12:41:18.512: INFO: Created: latency-svc-5lxpc
Aug 31 12:41:18.558: INFO: Got endpoints: latency-svc-zc98x [754.252172ms]
Aug 31 12:41:18.565: INFO: Created: latency-svc-b7d2c
Aug 31 12:41:18.603: INFO: Got endpoints: latency-svc-lmcfr [748.027421ms]
Aug 31 12:41:18.612: INFO: Created: latency-svc-2blsb
Aug 31 12:41:18.653: INFO: Got endpoints: latency-svc-t5qpn [748.397124ms]
Aug 31 12:41:18.664: INFO: Created: latency-svc-hfddm
Aug 31 12:41:18.704: INFO: Got endpoints: latency-svc-pbksd [751.162947ms]
Aug 31 12:41:18.712: INFO: Created: latency-svc-79ks6
Aug 31 12:41:18.753: INFO: Got endpoints: latency-svc-9brkp [748.439324ms]
Aug 31 12:41:18.765: INFO: Created: latency-svc-5sq4w
Aug 31 12:41:18.803: INFO: Got endpoints: latency-svc-vgrcl [747.619718ms]
Aug 31 12:41:18.811: INFO: Created: latency-svc-64vbf
Aug 31 12:41:18.857: INFO: Got endpoints: latency-svc-z5hmz [752.886061ms]
Aug 31 12:41:18.864: INFO: Created: latency-svc-ddxzh
Aug 31 12:41:18.904: INFO: Got endpoints: latency-svc-8znjp [750.304339ms]
Aug 31 12:41:18.914: INFO: Created: latency-svc-t2hjm
Aug 31 12:41:18.955: INFO: Got endpoints: latency-svc-4bw6s [751.212547ms]
Aug 31 12:41:18.963: INFO: Created: latency-svc-qsj92
Aug 31 12:41:19.006: INFO: Got endpoints: latency-svc-w8sn8 [749.590334ms]
Aug 31 12:41:19.013: INFO: Created: latency-svc-l7zkn
Aug 31 12:41:19.056: INFO: Got endpoints: latency-svc-5n8k6 [749.617034ms]
Aug 31 12:41:19.064: INFO: Created: latency-svc-cvrqq
Aug 31 12:41:19.105: INFO: Got endpoints: latency-svc-xhlfm [749.268331ms]
Aug 31 12:41:19.114: INFO: Created: latency-svc-9rqgb
Aug 31 12:41:19.153: INFO: Got endpoints: latency-svc-gh5wb [750.117638ms]
Aug 31 12:41:19.161: INFO: Created: latency-svc-cvb44
Aug 31 12:41:19.204: INFO: Got endpoints: latency-svc-cm7xf [748.950629ms]
Aug 31 12:41:19.214: INFO: Created: latency-svc-dvctm
Aug 31 12:41:19.257: INFO: Got endpoints: latency-svc-5lxpc [751.829352ms]
Aug 31 12:41:19.264: INFO: Created: latency-svc-qnt7m
Aug 31 12:41:19.305: INFO: Got endpoints: latency-svc-b7d2c [746.73751ms]
Aug 31 12:41:19.314: INFO: Created: latency-svc-s4tz9
Aug 31 12:41:19.358: INFO: Got endpoints: latency-svc-2blsb [754.849976ms]
Aug 31 12:41:19.365: INFO: Created: latency-svc-mbp26
Aug 31 12:41:19.406: INFO: Got endpoints: latency-svc-hfddm [753.583967ms]
Aug 31 12:41:19.413: INFO: Created: latency-svc-qnrvx
Aug 31 12:41:19.454: INFO: Got endpoints: latency-svc-79ks6 [749.264231ms]
Aug 31 12:41:19.461: INFO: Created: latency-svc-sdv4b
Aug 31 12:41:19.503: INFO: Got endpoints: latency-svc-5sq4w [749.412632ms]
Aug 31 12:41:19.512: INFO: Created: latency-svc-d96bt
Aug 31 12:41:19.553: INFO: Got endpoints: latency-svc-64vbf [749.725134ms]
Aug 31 12:41:19.562: INFO: Created: latency-svc-tvvxl
Aug 31 12:41:19.604: INFO: Got endpoints: latency-svc-ddxzh [747.378015ms]
Aug 31 12:41:19.611: INFO: Created: latency-svc-frznx
Aug 31 12:41:19.653: INFO: Got endpoints: latency-svc-t2hjm [748.792626ms]
Aug 31 12:41:19.664: INFO: Created: latency-svc-bqwrl
Aug 31 12:41:19.704: INFO: Got endpoints: latency-svc-qsj92 [749.390631ms]
Aug 31 12:41:19.712: INFO: Created: latency-svc-v6ttv
Aug 31 12:41:19.754: INFO: Got endpoints: latency-svc-l7zkn [747.710018ms]
Aug 31 12:41:19.761: INFO: Created: latency-svc-lkfz7
Aug 31 12:41:19.811: INFO: Got endpoints: latency-svc-cvrqq [754.204171ms]
Aug 31 12:41:19.818: INFO: Created: latency-svc-587qr
Aug 31 12:41:19.853: INFO: Got endpoints: latency-svc-9rqgb [747.684618ms]
Aug 31 12:41:19.862: INFO: Created: latency-svc-zv247
Aug 31 12:41:19.904: INFO: Got endpoints: latency-svc-cvb44 [751.080246ms]
Aug 31 12:41:19.917: INFO: Created: latency-svc-5k6jp
Aug 31 12:41:19.953: INFO: Got endpoints: latency-svc-dvctm [749.363331ms]
Aug 31 12:41:19.968: INFO: Created: latency-svc-6tcg7
Aug 31 12:41:20.003: INFO: Got endpoints: latency-svc-qnt7m [746.673509ms]
Aug 31 12:41:20.013: INFO: Created: latency-svc-bvdmd
Aug 31 12:41:20.056: INFO: Got endpoints: latency-svc-s4tz9 [751.188846ms]
Aug 31 12:41:20.063: INFO: Created: latency-svc-lqrnj
Aug 31 12:41:20.104: INFO: Got endpoints: latency-svc-mbp26 [746.031304ms]
Aug 31 12:41:20.113: INFO: Created: latency-svc-ktpxw
Aug 31 12:41:20.158: INFO: Got endpoints: latency-svc-qnrvx [751.178946ms]
Aug 31 12:41:20.166: INFO: Created: latency-svc-56ckr
Aug 31 12:41:20.204: INFO: Got endpoints: latency-svc-sdv4b [750.079537ms]
Aug 31 12:41:20.211: INFO: Created: latency-svc-mmz9g
Aug 31 12:41:20.254: INFO: Got endpoints: latency-svc-d96bt [751.490249ms]
Aug 31 12:41:20.264: INFO: Created: latency-svc-vmz4f
Aug 31 12:41:20.306: INFO: Got endpoints: latency-svc-tvvxl [753.321863ms]
Aug 31 12:41:20.315: INFO: Created: latency-svc-2kdlr
Aug 31 12:41:20.354: INFO: Got endpoints: latency-svc-frznx [749.678034ms]
Aug 31 12:41:20.362: INFO: Created: latency-svc-fqlbr
Aug 31 12:41:20.407: INFO: Got endpoints: latency-svc-bqwrl [754.348972ms]
Aug 31 12:41:20.415: INFO: Created: latency-svc-qqgj7
Aug 31 12:41:20.453: INFO: Got endpoints: latency-svc-v6ttv [748.760727ms]
Aug 31 12:41:20.461: INFO: Created: latency-svc-lkxst
Aug 31 12:41:20.503: INFO: Got endpoints: latency-svc-lkfz7 [749.26003ms]
Aug 31 12:41:20.512: INFO: Created: latency-svc-rpk2f
Aug 31 12:41:20.555: INFO: Got endpoints: latency-svc-587qr [744.213189ms]
Aug 31 12:41:20.561: INFO: Created: latency-svc-v7xqc
Aug 31 12:41:20.609: INFO: Got endpoints: latency-svc-zv247 [756.218887ms]
Aug 31 12:41:20.616: INFO: Created: latency-svc-7z99c
Aug 31 12:41:20.653: INFO: Got endpoints: latency-svc-5k6jp [748.569724ms]
Aug 31 12:41:20.661: INFO: Created: latency-svc-vxwjx
Aug 31 12:41:20.703: INFO: Got endpoints: latency-svc-6tcg7 [749.762234ms]
Aug 31 12:41:20.718: INFO: Created: latency-svc-rft8c
Aug 31 12:41:20.754: INFO: Got endpoints: latency-svc-bvdmd [750.815943ms]
Aug 31 12:41:20.762: INFO: Created: latency-svc-jtwnj
Aug 31 12:41:20.803: INFO: Got endpoints: latency-svc-lqrnj [746.84211ms]
Aug 31 12:41:20.856: INFO: Got endpoints: latency-svc-ktpxw [752.256554ms]
Aug 31 12:41:20.903: INFO: Got endpoints: latency-svc-56ckr [745.455899ms]
Aug 31 12:41:20.958: INFO: Got endpoints: latency-svc-mmz9g [753.911868ms]
Aug 31 12:41:21.004: INFO: Got endpoints: latency-svc-vmz4f [749.23633ms]
Aug 31 12:41:21.057: INFO: Got endpoints: latency-svc-2kdlr [750.207638ms]
Aug 31 12:41:21.103: INFO: Got endpoints: latency-svc-fqlbr [749.047928ms]
Aug 31 12:41:21.153: INFO: Got endpoints: latency-svc-qqgj7 [745.6724ms]
Aug 31 12:41:21.204: INFO: Got endpoints: latency-svc-lkxst [751.398847ms]
Aug 31 12:41:21.257: INFO: Got endpoints: latency-svc-rpk2f [753.514065ms]
Aug 31 12:41:21.304: INFO: Got endpoints: latency-svc-v7xqc [749.090828ms]
Aug 31 12:41:21.353: INFO: Got endpoints: latency-svc-7z99c [743.756985ms]
Aug 31 12:41:21.404: INFO: Got endpoints: latency-svc-vxwjx [750.781242ms]
Aug 31 12:41:21.455: INFO: Got endpoints: latency-svc-rft8c [751.73705ms]
Aug 31 12:41:21.503: INFO: Got endpoints: latency-svc-jtwnj [748.885727ms]
Aug 31 12:41:21.503: INFO: Latencies: [22.529784ms 22.742586ms 28.805336ms 41.49864ms 49.976109ms 52.718132ms 56.724264ms 67.482453ms 73.554303ms 83.06168ms 83.876587ms 90.816944ms 95.824784ms 103.384747ms 104.599856ms 107.291479ms 107.48018ms 108.333987ms 109.432596ms 110.669906ms 110.854307ms 111.075209ms 111.976017ms 112.608922ms 112.768023ms 113.883433ms 114.77414ms 116.440253ms 117.206959ms 118.193267ms 130.596169ms 147.177905ms 152.103145ms 167.25717ms 170.131293ms 177.12735ms 185.844922ms 316.938495ms 326.317471ms 398.988967ms 399.790473ms 405.427419ms 454.925925ms 509.425371ms 539.897621ms 555.298447ms 607.009269ms 654.975163ms 699.79693ms 740.573362ms 743.407186ms 743.435185ms 743.730888ms 743.756985ms 744.213189ms 745.455899ms 745.520101ms 745.560502ms 745.6724ms 746.031304ms 746.239208ms 746.295709ms 746.31301ms 746.673509ms 746.73751ms 746.84211ms 747.070615ms 747.378015ms 747.502717ms 747.619718ms 747.675719ms 747.677118ms 747.684618ms 747.692821ms 747.710018ms 747.967924ms 748.000524ms 748.008123ms 748.027421ms 748.052023ms 748.072424ms 748.150023ms 748.310726ms 748.326324ms 748.338726ms 748.397124ms 748.439324ms 748.499326ms 748.569724ms 748.753427ms 748.760727ms 748.783729ms 748.792626ms 748.799129ms 748.86103ms 748.885727ms 748.900329ms 748.92363ms 748.950629ms 749.047928ms 749.083331ms 749.090828ms 749.157533ms 749.23633ms 749.26003ms 749.264231ms 749.268331ms 749.291332ms 749.363331ms 749.386635ms 749.390631ms 749.412632ms 749.427435ms 749.446835ms 749.493235ms 749.590334ms 749.617034ms 749.624337ms 749.658337ms 749.678034ms 749.725134ms 749.737536ms 749.762234ms 749.779036ms 749.786136ms 749.800939ms 749.826938ms 749.962638ms 750.057239ms 750.079537ms 750.08034ms 750.101739ms 750.117638ms 750.120541ms 750.124642ms 750.146541ms 750.153639ms 750.207638ms 750.247641ms 750.274043ms 750.304339ms 750.311443ms 750.377641ms 750.439241ms 750.523543ms 750.539442ms 750.585445ms 750.657944ms 750.767344ms 750.781242ms 750.790747ms 750.794345ms 750.815943ms 750.995447ms 751.080246ms 751.127447ms 751.162947ms 751.178946ms 751.188846ms 751.212547ms 751.26065ms 751.398847ms 751.40415ms 751.418749ms 751.425151ms 751.490249ms 751.509151ms 751.73705ms 751.829352ms 751.874554ms 751.884755ms 752.209157ms 752.256554ms 752.260658ms 752.53756ms 752.673259ms 752.67606ms 752.843362ms 752.886061ms 752.928363ms 753.091766ms 753.112365ms 753.321863ms 753.417466ms 753.463369ms 753.514065ms 753.583967ms 753.64937ms 753.650068ms 753.911868ms 754.204171ms 754.252172ms 754.348972ms 754.849976ms 755.619284ms 756.218887ms 756.275691ms 756.545993ms 757.3158ms 757.642802ms]
Aug 31 12:41:21.503: INFO: 50 %ile: 749.083331ms
Aug 31 12:41:21.503: INFO: 90 %ile: 753.091766ms
Aug 31 12:41:21.503: INFO: 99 %ile: 757.3158ms
Aug 31 12:41:21.503: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:21.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-3755" for this suite.

• [SLOW TEST:10.856 seconds]
[sig-network] Service endpoints latency
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":346,"completed":195,"skipped":3599,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:21.514: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9961
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test substitution in container's args
Aug 31 12:41:21.646: INFO: Waiting up to 5m0s for pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138" in namespace "var-expansion-9961" to be "Succeeded or Failed"
Aug 31 12:41:21.648: INFO: Pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138": Phase="Pending", Reason="", readiness=false. Elapsed: 2.285018ms
Aug 31 12:41:23.653: INFO: Pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138": Phase="Running", Reason="", readiness=true. Elapsed: 2.007347819s
Aug 31 12:41:25.658: INFO: Pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138": Phase="Running", Reason="", readiness=false. Elapsed: 4.012422016s
Aug 31 12:41:27.669: INFO: Pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022810953s
STEP: Saw pod success
Aug 31 12:41:27.669: INFO: Pod "var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138" satisfied condition "Succeeded or Failed"
Aug 31 12:41:27.672: INFO: Trying to get logs from node nodepool-qycy5-000001 pod var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138 container dapi-container: <nil>
STEP: delete the pod
Aug 31 12:41:27.683: INFO: Waiting for pod var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138 to disappear
Aug 31 12:41:27.687: INFO: Pod var-expansion-9b7a2480-4e0b-44fd-b5fb-aaf811e66138 no longer exists
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:27.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9961" for this suite.

• [SLOW TEST:6.181 seconds]
[sig-node] Variable Expansion
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":346,"completed":196,"skipped":3615,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:27.696: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4953
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-map-b7e0d5f5-de2f-45d4-b673-3c1009989ff6
STEP: Creating a pod to test consume configMaps
Aug 31 12:41:27.847: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01" in namespace "projected-4953" to be "Succeeded or Failed"
Aug 31 12:41:27.850: INFO: Pod "pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01": Phase="Pending", Reason="", readiness=false. Elapsed: 3.459928ms
Aug 31 12:41:29.858: INFO: Pod "pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010968538s
Aug 31 12:41:31.861: INFO: Pod "pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014530612s
STEP: Saw pod success
Aug 31 12:41:31.861: INFO: Pod "pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01" satisfied condition "Succeeded or Failed"
Aug 31 12:41:31.863: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:41:31.875: INFO: Waiting for pod pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01 to disappear
Aug 31 12:41:31.878: INFO: Pod pod-projected-configmaps-c169f68f-54da-4237-99ba-b401e85ccc01 no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:31.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4953" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":346,"completed":197,"skipped":3624,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:31.885: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-636
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should serve multiport endpoints from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service multi-endpoint-test in namespace services-636
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-636 to expose endpoints map[]
Aug 31 12:41:32.129: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:33.133: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:34.133: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:35.132: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:36.133: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:37.133: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:38.133: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 31 12:41:39.138: INFO: successfully validated that service multi-endpoint-test in namespace services-636 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-636
Aug 31 12:41:39.150: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:41:41.155: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-636 to expose endpoints map[pod1:[100]]
Aug 31 12:41:41.164: INFO: successfully validated that service multi-endpoint-test in namespace services-636 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-636
Aug 31 12:41:41.173: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:41:43.179: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-636 to expose endpoints map[pod1:[100] pod2:[101]]
Aug 31 12:41:43.190: INFO: successfully validated that service multi-endpoint-test in namespace services-636 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug 31 12:41:43.190: INFO: Creating new exec pod
Aug 31 12:41:46.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-636 exec execpod4xdqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug 31 12:41:46.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug 31 12:41:46.325: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:41:46.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-636 exec execpod4xdqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.237.148 80'
Aug 31 12:41:46.438: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.237.148 80\nConnection to 172.31.237.148 80 port [tcp/http] succeeded!\n"
Aug 31 12:41:46.438: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:41:46.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-636 exec execpod4xdqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug 31 12:41:46.551: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug 31 12:41:46.551: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:41:46.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-636 exec execpod4xdqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.237.148 81'
Aug 31 12:41:46.659: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.237.148 81\nConnection to 172.31.237.148 81 port [tcp/*] succeeded!\n"
Aug 31 12:41:46.659: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-636
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-636 to expose endpoints map[pod2:[101]]
Aug 31 12:41:47.687: INFO: successfully validated that service multi-endpoint-test in namespace services-636 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-636
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-636 to expose endpoints map[]
Aug 31 12:41:48.715: INFO: successfully validated that service multi-endpoint-test in namespace services-636 exposes endpoints map[]
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:48.724: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-636" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:16.849 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":346,"completed":198,"skipped":3650,"failed":0}
SSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] PreStop
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:48.734: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-4146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/pre_stop.go:157
[It] should call prestop when killing a pod  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating server pod server in namespace prestop-4146
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-4146
STEP: Deleting pre-stop pod
Aug 31 12:41:57.919: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:41:57.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-4146" for this suite.

• [SLOW TEST:9.207 seconds]
[sig-node] PreStop
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":346,"completed":199,"skipped":3655,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:41:57.944: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5709
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:41:58.067: INFO: Creating deployment "test-recreate-deployment"
Aug 31 12:41:58.070: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug 31 12:41:58.075: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
Aug 31 12:42:00.082: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug 31 12:42:00.084: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug 31 12:42:00.091: INFO: Updating deployment test-recreate-deployment
Aug 31 12:42:00.091: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 12:42:00.184: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-5709  d85cc168-dc17-4b74-831f-96f4b47c29c1 35412 2 2022-08-31 12:41:58 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002efa358 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-31 12:42:00 +0000 UTC,LastTransitionTime:2022-08-31 12:42:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-5b99bd5487" is progressing.,LastUpdateTime:2022-08-31 12:42:00 +0000 UTC,LastTransitionTime:2022-08-31 12:41:58 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug 31 12:42:00.187: INFO: New ReplicaSet "test-recreate-deployment-5b99bd5487" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-5b99bd5487  deployment-5709  f0bddc50-b177-4d98-be45-466431878fee 35411 1 2022-08-31 12:42:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:5b99bd5487] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment d85cc168-dc17-4b74-831f-96f4b47c29c1 0xc000a9a0b7 0xc000a9a0b8}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d85cc168-dc17-4b74-831f-96f4b47c29c1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 5b99bd5487,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:5b99bd5487] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000a9a1c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:42:00.187: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug 31 12:42:00.187: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-594f666cd9  deployment-5709  8d047422-c153-4990-a089-974bd2f18b99 35400 2 2022-08-31 12:41:58 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:594f666cd9] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment d85cc168-dc17-4b74-831f-96f4b47c29c1 0xc002007f77 0xc002007f78}] []  [{kube-controller-manager Update apps/v1 2022-08-31 12:41:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d85cc168-dc17-4b74-831f-96f4b47c29c1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 594f666cd9,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:594f666cd9] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000a9a028 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 31 12:42:00.189: INFO: Pod "test-recreate-deployment-5b99bd5487-h5w4s" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-5b99bd5487-h5w4s test-recreate-deployment-5b99bd5487- deployment-5709  02de2b72-844d-4ab6-94c7-fff0da73fc07 35410 0 2022-08-31 12:42:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:5b99bd5487] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-5b99bd5487 f0bddc50-b177-4d98-be45-466431878fee 0xc0009996f7 0xc0009996f8}] []  [{kube-controller-manager Update v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0bddc50-b177-4d98-be45-466431878fee\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qgcb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qgcb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:42:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:42:00 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:42:00 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 12:42:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.5,PodIP:,StartTime:2022-08-31 12:42:00 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:42:00.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5709" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":346,"completed":200,"skipped":3662,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:42:00.195: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9858
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should complete a service status lifecycle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a Service
STEP: watching for the Service to be added
Aug 31 12:42:00.350: INFO: Found Service test-service-7fbcn in namespace services-9858 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug 31 12:42:00.350: INFO: Service test-service-7fbcn created
STEP: Getting /status
Aug 31 12:42:00.356: INFO: Service test-service-7fbcn has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug 31 12:42:00.365: INFO: observed Service test-service-7fbcn in namespace services-9858 with annotations: map[] & LoadBalancer: {[]}
Aug 31 12:42:00.365: INFO: Found Service test-service-7fbcn in namespace services-9858 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug 31 12:42:00.365: INFO: Service test-service-7fbcn has service status patched
STEP: updating the ServiceStatus
Aug 31 12:42:00.373: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug 31 12:42:00.375: INFO: Observed Service test-service-7fbcn in namespace services-9858 with annotations: map[] & Conditions: {[]}
Aug 31 12:42:00.375: INFO: Observed event: &Service{ObjectMeta:{test-service-7fbcn  services-9858  c9a6a75c-c18b-46fb-ab1f-7f7d80b42f3e 35422 0 2022-08-31 12:42:00 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-31 12:42:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:172.31.221.56,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[172.31.221.56],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug 31 12:42:00.375: INFO: Found Service test-service-7fbcn in namespace services-9858 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 31 12:42:00.375: INFO: Service test-service-7fbcn has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug 31 12:42:00.450: INFO: observed Service test-service-7fbcn in namespace services-9858 with labels: map[test-service-static:true]
Aug 31 12:42:00.450: INFO: observed Service test-service-7fbcn in namespace services-9858 with labels: map[test-service-static:true]
Aug 31 12:42:00.450: INFO: observed Service test-service-7fbcn in namespace services-9858 with labels: map[test-service-static:true]
Aug 31 12:42:00.450: INFO: Found Service test-service-7fbcn in namespace services-9858 with labels: map[test-service:patched test-service-static:true]
Aug 31 12:42:00.450: INFO: Service test-service-7fbcn patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug 31 12:42:00.461: INFO: Observed event: ADDED
Aug 31 12:42:00.461: INFO: Observed event: MODIFIED
Aug 31 12:42:00.462: INFO: Observed event: MODIFIED
Aug 31 12:42:00.462: INFO: Observed event: MODIFIED
Aug 31 12:42:00.462: INFO: Found Service test-service-7fbcn in namespace services-9858 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug 31 12:42:00.462: INFO: Service test-service-7fbcn deleted
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:42:00.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9858" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":346,"completed":201,"skipped":3681,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:42:00.470: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with configMap that has name projected-configmap-test-upd-dbda9f35-4b97-4b2b-b564-531b12d9f4a8
STEP: Creating the pod
Aug 31 12:42:00.618: INFO: The status of Pod pod-projected-configmaps-f0753714-1862-4868-89bb-8a4f8599f3e7 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:42:02.626: INFO: The status of Pod pod-projected-configmaps-f0753714-1862-4868-89bb-8a4f8599f3e7 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-dbda9f35-4b97-4b2b-b564-531b12d9f4a8
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:08.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1583" for this suite.

• [SLOW TEST:68.401 seconds]
[sig-storage] Projected configMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":202,"skipped":3726,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:08.873: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2682
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should run and stop complex daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:43:09.013: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug 31 12:43:09.018: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:09.018: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug 31 12:43:09.034: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:09.034: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:10.037: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:10.037: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:11.038: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 31 12:43:11.038: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug 31 12:43:11.053: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 31 12:43:11.053: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug 31 12:43:12.059: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:12.059: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug 31 12:43:12.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:12.071: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:13.077: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:13.077: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:14.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:14.075: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:15.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:15.076: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 12:43:16.077: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 31 12:43:16.077: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2682, will wait for the garbage collector to delete the pods
Aug 31 12:43:16.138: INFO: Deleting DaemonSet.extensions daemon-set took: 4.602237ms
Aug 31 12:43:16.238: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.585214ms
Aug 31 12:43:18.548: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 12:43:18.548: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 12:43:18.550: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35923"},"items":null}

Aug 31 12:43:18.552: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35923"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:18.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2682" for this suite.

• [SLOW TEST:9.706 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":346,"completed":203,"skipped":3743,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:18.580: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:29.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3929" for this suite.

• [SLOW TEST:11.223 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":346,"completed":204,"skipped":3837,"failed":0}
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:29.803: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-map-b925922a-f076-4340-bfa7-75939d478cfe
STEP: Creating a pod to test consume configMaps
Aug 31 12:43:29.937: INFO: Waiting up to 5m0s for pod "pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d" in namespace "configmap-5015" to be "Succeeded or Failed"
Aug 31 12:43:29.946: INFO: Pod "pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.371067ms
Aug 31 12:43:31.952: INFO: Pod "pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014386282s
Aug 31 12:43:33.970: INFO: Pod "pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032806194s
STEP: Saw pod success
Aug 31 12:43:33.970: INFO: Pod "pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d" satisfied condition "Succeeded or Failed"
Aug 31 12:43:33.972: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:43:33.984: INFO: Waiting for pod pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d to disappear
Aug 31 12:43:33.986: INFO: Pod pod-configmaps-9cdb7507-a1ff-4c07-9ad6-f4bd43e4794d no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:33.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5015" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":346,"completed":205,"skipped":3837,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Discovery
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:33.993: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-2343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:39
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:43:34.329: INFO: Checking APIGroup: apiregistration.k8s.io
Aug 31 12:43:34.335: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug 31 12:43:34.335: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug 31 12:43:34.335: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug 31 12:43:34.335: INFO: Checking APIGroup: apps
Aug 31 12:43:34.348: INFO: PreferredVersion.GroupVersion: apps/v1
Aug 31 12:43:34.348: INFO: Versions found [{apps/v1 v1}]
Aug 31 12:43:34.348: INFO: apps/v1 matches apps/v1
Aug 31 12:43:34.348: INFO: Checking APIGroup: events.k8s.io
Aug 31 12:43:34.361: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug 31 12:43:34.361: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug 31 12:43:34.361: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug 31 12:43:34.361: INFO: Checking APIGroup: authentication.k8s.io
Aug 31 12:43:34.363: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug 31 12:43:34.363: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug 31 12:43:34.363: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug 31 12:43:34.363: INFO: Checking APIGroup: authorization.k8s.io
Aug 31 12:43:34.364: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug 31 12:43:34.364: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug 31 12:43:34.364: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug 31 12:43:34.364: INFO: Checking APIGroup: autoscaling
Aug 31 12:43:34.366: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug 31 12:43:34.366: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug 31 12:43:34.366: INFO: autoscaling/v2 matches autoscaling/v2
Aug 31 12:43:34.366: INFO: Checking APIGroup: batch
Aug 31 12:43:34.367: INFO: PreferredVersion.GroupVersion: batch/v1
Aug 31 12:43:34.367: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug 31 12:43:34.367: INFO: batch/v1 matches batch/v1
Aug 31 12:43:34.367: INFO: Checking APIGroup: certificates.k8s.io
Aug 31 12:43:34.368: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug 31 12:43:34.368: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug 31 12:43:34.368: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug 31 12:43:34.368: INFO: Checking APIGroup: networking.k8s.io
Aug 31 12:43:34.369: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug 31 12:43:34.369: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug 31 12:43:34.369: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug 31 12:43:34.369: INFO: Checking APIGroup: policy
Aug 31 12:43:34.370: INFO: PreferredVersion.GroupVersion: policy/v1
Aug 31 12:43:34.370: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug 31 12:43:34.370: INFO: policy/v1 matches policy/v1
Aug 31 12:43:34.370: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug 31 12:43:34.371: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug 31 12:43:34.371: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug 31 12:43:34.371: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug 31 12:43:34.371: INFO: Checking APIGroup: storage.k8s.io
Aug 31 12:43:34.372: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug 31 12:43:34.372: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1} {storage.k8s.io/v1alpha1 v1alpha1}]
Aug 31 12:43:34.372: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug 31 12:43:34.372: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug 31 12:43:34.373: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug 31 12:43:34.373: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug 31 12:43:34.373: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug 31 12:43:34.373: INFO: Checking APIGroup: apiextensions.k8s.io
Aug 31 12:43:34.374: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug 31 12:43:34.374: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug 31 12:43:34.374: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug 31 12:43:34.374: INFO: Checking APIGroup: scheduling.k8s.io
Aug 31 12:43:34.374: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug 31 12:43:34.374: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug 31 12:43:34.374: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug 31 12:43:34.374: INFO: Checking APIGroup: coordination.k8s.io
Aug 31 12:43:34.375: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug 31 12:43:34.375: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug 31 12:43:34.375: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug 31 12:43:34.375: INFO: Checking APIGroup: node.k8s.io
Aug 31 12:43:34.376: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug 31 12:43:34.376: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1} {node.k8s.io/v1alpha1 v1alpha1}]
Aug 31 12:43:34.376: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug 31 12:43:34.376: INFO: Checking APIGroup: discovery.k8s.io
Aug 31 12:43:34.377: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug 31 12:43:34.377: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug 31 12:43:34.377: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug 31 12:43:34.377: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug 31 12:43:34.377: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug 31 12:43:34.377: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug 31 12:43:34.377: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug 31 12:43:34.377: INFO: Checking APIGroup: internal.apiserver.k8s.io
Aug 31 12:43:34.378: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
Aug 31 12:43:34.378: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
Aug 31 12:43:34.378: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
Aug 31 12:43:34.378: INFO: Checking APIGroup: autoscaling.k8s.io
Aug 31 12:43:34.379: INFO: PreferredVersion.GroupVersion: autoscaling.k8s.io/v1
Aug 31 12:43:34.379: INFO: Versions found [{autoscaling.k8s.io/v1 v1} {autoscaling.k8s.io/v1beta2 v1beta2}]
Aug 31 12:43:34.379: INFO: autoscaling.k8s.io/v1 matches autoscaling.k8s.io/v1
Aug 31 12:43:34.379: INFO: Checking APIGroup: crd.projectcalico.org
Aug 31 12:43:34.380: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
Aug 31 12:43:34.380: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
Aug 31 12:43:34.380: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
Aug 31 12:43:34.380: INFO: Checking APIGroup: snapshot.storage.k8s.io
Aug 31 12:43:34.380: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
Aug 31 12:43:34.381: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
Aug 31 12:43:34.381: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
Aug 31 12:43:34.381: INFO: Checking APIGroup: application.giantswarm.io
Aug 31 12:43:34.381: INFO: PreferredVersion.GroupVersion: application.giantswarm.io/v1alpha1
Aug 31 12:43:34.381: INFO: Versions found [{application.giantswarm.io/v1alpha1 v1alpha1}]
Aug 31 12:43:34.381: INFO: application.giantswarm.io/v1alpha1 matches application.giantswarm.io/v1alpha1
Aug 31 12:43:34.381: INFO: Checking APIGroup: externaldns.k8s.io
Aug 31 12:43:34.382: INFO: PreferredVersion.GroupVersion: externaldns.k8s.io/v1alpha1
Aug 31 12:43:34.382: INFO: Versions found [{externaldns.k8s.io/v1alpha1 v1alpha1}]
Aug 31 12:43:34.382: INFO: externaldns.k8s.io/v1alpha1 matches externaldns.k8s.io/v1alpha1
Aug 31 12:43:34.382: INFO: Checking APIGroup: metrics.k8s.io
Aug 31 12:43:34.383: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug 31 12:43:34.383: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug 31 12:43:34.383: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:34.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-2343" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":346,"completed":206,"skipped":3846,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:34.390: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6543
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-map-7bec9d1d-ed13-4d4e-82e7-587717ab34ec
STEP: Creating a pod to test consume configMaps
Aug 31 12:43:34.526: INFO: Waiting up to 5m0s for pod "pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54" in namespace "configmap-6543" to be "Succeeded or Failed"
Aug 31 12:43:34.530: INFO: Pod "pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54": Phase="Pending", Reason="", readiness=false. Elapsed: 3.444127ms
Aug 31 12:43:36.535: INFO: Pod "pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008350927s
Aug 31 12:43:38.543: INFO: Pod "pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017057054s
STEP: Saw pod success
Aug 31 12:43:38.543: INFO: Pod "pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54" satisfied condition "Succeeded or Failed"
Aug 31 12:43:38.546: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:43:38.560: INFO: Waiting for pod pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54 to disappear
Aug 31 12:43:38.562: INFO: Pod pod-configmaps-ad89093f-80c6-4ddd-ad24-c6dfb8527f54 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:38.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6543" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":346,"completed":207,"skipped":3849,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:38.570: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:43:38.706: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 31 12:43:43.710: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug 31 12:43:43.715: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug 31 12:43:43.721: INFO: observed ReplicaSet test-rs in namespace replicaset-3257 with ReadyReplicas 1, AvailableReplicas 1
Aug 31 12:43:43.743: INFO: observed ReplicaSet test-rs in namespace replicaset-3257 with ReadyReplicas 1, AvailableReplicas 1
Aug 31 12:43:43.774: INFO: observed ReplicaSet test-rs in namespace replicaset-3257 with ReadyReplicas 1, AvailableReplicas 1
Aug 31 12:43:43.781: INFO: observed ReplicaSet test-rs in namespace replicaset-3257 with ReadyReplicas 1, AvailableReplicas 1
Aug 31 12:43:44.624: INFO: observed ReplicaSet test-rs in namespace replicaset-3257 with ReadyReplicas 2, AvailableReplicas 2
Aug 31 12:43:44.877: INFO: observed Replicaset test-rs in namespace replicaset-3257 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:44.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3257" for this suite.

• [SLOW TEST:6.315 seconds]
[sig-apps] ReplicaSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":346,"completed":208,"skipped":3896,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:44.886: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-3845
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:38
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:43:45.026: INFO: The status of Pod busybox-host-aliasesda7862d2-b0d8-43ad-8892-cdd6ae342fdc is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:43:47.034: INFO: The status of Pod busybox-host-aliasesda7862d2-b0d8-43ad-8892-cdd6ae342fdc is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:47.040: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-3845" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":209,"skipped":3911,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:47.047: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6216
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:43:47.734: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:43:50.756: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug 31 12:43:52.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=webhook-6216 attach --namespace=webhook-6216 to-be-attached-pod -i -c=container1'
Aug 31 12:43:53.265: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:53.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6216" for this suite.
STEP: Destroying namespace "webhook-6216-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:6.260 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":346,"completed":210,"skipped":3920,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:53.307: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide podname only [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:43:53.438: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264" in namespace "downward-api-6214" to be "Succeeded or Failed"
Aug 31 12:43:53.440: INFO: Pod "downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264": Phase="Pending", Reason="", readiness=false. Elapsed: 2.528721ms
Aug 31 12:43:55.445: INFO: Pod "downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007333195s
Aug 31 12:43:57.453: INFO: Pod "downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014911789s
STEP: Saw pod success
Aug 31 12:43:57.453: INFO: Pod "downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264" satisfied condition "Succeeded or Failed"
Aug 31 12:43:57.455: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264 container client-container: <nil>
STEP: delete the pod
Aug 31 12:43:57.468: INFO: Waiting for pod downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264 to disappear
Aug 31 12:43:57.470: INFO: Pod downwardapi-volume-ff1120e0-f251-4475-8e9b-c9393c3ba264 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:43:57.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6214" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":346,"completed":211,"skipped":3947,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Docker Containers 
  should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:43:57.478: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-9930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test override command
Aug 31 12:43:57.611: INFO: Waiting up to 5m0s for pod "client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2" in namespace "containers-9930" to be "Succeeded or Failed"
Aug 31 12:43:57.613: INFO: Pod "client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2": Phase="Pending", Reason="", readiness=false. Elapsed: 1.988516ms
Aug 31 12:43:59.620: INFO: Pod "client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008888102s
Aug 31 12:44:01.625: INFO: Pod "client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013814269s
STEP: Saw pod success
Aug 31 12:44:01.625: INFO: Pod "client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2" satisfied condition "Succeeded or Failed"
Aug 31 12:44:01.627: INFO: Trying to get logs from node nodepool-qycy5-000001 pod client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 12:44:01.639: INFO: Waiting for pod client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2 to disappear
Aug 31 12:44:01.641: INFO: Pod client-containers-5acd5612-a568-4e5d-b9cc-a050106726d2 no longer exists
[AfterEach] [sig-node] Docker Containers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:44:01.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-9930" for this suite.
•{"msg":"PASSED [sig-node] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance]","total":346,"completed":212,"skipped":3979,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:44:01.647: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-2164
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug 31 12:44:02.105: INFO: Pod name wrapped-volume-race-d30d5d00-e901-45ab-b81e-2310a4b913d8: Found 1 pods out of 5
Aug 31 12:44:07.114: INFO: Pod name wrapped-volume-race-d30d5d00-e901-45ab-b81e-2310a4b913d8: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-d30d5d00-e901-45ab-b81e-2310a4b913d8 in namespace emptydir-wrapper-2164, will wait for the garbage collector to delete the pods
Aug 31 12:44:17.191: INFO: Deleting ReplicationController wrapped-volume-race-d30d5d00-e901-45ab-b81e-2310a4b913d8 took: 4.239534ms
Aug 31 12:44:17.291: INFO: Terminating ReplicationController wrapped-volume-race-d30d5d00-e901-45ab-b81e-2310a4b913d8 pods took: 100.52951ms
STEP: Creating RC which spawns configmap-volume pods
Aug 31 12:44:20.420: INFO: Pod name wrapped-volume-race-f788cace-aeee-465c-b136-f4d4a2a23808: Found 0 pods out of 5
Aug 31 12:44:25.430: INFO: Pod name wrapped-volume-race-f788cace-aeee-465c-b136-f4d4a2a23808: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f788cace-aeee-465c-b136-f4d4a2a23808 in namespace emptydir-wrapper-2164, will wait for the garbage collector to delete the pods
Aug 31 12:44:37.511: INFO: Deleting ReplicationController wrapped-volume-race-f788cace-aeee-465c-b136-f4d4a2a23808 took: 4.98414ms
Aug 31 12:44:37.612: INFO: Terminating ReplicationController wrapped-volume-race-f788cace-aeee-465c-b136-f4d4a2a23808 pods took: 100.535108ms
STEP: Creating RC which spawns configmap-volume pods
Aug 31 12:44:40.528: INFO: Pod name wrapped-volume-race-43e6675b-1658-4a0b-9009-ccb5d82a6b2f: Found 0 pods out of 5
Aug 31 12:44:45.538: INFO: Pod name wrapped-volume-race-43e6675b-1658-4a0b-9009-ccb5d82a6b2f: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-43e6675b-1658-4a0b-9009-ccb5d82a6b2f in namespace emptydir-wrapper-2164, will wait for the garbage collector to delete the pods
Aug 31 12:44:55.615: INFO: Deleting ReplicationController wrapped-volume-race-43e6675b-1658-4a0b-9009-ccb5d82a6b2f took: 4.379235ms
Aug 31 12:44:55.715: INFO: Terminating ReplicationController wrapped-volume-race-43e6675b-1658-4a0b-9009-ccb5d82a6b2f pods took: 100.392706ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:44:58.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-2164" for this suite.

• [SLOW TEST:56.920 seconds]
[sig-storage] EmptyDir wrapper volumes
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":346,"completed":213,"skipped":3997,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:44:58.568: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-1655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:126
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:44:59.058: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:45:02.079: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:45:02.083: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:45:05.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-1655" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:137

• [SLOW TEST:6.691 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":346,"completed":214,"skipped":4003,"failed":0}
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:45:05.259: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2560
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 31 12:45:09.442: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:45:09.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2560" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance]","total":346,"completed":215,"skipped":4005,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:45:09.458: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-488
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:45:09.953: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:45:12.972: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:45:13.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-488" for this suite.
STEP: Destroying namespace "webhook-488-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":346,"completed":216,"skipped":4021,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:45:13.039: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should be updated [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 31 12:45:13.175: INFO: The status of Pod pod-update-690ca718-ab9c-4d70-8ca9-2a5efd81e56c is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:45:15.179: INFO: The status of Pod pod-update-690ca718-ab9c-4d70-8ca9-2a5efd81e56c is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 31 12:45:15.694: INFO: Successfully updated pod "pod-update-690ca718-ab9c-4d70-8ca9-2a5efd81e56c"
STEP: verifying the updated pod is in kubernetes
Aug 31 12:45:15.699: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:45:15.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2716" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":346,"completed":217,"skipped":4033,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:45:15.705: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:47:01.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5423" for this suite.

• [SLOW TEST:106.154 seconds]
[sig-apps] CronJob
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":346,"completed":218,"skipped":4050,"failed":0}
S
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] HostPort
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:47:01.860: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-1746
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/hostport.go:47
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug 31 12:47:02.025: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:47:04.030: INFO: The status of Pod pod1 is Running (Ready = false)
Aug 31 12:47:06.033: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.4.3.5 on the node which pod1 resides and expect scheduled
Aug 31 12:47:06.048: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:47:08.056: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.4.3.5 but use UDP protocol on the node which pod2 resides
Aug 31 12:47:08.064: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:47:10.069: INFO: The status of Pod pod3 is Running (Ready = false)
Aug 31 12:47:12.072: INFO: The status of Pod pod3 is Running (Ready = true)
Aug 31 12:47:12.082: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:47:14.087: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug 31 12:47:14.089: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.4.3.5 http://127.0.0.1:54323/hostname] Namespace:hostport-1746 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:47:14.089: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:47:14.090: INFO: ExecWithOptions: Clientset creation
Aug 31 12:47:14.090: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/hostport-1746/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.4.3.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true %!s(MISSING))
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.4.3.5, port: 54323
Aug 31 12:47:14.162: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.4.3.5:54323/hostname] Namespace:hostport-1746 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:47:14.162: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:47:14.163: INFO: ExecWithOptions: Clientset creation
Aug 31 12:47:14.163: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/hostport-1746/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.4.3.5%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true %!s(MISSING))
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.4.3.5, port: 54323 UDP
Aug 31 12:47:14.224: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.4.3.5 54323] Namespace:hostport-1746 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 12:47:14.224: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:47:14.225: INFO: ExecWithOptions: Clientset creation
Aug 31 12:47:14.225: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/hostport-1746/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.4.3.5+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true %!s(MISSING))
[AfterEach] [sig-network] HostPort
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:47:19.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-1746" for this suite.

• [SLOW TEST:17.451 seconds]
[sig-network] HostPort
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":346,"completed":219,"skipped":4051,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:47:19.312: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide container's memory limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:47:19.442: INFO: Waiting up to 5m0s for pod "downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c" in namespace "projected-3992" to be "Succeeded or Failed"
Aug 31 12:47:19.448: INFO: Pod "downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.635353ms
Aug 31 12:47:21.454: INFO: Pod "downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c": Phase="Running", Reason="", readiness=false. Elapsed: 2.012076217s
Aug 31 12:47:23.461: INFO: Pod "downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019261993s
STEP: Saw pod success
Aug 31 12:47:23.461: INFO: Pod "downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c" satisfied condition "Succeeded or Failed"
Aug 31 12:47:23.464: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c container client-container: <nil>
STEP: delete the pod
Aug 31 12:47:23.477: INFO: Waiting for pod downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c to disappear
Aug 31 12:47:23.479: INFO: Pod downwardapi-volume-31ac31d1-d18b-43a0-a2f4-19e75964254c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:47:23.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3992" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":346,"completed":220,"skipped":4052,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:47:23.486: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod with failed condition
STEP: updating the pod
Aug 31 12:49:24.143: INFO: Successfully updated pod "var-expansion-2a0ebf2c-adf8-4953-b28b-bc1f1e8a78e1"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug 31 12:49:26.153: INFO: Deleting pod "var-expansion-2a0ebf2c-adf8-4953-b28b-bc1f1e8a78e1" in namespace "var-expansion-1515"
Aug 31 12:49:26.158: INFO: Wait up to 5m0s for pod "var-expansion-2a0ebf2c-adf8-4953-b28b-bc1f1e8a78e1" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:49:58.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1515" for this suite.

• [SLOW TEST:154.691 seconds]
[sig-node] Variable Expansion
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":346,"completed":221,"skipped":4070,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:49:58.178: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7610
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should get a host IP [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating pod
Aug 31 12:49:58.318: INFO: The status of Pod pod-hostip-2e964e75-0cc7-4ae7-bee0-3ad4ad34d4f2 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:50:00.322: INFO: The status of Pod pod-hostip-2e964e75-0cc7-4ae7-bee0-3ad4ad34d4f2 is Running (Ready = true)
Aug 31 12:50:00.327: INFO: Pod pod-hostip-2e964e75-0cc7-4ae7-bee0-3ad4ad34d4f2 has hostIP: 10.4.3.5
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:50:00.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7610" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":346,"completed":222,"skipped":4088,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:50:00.335: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug 31 12:50:00.465: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 31 12:50:05.469: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:50:05.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7562" for this suite.

• [SLOW TEST:5.160 seconds]
[sig-apps] ReplicaSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":346,"completed":223,"skipped":4095,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:50:05.497: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-13
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name projected-secret-test-map-0c6deab8-316b-4aeb-a01e-ed7b25fa7007
STEP: Creating a pod to test consume secrets
Aug 31 12:50:05.632: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb" in namespace "projected-13" to be "Succeeded or Failed"
Aug 31 12:50:05.634: INFO: Pod "pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.052916ms
Aug 31 12:50:07.640: INFO: Pod "pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00747836s
Aug 31 12:50:09.647: INFO: Pod "pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014452214s
STEP: Saw pod success
Aug 31 12:50:09.647: INFO: Pod "pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb" satisfied condition "Succeeded or Failed"
Aug 31 12:50:09.649: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 31 12:50:09.663: INFO: Waiting for pod pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb to disappear
Aug 31 12:50:09.665: INFO: Pod pod-projected-secrets-abbfebfd-6e62-4e44-829e-9bb6dc5926fb no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:50:09.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-13" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":224,"skipped":4128,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:50:09.671: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-7373
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/taints.go:345
Aug 31 12:50:09.794: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 31 12:51:09.842: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:51:09.845: INFO: Starting informer...
STEP: Starting pods...
Aug 31 12:51:10.061: INFO: Pod1 is running on nodepool-qycy5-000001. Tainting Node
Aug 31 12:51:12.305: INFO: Pod2 is running on nodepool-qycy5-000001. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug 31 12:51:18.157: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug 31 12:51:37.911: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:51:37.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-7373" for this suite.

• [SLOW TEST:88.267 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":346,"completed":225,"skipped":4159,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:51:37.938: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1665
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide container's cpu request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:51:38.067: INFO: Waiting up to 5m0s for pod "downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117" in namespace "projected-1665" to be "Succeeded or Failed"
Aug 31 12:51:38.069: INFO: Pod "downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117": Phase="Pending", Reason="", readiness=false. Elapsed: 2.823622ms
Aug 31 12:51:40.074: INFO: Pod "downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117": Phase="Running", Reason="", readiness=false. Elapsed: 2.00774791s
Aug 31 12:51:42.081: INFO: Pod "downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013861406s
STEP: Saw pod success
Aug 31 12:51:42.081: INFO: Pod "downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117" satisfied condition "Succeeded or Failed"
Aug 31 12:51:42.083: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117 container client-container: <nil>
STEP: delete the pod
Aug 31 12:51:42.105: INFO: Waiting for pod downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117 to disappear
Aug 31 12:51:42.108: INFO: Pod downwardapi-volume-31b4a4da-a04c-4d4d-89c9-a4c0988b4117 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:51:42.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1665" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":346,"completed":226,"skipped":4176,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:51:42.115: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5349
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 12:51:42.645: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 12:51:45.662: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug 31 12:51:45.680: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:51:45.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5349" for this suite.
STEP: Destroying namespace "webhook-5349-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":346,"completed":227,"skipped":4185,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:51:45.731: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide container's memory request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 12:51:45.867: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679" in namespace "downward-api-1433" to be "Succeeded or Failed"
Aug 31 12:51:45.873: INFO: Pod "downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679": Phase="Pending", Reason="", readiness=false. Elapsed: 5.316242ms
Aug 31 12:51:47.878: INFO: Pod "downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010273226s
Aug 31 12:51:49.885: INFO: Pod "downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017679829s
STEP: Saw pod success
Aug 31 12:51:49.885: INFO: Pod "downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679" satisfied condition "Succeeded or Failed"
Aug 31 12:51:49.888: INFO: Trying to get logs from node nodepool-qycy5-000001 pod downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679 container client-container: <nil>
STEP: delete the pod
Aug 31 12:51:49.901: INFO: Waiting for pod downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679 to disappear
Aug 31 12:51:49.903: INFO: Pod downwardapi-volume-cf7cc7ef-32b0-4b50-92bc-3a5052d4c679 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:51:49.903: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1433" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":346,"completed":228,"skipped":4231,"failed":0}
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:51:49.910: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4810
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: set up a multi version CRD
Aug 31 12:51:50.031: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:52:06.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4810" for this suite.

• [SLOW TEST:16.457 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":346,"completed":229,"skipped":4234,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:52:06.367: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1383
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Update Demo
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:296
[It] should scale a replication controller  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a replication controller
Aug 31 12:52:06.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 create -f -'
Aug 31 12:52:07.068: INFO: stderr: ""
Aug 31 12:52:07.068: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 31 12:52:07.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:07.119: INFO: stderr: ""
Aug 31 12:52:07.119: INFO: stdout: "update-demo-nautilus-2pnqp update-demo-nautilus-gg4sl "
Aug 31 12:52:07.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-2pnqp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:07.172: INFO: stderr: ""
Aug 31 12:52:07.172: INFO: stdout: ""
Aug 31 12:52:07.172: INFO: update-demo-nautilus-2pnqp is created but not running
Aug 31 12:52:12.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:12.249: INFO: stderr: ""
Aug 31 12:52:12.249: INFO: stdout: "update-demo-nautilus-2pnqp update-demo-nautilus-gg4sl "
Aug 31 12:52:12.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-2pnqp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:12.303: INFO: stderr: ""
Aug 31 12:52:12.303: INFO: stdout: "true"
Aug 31 12:52:12.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-2pnqp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:52:12.350: INFO: stderr: ""
Aug 31 12:52:12.350: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:52:12.350: INFO: validating pod update-demo-nautilus-2pnqp
Aug 31 12:52:12.354: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:52:12.354: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:52:12.354: INFO: update-demo-nautilus-2pnqp is verified up and running
Aug 31 12:52:12.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:12.403: INFO: stderr: ""
Aug 31 12:52:12.403: INFO: stdout: "true"
Aug 31 12:52:12.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:52:12.448: INFO: stderr: ""
Aug 31 12:52:12.448: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:52:12.448: INFO: validating pod update-demo-nautilus-gg4sl
Aug 31 12:52:12.453: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:52:12.453: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:52:12.453: INFO: update-demo-nautilus-gg4sl is verified up and running
STEP: scaling down the replication controller
Aug 31 12:52:12.455: INFO: scanned /root for discovery docs: <nil>
Aug 31 12:52:12.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug 31 12:52:13.520: INFO: stderr: ""
Aug 31 12:52:13.520: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 31 12:52:13.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:13.576: INFO: stderr: ""
Aug 31 12:52:13.576: INFO: stdout: "update-demo-nautilus-2pnqp update-demo-nautilus-gg4sl "
STEP: Replicas for name=update-demo: expected=1 actual=2
Aug 31 12:52:18.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:18.644: INFO: stderr: ""
Aug 31 12:52:18.644: INFO: stdout: "update-demo-nautilus-gg4sl "
Aug 31 12:52:18.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:18.698: INFO: stderr: ""
Aug 31 12:52:18.698: INFO: stdout: "true"
Aug 31 12:52:18.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:52:18.745: INFO: stderr: ""
Aug 31 12:52:18.745: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:52:18.745: INFO: validating pod update-demo-nautilus-gg4sl
Aug 31 12:52:18.748: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:52:18.748: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:52:18.748: INFO: update-demo-nautilus-gg4sl is verified up and running
STEP: scaling up the replication controller
Aug 31 12:52:18.750: INFO: scanned /root for discovery docs: <nil>
Aug 31 12:52:18.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug 31 12:52:19.820: INFO: stderr: ""
Aug 31 12:52:19.820: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 31 12:52:19.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:19.871: INFO: stderr: ""
Aug 31 12:52:19.871: INFO: stdout: "update-demo-nautilus-4c42s update-demo-nautilus-gg4sl "
Aug 31 12:52:19.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-4c42s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:19.925: INFO: stderr: ""
Aug 31 12:52:19.925: INFO: stdout: ""
Aug 31 12:52:19.925: INFO: update-demo-nautilus-4c42s is created but not running
Aug 31 12:52:24.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 31 12:52:24.983: INFO: stderr: ""
Aug 31 12:52:24.983: INFO: stdout: "update-demo-nautilus-4c42s update-demo-nautilus-gg4sl "
Aug 31 12:52:24.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-4c42s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:25.031: INFO: stderr: ""
Aug 31 12:52:25.031: INFO: stdout: "true"
Aug 31 12:52:25.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-4c42s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:52:25.083: INFO: stderr: ""
Aug 31 12:52:25.083: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:52:25.083: INFO: validating pod update-demo-nautilus-4c42s
Aug 31 12:52:25.088: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:52:25.088: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:52:25.088: INFO: update-demo-nautilus-4c42s is verified up and running
Aug 31 12:52:25.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 31 12:52:25.139: INFO: stderr: ""
Aug 31 12:52:25.139: INFO: stdout: "true"
Aug 31 12:52:25.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods update-demo-nautilus-gg4sl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 31 12:52:25.189: INFO: stderr: ""
Aug 31 12:52:25.189: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 31 12:52:25.189: INFO: validating pod update-demo-nautilus-gg4sl
Aug 31 12:52:25.191: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 31 12:52:25.191: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 31 12:52:25.191: INFO: update-demo-nautilus-gg4sl is verified up and running
STEP: using delete to clean up resources
Aug 31 12:52:25.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 delete --grace-period=0 --force -f -'
Aug 31 12:52:25.246: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 12:52:25.246: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 31 12:52:25.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get rc,svc -l name=update-demo --no-headers'
Aug 31 12:52:25.303: INFO: stderr: "No resources found in kubectl-1383 namespace.\n"
Aug 31 12:52:25.303: INFO: stdout: ""
Aug 31 12:52:25.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-1383 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 31 12:52:25.357: INFO: stderr: ""
Aug 31 12:52:25.357: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:52:25.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1383" for this suite.

• [SLOW TEST:18.997 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Update Demo
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:294
    should scale a replication controller  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":346,"completed":230,"skipped":4243,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:52:25.365: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1412
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:25.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1412" for this suite.

• [SLOW TEST:60.145 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":346,"completed":231,"skipped":4254,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:25.510: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4947
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:38
STEP: Setting up data
[It] should support subpaths with projected pod [Excluded:WindowsDocker] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod pod-subpath-test-projected-mbql
STEP: Creating a pod to test atomic-volume-subpath
Aug 31 12:53:25.655: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-mbql" in namespace "subpath-4947" to be "Succeeded or Failed"
Aug 31 12:53:25.657: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Pending", Reason="", readiness=false. Elapsed: 2.193835ms
Aug 31 12:53:27.664: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 2.009251788s
Aug 31 12:53:29.672: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 4.017519905s
Aug 31 12:53:31.679: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 6.024440945s
Aug 31 12:53:33.688: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 8.033093659s
Aug 31 12:53:35.693: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 10.038428364s
Aug 31 12:53:37.701: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 12.045617944s
Aug 31 12:53:39.709: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 14.053666585s
Aug 31 12:53:41.716: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 16.060657554s
Aug 31 12:53:43.724: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 18.069211394s
Aug 31 12:53:45.728: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=true. Elapsed: 20.072941704s
Aug 31 12:53:47.737: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Running", Reason="", readiness=false. Elapsed: 22.081542938s
Aug 31 12:53:49.744: INFO: Pod "pod-subpath-test-projected-mbql": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.088688796s
STEP: Saw pod success
Aug 31 12:53:49.744: INFO: Pod "pod-subpath-test-projected-mbql" satisfied condition "Succeeded or Failed"
Aug 31 12:53:49.746: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-subpath-test-projected-mbql container test-container-subpath-projected-mbql: <nil>
STEP: delete the pod
Aug 31 12:53:49.761: INFO: Waiting for pod pod-subpath-test-projected-mbql to disappear
Aug 31 12:53:49.763: INFO: Pod pod-subpath-test-projected-mbql no longer exists
STEP: Deleting pod pod-subpath-test-projected-mbql
Aug 31 12:53:49.763: INFO: Deleting pod "pod-subpath-test-projected-mbql" in namespace "subpath-4947"
[AfterEach] [sig-storage] Subpath
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:49.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4947" for this suite.

• [SLOW TEST:24.262 seconds]
[sig-storage] Subpath
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/storage/subpath.go:34
    should support subpaths with projected pod [Excluded:WindowsDocker] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Excluded:WindowsDocker] [Conformance]","total":346,"completed":232,"skipped":4318,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:49.772: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4314
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:90
Aug 31 12:53:49.899: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 31 12:53:49.906: INFO: Waiting for terminating namespaces to be deleted...
Aug 31 12:53:49.908: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000000 before test
Aug 31 12:53:49.933: INFO: azure-cloud-node-manager-wwzl5 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:53:49.933: INFO: azure-scheduled-events-228j9 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:53:49.933: INFO: calico-node-wqzj4 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:53:49.933: INFO: cert-exporter-daemonset-sjcjs from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:53:49.933: INFO: csi-azuredisk-node-kvgvp from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.933: INFO: csi-azurefile-node-2rlbt from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.933: INFO: external-dns-9b89bc6d9-r2rmb from kube-system started at 2022-08-31 12:51:12 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container external-dns ready: true, restart count 0
Aug 31 12:53:49.933: INFO: kube-proxy-skgwk from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:53:49.933: INFO: kube-state-metrics-7549f69f7b-4wz2d from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 31 12:53:49.933: INFO: metrics-server-5fb454cbc5-444p6 from kube-system started at 2022-08-31 12:51:12 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container metrics-server ready: true, restart count 0
Aug 31 12:53:49.933: INFO: net-exporter-j45lm from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:53:49.933: INFO: node-exporter-v1-3-1-6zbf7 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:53:49.933: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-sxrpf from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:53:49.933: INFO: vertical-pod-autoscaler-recommender-67b5d54d5f-dt5lh from kube-system started at 2022-08-31 12:33:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:53:49.933: INFO: vertical-pod-autoscaler-updater-7bdddf5b-t6lgw from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:53:49.933: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-l2q54 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:53:49.933: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:53:49.933: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000001 before test
Aug 31 12:53:49.949: INFO: azure-cloud-node-manager-jgc5k from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:53:49.949: INFO: azure-scheduled-events-pmkkg from kube-system started at 2022-08-31 12:51:37 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:53:49.949: INFO: calico-node-wc6pv from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:53:49.949: INFO: cert-exporter-daemonset-qgrcx from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:53:49.949: INFO: csi-azuredisk-node-2qvkc from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.949: INFO: csi-azurefile-node-6p9mh from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.949: INFO: kube-proxy-rhrp2 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:53:49.949: INFO: net-exporter-hkzv6 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:53:49.949: INFO: node-exporter-v1-3-1-wn7v7 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:53:49.949: INFO: sonobuoy from sonobuoy started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 31 12:53:49.949: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-hfx7z from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:53:49.949: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 12:53:49.949: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000002 before test
Aug 31 12:53:49.964: INFO: azure-cloud-node-manager-bdkwc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 12:53:49.964: INFO: azure-scheduled-events-fvclm from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 12:53:49.964: INFO: calico-node-g6p5m from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 12:53:49.964: INFO: cert-exporter-daemonset-ctrtd from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 12:53:49.964: INFO: coredns-workers-8666c764cd-5k24f from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:53:49.964: INFO: coredns-workers-8666c764cd-fh979 from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container coredns ready: true, restart count 0
Aug 31 12:53:49.964: INFO: csi-azuredisk-controller-54668dc445-s8q9b from kube-system started at 2022-08-31 12:33:49 +0000 UTC (6 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.964: INFO: csi-azuredisk-node-qvvqc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.964: INFO: csi-azurefile-controller-59b55cddbd-mbl67 from kube-system started at 2022-08-31 12:33:49 +0000 UTC (6 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.964: INFO: csi-azurefile-node-ql4sl from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 12:53:49.964: INFO: kube-proxy-gvjs4 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 12:53:49.964: INFO: net-exporter-dggpf from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 12:53:49.964: INFO: node-exporter-v1-3-1-q226d from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 12:53:49.964: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-7f5cd from kube-system started at 2022-08-31 11:53:16 +0000 UTC (1 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 12:53:49.964: INFO: sonobuoy-e2e-job-61cdc82114084168 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container e2e ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:53:49.964: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-ln45x from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 12:53:49.964: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 12:53:49.964: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: verifying the node has the label node nodepool-qycy5-000000
STEP: verifying the node has the label node nodepool-qycy5-000001
STEP: verifying the node has the label node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod azure-cloud-node-manager-bdkwc requesting resource cpu=200m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod azure-cloud-node-manager-jgc5k requesting resource cpu=200m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod azure-cloud-node-manager-wwzl5 requesting resource cpu=200m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod azure-scheduled-events-228j9 requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod azure-scheduled-events-fvclm requesting resource cpu=50m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod azure-scheduled-events-pmkkg requesting resource cpu=50m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod calico-node-g6p5m requesting resource cpu=250m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod calico-node-wc6pv requesting resource cpu=250m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod calico-node-wqzj4 requesting resource cpu=250m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod cert-exporter-daemonset-ctrtd requesting resource cpu=50m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod cert-exporter-daemonset-qgrcx requesting resource cpu=50m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod cert-exporter-daemonset-sjcjs requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod coredns-workers-8666c764cd-5k24f requesting resource cpu=250m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod coredns-workers-8666c764cd-fh979 requesting resource cpu=250m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod csi-azuredisk-controller-54668dc445-s8q9b requesting resource cpu=60m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod csi-azuredisk-node-2qvkc requesting resource cpu=30m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod csi-azuredisk-node-kvgvp requesting resource cpu=30m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod csi-azuredisk-node-qvvqc requesting resource cpu=30m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod csi-azurefile-controller-59b55cddbd-mbl67 requesting resource cpu=60m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod csi-azurefile-node-2rlbt requesting resource cpu=30m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod csi-azurefile-node-6p9mh requesting resource cpu=30m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod csi-azurefile-node-ql4sl requesting resource cpu=30m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod external-dns-9b89bc6d9-r2rmb requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod kube-proxy-gvjs4 requesting resource cpu=23m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod kube-proxy-rhrp2 requesting resource cpu=23m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod kube-proxy-skgwk requesting resource cpu=23m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod kube-state-metrics-7549f69f7b-4wz2d requesting resource cpu=500m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod metrics-server-5fb454cbc5-444p6 requesting resource cpu=0m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod net-exporter-dggpf requesting resource cpu=50m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod net-exporter-hkzv6 requesting resource cpu=50m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod net-exporter-j45lm requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod node-exporter-v1-3-1-6zbf7 requesting resource cpu=75m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod node-exporter-v1-3-1-q226d requesting resource cpu=75m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod node-exporter-v1-3-1-wn7v7 requesting resource cpu=75m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod vertical-pod-autoscaler-admission-controller-556558c8d9-7f5cd requesting resource cpu=50m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod vertical-pod-autoscaler-admission-controller-556558c8d9-sxrpf requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod vertical-pod-autoscaler-recommender-67b5d54d5f-dt5lh requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod vertical-pod-autoscaler-updater-7bdddf5b-t6lgw requesting resource cpu=50m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod sonobuoy requesting resource cpu=0m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod sonobuoy-e2e-job-61cdc82114084168 requesting resource cpu=0m on Node nodepool-qycy5-000002
Aug 31 12:53:50.077: INFO: Pod sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-hfx7z requesting resource cpu=0m on Node nodepool-qycy5-000001
Aug 31 12:53:50.077: INFO: Pod sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-l2q54 requesting resource cpu=0m on Node nodepool-qycy5-000000
Aug 31 12:53:50.077: INFO: Pod sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-ln45x requesting resource cpu=0m on Node nodepool-qycy5-000002
STEP: Starting Pods to consume most of the cluster CPU.
Aug 31 12:53:50.077: INFO: Creating a pod which consumes cpu=1429m on Node nodepool-qycy5-000000
Aug 31 12:53:50.088: INFO: Creating a pod which consumes cpu=1919m on Node nodepool-qycy5-000001
Aug 31 12:53:50.102: INFO: Creating a pod which consumes cpu=1450m on Node nodepool-qycy5-000002
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-76ce0896-48bd-4268-ab82-821b9577718c.17106f1c5d3d3ebc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4314/filler-pod-76ce0896-48bd-4268-ab82-821b9577718c to nodepool-qycy5-000001]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-76ce0896-48bd-4268-ab82-821b9577718c.17106f1c7ff5d382], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.6" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-76ce0896-48bd-4268-ab82-821b9577718c.17106f1c8381d596], Reason = [Created], Message = [Created container filler-pod-76ce0896-48bd-4268-ab82-821b9577718c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-76ce0896-48bd-4268-ab82-821b9577718c.17106f1c87094d27], Reason = [Started], Message = [Started container filler-pod-76ce0896-48bd-4268-ab82-821b9577718c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6.17106f1c5c6a54ea], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4314/filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6 to nodepool-qycy5-000000]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6.17106f1c7dc91c4e], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.6" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6.17106f1c7fc4bdbc], Reason = [Created], Message = [Created container filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6.17106f1c83b175b3], Reason = [Started], Message = [Started container filler-pod-c0774ba6-9984-45ee-991f-1697e52908c6]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8.17106f1c5e092476], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4314/filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8 to nodepool-qycy5-000002]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8.17106f1c7f3539d0], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.6" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8.17106f1c8135872c], Reason = [Created], Message = [Created container filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8.17106f1c857ed64b], Reason = [Started], Message = [Started container filler-pod-f22716d8-63d8-49db-9432-a3d956cdb0c8]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.17106f1cd657903c], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate, 3 Insufficient cpu.]
STEP: removing the label node off the node nodepool-qycy5-000000
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node nodepool-qycy5-000001
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node nodepool-qycy5-000002
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:53.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4314" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:81
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":346,"completed":233,"skipped":4335,"failed":0}
SSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:53.197: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 31 12:53:53.329: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 31 12:53:53.332: INFO: starting watch
STEP: patching
STEP: updating
Aug 31 12:53:53.343: INFO: waiting for watch events with expected annotations
Aug 31 12:53:53.343: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:53.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4157" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":346,"completed":234,"skipped":4340,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:53.380: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9786
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir volume type on node default medium
Aug 31 12:53:53.512: INFO: Waiting up to 5m0s for pod "pod-a3aa7fc8-285b-40ba-92de-424aa70777c8" in namespace "emptydir-9786" to be "Succeeded or Failed"
Aug 31 12:53:53.515: INFO: Pod "pod-a3aa7fc8-285b-40ba-92de-424aa70777c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.595641ms
Aug 31 12:53:55.519: INFO: Pod "pod-a3aa7fc8-285b-40ba-92de-424aa70777c8": Phase="Running", Reason="", readiness=false. Elapsed: 2.006951603s
Aug 31 12:53:57.526: INFO: Pod "pod-a3aa7fc8-285b-40ba-92de-424aa70777c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013546848s
STEP: Saw pod success
Aug 31 12:53:57.526: INFO: Pod "pod-a3aa7fc8-285b-40ba-92de-424aa70777c8" satisfied condition "Succeeded or Failed"
Aug 31 12:53:57.528: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-a3aa7fc8-285b-40ba-92de-424aa70777c8 container test-container: <nil>
STEP: delete the pod
Aug 31 12:53:57.542: INFO: Waiting for pod pod-a3aa7fc8-285b-40ba-92de-424aa70777c8 to disappear
Aug 31 12:53:57.544: INFO: Pod pod-a3aa7fc8-285b-40ba-92de-424aa70777c8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:57.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9786" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":235,"skipped":4348,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:57.551: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-731
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:38
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 12:53:57.689: INFO: The status of Pod busybox-readonly-fse8d00cea-1f2d-4b80-99bf-704452dd7d0b is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:53:59.695: INFO: The status of Pod busybox-readonly-fse8d00cea-1f2d-4b80-99bf-704452dd7d0b is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:53:59.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-731" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":236,"skipped":4422,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:53:59.708: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5838
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:59:01.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5838" for this suite.

• [SLOW TEST:302.167 seconds]
[sig-apps] CronJob
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":346,"completed":237,"skipped":4459,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:59:01.875: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6941
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test substitution in volume subpath
Aug 31 12:59:02.068: INFO: Waiting up to 5m0s for pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5" in namespace "var-expansion-6941" to be "Succeeded or Failed"
Aug 31 12:59:02.077: INFO: Pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.921215ms
Aug 31 12:59:04.085: INFO: Pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017023778s
Aug 31 12:59:06.091: INFO: Pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5": Phase="Running", Reason="", readiness=false. Elapsed: 4.023068586s
Aug 31 12:59:08.097: INFO: Pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028532457s
STEP: Saw pod success
Aug 31 12:59:08.097: INFO: Pod "var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5" satisfied condition "Succeeded or Failed"
Aug 31 12:59:08.099: INFO: Trying to get logs from node nodepool-qycy5-000003 pod var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5 container dapi-container: <nil>
STEP: delete the pod
Aug 31 12:59:08.114: INFO: Waiting for pod var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5 to disappear
Aug 31 12:59:08.116: INFO: Pod var-expansion-c12ccdd0-717f-42f7-81b1-c73f7b5f93a5 no longer exists
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:59:08.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6941" for this suite.

• [SLOW TEST:6.248 seconds]
[sig-node] Variable Expansion
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":346,"completed":238,"skipped":4477,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:59:08.124: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating service in namespace services-8985
Aug 31 12:59:08.259: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:59:10.263: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:59:12.313: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 31 12:59:14.268: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 31 12:59:14.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 31 12:59:14.787: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 31 12:59:14.787: INFO: stdout: "iptables"
Aug 31 12:59:14.787: INFO: proxyMode: iptables
Aug 31 12:59:14.802: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 31 12:59:14.804: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-8985
STEP: creating replication controller affinity-clusterip-timeout in namespace services-8985
I0831 12:59:14.815673      22 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-8985, replica count: 3
I0831 12:59:17.866669      22 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 12:59:17.874: INFO: Creating new exec pod
Aug 31 12:59:20.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec execpod-affinitytjsfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug 31 12:59:21.032: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug 31 12:59:21.032: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:59:21.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec execpod-affinitytjsfh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.63.137 80'
Aug 31 12:59:21.162: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.63.137 80\nConnection to 172.31.63.137 80 port [tcp/http] succeeded!\n"
Aug 31 12:59:21.162: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 31 12:59:21.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec execpod-affinitytjsfh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.63.137:80/ ; done'
Aug 31 12:59:21.388: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n"
Aug 31 12:59:21.388: INFO: stdout: "\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww\naffinity-clusterip-timeout-p47ww"
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Received response from host: affinity-clusterip-timeout-p47ww
Aug 31 12:59:21.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec execpod-affinitytjsfh -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.63.137:80/'
Aug 31 12:59:21.778: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n"
Aug 31 12:59:21.778: INFO: stdout: "affinity-clusterip-timeout-p47ww"
Aug 31 12:59:41.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-8985 exec execpod-affinitytjsfh -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.63.137:80/'
Aug 31 12:59:41.927: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.63.137:80/\n"
Aug 31 12:59:41.927: INFO: stdout: "affinity-clusterip-timeout-hmzhz"
Aug 31 12:59:41.927: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-8985, will wait for the garbage collector to delete the pods
Aug 31 12:59:41.991: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 3.486944ms
Aug 31 12:59:42.192: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 200.475028ms
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 12:59:44.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8985" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:36.287 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":346,"completed":239,"skipped":4501,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 12:59:44.411: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-857
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug 31 12:59:44.534: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug 31 12:59:55.788: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 12:59:58.049: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:07.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-857" for this suite.

• [SLOW TEST:23.401 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":346,"completed":240,"skipped":4543,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:07.813: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7917
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 31 13:00:07.947: INFO: Waiting up to 5m0s for pod "pod-a752e915-b5dc-4536-9fcf-00386880c93e" in namespace "emptydir-7917" to be "Succeeded or Failed"
Aug 31 13:00:07.949: INFO: Pod "pod-a752e915-b5dc-4536-9fcf-00386880c93e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.196927ms
Aug 31 13:00:09.958: INFO: Pod "pod-a752e915-b5dc-4536-9fcf-00386880c93e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011056215s
Aug 31 13:00:11.966: INFO: Pod "pod-a752e915-b5dc-4536-9fcf-00386880c93e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018596962s
STEP: Saw pod success
Aug 31 13:00:11.966: INFO: Pod "pod-a752e915-b5dc-4536-9fcf-00386880c93e" satisfied condition "Succeeded or Failed"
Aug 31 13:00:11.968: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-a752e915-b5dc-4536-9fcf-00386880c93e container test-container: <nil>
STEP: delete the pod
Aug 31 13:00:11.982: INFO: Waiting for pod pod-a752e915-b5dc-4536-9fcf-00386880c93e to disappear
Aug 31 13:00:11.985: INFO: Pod pod-a752e915-b5dc-4536-9fcf-00386880c93e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:11.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7917" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":241,"skipped":4615,"failed":0}
SSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:11.992: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-9461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/endpointslice.go:49
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:16.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9461" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":346,"completed":242,"skipped":4620,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:16.226: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-5828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:53
STEP: create the container to handle the HTTPGet hook request.
Aug 31 13:00:16.367: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:00:18.375: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the pod with lifecycle hook
Aug 31 13:00:18.388: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:00:20.393: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 31 13:00:20.404: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 31 13:00:20.409: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 31 13:00:22.409: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 31 13:00:22.419: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 31 13:00:24.411: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 31 13:00:24.420: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:24.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-5828" for this suite.

• [SLOW TEST:8.203 seconds]
[sig-node] Container Lifecycle Hook
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:44
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":346,"completed":243,"skipped":4671,"failed":0}
SSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:24.430: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting the auto-created API token
STEP: reading a file in the container
Aug 31 13:00:27.081: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-1a510c29-6807-4f4c-9a48-848436d4eb1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug 31 13:00:27.362: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-1a510c29-6807-4f4c-9a48-848436d4eb1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug 31 13:00:27.596: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1659 pod-service-account-1a510c29-6807-4f4c-9a48-848436d4eb1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
[AfterEach] [sig-auth] ServiceAccounts
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:27.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1659" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":346,"completed":244,"skipped":4677,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:27.737: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4956
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-16bcaf9e-524d-4a8d-8901-16bc7c419d7f
STEP: Creating a pod to test consume configMaps
Aug 31 13:00:27.873: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1" in namespace "projected-4956" to be "Succeeded or Failed"
Aug 31 13:00:27.876: INFO: Pod "pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.43363ms
Aug 31 13:00:29.883: INFO: Pod "pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009648952s
Aug 31 13:00:31.892: INFO: Pod "pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017861862s
STEP: Saw pod success
Aug 31 13:00:31.892: INFO: Pod "pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1" satisfied condition "Succeeded or Failed"
Aug 31 13:00:31.894: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 13:00:31.907: INFO: Waiting for pod pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1 to disappear
Aug 31 13:00:31.909: INFO: Pod pod-projected-configmaps-58d29b86-94ce-4218-8550-ca1816bae9a1 no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:31.909: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4956" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":346,"completed":245,"skipped":4691,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:31.918: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:00:32.041: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: client-side validation (kubectl create and apply) allows request with known and required properties
Aug 31 13:00:34.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 create -f -'
Aug 31 13:00:35.354: INFO: stderr: ""
Aug 31 13:00:35.354: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 31 13:00:35.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 delete e2e-test-crd-publish-openapi-7665-crds test-foo'
Aug 31 13:00:35.411: INFO: stderr: ""
Aug 31 13:00:35.412: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug 31 13:00:35.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 apply -f -'
Aug 31 13:00:35.601: INFO: stderr: ""
Aug 31 13:00:35.601: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 31 13:00:35.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 delete e2e-test-crd-publish-openapi-7665-crds test-foo'
Aug 31 13:00:35.654: INFO: stderr: ""
Aug 31 13:00:35.654: INFO: stdout: "e2e-test-crd-publish-openapi-7665-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: client-side validation (kubectl create and apply) rejects request with value outside defined enum values
Aug 31 13:00:35.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 create -f -'
Aug 31 13:00:35.825: INFO: rc: 1
STEP: client-side validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug 31 13:00:35.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 create -f -'
Aug 31 13:00:35.987: INFO: rc: 1
Aug 31 13:00:35.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 apply -f -'
Aug 31 13:00:36.162: INFO: rc: 1
STEP: client-side validation (kubectl create and apply) rejects request without required properties
Aug 31 13:00:36.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 create -f -'
Aug 31 13:00:36.338: INFO: rc: 1
Aug 31 13:00:36.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 --namespace=crd-publish-openapi-465 apply -f -'
Aug 31 13:00:36.510: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug 31 13:00:36.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 explain e2e-test-crd-publish-openapi-7665-crds'
Aug 31 13:00:36.678: INFO: stderr: ""
Aug 31 13:00:36.678: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7665-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug 31 13:00:36.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 explain e2e-test-crd-publish-openapi-7665-crds.metadata'
Aug 31 13:00:36.860: INFO: stderr: ""
Aug 31 13:00:36.860: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7665-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     The name of the cluster which the object belongs to. This is used to\n     distinguish resources with same name and namespace in different clusters.\n     This field is not set anywhere right now and apiserver is going to ignore\n     it if set in create or update request.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     NOT return a 409 - instead, it will either return 201 Created or 500 with\n     Reason ServerTimeout indicating a unique name could not be found in the\n     time allotted, and the client should retry (optionally after the time\n     indicated in the Retry-After header).\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     SelfLink is a URL representing this object. Populated by the system.\n     Read-only.\n\n     DEPRECATED Kubernetes will stop propagating this field in 1.20 release and\n     the field is planned to be removed in 1.21 release.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug 31 13:00:36.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 explain e2e-test-crd-publish-openapi-7665-crds.spec'
Aug 31 13:00:37.048: INFO: stderr: ""
Aug 31 13:00:37.048: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7665-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug 31 13:00:37.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 explain e2e-test-crd-publish-openapi-7665-crds.spec.bars'
Aug 31 13:00:37.222: INFO: stderr: ""
Aug 31 13:00:37.222: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7665-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug 31 13:00:37.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-465 explain e2e-test-crd-publish-openapi-7665-crds.spec.bars2'
Aug 31 13:00:37.408: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:39.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-465" for this suite.

• [SLOW TEST:7.706 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":346,"completed":246,"skipped":4757,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:39.623: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-d6f58d82-a538-4ea0-b9f4-cb17132cd4fb
STEP: Creating a pod to test consume configMaps
Aug 31 13:00:39.756: INFO: Waiting up to 5m0s for pod "pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9" in namespace "configmap-3642" to be "Succeeded or Failed"
Aug 31 13:00:39.759: INFO: Pod "pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.214927ms
Aug 31 13:00:41.765: INFO: Pod "pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008185892s
Aug 31 13:00:43.770: INFO: Pod "pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013301722s
STEP: Saw pod success
Aug 31 13:00:43.770: INFO: Pod "pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9" satisfied condition "Succeeded or Failed"
Aug 31 13:00:43.772: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9 container configmap-volume-test: <nil>
STEP: delete the pod
Aug 31 13:00:43.784: INFO: Waiting for pod pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9 to disappear
Aug 31 13:00:43.786: INFO: Pod pod-configmaps-ed78a08e-e85f-4272-9658-502d2419fdd9 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:43.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3642" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":346,"completed":247,"skipped":4764,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:43.794: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9316
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:00:44.364: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:00:47.384: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:47.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9316" for this suite.
STEP: Destroying namespace "webhook-9316-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":346,"completed":248,"skipped":4778,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:47.543: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9484
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 31 13:00:47.683: INFO: Waiting up to 5m0s for pod "pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef" in namespace "emptydir-9484" to be "Succeeded or Failed"
Aug 31 13:00:47.686: INFO: Pod "pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.771533ms
Aug 31 13:00:49.693: INFO: Pod "pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009552415s
Aug 31 13:00:51.700: INFO: Pod "pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016993282s
STEP: Saw pod success
Aug 31 13:00:51.700: INFO: Pod "pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef" satisfied condition "Succeeded or Failed"
Aug 31 13:00:51.702: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef container test-container: <nil>
STEP: delete the pod
Aug 31 13:00:51.719: INFO: Waiting for pod pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef to disappear
Aug 31 13:00:51.723: INFO: Pod pod-94a7db3d-b1f1-4149-95d1-d0618aea77ef no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:51.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9484" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":249,"skipped":4794,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:51.731: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6275
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should add annotations for pods in rc  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating Agnhost RC
Aug 31 13:00:51.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-6275 create -f -'
Aug 31 13:00:52.545: INFO: stderr: ""
Aug 31 13:00:52.545: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 31 13:00:53.551: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:00:53.551: INFO: Found 0 / 1
Aug 31 13:00:54.549: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:00:54.549: INFO: Found 0 / 1
Aug 31 13:00:55.549: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:00:55.549: INFO: Found 1 / 1
Aug 31 13:00:55.549: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug 31 13:00:55.556: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:00:55.556: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 31 13:00:55.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-6275 patch pod agnhost-primary-dvxvg -p {"metadata":{"annotations":{"x":"y"}}}'
Aug 31 13:00:55.614: INFO: stderr: ""
Aug 31 13:00:55.614: INFO: stdout: "pod/agnhost-primary-dvxvg patched\n"
STEP: checking annotations
Aug 31 13:00:55.616: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:00:55.616: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:00:55.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6275" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":346,"completed":250,"skipped":4822,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:00:55.624: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-998
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Performing setup for networking test in namespace pod-network-test-998
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 31 13:00:55.747: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 31 13:00:55.811: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:00:57.816: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:00:59.818: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:01:01.818: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:01:03.816: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:01:05.817: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:01:07.816: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 31 13:01:07.820: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 31 13:01:07.826: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug 31 13:01:07.829: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Aug 31 13:01:09.862: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Aug 31 13:01:09.862: INFO: Going to poll 10.4.130.153 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Aug 31 13:01:09.864: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.4.130.153:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:01:09.865: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:01:09.865: INFO: ExecWithOptions: Clientset creation
Aug 31 13:01:09.865: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.4.130.153%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:01:09.943: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 31 13:01:09.943: INFO: Going to poll 10.4.131.72 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Aug 31 13:01:09.946: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.4.131.72:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:01:09.946: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:01:09.946: INFO: ExecWithOptions: Clientset creation
Aug 31 13:01:09.946: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.4.131.72%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:01:10.036: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 31 13:01:10.036: INFO: Going to poll 10.4.129.116 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Aug 31 13:01:10.038: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.4.129.116:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:01:10.038: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:01:10.038: INFO: ExecWithOptions: Clientset creation
Aug 31 13:01:10.038: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.4.129.116%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:01:10.118: INFO: Found all 1 expected endpoints: [netserver-2]
Aug 31 13:01:10.118: INFO: Going to poll 10.4.132.16 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Aug 31 13:01:10.121: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.4.132.16:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:01:10.121: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:01:10.122: INFO: ExecWithOptions: Clientset creation
Aug 31 13:01:10.122: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.4.132.16%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:01:10.208: INFO: Found all 1 expected endpoints: [netserver-3]
[AfterEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:10.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-998" for this suite.

• [SLOW TEST:14.592 seconds]
[sig-network] Networking
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/networking.go:30
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":251,"skipped":4838,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:10.216: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2185
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug 31 13:01:20.763: INFO: 68 pods remaining
Aug 31 13:01:20.763: INFO: 68 pods has nil DeletionTimestamp
Aug 31 13:01:20.763: INFO: 
STEP: Gathering metrics
Aug 31 13:01:25.779: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0831 13:01:25.779684      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 31 13:01:25.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-27k48" in namespace "gc-2185"
Aug 31 13:01:25.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nnrs" in namespace "gc-2185"
Aug 31 13:01:25.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qrs7" in namespace "gc-2185"
Aug 31 13:01:25.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tjpr" in namespace "gc-2185"
Aug 31 13:01:25.812: INFO: Deleting pod "simpletest-rc-to-be-deleted-47zsg" in namespace "gc-2185"
Aug 31 13:01:25.818: INFO: Deleting pod "simpletest-rc-to-be-deleted-4b5ps" in namespace "gc-2185"
Aug 31 13:01:25.838: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qfjp" in namespace "gc-2185"
Aug 31 13:01:25.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-4v2vv" in namespace "gc-2185"
Aug 31 13:01:25.855: INFO: Deleting pod "simpletest-rc-to-be-deleted-5sf7m" in namespace "gc-2185"
Aug 31 13:01:25.867: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tqd5" in namespace "gc-2185"
Aug 31 13:01:25.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xf6b" in namespace "gc-2185"
Aug 31 13:01:25.888: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ndgc" in namespace "gc-2185"
Aug 31 13:01:25.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qlcw" in namespace "gc-2185"
Aug 31 13:01:25.911: INFO: Deleting pod "simpletest-rc-to-be-deleted-6trbs" in namespace "gc-2185"
Aug 31 13:01:25.928: INFO: Deleting pod "simpletest-rc-to-be-deleted-72nsr" in namespace "gc-2185"
Aug 31 13:01:25.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-74r4c" in namespace "gc-2185"
Aug 31 13:01:25.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bfgt" in namespace "gc-2185"
Aug 31 13:01:25.969: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cnbb" in namespace "gc-2185"
Aug 31 13:01:25.979: INFO: Deleting pod "simpletest-rc-to-be-deleted-8d5vz" in namespace "gc-2185"
Aug 31 13:01:25.984: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mfrl" in namespace "gc-2185"
Aug 31 13:01:26.006: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nn8h" in namespace "gc-2185"
Aug 31 13:01:26.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qc86" in namespace "gc-2185"
Aug 31 13:01:26.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-8wfv5" in namespace "gc-2185"
Aug 31 13:01:26.055: INFO: Deleting pod "simpletest-rc-to-be-deleted-97kzx" in namespace "gc-2185"
Aug 31 13:01:26.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-9cvfk" in namespace "gc-2185"
Aug 31 13:01:26.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-9gljh" in namespace "gc-2185"
Aug 31 13:01:26.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-9t8bh" in namespace "gc-2185"
Aug 31 13:01:26.103: INFO: Deleting pod "simpletest-rc-to-be-deleted-9x9fm" in namespace "gc-2185"
Aug 31 13:01:26.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4gss" in namespace "gc-2185"
Aug 31 13:01:26.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4wwm" in namespace "gc-2185"
Aug 31 13:01:26.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-bd6n9" in namespace "gc-2185"
Aug 31 13:01:26.152: INFO: Deleting pod "simpletest-rc-to-be-deleted-bls4t" in namespace "gc-2185"
Aug 31 13:01:26.159: INFO: Deleting pod "simpletest-rc-to-be-deleted-bn85v" in namespace "gc-2185"
Aug 31 13:01:26.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpzcv" in namespace "gc-2185"
Aug 31 13:01:26.178: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxqv9" in namespace "gc-2185"
Aug 31 13:01:26.187: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzgrz" in namespace "gc-2185"
Aug 31 13:01:26.195: INFO: Deleting pod "simpletest-rc-to-be-deleted-d44hq" in namespace "gc-2185"
Aug 31 13:01:26.203: INFO: Deleting pod "simpletest-rc-to-be-deleted-f69nh" in namespace "gc-2185"
Aug 31 13:01:26.212: INFO: Deleting pod "simpletest-rc-to-be-deleted-flh9v" in namespace "gc-2185"
Aug 31 13:01:26.220: INFO: Deleting pod "simpletest-rc-to-be-deleted-gczwz" in namespace "gc-2185"
Aug 31 13:01:26.228: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnpth" in namespace "gc-2185"
Aug 31 13:01:26.239: INFO: Deleting pod "simpletest-rc-to-be-deleted-gp8cv" in namespace "gc-2185"
Aug 31 13:01:26.246: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxdw8" in namespace "gc-2185"
Aug 31 13:01:26.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7kmz" in namespace "gc-2185"
Aug 31 13:01:26.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-hjsdm" in namespace "gc-2185"
Aug 31 13:01:26.267: INFO: Deleting pod "simpletest-rc-to-be-deleted-htn5m" in namespace "gc-2185"
Aug 31 13:01:26.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-hv6zk" in namespace "gc-2185"
Aug 31 13:01:26.286: INFO: Deleting pod "simpletest-rc-to-be-deleted-hv792" in namespace "gc-2185"
Aug 31 13:01:26.292: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4795" in namespace "gc-2185"
Aug 31 13:01:26.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-jcdb8" in namespace "gc-2185"
[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:26.311: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2185" for this suite.

• [SLOW TEST:16.104 seconds]
[sig-api-machinery] Garbage collector
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":346,"completed":252,"skipped":4874,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:26.325: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4431
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name configmap-test-volume-51d942c4-3ef7-4300-9973-5252a5a650d2
STEP: Creating a pod to test consume configMaps
Aug 31 13:01:26.462: INFO: Waiting up to 5m0s for pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098" in namespace "configmap-4431" to be "Succeeded or Failed"
Aug 31 13:01:26.464: INFO: Pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098": Phase="Pending", Reason="", readiness=false. Elapsed: 2.149126ms
Aug 31 13:01:28.470: INFO: Pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008179965s
Aug 31 13:01:30.474: INFO: Pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01240726s
Aug 31 13:01:32.483: INFO: Pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021116388s
STEP: Saw pod success
Aug 31 13:01:32.483: INFO: Pod "pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098" satisfied condition "Succeeded or Failed"
Aug 31 13:01:32.488: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 13:01:32.508: INFO: Waiting for pod pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098 to disappear
Aug 31 13:01:32.511: INFO: Pod pod-configmaps-9f0367f0-efce-4002-9233-b73b40011098 no longer exists
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:32.511: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4431" for this suite.

• [SLOW TEST:6.194 seconds]
[sig-storage] ConfigMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":346,"completed":253,"skipped":4895,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:32.520: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-2272
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/rc.go:54
[It] should release no longer matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug 31 13:01:32.654: INFO: Pod name pod-release: Found 0 pods out of 1
Aug 31 13:01:37.659: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:38.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-2272" for this suite.

• [SLOW TEST:6.164 seconds]
[sig-apps] ReplicationController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":346,"completed":254,"skipped":4930,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] RuntimeClass
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:38.685: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-217
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug 31 13:01:38.831: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug 31 13:01:38.845: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:38.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-217" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":346,"completed":255,"skipped":4972,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:38.873: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-1477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/instrumentation/events.go:81
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:39.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-1477" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":346,"completed":256,"skipped":5024,"failed":0}
SSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:39.038: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6327
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward api env vars
Aug 31 13:01:39.175: INFO: Waiting up to 5m0s for pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431" in namespace "downward-api-6327" to be "Succeeded or Failed"
Aug 31 13:01:39.178: INFO: Pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431": Phase="Pending", Reason="", readiness=false. Elapsed: 2.50023ms
Aug 31 13:01:41.183: INFO: Pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431": Phase="Running", Reason="", readiness=true. Elapsed: 2.007803424s
Aug 31 13:01:43.189: INFO: Pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431": Phase="Running", Reason="", readiness=false. Elapsed: 4.013996209s
Aug 31 13:01:45.194: INFO: Pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018520852s
STEP: Saw pod success
Aug 31 13:01:45.194: INFO: Pod "downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431" satisfied condition "Succeeded or Failed"
Aug 31 13:01:45.196: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431 container dapi-container: <nil>
STEP: delete the pod
Aug 31 13:01:45.211: INFO: Waiting for pod downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431 to disappear
Aug 31 13:01:45.214: INFO: Pod downward-api-d652b2f6-ce39-4858-a425-21ce03fa7431 no longer exists
[AfterEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:45.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6327" for this suite.

• [SLOW TEST:6.182 seconds]
[sig-node] Downward API
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":346,"completed":257,"skipped":5028,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:45.220: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-9712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/endpointslice.go:49
[It] should support creating EndpointSlice API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 31 13:01:45.367: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 31 13:01:45.371: INFO: starting watch
STEP: patching
STEP: updating
Aug 31 13:01:45.381: INFO: waiting for watch events with expected annotations
Aug 31 13:01:45.382: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:45.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9712" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":346,"completed":258,"skipped":5043,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:45.405: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4118
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-29be1652-8e18-471e-85bd-fc023407be1d
STEP: Creating a pod to test consume configMaps
Aug 31 13:01:45.539: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512" in namespace "projected-4118" to be "Succeeded or Failed"
Aug 31 13:01:45.542: INFO: Pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512": Phase="Pending", Reason="", readiness=false. Elapsed: 3.267939ms
Aug 31 13:01:47.553: INFO: Pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512": Phase="Running", Reason="", readiness=true. Elapsed: 2.014107833s
Aug 31 13:01:49.561: INFO: Pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512": Phase="Running", Reason="", readiness=false. Elapsed: 4.022056272s
Aug 31 13:01:51.568: INFO: Pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.029103479s
STEP: Saw pod success
Aug 31 13:01:51.568: INFO: Pod "pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512" satisfied condition "Succeeded or Failed"
Aug 31 13:01:51.570: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512 container agnhost-container: <nil>
STEP: delete the pod
Aug 31 13:01:51.594: INFO: Waiting for pod pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512 to disappear
Aug 31 13:01:51.597: INFO: Pod pod-projected-configmaps-5fe7bef3-25dd-4444-b1ee-e3b5a57e0512 no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:51.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4118" for this suite.

• [SLOW TEST:6.199 seconds]
[sig-storage] Projected configMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":346,"completed":259,"skipped":5094,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:51.605: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:01:51.767: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d1aee2c4-a713-43f7-98be-714f736f1a7a", Controller:(*bool)(0xc006fe21de), BlockOwnerDeletion:(*bool)(0xc006fe21df)}}
Aug 31 13:01:51.776: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"04a00508-2d36-485c-abc9-795d9fab7cf1", Controller:(*bool)(0xc006fe2446), BlockOwnerDeletion:(*bool)(0xc006fe2447)}}
Aug 31 13:01:51.779: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"580b9e8c-4553-4a41-85bd-d2e7dc3e28c3", Controller:(*bool)(0xc006fe26ea), BlockOwnerDeletion:(*bool)(0xc006fe26eb)}}
[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:56.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6976" for this suite.

• [SLOW TEST:5.190 seconds]
[sig-api-machinery] Garbage collector
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":346,"completed":260,"skipped":5099,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] server version
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:56.794: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-3208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Request ServerVersion
STEP: Confirm major version
Aug 31 13:01:56.917: INFO: Major version: 1
STEP: Confirm minor version
Aug 31 13:01:56.917: INFO: cleanMinorVersion: 23
Aug 31 13:01:56.917: INFO: Minor version: 23
[AfterEach] [sig-api-machinery] server version
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:01:56.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-3208" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":346,"completed":261,"skipped":5115,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:01:56.924: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3047
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should create services for rc  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating Agnhost RC
Aug 31 13:01:57.050: INFO: namespace kubectl-3047
Aug 31 13:01:57.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-3047 create -f -'
Aug 31 13:01:57.225: INFO: stderr: ""
Aug 31 13:01:57.225: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 31 13:01:58.231: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:01:58.231: INFO: Found 0 / 1
Aug 31 13:01:59.231: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:01:59.231: INFO: Found 1 / 1
Aug 31 13:01:59.231: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 31 13:01:59.233: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 31 13:01:59.233: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 31 13:01:59.233: INFO: wait on agnhost-primary startup in kubectl-3047 
Aug 31 13:01:59.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-3047 logs agnhost-primary-khdhk agnhost-primary'
Aug 31 13:01:59.297: INFO: stderr: ""
Aug 31 13:01:59.297: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug 31 13:01:59.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-3047 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug 31 13:01:59.357: INFO: stderr: ""
Aug 31 13:01:59.357: INFO: stdout: "service/rm2 exposed\n"
Aug 31 13:01:59.361: INFO: Service rm2 in namespace kubectl-3047 found.
STEP: exposing service
Aug 31 13:02:01.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-3047 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug 31 13:02:01.431: INFO: stderr: ""
Aug 31 13:02:01.431: INFO: stdout: "service/rm3 exposed\n"
Aug 31 13:02:01.436: INFO: Service rm3 in namespace kubectl-3047 found.
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:03.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3047" for this suite.

• [SLOW TEST:6.530 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Kubectl expose
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1248
    should create services for rc  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":346,"completed":262,"skipped":5116,"failed":0}
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:03.455: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4628
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/disruption.go:69
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:03.578: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-7347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-4628
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:07.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-7347" for this suite.
[AfterEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:07.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4628" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":346,"completed":263,"skipped":5119,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-instrumentation] Events
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:07.756: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8551
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create set of events
Aug 31 13:02:07.880: INFO: created test-event-1
Aug 31 13:02:07.882: INFO: created test-event-2
Aug 31 13:02:07.884: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug 31 13:02:07.887: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug 31 13:02:07.897: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:07.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8551" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":346,"completed":264,"skipped":5168,"failed":0}
SSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-instrumentation] Events
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:07.908: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-5910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:08.062: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-5910" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":346,"completed":265,"skipped":5175,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:08.069: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug 31 13:02:10.212: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3538 PodName:var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:02:10.212: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:02:10.213: INFO: ExecWithOptions: Clientset creation
Aug 31 13:02:10.213: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/var-expansion-3538/pods/var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true %!s(MISSING))
STEP: test for file in mounted path
Aug 31 13:02:10.292: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3538 PodName:var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:02:10.292: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:02:10.292: INFO: ExecWithOptions: Clientset creation
Aug 31 13:02:10.292: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/var-expansion-3538/pods/var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true %!s(MISSING))
STEP: updating the annotation value
Aug 31 13:02:10.889: INFO: Successfully updated pod "var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug 31 13:02:10.898: INFO: Deleting pod "var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90" in namespace "var-expansion-3538"
Aug 31 13:02:10.901: INFO: Wait up to 5m0s for pod "var-expansion-fa7ea1d5-00b5-422e-832c-7902b22d4a90" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:02:44.909: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3538" for this suite.

• [SLOW TEST:36.848 seconds]
[sig-node] Variable Expansion
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":346,"completed":266,"skipped":5179,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:02:44.918: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2679
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/container_probe.go:59
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating pod liveness-d8c2590f-58f1-422d-973a-cd617110c55b in namespace container-probe-2679
Aug 31 13:02:47.059: INFO: Started pod liveness-d8c2590f-58f1-422d-973a-cd617110c55b in namespace container-probe-2679
STEP: checking the pod's current state and verifying that restartCount is present
Aug 31 13:02:47.062: INFO: Initial restart count of pod liveness-d8c2590f-58f1-422d-973a-cd617110c55b is 0
Aug 31 13:03:07.141: INFO: Restart count of pod container-probe-2679/liveness-d8c2590f-58f1-422d-973a-cd617110c55b is now 1 (20.079312949s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:07.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2679" for this suite.

• [SLOW TEST:22.239 seconds]
[sig-node] Probing container
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":346,"completed":267,"skipped":5189,"failed":0}
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:07.157: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6066
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name cm-test-opt-del-d94d0d17-585b-4b3c-aa89-eba170184003
STEP: Creating configMap with name cm-test-opt-upd-629d8840-e8ec-4d2a-8487-61e2ac309c5d
STEP: Creating the pod
Aug 31 13:03:07.301: INFO: The status of Pod pod-projected-configmaps-94ef0837-9444-43f3-980f-d1cd5b43744e is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:03:09.308: INFO: The status of Pod pod-projected-configmaps-94ef0837-9444-43f3-980f-d1cd5b43744e is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-d94d0d17-585b-4b3c-aa89-eba170184003
STEP: Updating configmap cm-test-opt-upd-629d8840-e8ec-4d2a-8487-61e2ac309c5d
STEP: Creating configMap with name cm-test-opt-create-cd00e94e-dc5e-47f3-a16b-c20ff48dca85
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:11.355: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6066" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":268,"skipped":5189,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:11.365: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-7025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/endpointslice.go:49
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:03:11.502: INFO: Endpoints addresses: [10.4.0.4] , ports: [443]
Aug 31 13:03:11.502: INFO: EndpointSlices addresses: [10.4.0.4] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:11.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-7025" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":346,"completed":269,"skipped":5226,"failed":0}
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] LimitRange
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:11.509: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug 31 13:03:11.643: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug 31 13:03:11.647: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 31 13:03:11.647: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug 31 13:03:11.657: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 31 13:03:11.657: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug 31 13:03:11.670: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug 31 13:03:11.670: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug 31 13:03:18.716: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:18.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-927" for this suite.

• [SLOW TEST:7.231 seconds]
[sig-scheduling] LimitRange
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":346,"completed":270,"skipped":5234,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:18.740: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-132
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward api env vars
Aug 31 13:03:18.876: INFO: Waiting up to 5m0s for pod "downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75" in namespace "downward-api-132" to be "Succeeded or Failed"
Aug 31 13:03:18.879: INFO: Pod "downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75": Phase="Pending", Reason="", readiness=false. Elapsed: 3.076935ms
Aug 31 13:03:20.884: INFO: Pod "downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007968474s
Aug 31 13:03:22.890: INFO: Pod "downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01419131s
STEP: Saw pod success
Aug 31 13:03:22.890: INFO: Pod "downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75" satisfied condition "Succeeded or Failed"
Aug 31 13:03:22.892: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75 container dapi-container: <nil>
STEP: delete the pod
Aug 31 13:03:22.905: INFO: Waiting for pod downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75 to disappear
Aug 31 13:03:22.908: INFO: Pod downward-api-c0c8fee0-4a75-4d41-9ce8-5d2e15b55e75 no longer exists
[AfterEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:22.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-132" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":346,"completed":271,"skipped":5272,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:22.915: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7247
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:03:23.671: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:03:26.687: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:26.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7247" for this suite.
STEP: Destroying namespace "webhook-7247-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":346,"completed":272,"skipped":5286,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:26.866: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward api env vars
Aug 31 13:03:27.007: INFO: Waiting up to 5m0s for pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d" in namespace "downward-api-8081" to be "Succeeded or Failed"
Aug 31 13:03:27.034: INFO: Pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d": Phase="Pending", Reason="", readiness=false. Elapsed: 26.658504ms
Aug 31 13:03:29.041: INFO: Pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d": Phase="Running", Reason="", readiness=true. Elapsed: 2.033519995s
Aug 31 13:03:31.046: INFO: Pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d": Phase="Running", Reason="", readiness=false. Elapsed: 4.038652849s
Aug 31 13:03:33.058: INFO: Pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.050159358s
STEP: Saw pod success
Aug 31 13:03:33.058: INFO: Pod "downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d" satisfied condition "Succeeded or Failed"
Aug 31 13:03:33.060: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d container dapi-container: <nil>
STEP: delete the pod
Aug 31 13:03:33.077: INFO: Waiting for pod downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d to disappear
Aug 31 13:03:33.082: INFO: Pod downward-api-2c69ed19-5d7e-4be0-9b19-f9155b1cf13d no longer exists
[AfterEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:33.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8081" for this suite.

• [SLOW TEST:6.222 seconds]
[sig-node] Downward API
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":346,"completed":273,"skipped":5322,"failed":0}
SSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:33.088: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7721
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating projection with secret that has name projected-secret-test-map-f7622d83-d321-4bee-8824-afeea6d7a1d3
STEP: Creating a pod to test consume secrets
Aug 31 13:03:33.227: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6" in namespace "projected-7721" to be "Succeeded or Failed"
Aug 31 13:03:33.229: INFO: Pod "pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6": Phase="Pending", Reason="", readiness=false. Elapsed: 1.75382ms
Aug 31 13:03:35.233: INFO: Pod "pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00520922s
Aug 31 13:03:37.240: INFO: Pod "pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012409645s
STEP: Saw pod success
Aug 31 13:03:37.240: INFO: Pod "pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6" satisfied condition "Succeeded or Failed"
Aug 31 13:03:37.243: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 31 13:03:37.256: INFO: Waiting for pod pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6 to disappear
Aug 31 13:03:37.258: INFO: Pod pod-projected-secrets-56b3cc35-e311-42af-b968-c2744ce9a2d6 no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:37.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7721" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":346,"completed":274,"skipped":5325,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:37.266: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-3619
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 31 13:03:37.907: INFO: starting watch
STEP: patching
STEP: updating
Aug 31 13:03:37.914: INFO: waiting for watch events with expected annotations
Aug 31 13:03:37.914: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:37.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-3619" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":346,"completed":275,"skipped":5386,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:37.958: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide container's cpu request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 13:03:38.090: INFO: Waiting up to 5m0s for pod "downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4" in namespace "downward-api-2802" to be "Succeeded or Failed"
Aug 31 13:03:38.094: INFO: Pod "downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.210947ms
Aug 31 13:03:40.099: INFO: Pod "downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4": Phase="Running", Reason="", readiness=true. Elapsed: 2.008403315s
Aug 31 13:03:42.107: INFO: Pod "downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016978215s
STEP: Saw pod success
Aug 31 13:03:42.107: INFO: Pod "downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4" satisfied condition "Succeeded or Failed"
Aug 31 13:03:42.109: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4 container client-container: <nil>
STEP: delete the pod
Aug 31 13:03:42.123: INFO: Waiting for pod downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4 to disappear
Aug 31 13:03:42.126: INFO: Pod downwardapi-volume-61fd178d-3a7f-4c06-b617-954aea84c6a4 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:42.126: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2802" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":346,"completed":276,"skipped":5407,"failed":0}
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:42.143: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-4826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/kubelet.go:38
[It] should print the output to logs [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:03:42.277: INFO: The status of Pod busybox-scheduling-867b1bad-5d11-4404-a465-0cc1abba4bd6 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:03:44.285: INFO: The status of Pod busybox-scheduling-867b1bad-5d11-4404-a465-0cc1abba4bd6 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:44.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-4826" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":346,"completed":277,"skipped":5414,"failed":0}
S
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Aggregator
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:44.300: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-9054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:77
Aug 31 13:03:44.426: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Registering the sample API server.
Aug 31 13:03:44.941: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Aug 31 13:03:46.975: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-7b4b967944\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 13:03:48.981: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-7b4b967944\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 13:03:50.981: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-7b4b967944\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 13:03:52.994: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-7b4b967944\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 31 13:03:58.001: INFO: Waited 3.015151237s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug 31 13:03:58.194: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:03:58.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-9054" for this suite.

• [SLOW TEST:14.791 seconds]
[sig-api-machinery] Aggregator
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":346,"completed":278,"skipped":5415,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:03:59.092: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3904
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-3904
[It] should validate Statefulset Status endpoints [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating statefulset ss in namespace statefulset-3904
Aug 31 13:03:59.232: INFO: Found 0 stateful pods, waiting for 1
Aug 31 13:04:09.239: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug 31 13:04:09.252: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug 31 13:04:09.257: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug 31 13:04:09.259: INFO: Observed &StatefulSet event: ADDED
Aug 31 13:04:09.259: INFO: Found Statefulset ss in namespace statefulset-3904 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 31 13:04:09.259: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug 31 13:04:09.259: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 31 13:04:09.263: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug 31 13:04:09.264: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 13:04:09.265: INFO: Deleting all statefulset in ns statefulset-3904
Aug 31 13:04:09.266: INFO: Scaling statefulset ss to 0
Aug 31 13:04:19.284: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:04:19.287: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:04:19.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3904" for this suite.

• [SLOW TEST:20.211 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    should validate Statefulset Status endpoints [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":346,"completed":279,"skipped":5491,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:04:19.304: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-5135
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:04:25.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6693" for this suite.
STEP: Destroying namespace "nsdeletetest-1808" for this suite.
Aug 31 13:04:25.708: INFO: Namespace nsdeletetest-1808 was already deleted
STEP: Destroying namespace "nsdeletetest-5135" for this suite.

• [SLOW TEST:6.408 seconds]
[sig-api-machinery] Namespaces [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":346,"completed":280,"skipped":5504,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:04:25.712: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Kubectl replace
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1573
[It] should update a single-container pod's image  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 31 13:04:25.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5341 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 31 13:04:25.891: INFO: stderr: ""
Aug 31 13:04:25.891: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug 31 13:04:30.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5341 get pod e2e-test-httpd-pod -o json'
Aug 31 13:04:30.996: INFO: stderr: ""
Aug 31 13:04:30.996: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"8bb9d3c32f91fc3cafa626603a7a86ac876a4a790fe8de9d0b8b7b7765ad4827\",\n            \"cni.projectcalico.org/podIP\": \"10.4.132.58/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.4.132.58/32\",\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-08-31T13:04:25Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5341\",\n        \"resourceVersion\": \"48162\",\n        \"uid\": \"5c447605-df4c-44b8-b50a-ededea3e14d5\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-q6r8g\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nodepool-qycy5-000003\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-q6r8g\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-31T13:04:25Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-31T13:04:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-31T13:04:27Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-31T13:04:25Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://40616198de07dd86569d77764d356c91accbb2894b90dfe1f8c1fdf094acefe9\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-31T13:04:26Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.4.3.7\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.4.132.58\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.4.132.58\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-31T13:04:25Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug 31 13:04:30.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5341 replace -f -'
Aug 31 13:04:31.884: INFO: stderr: ""
Aug 31 13:04:31.884: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1577
Aug 31 13:04:31.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5341 delete pods e2e-test-httpd-pod'
Aug 31 13:04:34.306: INFO: stderr: ""
Aug 31 13:04:34.306: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:04:34.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5341" for this suite.

• [SLOW TEST:8.606 seconds]
[sig-cli] Kubectl client
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/framework.go:23
  Kubectl replace
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1570
    should update a single-container pod's image  [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":346,"completed":281,"skipped":5513,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:04:34.317: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should support --unix-socket=/path  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Starting the proxy
Aug 31 13:04:34.447: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2692 proxy --unix-socket=/tmp/kubectl-proxy-unix3734830600/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:04:34.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2692" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":346,"completed":282,"skipped":5514,"failed":0}

------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:04:34.489: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating secret secrets-8470/secret-test-312e3c9d-204e-4ce8-a8b7-304c242ec9ee
STEP: Creating a pod to test consume secrets
Aug 31 13:04:34.623: INFO: Waiting up to 5m0s for pod "pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6" in namespace "secrets-8470" to be "Succeeded or Failed"
Aug 31 13:04:34.625: INFO: Pod "pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.63003ms
Aug 31 13:04:36.633: INFO: Pod "pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010668794s
Aug 31 13:04:38.639: INFO: Pod "pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016446619s
STEP: Saw pod success
Aug 31 13:04:38.639: INFO: Pod "pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6" satisfied condition "Succeeded or Failed"
Aug 31 13:04:38.644: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6 container env-test: <nil>
STEP: delete the pod
Aug 31 13:04:38.658: INFO: Waiting for pod pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6 to disappear
Aug 31 13:04:38.661: INFO: Pod pod-configmaps-1c26cfb9-ac96-4f9d-8a55-d0b0f23cfae6 no longer exists
[AfterEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:04:38.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8470" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":346,"completed":283,"skipped":5514,"failed":0}
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:04:38.668: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-8790
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:90
Aug 31 13:04:38.790: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 31 13:04:38.796: INFO: Waiting for terminating namespaces to be deleted...
Aug 31 13:04:38.798: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000000 before test
Aug 31 13:04:38.807: INFO: azure-cloud-node-manager-wwzl5 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 13:04:38.807: INFO: azure-scheduled-events-228j9 from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 13:04:38.807: INFO: calico-node-wqzj4 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 13:04:38.807: INFO: cert-exporter-daemonset-sjcjs from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 13:04:38.807: INFO: csi-azuredisk-node-kvgvp from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.807: INFO: csi-azurefile-node-2rlbt from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.807: INFO: external-dns-9b89bc6d9-r2rmb from kube-system started at 2022-08-31 12:51:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container external-dns ready: true, restart count 0
Aug 31 13:04:38.807: INFO: kube-proxy-skgwk from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 13:04:38.807: INFO: kube-state-metrics-7549f69f7b-4wz2d from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 31 13:04:38.807: INFO: metrics-server-5fb454cbc5-444p6 from kube-system started at 2022-08-31 12:51:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container metrics-server ready: true, restart count 0
Aug 31 13:04:38.807: INFO: net-exporter-j45lm from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 13:04:38.807: INFO: node-exporter-v1-3-1-6zbf7 from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 13:04:38.807: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-sxrpf from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 13:04:38.807: INFO: vertical-pod-autoscaler-recommender-67b5d54d5f-dt5lh from kube-system started at 2022-08-31 12:33:49 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 13:04:38.807: INFO: vertical-pod-autoscaler-updater-7bdddf5b-t6lgw from kube-system started at 2022-08-31 11:53:15 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 13:04:38.807: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-l2q54 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 13:04:38.807: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 13:04:38.807: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000001 before test
Aug 31 13:04:38.816: INFO: azure-cloud-node-manager-jgc5k from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 13:04:38.816: INFO: azure-scheduled-events-pmkkg from kube-system started at 2022-08-31 12:51:37 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 13:04:38.816: INFO: calico-node-wc6pv from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 13:04:38.816: INFO: cert-exporter-daemonset-qgrcx from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 13:04:38.816: INFO: csi-azuredisk-node-2qvkc from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.816: INFO: csi-azurefile-node-6p9mh from kube-system started at 2022-08-31 11:45:30 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.816: INFO: kube-proxy-rhrp2 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 13:04:38.816: INFO: net-exporter-hkzv6 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 13:04:38.816: INFO: node-exporter-v1-3-1-wn7v7 from kube-system started at 2022-08-31 11:45:30 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 13:04:38.816: INFO: sonobuoy from sonobuoy started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 31 13:04:38.816: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-hfx7z from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 13:04:38.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 13:04:38.816: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000002 before test
Aug 31 13:04:38.826: INFO: azure-cloud-node-manager-bdkwc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 13:04:38.826: INFO: azure-scheduled-events-fvclm from kube-system started at 2022-08-31 11:46:32 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 13:04:38.826: INFO: calico-node-g6p5m from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 13:04:38.826: INFO: cert-exporter-daemonset-ctrtd from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 13:04:38.826: INFO: coredns-workers-8666c764cd-5k24f from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container coredns ready: true, restart count 0
Aug 31 13:04:38.826: INFO: coredns-workers-8666c764cd-fh979 from kube-system started at 2022-08-31 11:45:49 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container coredns ready: true, restart count 0
Aug 31 13:04:38.826: INFO: csi-azuredisk-controller-54668dc445-s8q9b from kube-system started at 2022-08-31 12:33:49 +0000 UTC (6 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.826: INFO: csi-azuredisk-node-qvvqc from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.826: INFO: csi-azurefile-controller-59b55cddbd-mbl67 from kube-system started at 2022-08-31 12:33:49 +0000 UTC (6 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-attacher ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-resizer ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container csi-snapshotter ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.826: INFO: csi-azurefile-node-ql4sl from kube-system started at 2022-08-31 11:45:29 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.826: INFO: kube-proxy-gvjs4 from kube-system started at 2022-08-31 11:55:22 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 13:04:38.826: INFO: net-exporter-dggpf from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 13:04:38.826: INFO: node-exporter-v1-3-1-q226d from kube-system started at 2022-08-31 11:45:29 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 13:04:38.826: INFO: vertical-pod-autoscaler-admission-controller-556558c8d9-7f5cd from kube-system started at 2022-08-31 11:53:16 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container vertical-pod-autoscaler-app ready: true, restart count 0
Aug 31 13:04:38.826: INFO: sonobuoy-e2e-job-61cdc82114084168 from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container e2e ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 13:04:38.826: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-ln45x from sonobuoy started at 2022-08-31 11:46:40 +0000 UTC (2 container statuses recorded)
Aug 31 13:04:38.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 31 13:04:38.826: INFO: 
Logging pods the apiserver thinks is on node nodepool-qycy5-000003 before test
Aug 31 13:04:38.834: INFO: azure-cloud-node-manager-wbgn8 from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container node-manager-app ready: true, restart count 0
Aug 31 13:04:38.834: INFO: azure-scheduled-events-cd85s from kube-system started at 2022-08-31 12:57:02 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container azure-scheduled-events ready: true, restart count 0
Aug 31 13:04:38.834: INFO: calico-node-fscsh from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container calico-node ready: true, restart count 0
Aug 31 13:04:38.834: INFO: cert-exporter-daemonset-mgqvm from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container cert-exporter ready: true, restart count 0
Aug 31 13:04:38.834: INFO: csi-azuredisk-node-wwxz4 from kube-system started at 2022-08-31 12:56:12 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container azuredisk ready: true, restart count 0
Aug 31 13:04:38.834: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.834: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.834: INFO: csi-azurefile-node-442r6 from kube-system started at 2022-08-31 12:56:12 +0000 UTC (3 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container azurefile ready: true, restart count 0
Aug 31 13:04:38.834: INFO: 	Container liveness-probe ready: true, restart count 0
Aug 31 13:04:38.834: INFO: 	Container node-driver-registrar ready: true, restart count 0
Aug 31 13:04:38.834: INFO: kube-proxy-w6wpn from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container kube-proxy ready: true, restart count 0
Aug 31 13:04:38.834: INFO: net-exporter-4fsp7 from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container net-exporter ready: true, restart count 0
Aug 31 13:04:38.834: INFO: node-exporter-v1-3-1-7zgmv from kube-system started at 2022-08-31 12:56:12 +0000 UTC (1 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container node-exporter ready: true, restart count 0
Aug 31 13:04:38.834: INFO: sonobuoy-systemd-logs-daemon-set-6be58ecc922e4b11-mn9qv from sonobuoy started at 2022-08-31 12:56:12 +0000 UTC (2 container statuses recorded)
Aug 31 13:04:38.834: INFO: 	Container sonobuoy-worker ready: false, restart count 6
Aug 31 13:04:38.834: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-df0b6eb8-5b44-4cc3-ad1f-82939e610b69 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.4.3.7 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-df0b6eb8-5b44-4cc3-ad1f-82939e610b69 off the node nodepool-qycy5-000003
STEP: verifying the node doesn't have the label kubernetes.io/e2e-df0b6eb8-5b44-4cc3-ad1f-82939e610b69
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:09:46.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
Aug 31 13:09:46.950: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:48.960: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:50.957: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:52.958: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:54.954: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:56.959: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:09:58.960: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:10:00.958: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:10:02.960: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:10:04.956: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:10:06.958: INFO: Condition Ready of node nodepool-qycy5-000004 is false, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
Aug 31 13:10:08.959: INFO: Condition Ready of node nodepool-qycy5-000004 is true, but Node is tainted by NodeController with [{node.cloudprovider.kubernetes.io/uninitialized true NoSchedule <nil>} {node.kubernetes.io/not-ready  NoExecute 2022-08-31 13:09:40 +0000 UTC}]. Failure
STEP: Destroying namespace "sched-pred-8790" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/predicates.go:81

• [SLOW TEST:332.295 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":346,"completed":284,"skipped":5522,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:10.963: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-9545
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:23.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-9545" for this suite.

• [SLOW TEST:12.145 seconds]
[sig-apps] Job
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":346,"completed":285,"skipped":5542,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:23.109: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4630
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 13:10:23.239: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c" in namespace "projected-4630" to be "Succeeded or Failed"
Aug 31 13:10:23.242: INFO: Pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.470125ms
Aug 31 13:10:25.244: INFO: Pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c": Phase="Running", Reason="", readiness=true. Elapsed: 2.005193548s
Aug 31 13:10:27.253: INFO: Pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c": Phase="Running", Reason="", readiness=false. Elapsed: 4.013462021s
Aug 31 13:10:29.261: INFO: Pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021862687s
STEP: Saw pod success
Aug 31 13:10:29.261: INFO: Pod "downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c" satisfied condition "Succeeded or Failed"
Aug 31 13:10:29.263: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c container client-container: <nil>
STEP: delete the pod
Aug 31 13:10:29.277: INFO: Waiting for pod downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c to disappear
Aug 31 13:10:29.279: INFO: Pod downwardapi-volume-cbfa6c35-e69c-4d84-9790-3515fcb5419c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:29.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4630" for this suite.

• [SLOW TEST:6.177 seconds]
[sig-storage] Projected downwardAPI
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":286,"skipped":5564,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:29.286: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4180
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating the pod
Aug 31 13:10:29.428: INFO: The status of Pod labelsupdatea5c0ede9-8e5b-4d4f-b6eb-bee48305941e is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:10:31.435: INFO: The status of Pod labelsupdatea5c0ede9-8e5b-4d4f-b6eb-bee48305941e is Running (Ready = true)
Aug 31 13:10:31.954: INFO: Successfully updated pod "labelsupdatea5c0ede9-8e5b-4d4f-b6eb-bee48305941e"
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:35.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4180" for this suite.

• [SLOW TEST:6.696 seconds]
[sig-storage] Downward API volume
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":346,"completed":287,"skipped":5576,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:35.982: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-8090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-96f5d3c7-83f6-4d4d-a247-eae07c9dc8cc-7455
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:36.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-8090" for this suite.
STEP: Destroying namespace "nspatchtest-96f5d3c7-83f6-4d4d-a247-eae07c9dc8cc-7455" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":346,"completed":288,"skipped":5583,"failed":0}
SS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:36.252: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/init_container.go:162
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating the pod
Aug 31 13:10:36.379: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:43.445: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5032" for this suite.

• [SLOW TEST:7.206 seconds]
[sig-node] InitContainer [NodeConformance]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":346,"completed":289,"skipped":5585,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:43.457: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3782
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:10:44.070: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:10:47.097: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:10:47.102: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9439-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:10:50.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3782" for this suite.
STEP: Destroying namespace "webhook-3782-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:6.773 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":346,"completed":290,"skipped":5590,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:10:50.231: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:06.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8153" for this suite.

• [SLOW TEST:16.239 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":346,"completed":291,"skipped":5599,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:06.471: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-2884
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 31 13:11:06.606: INFO: Waiting up to 5m0s for pod "security-context-1a119854-f762-49e2-af11-75e64da25de8" in namespace "security-context-2884" to be "Succeeded or Failed"
Aug 31 13:11:06.609: INFO: Pod "security-context-1a119854-f762-49e2-af11-75e64da25de8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.730337ms
Aug 31 13:11:08.616: INFO: Pod "security-context-1a119854-f762-49e2-af11-75e64da25de8": Phase="Running", Reason="", readiness=false. Elapsed: 2.010741547s
Aug 31 13:11:10.621: INFO: Pod "security-context-1a119854-f762-49e2-af11-75e64da25de8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01575753s
STEP: Saw pod success
Aug 31 13:11:10.621: INFO: Pod "security-context-1a119854-f762-49e2-af11-75e64da25de8" satisfied condition "Succeeded or Failed"
Aug 31 13:11:10.624: INFO: Trying to get logs from node nodepool-qycy5-000004 pod security-context-1a119854-f762-49e2-af11-75e64da25de8 container test-container: <nil>
STEP: delete the pod
Aug 31 13:11:10.638: INFO: Waiting for pod security-context-1a119854-f762-49e2-af11-75e64da25de8 to disappear
Aug 31 13:11:10.640: INFO: Pod security-context-1a119854-f762-49e2-af11-75e64da25de8 no longer exists
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:10.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-2884" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":346,"completed":292,"skipped":5645,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:10.648: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8961
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:27.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8961" for this suite.

• [SLOW TEST:17.181 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":346,"completed":293,"skipped":5647,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:27.828: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6949
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:126
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:11:28.309: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:11:31.332: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:11:31.338: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:34.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6949" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:137

• [SLOW TEST:6.672 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":346,"completed":294,"skipped":5648,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:34.501: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-5359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/disruption.go:69
[It] should observe PodDisruptionBudget status updated [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug 31 13:11:36.687: INFO: running pods: 0 < 3
Aug 31 13:11:38.696: INFO: running pods: 2 < 3
[AfterEach] [sig-apps] DisruptionController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:40.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-5359" for this suite.

• [SLOW TEST:6.204 seconds]
[sig-apps] DisruptionController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":346,"completed":295,"skipped":5696,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Ingress API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:40.707: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-3534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 31 13:11:40.861: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 31 13:11:40.865: INFO: starting watch
STEP: patching
STEP: updating
Aug 31 13:11:40.873: INFO: waiting for watch events with expected annotations
Aug 31 13:11:40.873: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:40.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-3534" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":346,"completed":296,"skipped":5737,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:40.910: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/rc.go:54
[It] should test the lifecycle of a ReplicationController [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:46.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6629" for this suite.

• [SLOW TEST:5.200 seconds]
[sig-apps] ReplicationController
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":346,"completed":297,"skipped":5754,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:46.111: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:11:46.531: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:11:49.551: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:11:49.556: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3355-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:52.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4469" for this suite.
STEP: Destroying namespace "webhook-4469-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:6.579 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":346,"completed":298,"skipped":5791,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:52.690: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create deployment with httpd image
Aug 31 13:11:52.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2965 create -f -'
Aug 31 13:11:54.074: INFO: stderr: ""
Aug 31 13:11:54.074: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug 31 13:11:54.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2965 diff -f -'
Aug 31 13:11:54.267: INFO: rc: 1
Aug 31 13:11:54.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-2965 delete -f -'
Aug 31 13:11:54.320: INFO: stderr: ""
Aug 31 13:11:54.320: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:11:54.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2965" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":346,"completed":299,"skipped":5799,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:11:54.330: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7467
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-7467
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-7467
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7467
Aug 31 13:11:54.469: INFO: Found 0 stateful pods, waiting for 1
Aug 31 13:12:04.480: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug 31 13:12:04.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:12:04.612: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:12:04.612: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:12:04.612: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:12:04.615: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 31 13:12:14.623: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:12:14.623: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:12:14.638: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999997s
Aug 31 13:12:15.643: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997251662s
Aug 31 13:12:16.649: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992469406s
Aug 31 13:12:17.655: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.985331027s
Aug 31 13:12:18.660: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.980713875s
Aug 31 13:12:19.668: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.974731011s
Aug 31 13:12:20.671: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968028641s
Aug 31 13:12:21.677: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.963400594s
Aug 31 13:12:22.681: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.958252543s
Aug 31 13:12:23.687: INFO: Verifying statefulset ss doesn't scale past 1 for another 954.960212ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7467
Aug 31 13:12:24.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:12:24.821: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:12:24.821: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:12:24.821: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:12:24.824: INFO: Found 1 stateful pods, waiting for 3
Aug 31 13:12:34.839: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:12:34.839: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:12:34.839: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug 31 13:12:34.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:12:34.968: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:12:34.968: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:12:34.968: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:12:34.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:12:35.090: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:12:35.090: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:12:35.090: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:12:35.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:12:35.200: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:12:35.200: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:12:35.200: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:12:35.200: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:12:35.206: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug 31 13:12:45.214: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:12:45.214: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:12:45.214: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:12:45.222: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999994s
Aug 31 13:12:46.226: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997094806s
Aug 31 13:12:47.232: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993164403s
Aug 31 13:12:48.237: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987636985s
Aug 31 13:12:49.247: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981945468s
Aug 31 13:12:50.255: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972182011s
Aug 31 13:12:51.259: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964447676s
Aug 31 13:12:52.265: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.959315668s
Aug 31 13:12:53.277: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.954197261s
Aug 31 13:12:54.282: INFO: Verifying statefulset ss doesn't scale past 3 for another 942.471691ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7467
Aug 31 13:12:55.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:12:55.410: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:12:55.410: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:12:55.410: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:12:55.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:12:55.553: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:12:55.553: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:12:55.553: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:12:55.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-7467 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:12:55.740: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:12:55.740: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:12:55.740: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:12:55.740: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 13:13:05.755: INFO: Deleting all statefulset in ns statefulset-7467
Aug 31 13:13:05.757: INFO: Scaling statefulset ss to 0
Aug 31 13:13:05.765: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:13:05.767: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:05.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7467" for this suite.

• [SLOW TEST:71.455 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":346,"completed":300,"skipped":5820,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:05.786: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8603
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/security_context.go:46
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:13:05.923: INFO: Waiting up to 5m0s for pod "busybox-user-65534-452157e1-5cd9-4ad4-94de-27c87d236376" in namespace "security-context-test-8603" to be "Succeeded or Failed"
Aug 31 13:13:05.925: INFO: Pod "busybox-user-65534-452157e1-5cd9-4ad4-94de-27c87d236376": Phase="Pending", Reason="", readiness=false. Elapsed: 2.680626ms
Aug 31 13:13:07.931: INFO: Pod "busybox-user-65534-452157e1-5cd9-4ad4-94de-27c87d236376": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008227653s
Aug 31 13:13:09.938: INFO: Pod "busybox-user-65534-452157e1-5cd9-4ad4-94de-27c87d236376": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015469491s
Aug 31 13:13:09.938: INFO: Pod "busybox-user-65534-452157e1-5cd9-4ad4-94de-27c87d236376" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:09.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8603" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":301,"skipped":5857,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:09.946: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug 31 13:13:11.124: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
W0831 13:13:11.124740      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 31 13:13:11.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4544" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":346,"completed":302,"skipped":5872,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:11.131: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:11.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7177" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":346,"completed":303,"skipped":5872,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:11.289: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name cm-test-opt-del-82849515-e4b7-468c-818b-d2c5c11595d2
STEP: Creating configMap with name cm-test-opt-upd-ba09a894-1a73-459a-97b6-768413af4804
STEP: Creating the pod
Aug 31 13:13:11.469: INFO: The status of Pod pod-configmaps-a8c20912-b38a-4cb6-b5bd-5bd7820dec77 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:13:13.477: INFO: The status of Pod pod-configmaps-a8c20912-b38a-4cb6-b5bd-5bd7820dec77 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-82849515-e4b7-468c-818b-d2c5c11595d2
STEP: Updating configmap cm-test-opt-upd-ba09a894-1a73-459a-97b6-768413af4804
STEP: Creating configMap with name cm-test-opt-create-29fec115-66ff-491a-95ee-a1489df54acc
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:17.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2712" for this suite.

• [SLOW TEST:6.248 seconds]
[sig-storage] ConfigMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":304,"skipped":5887,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:17.537: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-3980
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Performing setup for networking test in namespace pod-network-test-3980
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 31 13:13:17.661: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 31 13:13:17.735: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:13:19.741: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:13:21.741: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:13:23.742: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:13:25.740: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:13:27.743: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 31 13:13:29.742: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 31 13:13:29.747: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 31 13:13:29.751: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug 31 13:13:29.755: INFO: The status of Pod netserver-3 is Running (Ready = true)
Aug 31 13:13:29.760: INFO: The status of Pod netserver-4 is Running (Ready = false)
Aug 31 13:13:31.765: INFO: The status of Pod netserver-4 is Running (Ready = false)
Aug 31 13:13:33.768: INFO: The status of Pod netserver-4 is Running (Ready = false)
Aug 31 13:13:35.765: INFO: The status of Pod netserver-4 is Running (Ready = false)
Aug 31 13:13:37.768: INFO: The status of Pod netserver-4 is Running (Ready = false)
Aug 31 13:13:39.769: INFO: The status of Pod netserver-4 is Running (Ready = true)
STEP: Creating test pods
Aug 31 13:13:41.792: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
Aug 31 13:13:41.792: INFO: Breadth first check of 10.4.130.178 on host 10.4.3.4...
Aug 31 13:13:41.794: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.132.74:9080/dial?request=hostname&protocol=http&host=10.4.130.178&port=8083&tries=1'] Namespace:pod-network-test-3980 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:13:41.794: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:13:41.795: INFO: ExecWithOptions: Clientset creation
Aug 31 13:13:41.795: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-3980/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.132.74%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.4.130.178%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:13:41.883: INFO: Waiting for responses: map[]
Aug 31 13:13:41.883: INFO: reached 10.4.130.178 after 0/1 tries
Aug 31 13:13:41.883: INFO: Breadth first check of 10.4.131.109 on host 10.4.3.5...
Aug 31 13:13:41.885: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.132.74:9080/dial?request=hostname&protocol=http&host=10.4.131.109&port=8083&tries=1'] Namespace:pod-network-test-3980 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:13:41.885: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:13:41.886: INFO: ExecWithOptions: Clientset creation
Aug 31 13:13:41.886: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-3980/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.132.74%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.4.131.109%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:13:41.964: INFO: Waiting for responses: map[]
Aug 31 13:13:41.964: INFO: reached 10.4.131.109 after 0/1 tries
Aug 31 13:13:41.964: INFO: Breadth first check of 10.4.129.141 on host 10.4.3.6...
Aug 31 13:13:41.967: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.132.74:9080/dial?request=hostname&protocol=http&host=10.4.129.141&port=8083&tries=1'] Namespace:pod-network-test-3980 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:13:41.967: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:13:41.967: INFO: ExecWithOptions: Clientset creation
Aug 31 13:13:41.967: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-3980/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.132.74%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.4.129.141%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:13:42.041: INFO: Waiting for responses: map[]
Aug 31 13:13:42.041: INFO: reached 10.4.129.141 after 0/1 tries
Aug 31 13:13:42.041: INFO: Breadth first check of 10.4.132.73 on host 10.4.3.7...
Aug 31 13:13:42.044: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.132.74:9080/dial?request=hostname&protocol=http&host=10.4.132.73&port=8083&tries=1'] Namespace:pod-network-test-3980 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:13:42.044: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:13:42.045: INFO: ExecWithOptions: Clientset creation
Aug 31 13:13:42.045: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-3980/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.132.74%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.4.132.73%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:13:42.119: INFO: Waiting for responses: map[]
Aug 31 13:13:42.119: INFO: reached 10.4.132.73 after 0/1 tries
Aug 31 13:13:42.119: INFO: Breadth first check of 10.4.133.11 on host 10.4.3.8...
Aug 31 13:13:42.122: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.4.132.74:9080/dial?request=hostname&protocol=http&host=10.4.133.11&port=8083&tries=1'] Namespace:pod-network-test-3980 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 31 13:13:42.122: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:13:42.122: INFO: ExecWithOptions: Clientset creation
Aug 31 13:13:42.122: INFO: ExecWithOptions: execute(POST https://172.31.0.1:443/api/v1/namespaces/pod-network-test-3980/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.4.132.74%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.4.133.11%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true %!s(MISSING))
Aug 31 13:13:42.204: INFO: Waiting for responses: map[]
Aug 31 13:13:42.204: INFO: reached 10.4.133.11 after 0/1 tries
Aug 31 13:13:42.204: INFO: Going to retry 0 out of 5 pods....
[AfterEach] [sig-network] Networking
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:42.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-3980" for this suite.

• [SLOW TEST:24.675 seconds]
[sig-network] Networking
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/network/networking.go:30
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":346,"completed":305,"skipped":5910,"failed":0}
SSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] PodTemplates
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:42.212: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7636
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[AfterEach] [sig-node] PodTemplates
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:42.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7636" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":346,"completed":306,"skipped":5917,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:42.377: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name s-test-opt-del-1752bef0-abd9-4141-b57f-69508c2d0d15
STEP: Creating secret with name s-test-opt-upd-157e4145-d193-44b2-964d-206354e22965
STEP: Creating the pod
Aug 31 13:13:42.524: INFO: The status of Pod pod-projected-secrets-9d7d94e3-bf68-4f52-9b44-ead1327584a0 is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:13:44.531: INFO: The status of Pod pod-projected-secrets-9d7d94e3-bf68-4f52-9b44-ead1327584a0 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-1752bef0-abd9-4141-b57f-69508c2d0d15
STEP: Updating secret s-test-opt-upd-157e4145-d193-44b2-964d-206354e22965
STEP: Creating secret with name s-test-opt-create-e03851fb-f42c-47cd-80d5-32f0dacf97cd
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:46.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2363" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":346,"completed":307,"skipped":5928,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:46.591: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-340
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 31 13:13:46.729: INFO: Waiting up to 5m0s for pod "pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3" in namespace "emptydir-340" to be "Succeeded or Failed"
Aug 31 13:13:46.731: INFO: Pod "pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.918419ms
Aug 31 13:13:48.739: INFO: Pod "pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010387266s
Aug 31 13:13:50.745: INFO: Pod "pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016339384s
STEP: Saw pod success
Aug 31 13:13:50.745: INFO: Pod "pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3" satisfied condition "Succeeded or Failed"
Aug 31 13:13:50.748: INFO: Trying to get logs from node nodepool-qycy5-000001 pod pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3 container test-container: <nil>
STEP: delete the pod
Aug 31 13:13:50.762: INFO: Waiting for pod pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3 to disappear
Aug 31 13:13:50.764: INFO: Pod pod-55512788-29f3-4dc1-bfd4-df20fb4c51a3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:50.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-340" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":308,"skipped":5981,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:50.771: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4278
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug 31 13:13:50.900: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug 31 13:13:55.905: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug 31 13:13:55.907: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:13:55.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4278" for this suite.

• [SLOW TEST:5.159 seconds]
[sig-apps] ReplicaSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":346,"completed":309,"skipped":6004,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:13:55.930: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:14:03.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9874" for this suite.

• [SLOW TEST:7.157 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":346,"completed":310,"skipped":6041,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:14:03.087: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:14:31.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8633" for this suite.

• [SLOW TEST:28.180 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":346,"completed":311,"skipped":6057,"failed":0}
SSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:14:31.268: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6330
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 13:14:31.400: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354" in namespace "projected-6330" to be "Succeeded or Failed"
Aug 31 13:14:31.406: INFO: Pod "downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354": Phase="Pending", Reason="", readiness=false. Elapsed: 6.408363ms
Aug 31 13:14:33.413: INFO: Pod "downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354": Phase="Running", Reason="", readiness=false. Elapsed: 2.013463988s
Aug 31 13:14:35.417: INFO: Pod "downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017322378s
STEP: Saw pod success
Aug 31 13:14:35.417: INFO: Pod "downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354" satisfied condition "Succeeded or Failed"
Aug 31 13:14:35.420: INFO: Trying to get logs from node nodepool-qycy5-000004 pod downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354 container client-container: <nil>
STEP: delete the pod
Aug 31 13:14:35.433: INFO: Waiting for pod downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354 to disappear
Aug 31 13:14:35.435: INFO: Pod downwardapi-volume-a85b42bc-d13a-43a1-94cb-62acfc0e7354 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:14:35.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6330" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":346,"completed":312,"skipped":6061,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:14:35.442: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-793
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/pods.go:189
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:14:35.567: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 31 13:14:35.578: INFO: The status of Pod pod-exec-websocket-6f0dfdde-59b3-429a-8653-52695a3d3e2a is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:14:37.585: INFO: The status of Pod pod-exec-websocket-6f0dfdde-59b3-429a-8653-52695a3d3e2a is Running (Ready = true)
[AfterEach] [sig-node] Pods
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:14:37.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-793" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":346,"completed":313,"skipped":6064,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:14:37.667: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-2866
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating stateful set ss in namespace statefulset-2866
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2866
Aug 31 13:14:37.801: INFO: Found 0 stateful pods, waiting for 1
Aug 31 13:14:47.811: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug 31 13:14:47.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:14:47.930: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:14:47.930: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:14:47.930: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:14:47.933: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 31 13:14:57.938: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:14:57.938: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:14:57.952: INFO: POD   NODE                   PHASE    GRACE  CONDITIONS
Aug 31 13:14:57.952: INFO: ss-0  nodepool-qycy5-000003  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:37 +0000 UTC  }]
Aug 31 13:14:57.952: INFO: 
Aug 31 13:14:57.952: INFO: StatefulSet ss has not reached scale 3, at 1
Aug 31 13:14:58.957: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993665939s
Aug 31 13:14:59.960: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988461491s
Aug 31 13:15:00.970: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98490266s
Aug 31 13:15:01.975: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975376471s
Aug 31 13:15:02.982: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969253717s
Aug 31 13:15:03.989: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.963399766s
Aug 31 13:15:04.995: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.956674109s
Aug 31 13:15:05.999: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.950528758s
Aug 31 13:15:07.005: INFO: Verifying statefulset ss doesn't scale past 3 for another 945.368717ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2866
Aug 31 13:15:08.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:15:08.329: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:15:08.329: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:15:08.329: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:15:08.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:15:08.756: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 31 13:15:08.756: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:15:08.756: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:15:08.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:15:08.877: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 31 13:15:08.877: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:15:08.877: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 31 13:15:08.881: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Aug 31 13:15:18.888: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:15:18.888: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:15:18.888: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug 31 13:15:18.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:15:19.069: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:15:19.069: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:15:19.069: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:15:19.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:15:19.338: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:15:19.338: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:15:19.338: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:15:19.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-2866 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:15:19.451: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:15:19.451: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:15:19.451: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:15:19.451: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:15:19.454: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Aug 31 13:15:29.466: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:15:29.466: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:15:29.466: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 31 13:15:29.477: INFO: POD   NODE                   PHASE    GRACE  CONDITIONS
Aug 31 13:15:29.477: INFO: ss-0  nodepool-qycy5-000003  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:37 +0000 UTC  }]
Aug 31 13:15:29.477: INFO: ss-1  nodepool-qycy5-000004  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  }]
Aug 31 13:15:29.477: INFO: ss-2  nodepool-qycy5-000001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  }]
Aug 31 13:15:29.477: INFO: 
Aug 31 13:15:29.477: INFO: StatefulSet ss has not reached scale 0, at 3
Aug 31 13:15:30.481: INFO: POD   NODE                   PHASE    GRACE  CONDITIONS
Aug 31 13:15:30.481: INFO: ss-2  nodepool-qycy5-000001  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:15:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-31 13:14:57 +0000 UTC  }]
Aug 31 13:15:30.481: INFO: 
Aug 31 13:15:30.481: INFO: StatefulSet ss has not reached scale 0, at 1
Aug 31 13:15:31.487: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992612599s
Aug 31 13:15:32.492: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986943281s
Aug 31 13:15:33.495: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.98193087s
Aug 31 13:15:34.499: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.979066981s
Aug 31 13:15:35.503: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974283375s
Aug 31 13:15:36.508: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.970780582s
Aug 31 13:15:37.513: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.966058578s
Aug 31 13:15:38.520: INFO: Verifying statefulset ss doesn't scale past 0 for another 960.918571ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2866
Aug 31 13:15:39.526: INFO: Scaling statefulset ss to 0
Aug 31 13:15:39.533: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 13:15:39.535: INFO: Deleting all statefulset in ns statefulset-2866
Aug 31 13:15:39.536: INFO: Scaling statefulset ss to 0
Aug 31 13:15:39.543: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:15:39.545: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:15:39.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2866" for this suite.

• [SLOW TEST:61.896 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":346,"completed":314,"skipped":6148,"failed":0}
SSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] version v1
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:15:39.563: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-4030
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-jrddr in namespace proxy-4030
I0831 13:15:39.724209      22 runners.go:193] Created replication controller with name: proxy-service-jrddr, namespace: proxy-4030, replica count: 1
I0831 13:15:40.775065      22 runners.go:193] proxy-service-jrddr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0831 13:15:41.775272      22 runners.go:193] proxy-service-jrddr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 13:15:41.778: INFO: setup took 2.06891428s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug 31 13:15:41.787: INFO: (0) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 8.495683ms)
Aug 31 13:15:41.788: INFO: (0) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 9.669694ms)
Aug 31 13:15:41.788: INFO: (0) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 9.862596ms)
Aug 31 13:15:41.788: INFO: (0) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 9.545393ms)
Aug 31 13:15:41.788: INFO: (0) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 9.611493ms)
Aug 31 13:15:41.788: INFO: (0) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 9.632894ms)
Aug 31 13:15:41.789: INFO: (0) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 10.196799ms)
Aug 31 13:15:41.789: INFO: (0) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 10.449302ms)
Aug 31 13:15:41.789: INFO: (0) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 10.410702ms)
Aug 31 13:15:41.789: INFO: (0) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 10.488102ms)
Aug 31 13:15:41.789: INFO: (0) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 10.753005ms)
Aug 31 13:15:41.790: INFO: (0) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 11.29181ms)
Aug 31 13:15:41.794: INFO: (0) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 15.200948ms)
Aug 31 13:15:41.795: INFO: (0) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 16.684663ms)
Aug 31 13:15:41.795: INFO: (0) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 16.655562ms)
Aug 31 13:15:41.795: INFO: (0) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 16.803264ms)
Aug 31 13:15:41.800: INFO: (1) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 4.15474ms)
Aug 31 13:15:41.800: INFO: (1) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 3.727937ms)
Aug 31 13:15:41.800: INFO: (1) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 4.203341ms)
Aug 31 13:15:41.800: INFO: (1) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 3.901138ms)
Aug 31 13:15:41.802: INFO: (1) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 6.017658ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 6.18746ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 5.985058ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.387262ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.20607ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 6.546164ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 6.799566ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.535164ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.021068ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.938067ms)
Aug 31 13:15:41.803: INFO: (1) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 6.829467ms)
Aug 31 13:15:41.804: INFO: (1) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.413073ms)
Aug 31 13:15:41.806: INFO: (2) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 2.655426ms)
Aug 31 13:15:41.810: INFO: (2) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.204861ms)
Aug 31 13:15:41.810: INFO: (2) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 6.382662ms)
Aug 31 13:15:41.810: INFO: (2) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 6.423963ms)
Aug 31 13:15:41.810: INFO: (2) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.395162ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 6.726966ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 7.048369ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.014869ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.053369ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.888668ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 7.346871ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.284371ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 7.384072ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.392472ms)
Aug 31 13:15:41.811: INFO: (2) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 7.411372ms)
Aug 31 13:15:41.812: INFO: (2) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.649374ms)
Aug 31 13:15:41.816: INFO: (3) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 4.568345ms)
Aug 31 13:15:41.817: INFO: (3) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 5.623455ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.703655ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.013659ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.013259ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 6.20276ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 5.979059ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.379062ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.17816ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 6.381162ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.546764ms)
Aug 31 13:15:41.818: INFO: (3) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 6.638665ms)
Aug 31 13:15:41.819: INFO: (3) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.715366ms)
Aug 31 13:15:41.819: INFO: (3) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 6.901467ms)
Aug 31 13:15:41.820: INFO: (3) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 8.107879ms)
Aug 31 13:15:41.820: INFO: (3) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 8.257681ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 3.750537ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 3.774336ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 3.785937ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 3.923839ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 3.922538ms)
Aug 31 13:15:41.824: INFO: (4) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 4.07884ms)
Aug 31 13:15:41.825: INFO: (4) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 4.356142ms)
Aug 31 13:15:41.826: INFO: (4) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.580855ms)
Aug 31 13:15:41.827: INFO: (4) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.09866ms)
Aug 31 13:15:41.827: INFO: (4) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.716566ms)
Aug 31 13:15:41.827: INFO: (4) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.787366ms)
Aug 31 13:15:41.828: INFO: (4) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.994378ms)
Aug 31 13:15:41.828: INFO: (4) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 8.019978ms)
Aug 31 13:15:41.828: INFO: (4) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 8.024978ms)
Aug 31 13:15:41.829: INFO: (4) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 8.006478ms)
Aug 31 13:15:41.829: INFO: (4) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 8.25248ms)
Aug 31 13:15:41.832: INFO: (5) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 3.554534ms)
Aug 31 13:15:41.833: INFO: (5) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 4.359142ms)
Aug 31 13:15:41.833: INFO: (5) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 4.449543ms)
Aug 31 13:15:41.833: INFO: (5) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 4.508044ms)
Aug 31 13:15:41.834: INFO: (5) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 4.870148ms)
Aug 31 13:15:41.836: INFO: (5) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.772766ms)
Aug 31 13:15:41.836: INFO: (5) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.914968ms)
Aug 31 13:15:41.836: INFO: (5) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.952568ms)
Aug 31 13:15:41.836: INFO: (5) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 7.272271ms)
Aug 31 13:15:41.836: INFO: (5) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.083169ms)
Aug 31 13:15:41.837: INFO: (5) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 8.389982ms)
Aug 31 13:15:41.837: INFO: (5) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 8.366281ms)
Aug 31 13:15:41.837: INFO: (5) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 8.319881ms)
Aug 31 13:15:41.839: INFO: (5) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 10.2233ms)
Aug 31 13:15:41.839: INFO: (5) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 10.129099ms)
Aug 31 13:15:41.839: INFO: (5) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 10.145399ms)
Aug 31 13:15:41.843: INFO: (6) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 3.830238ms)
Aug 31 13:15:41.843: INFO: (6) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 3.816238ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 6.759966ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 6.894267ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 6.949568ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 6.917367ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.887268ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 6.855366ms)
Aug 31 13:15:41.846: INFO: (6) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.826266ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.21687ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 7.310872ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.227471ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.300371ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.12567ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 7.597674ms)
Aug 31 13:15:41.847: INFO: (6) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 7.757575ms)
Aug 31 13:15:41.851: INFO: (7) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 4.10384ms)
Aug 31 13:15:41.851: INFO: (7) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 4.08654ms)
Aug 31 13:15:41.853: INFO: (7) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.295552ms)
Aug 31 13:15:41.853: INFO: (7) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 5.566255ms)
Aug 31 13:15:41.853: INFO: (7) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 5.473153ms)
Aug 31 13:15:41.853: INFO: (7) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 5.859657ms)
Aug 31 13:15:41.853: INFO: (7) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 5.934158ms)
Aug 31 13:15:41.854: INFO: (7) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 6.722565ms)
Aug 31 13:15:41.854: INFO: (7) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.674365ms)
Aug 31 13:15:41.854: INFO: (7) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.814166ms)
Aug 31 13:15:41.854: INFO: (7) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.439772ms)
Aug 31 13:15:41.855: INFO: (7) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 7.120269ms)
Aug 31 13:15:41.855: INFO: (7) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 7.337372ms)
Aug 31 13:15:41.855: INFO: (7) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.370472ms)
Aug 31 13:15:41.855: INFO: (7) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.422372ms)
Aug 31 13:15:41.855: INFO: (7) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.604474ms)
Aug 31 13:15:41.858: INFO: (8) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 2.844528ms)
Aug 31 13:15:41.858: INFO: (8) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 2.820428ms)
Aug 31 13:15:41.858: INFO: (8) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 2.875928ms)
Aug 31 13:15:41.861: INFO: (8) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 5.993758ms)
Aug 31 13:15:41.861: INFO: (8) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 5.900957ms)
Aug 31 13:15:41.861: INFO: (8) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 6.406662ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.282561ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.406062ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 6.411763ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.511064ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.453363ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 6.617065ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 6.428963ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.943868ms)
Aug 31 13:15:41.862: INFO: (8) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.847266ms)
Aug 31 13:15:41.863: INFO: (8) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.402873ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 3.792737ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 4.237541ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 3.850238ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 3.983739ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 4.356343ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 4.291642ms)
Aug 31 13:15:41.867: INFO: (9) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 4.609245ms)
Aug 31 13:15:41.869: INFO: (9) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.20426ms)
Aug 31 13:15:41.870: INFO: (9) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.418263ms)
Aug 31 13:15:41.870: INFO: (9) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.627065ms)
Aug 31 13:15:41.870: INFO: (9) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 6.536664ms)
Aug 31 13:15:41.870: INFO: (9) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.490573ms)
Aug 31 13:15:41.871: INFO: (9) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.853677ms)
Aug 31 13:15:41.872: INFO: (9) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 8.675284ms)
Aug 31 13:15:41.873: INFO: (9) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 10.2668ms)
Aug 31 13:15:41.873: INFO: (9) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 10.2569ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 9.371791ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 9.395692ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 9.29679ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 9.25879ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 9.26769ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 9.308391ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 9.747895ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 9.734595ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 9.736995ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 9.755895ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 9.883497ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 9.983998ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 9.741595ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 9.889597ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 9.746295ms)
Aug 31 13:15:41.883: INFO: (10) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 9.771795ms)
Aug 31 13:15:41.890: INFO: (11) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.764156ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 6.681965ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.817267ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 7.205771ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.13167ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 7.002268ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.14567ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.362672ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 7.271571ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 7.636574ms)
Aug 31 13:15:41.891: INFO: (11) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.861376ms)
Aug 31 13:15:41.892: INFO: (11) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.946877ms)
Aug 31 13:15:41.892: INFO: (11) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 8.072279ms)
Aug 31 13:15:41.892: INFO: (11) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.757876ms)
Aug 31 13:15:41.892: INFO: (11) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.714575ms)
Aug 31 13:15:41.892: INFO: (11) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 7.963678ms)
Aug 31 13:15:41.896: INFO: (12) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 3.726236ms)
Aug 31 13:15:41.899: INFO: (12) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 7.354071ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.628874ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.513873ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 7.447173ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.509573ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.481473ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 7.644374ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.560273ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 7.683375ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 7.636675ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.718375ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.692375ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 8.039978ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 7.976278ms)
Aug 31 13:15:41.900: INFO: (12) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 8.050078ms)
Aug 31 13:15:41.904: INFO: (13) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 3.557434ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.987468ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 6.879867ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 7.065069ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.009868ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.924967ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.21477ms)
Aug 31 13:15:41.907: INFO: (13) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 6.985968ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 7.18187ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 7.337471ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 7.543174ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.650475ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 7.555074ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.593374ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.711476ms)
Aug 31 13:15:41.908: INFO: (13) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.811276ms)
Aug 31 13:15:41.914: INFO: (14) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.220251ms)
Aug 31 13:15:41.914: INFO: (14) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 5.921258ms)
Aug 31 13:15:41.914: INFO: (14) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 5.796056ms)
Aug 31 13:15:41.914: INFO: (14) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.957558ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.748566ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 6.688865ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.656065ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 6.818066ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.763266ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 6.637064ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 6.751566ms)
Aug 31 13:15:41.915: INFO: (14) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.950967ms)
Aug 31 13:15:41.916: INFO: (14) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.514874ms)
Aug 31 13:15:41.916: INFO: (14) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.747776ms)
Aug 31 13:15:41.916: INFO: (14) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 7.695375ms)
Aug 31 13:15:41.916: INFO: (14) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.793576ms)
Aug 31 13:15:41.920: INFO: (15) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 3.566635ms)
Aug 31 13:15:41.920: INFO: (15) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 3.528235ms)
Aug 31 13:15:41.920: INFO: (15) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 3.640136ms)
Aug 31 13:15:41.922: INFO: (15) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.525154ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 5.794557ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.527364ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 5.946158ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 5.878357ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.064159ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.345162ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.085259ms)
Aug 31 13:15:41.923: INFO: (15) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 6.328462ms)
Aug 31 13:15:41.925: INFO: (15) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 8.439483ms)
Aug 31 13:15:41.925: INFO: (15) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 8.18788ms)
Aug 31 13:15:41.925: INFO: (15) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 8.748385ms)
Aug 31 13:15:41.926: INFO: (15) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 9.330791ms)
Aug 31 13:15:41.929: INFO: (16) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 3.02633ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 5.742156ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 5.831657ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 5.974759ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.407663ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 6.245561ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 6.374062ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 6.381162ms)
Aug 31 13:15:41.932: INFO: (16) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 6.506164ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 6.724765ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 6.548464ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 6.865067ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.088669ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.949468ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 7.127369ms)
Aug 31 13:15:41.933: INFO: (16) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 7.332772ms)
Aug 31 13:15:41.937: INFO: (17) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 3.512934ms)
Aug 31 13:15:41.938: INFO: (17) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 5.16655ms)
Aug 31 13:15:41.939: INFO: (17) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 5.318252ms)
Aug 31 13:15:41.939: INFO: (17) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 5.547654ms)
Aug 31 13:15:41.939: INFO: (17) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.622655ms)
Aug 31 13:15:41.939: INFO: (17) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.652155ms)
Aug 31 13:15:41.939: INFO: (17) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 5.864157ms)
Aug 31 13:15:41.940: INFO: (17) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 6.16186ms)
Aug 31 13:15:41.940: INFO: (17) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 6.12486ms)
Aug 31 13:15:41.940: INFO: (17) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 6.16916ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 7.472373ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 7.341771ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.524573ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.621074ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.720375ms)
Aug 31 13:15:41.941: INFO: (17) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 8.137079ms)
Aug 31 13:15:41.946: INFO: (18) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 4.216341ms)
Aug 31 13:15:41.946: INFO: (18) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 4.358342ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.038249ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 5.131251ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.347053ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 5.576254ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 5.433253ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 5.472353ms)
Aug 31 13:15:41.947: INFO: (18) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 5.657455ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 8.025578ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 8.143479ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 8.136979ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 8.11268ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 8.075179ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 8.247881ms)
Aug 31 13:15:41.950: INFO: (18) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 8.338382ms)
Aug 31 13:15:41.954: INFO: (19) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 3.744837ms)
Aug 31 13:15:41.954: INFO: (19) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:462/proxy/: tls qux (200; 3.718636ms)
Aug 31 13:15:41.955: INFO: (19) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:160/proxy/: foo (200; 5.418652ms)
Aug 31 13:15:41.955: INFO: (19) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.585454ms)
Aug 31 13:15:41.956: INFO: (19) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:162/proxy/: bar (200; 5.731456ms)
Aug 31 13:15:41.956: INFO: (19) /api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/http:proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">... (200; 5.811957ms)
Aug 31 13:15:41.956: INFO: (19) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk/proxy/rewriteme">test</a> (200; 5.906757ms)
Aug 31 13:15:41.956: INFO: (19) /api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/proxy-service-jrddr-nqtnk:1080/proxy/rewriteme">test<... (200; 5.866557ms)
Aug 31 13:15:41.956: INFO: (19) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:460/proxy/: tls baz (200; 5.940558ms)
Aug 31 13:15:41.958: INFO: (19) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname2/proxy/: tls qux (200; 7.790176ms)
Aug 31 13:15:41.958: INFO: (19) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname2/proxy/: bar (200; 7.840276ms)
Aug 31 13:15:41.958: INFO: (19) /api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/: <a href="/api/v1/namespaces/proxy-4030/pods/https:proxy-service-jrddr-nqtnk:443/proxy/tlsrewritem... (200; 7.612874ms)
Aug 31 13:15:41.958: INFO: (19) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname1/proxy/: foo (200; 7.626774ms)
Aug 31 13:15:41.958: INFO: (19) /api/v1/namespaces/proxy-4030/services/http:proxy-service-jrddr:portname1/proxy/: foo (200; 7.766876ms)
Aug 31 13:15:41.959: INFO: (19) /api/v1/namespaces/proxy-4030/services/proxy-service-jrddr:portname2/proxy/: bar (200; 9.174089ms)
Aug 31 13:15:41.959: INFO: (19) /api/v1/namespaces/proxy-4030/services/https:proxy-service-jrddr:tlsportname1/proxy/: tls baz (200; 9.20369ms)
STEP: deleting ReplicationController proxy-service-jrddr in namespace proxy-4030, will wait for the garbage collector to delete the pods
Aug 31 13:15:42.020: INFO: Deleting ReplicationController proxy-service-jrddr took: 6.857667ms
Aug 31 13:15:42.120: INFO: Terminating ReplicationController proxy-service-jrddr pods took: 100.597681ms
[AfterEach] version v1
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:15:44.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-4030" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":346,"completed":315,"skipped":6155,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:15:44.536: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:15:44.660: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: client-side validation (kubectl create and apply) allows request with any unknown properties
Aug 31 13:15:47.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-6977 --namespace=crd-publish-openapi-6977 create -f -'
Aug 31 13:15:49.025: INFO: stderr: ""
Aug 31 13:15:49.025: INFO: stdout: "e2e-test-crd-publish-openapi-9558-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 31 13:15:49.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-6977 --namespace=crd-publish-openapi-6977 delete e2e-test-crd-publish-openapi-9558-crds test-cr'
Aug 31 13:15:49.081: INFO: stderr: ""
Aug 31 13:15:49.081: INFO: stdout: "e2e-test-crd-publish-openapi-9558-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug 31 13:15:49.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-6977 --namespace=crd-publish-openapi-6977 apply -f -'
Aug 31 13:15:49.260: INFO: stderr: ""
Aug 31 13:15:49.260: INFO: stdout: "e2e-test-crd-publish-openapi-9558-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 31 13:15:49.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-6977 --namespace=crd-publish-openapi-6977 delete e2e-test-crd-publish-openapi-9558-crds test-cr'
Aug 31 13:15:49.316: INFO: stderr: ""
Aug 31 13:15:49.316: INFO: stdout: "e2e-test-crd-publish-openapi-9558-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug 31 13:15:49.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=crd-publish-openapi-6977 explain e2e-test-crd-publish-openapi-9558-crds'
Aug 31 13:15:49.491: INFO: stderr: ""
Aug 31 13:15:49.491: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9558-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:15:51.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6977" for this suite.

• [SLOW TEST:7.242 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":346,"completed":316,"skipped":6188,"failed":0}
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:15:51.778: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:08.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6902" for this suite.

• [SLOW TEST:16.232 seconds]
[sig-api-machinery] ResourceQuota
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":346,"completed":317,"skipped":6188,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:08.011: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name secret-test-5398f598-84f3-4c3f-b29d-4dc1ea992ee0
STEP: Creating a pod to test consume secrets
Aug 31 13:16:08.151: INFO: Waiting up to 5m0s for pod "pod-secrets-c2816574-0315-42ec-8008-2565222fb73e" in namespace "secrets-3339" to be "Succeeded or Failed"
Aug 31 13:16:08.154: INFO: Pod "pod-secrets-c2816574-0315-42ec-8008-2565222fb73e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.295823ms
Aug 31 13:16:10.158: INFO: Pod "pod-secrets-c2816574-0315-42ec-8008-2565222fb73e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006073011s
Aug 31 13:16:12.165: INFO: Pod "pod-secrets-c2816574-0315-42ec-8008-2565222fb73e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013667433s
STEP: Saw pod success
Aug 31 13:16:12.165: INFO: Pod "pod-secrets-c2816574-0315-42ec-8008-2565222fb73e" satisfied condition "Succeeded or Failed"
Aug 31 13:16:12.167: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-secrets-c2816574-0315-42ec-8008-2565222fb73e container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 13:16:12.181: INFO: Waiting for pod pod-secrets-c2816574-0315-42ec-8008-2565222fb73e to disappear
Aug 31 13:16:12.183: INFO: Pod pod-secrets-c2816574-0315-42ec-8008-2565222fb73e no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:12.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3339" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":318,"skipped":6231,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:12.191: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:244
[BeforeEach] Kubectl label
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1333
STEP: creating the pod
Aug 31 13:16:12.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 create -f -'
Aug 31 13:16:13.015: INFO: stderr: ""
Aug 31 13:16:13.015: INFO: stdout: "pod/pause created\n"
Aug 31 13:16:13.015: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug 31 13:16:13.015: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-5840" to be "running and ready"
Aug 31 13:16:13.017: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.05622ms
Aug 31 13:16:15.024: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.009352734s
Aug 31 13:16:15.024: INFO: Pod "pause" satisfied condition "running and ready"
Aug 31 13:16:15.024: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: adding the label testing-label with value testing-label-value to a pod
Aug 31 13:16:15.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 label pods pause testing-label=testing-label-value'
Aug 31 13:16:15.084: INFO: stderr: ""
Aug 31 13:16:15.084: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug 31 13:16:15.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 get pod pause -L testing-label'
Aug 31 13:16:15.137: INFO: stderr: ""
Aug 31 13:16:15.137: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug 31 13:16:15.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 label pods pause testing-label-'
Aug 31 13:16:15.197: INFO: stderr: ""
Aug 31 13:16:15.197: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug 31 13:16:15.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 get pod pause -L testing-label'
Aug 31 13:16:15.245: INFO: stderr: ""
Aug 31 13:16:15.245: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1339
STEP: using delete to clean up resources
Aug 31 13:16:15.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 delete --grace-period=0 --force -f -'
Aug 31 13:16:15.304: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 31 13:16:15.304: INFO: stdout: "pod \"pause\" force deleted\n"
Aug 31 13:16:15.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 get rc,svc -l name=pause --no-headers'
Aug 31 13:16:15.360: INFO: stderr: "No resources found in kubectl-5840 namespace.\n"
Aug 31 13:16:15.360: INFO: stdout: ""
Aug 31 13:16:15.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=kubectl-5840 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 31 13:16:15.405: INFO: stderr: ""
Aug 31 13:16:15.406: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:15.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5840" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":346,"completed":319,"skipped":6250,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:15.414: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should delete a collection of services [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a collection of services
Aug 31 13:16:15.543: INFO: Creating e2e-svc-a-p7mb7
Aug 31 13:16:15.554: INFO: Creating e2e-svc-b-55tv4
Aug 31 13:16:15.566: INFO: Creating e2e-svc-c-24nxz
STEP: deleting service collection
Aug 31 13:16:15.615: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:15.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6683" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":346,"completed":320,"skipped":6259,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:15.651: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:41
[It] should provide container's memory request [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 13:16:15.839: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5" in namespace "projected-1779" to be "Succeeded or Failed"
Aug 31 13:16:15.843: INFO: Pod "downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.764337ms
Aug 31 13:16:17.851: INFO: Pod "downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011722451s
Aug 31 13:16:19.859: INFO: Pod "downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020233468s
STEP: Saw pod success
Aug 31 13:16:19.859: INFO: Pod "downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5" satisfied condition "Succeeded or Failed"
Aug 31 13:16:19.863: INFO: Trying to get logs from node nodepool-qycy5-000004 pod downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5 container client-container: <nil>
STEP: delete the pod
Aug 31 13:16:19.876: INFO: Waiting for pod downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5 to disappear
Aug 31 13:16:19.879: INFO: Pod downwardapi-volume-b48fa4a6-20e6-48e1-8518-e7ac9e10d6f5 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:19.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1779" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":346,"completed":321,"skipped":6280,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:19.890: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:20.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8915" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":346,"completed":322,"skipped":6290,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:20.040: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6663
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-1174
STEP: Creating secret with name secret-test-d9800488-3f39-4989-a893-1142be47b6f8
STEP: Creating a pod to test consume secrets
Aug 31 13:16:20.300: INFO: Waiting up to 5m0s for pod "pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef" in namespace "secrets-6663" to be "Succeeded or Failed"
Aug 31 13:16:20.304: INFO: Pod "pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef": Phase="Pending", Reason="", readiness=false. Elapsed: 4.479444ms
Aug 31 13:16:22.312: INFO: Pod "pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef": Phase="Running", Reason="", readiness=false. Elapsed: 2.012105247s
Aug 31 13:16:24.322: INFO: Pod "pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021992968s
STEP: Saw pod success
Aug 31 13:16:24.322: INFO: Pod "pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef" satisfied condition "Succeeded or Failed"
Aug 31 13:16:24.325: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 13:16:24.344: INFO: Waiting for pod pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef to disappear
Aug 31 13:16:24.346: INFO: Pod pod-secrets-66cce726-026c-4c5b-a4b0-d95f733671ef no longer exists
[AfterEach] [sig-storage] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:24.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6663" for this suite.
STEP: Destroying namespace "secret-namespace-1174" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":346,"completed":323,"skipped":6312,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:24.357: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap that has name configmap-test-emptyKey-a4bc4410-dac5-4a43-94a7-b051819e6c74
[AfterEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:24.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7105" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":346,"completed":324,"skipped":6372,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] EndpointSliceMirroring
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:24.494: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-22
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:39
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: mirroring a new custom Endpoint
Aug 31 13:16:24.635: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug 31 13:16:26.649: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug 31 13:16:28.664: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:30.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-22" for this suite.

• [SLOW TEST:6.184 seconds]
[sig-network] EndpointSliceMirroring
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":346,"completed":325,"skipped":6391,"failed":0}
SSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:30.678: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4242
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap configmap-4242/configmap-test-d76bde2d-27c7-4b98-aa2d-e3cc54a92cb4
STEP: Creating a pod to test consume configMaps
Aug 31 13:16:30.822: INFO: Waiting up to 5m0s for pod "pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36" in namespace "configmap-4242" to be "Succeeded or Failed"
Aug 31 13:16:30.824: INFO: Pod "pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.171521ms
Aug 31 13:16:32.830: INFO: Pod "pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008430991s
Aug 31 13:16:34.836: INFO: Pod "pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014731058s
STEP: Saw pod success
Aug 31 13:16:34.836: INFO: Pod "pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36" satisfied condition "Succeeded or Failed"
Aug 31 13:16:34.838: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36 container env-test: <nil>
STEP: delete the pod
Aug 31 13:16:34.852: INFO: Waiting for pod pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36 to disappear
Aug 31 13:16:34.854: INFO: Pod pod-configmaps-d0c7f006-dd44-4e90-bfd3-f62f5dd36e36 no longer exists
[AfterEach] [sig-node] ConfigMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:34.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4242" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":346,"completed":326,"skipped":6397,"failed":0}
SSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:34.863: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 31 13:16:34.995: INFO: Waiting up to 5m0s for pod "security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045" in namespace "security-context-512" to be "Succeeded or Failed"
Aug 31 13:16:34.997: INFO: Pod "security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045": Phase="Pending", Reason="", readiness=false. Elapsed: 1.938019ms
Aug 31 13:16:37.002: INFO: Pod "security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006291163s
Aug 31 13:16:39.009: INFO: Pod "security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013936435s
STEP: Saw pod success
Aug 31 13:16:39.010: INFO: Pod "security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045" satisfied condition "Succeeded or Failed"
Aug 31 13:16:39.012: INFO: Trying to get logs from node nodepool-qycy5-000004 pod security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045 container test-container: <nil>
STEP: delete the pod
Aug 31 13:16:39.027: INFO: Waiting for pod security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045 to disappear
Aug 31 13:16:39.029: INFO: Pod security-context-c8fcf6b2-0f47-4e16-a9d4-48175b71e045 no longer exists
[AfterEach] [sig-node] Security Context
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:39.029: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-512" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":346,"completed":327,"skipped":6403,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:39.036: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5443
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:87
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 31 13:16:39.519: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 31 13:16:42.538: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:54.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5443" for this suite.
STEP: Destroying namespace "webhook-5443-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:102

• [SLOW TEST:15.651 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":346,"completed":328,"skipped":6421,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:54.687: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4546
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should find a service from listing all namespaces [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: fetching services
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:54.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4546" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":346,"completed":329,"skipped":6443,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:54.837: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating secret with name projected-secret-test-4e38724f-98d9-42f0-af5f-1d042357a9bb
STEP: Creating a pod to test consume secrets
Aug 31 13:16:54.971: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a" in namespace "projected-3015" to be "Succeeded or Failed"
Aug 31 13:16:54.973: INFO: Pod "pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02892ms
Aug 31 13:16:56.979: INFO: Pod "pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00863625s
Aug 31 13:16:58.986: INFO: Pod "pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015507279s
STEP: Saw pod success
Aug 31 13:16:58.986: INFO: Pod "pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a" satisfied condition "Succeeded or Failed"
Aug 31 13:16:58.989: INFO: Trying to get logs from node nodepool-qycy5-000004 pod pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a container secret-volume-test: <nil>
STEP: delete the pod
Aug 31 13:16:59.000: INFO: Waiting for pod pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a to disappear
Aug 31 13:16:59.002: INFO: Pod pod-projected-secrets-3d036eb4-80f1-4a86-a4c9-91f00802ce8a no longer exists
[AfterEach] [sig-storage] Projected secret
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:59.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3015" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":346,"completed":330,"skipped":6458,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:59.009: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-3654
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug 31 13:16:59.160: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3654  2763f641-52ec-4755-9311-04db538e3b19 54499 0 2022-08-31 13:16:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-31 13:16:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 31 13:16:59.161: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3654  2763f641-52ec-4755-9311-04db538e3b19 54500 0 2022-08-31 13:16:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-31 13:16:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:16:59.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-3654" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":346,"completed":331,"skipped":6463,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:16:59.168: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2858
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:41
[It] should provide container's memory limit [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward API volume plugin
Aug 31 13:16:59.300: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7" in namespace "downward-api-2858" to be "Succeeded or Failed"
Aug 31 13:16:59.302: INFO: Pod "downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.199422ms
Aug 31 13:17:01.309: INFO: Pod "downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009014846s
Aug 31 13:17:03.315: INFO: Pod "downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015432663s
STEP: Saw pod success
Aug 31 13:17:03.315: INFO: Pod "downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7" satisfied condition "Succeeded or Failed"
Aug 31 13:17:03.318: INFO: Trying to get logs from node nodepool-qycy5-000004 pod downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7 container client-container: <nil>
STEP: delete the pod
Aug 31 13:17:03.334: INFO: Waiting for pod downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7 to disappear
Aug 31 13:17:03.340: INFO: Pod downwardapi-volume-b510a09b-e8d4-45f3-bc78-e39bae51d6c7 no longer exists
[AfterEach] [sig-storage] Downward API volume
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:17:03.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2858" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":346,"completed":332,"skipped":6481,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:17:03.347: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test substitution in container's command
Aug 31 13:17:03.479: INFO: Waiting up to 5m0s for pod "var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006" in namespace "var-expansion-9753" to be "Succeeded or Failed"
Aug 31 13:17:03.482: INFO: Pod "var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006": Phase="Pending", Reason="", readiness=false. Elapsed: 2.520225ms
Aug 31 13:17:05.485: INFO: Pod "var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006": Phase="Running", Reason="", readiness=false. Elapsed: 2.005684907s
Aug 31 13:17:07.492: INFO: Pod "var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012892724s
STEP: Saw pod success
Aug 31 13:17:07.492: INFO: Pod "var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006" satisfied condition "Succeeded or Failed"
Aug 31 13:17:07.495: INFO: Trying to get logs from node nodepool-qycy5-000003 pod var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006 container dapi-container: <nil>
STEP: delete the pod
Aug 31 13:17:07.507: INFO: Waiting for pod var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006 to disappear
Aug 31 13:17:07.509: INFO: Pod var-expansion-e5610f8f-047b-47b0-9bca-794b15de7006 no longer exists
[AfterEach] [sig-node] Variable Expansion
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:17:07.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9753" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":346,"completed":333,"skipped":6492,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:17:07.516: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:17:07.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3320" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":346,"completed":334,"skipped":6515,"failed":0}
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:17:07.675: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:94
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:109
STEP: Creating service test in namespace statefulset-5433
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a new StatefulSet
Aug 31 13:17:07.810: INFO: Found 0 stateful pods, waiting for 3
Aug 31 13:17:17.814: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:17:17.814: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:17:17.814: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug 31 13:17:17.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-5433 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:17:17.953: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:17:17.953: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:17:17.953: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 31 13:17:27.981: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug 31 13:17:38.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-5433 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:17:38.133: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:17:38.133: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:17:38.133: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Aug 31 13:17:58.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-5433 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 31 13:17:58.281: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 31 13:17:58.281: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 31 13:17:58.281: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 31 13:18:08.313: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug 31 13:18:18.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=statefulset-5433 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 31 13:18:18.455: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 31 13:18:18.455: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 31 13:18:18.455: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:120
Aug 31 13:18:28.478: INFO: Deleting all statefulset in ns statefulset-5433
Aug 31 13:18:28.480: INFO: Scaling statefulset ss2 to 0
Aug 31 13:18:38.496: INFO: Waiting for statefulset status.replicas updated to 0
Aug 31 13:18:38.498: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:18:38.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5433" for this suite.

• [SLOW TEST:90.837 seconds]
[sig-apps] StatefulSet
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:99
    should perform rolling updates and roll backs of template modifications [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":346,"completed":335,"skipped":6522,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:18:38.512: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug 31 13:18:38.646: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
Aug 31 13:18:41.858: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:18:52.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-313" for this suite.

• [SLOW TEST:14.022 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":346,"completed":336,"skipped":6533,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:18:52.535: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3289
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:89
[It] Deployment should have a working scale subresource [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:18:52.662: INFO: Creating simple deployment test-new-deployment
Aug 31 13:18:52.671: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
Aug 31 13:18:54.683: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 31, 13, 18, 52, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 18, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 31, 13, 18, 52, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 31, 13, 18, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-5d9fdcc779\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/deployment.go:83
Aug 31 13:18:56.709: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-3289  e4eb8f1a-cefb-47df-9bc3-f3b2433de1da 55681 3 2022-08-31 13:18:52 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-31 13:18:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 13:18:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0074d5578 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-31 13:18:54 +0000 UTC,LastTransitionTime:2022-08-31 13:18:54 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-5d9fdcc779" has successfully progressed.,LastUpdateTime:2022-08-31 13:18:54 +0000 UTC,LastTransitionTime:2022-08-31 13:18:52 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 31 13:18:56.711: INFO: New ReplicaSet "test-new-deployment-5d9fdcc779" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-5d9fdcc779  deployment-3289  9be697bf-afd3-423a-b8e6-5572a20f9242 55682 2 2022-08-31 13:18:52 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment e4eb8f1a-cefb-47df-9bc3-f3b2433de1da 0xc0074d5997 0xc0074d5998}] []  [{kube-controller-manager Update apps/v1 2022-08-31 13:18:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4eb8f1a-cefb-47df-9bc3-f3b2433de1da\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-31 13:18:54 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 5d9fdcc779,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0074d5a28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 31 13:18:56.715: INFO: Pod "test-new-deployment-5d9fdcc779-2plvf" is available:
&Pod{ObjectMeta:{test-new-deployment-5d9fdcc779-2plvf test-new-deployment-5d9fdcc779- deployment-3289  5ed38b95-9d1d-49ab-8f22-fc833bffc271 55660 0 2022-08-31 13:18:52 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:5d9fdcc779] map[cni.projectcalico.org/containerID:aee39a178fb3db1d954508d613f315e9519da725a3f3f48c587e083e713f79b5 cni.projectcalico.org/podIP:10.4.132.85/32 cni.projectcalico.org/podIPs:10.4.132.85/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-5d9fdcc779 9be697bf-afd3-423a-b8e6-5572a20f9242 0xc0074d5e17 0xc0074d5e18}] []  [{kube-controller-manager Update v1 2022-08-31 13:18:52 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9be697bf-afd3-423a-b8e6-5572a20f9242\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-08-31 13:18:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-08-31 13:18:54 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.4.132.85\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8c6hg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8c6hg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:nodepool-qycy5-000003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 13:18:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 13:18:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 13:18:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-31 13:18:52 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.4.3.7,PodIP:10.4.132.85,StartTime:2022-08-31 13:18:52 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-31 13:18:54 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://1d36d4cc3a8342dad803acb68dd7e31b746e58e0d6f5357e150fd7526d4fe08a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.4.132.85,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:18:56.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3289" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":346,"completed":337,"skipped":6549,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:18:56.726: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:53
STEP: create the container to handle the HTTPGet hook request.
Aug 31 13:18:56.868: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:18:58.876: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: create the pod with lifecycle hook
Aug 31 13:18:58.889: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 31 13:19:00.894: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 31 13:19:00.900: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 31 13:19:00.903: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 31 13:19:02.904: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 31 13:19:02.907: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 31 13:19:04.904: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 31 13:19:04.912: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:04.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-136" for this suite.

• [SLOW TEST:8.198 seconds]
[sig-node] Container Lifecycle Hook
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:44
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":346,"completed":338,"skipped":6562,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:04.924: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-map-ce489a70-4605-4522-bb21-ad053fbeb30a
STEP: Creating a pod to test consume configMaps
Aug 31 13:19:05.069: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c" in namespace "projected-7538" to be "Succeeded or Failed"
Aug 31 13:19:05.072: INFO: Pod "pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.738027ms
Aug 31 13:19:07.076: INFO: Pod "pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007445637s
Aug 31 13:19:09.084: INFO: Pod "pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015221074s
STEP: Saw pod success
Aug 31 13:19:09.084: INFO: Pod "pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c" satisfied condition "Succeeded or Failed"
Aug 31 13:19:09.087: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c container agnhost-container: <nil>
STEP: delete the pod
Aug 31 13:19:09.098: INFO: Waiting for pod pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c to disappear
Aug 31 13:19:09.100: INFO: Pod pod-projected-configmaps-b114e9fa-b22c-440e-9d2f-370c855b7a4c no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:09.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7538" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":346,"completed":339,"skipped":6571,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:09.107: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
Aug 31 13:19:09.248: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug 31 13:19:09.255: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:09.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 13:19:09.259: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 13:19:10.299: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:10.302: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 31 13:19:10.302: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 13:19:11.266: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:11.269: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug 31 13:19:11.269: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug 31 13:19:11.289: INFO: Wrong image for pod: daemon-set-2rnz6. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:11.289: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:11.289: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:11.289: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:11.289: INFO: Wrong image for pod: daemon-set-z42q6. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:11.296: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:12.300: INFO: Wrong image for pod: daemon-set-2rnz6. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:12.300: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:12.300: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:12.300: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:12.303: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:13.301: INFO: Wrong image for pod: daemon-set-2rnz6. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:13.301: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:13.301: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:13.301: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:13.304: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:14.301: INFO: Wrong image for pod: daemon-set-2rnz6. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:14.301: INFO: Pod daemon-set-5ltp6 is not available
Aug 31 13:19:14.301: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:14.301: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:14.301: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:14.305: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:15.301: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:15.301: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:15.301: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:15.305: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:16.301: INFO: Pod daemon-set-4b772 is not available
Aug 31 13:19:16.301: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:16.301: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:16.301: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:16.305: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:17.302: INFO: Pod daemon-set-4b772 is not available
Aug 31 13:19:17.302: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:17.302: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:17.302: INFO: Wrong image for pod: daemon-set-lmlhr. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:17.305: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:18.302: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:18.302: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:18.306: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:19.303: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:19.303: INFO: Wrong image for pod: daemon-set-khmcc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:19.303: INFO: Pod daemon-set-r69jb is not available
Aug 31 13:19:19.307: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:20.301: INFO: Pod daemon-set-9v6nv is not available
Aug 31 13:19:20.301: INFO: Wrong image for pod: daemon-set-fggvm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 31 13:19:20.305: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:21.306: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:22.303: INFO: Pod daemon-set-z2xdf is not available
Aug 31 13:19:22.307: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Aug 31 13:19:22.310: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:22.312: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug 31 13:19:22.312: INFO: Node nodepool-qycy5-000001 is running 0 daemon pod, expected 1
Aug 31 13:19:23.319: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:23.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug 31 13:19:23.323: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1907, will wait for the garbage collector to delete the pods
Aug 31 13:19:23.391: INFO: Deleting DaemonSet.extensions daemon-set took: 4.273541ms
Aug 31 13:19:23.492: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.913866ms
Aug 31 13:19:26.196: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 13:19:26.196: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 13:19:26.199: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56156"},"items":null}

Aug 31 13:19:26.200: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56156"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:26.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1907" for this suite.

• [SLOW TEST:17.116 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":346,"completed":340,"skipped":6583,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:26.223: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4366
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:752
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4366
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-4366
I0831 13:19:26.388017      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4366, replica count: 2
Aug 31 13:19:29.440: INFO: Creating new exec pod
I0831 13:19:29.440000      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 31 13:19:32.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-4366 exec execpod44rjd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 31 13:19:32.596: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 31 13:19:32.596: INFO: stdout: "externalname-service-6gcxj"
Aug 31 13:19:32.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-4366 exec execpod44rjd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.159.152 80'
Aug 31 13:19:32.731: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.159.152 80\nConnection to 172.31.159.152 80 port [tcp/http] succeeded!\n"
Aug 31 13:19:32.731: INFO: stdout: "externalname-service-247xx"
Aug 31 13:19:32.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-4366 exec execpod44rjd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.6 31311'
Aug 31 13:19:32.862: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.6 31311\nConnection to 10.4.3.6 31311 port [tcp/*] succeeded!\n"
Aug 31 13:19:32.862: INFO: stdout: "externalname-service-6gcxj"
Aug 31 13:19:32.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-29703582 --namespace=services-4366 exec execpod44rjd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.4.3.5 31311'
Aug 31 13:19:32.989: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.4.3.5 31311\nConnection to 10.4.3.5 31311 port [tcp/*] succeeded!\n"
Aug 31 13:19:32.989: INFO: stdout: "externalname-service-6gcxj"
Aug 31 13:19:32.989: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:33.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4366" for this suite.
[AfterEach] [sig-network] Services
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/service.go:756

• [SLOW TEST:6.787 seconds]
[sig-network] Services
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":346,"completed":341,"skipped":6622,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:33.010: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-246
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: set up a multi version CRD
Aug 31 13:19:33.153: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:50.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-246" for this suite.

• [SLOW TEST:17.360 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":346,"completed":342,"skipped":6646,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:50.371: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5047
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:50.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5047" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":346,"completed":343,"skipped":6652,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:50.512: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4019
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating configMap with name projected-configmap-test-volume-map-d86e4241-3f3b-4327-870c-abe839556e1a
STEP: Creating a pod to test consume configMaps
Aug 31 13:19:50.647: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b" in namespace "projected-4019" to be "Succeeded or Failed"
Aug 31 13:19:50.649: INFO: Pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.356422ms
Aug 31 13:19:52.657: INFO: Pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b": Phase="Running", Reason="", readiness=true. Elapsed: 2.009682898s
Aug 31 13:19:54.663: INFO: Pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b": Phase="Running", Reason="", readiness=false. Elapsed: 4.016059463s
Aug 31 13:19:56.669: INFO: Pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022417825s
STEP: Saw pod success
Aug 31 13:19:56.669: INFO: Pod "pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b" satisfied condition "Succeeded or Failed"
Aug 31 13:19:56.672: INFO: Trying to get logs from node nodepool-qycy5-000003 pod pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b container agnhost-container: <nil>
STEP: delete the pod
Aug 31 13:19:56.684: INFO: Waiting for pod pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b to disappear
Aug 31 13:19:56.686: INFO: Pod pod-projected-configmaps-54d795f5-bc3a-464e-a536-c403baf0a91b no longer exists
[AfterEach] [sig-storage] Projected configMap
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:19:56.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4019" for this suite.

• [SLOW TEST:6.179 seconds]
[sig-storage] Projected configMap
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":346,"completed":344,"skipped":6657,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:19:56.692: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-6730
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:143
[It] should run and stop simple daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 31 13:19:56.836: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:56.838: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 13:19:56.838: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 13:19:57.845: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:57.848: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 31 13:19:57.848: INFO: Node nodepool-qycy5-000000 is running 0 daemon pod, expected 1
Aug 31 13:19:58.844: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:58.848: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug 31 13:19:58.848: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug 31 13:19:58.872: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:58.875: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug 31 13:19:58.875: INFO: Node nodepool-qycy5-000003 is running 0 daemon pod, expected 1
Aug 31 13:19:59.882: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:19:59.885: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug 31 13:19:59.885: INFO: Node nodepool-qycy5-000003 is running 0 daemon pod, expected 1
Aug 31 13:20:00.884: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:20:00.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug 31 13:20:00.887: INFO: Node nodepool-qycy5-000003 is running 0 daemon pod, expected 1
Aug 31 13:20:01.880: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:20:01.883: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug 31 13:20:01.883: INFO: Node nodepool-qycy5-000003 is running 0 daemon pod, expected 1
Aug 31 13:20:02.881: INFO: DaemonSet pods can't tolerate node c2zfv-master-c2zfv-000000 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 31 13:20:02.885: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug 31 13:20:02.885: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_set.go:109
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6730, will wait for the garbage collector to delete the pods
Aug 31 13:20:02.942: INFO: Deleting DaemonSet.extensions daemon-set took: 3.457333ms
Aug 31 13:20:03.043: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.722862ms
Aug 31 13:20:05.045: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 31 13:20:05.045: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 31 13:20:05.047: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56699"},"items":null}

Aug 31 13:20:05.049: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56699"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:20:05.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6730" for this suite.

• [SLOW TEST:8.382 seconds]
[sig-apps] Daemon set [Serial]
/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":346,"completed":345,"skipped":6686,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
[BeforeEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:185
STEP: Creating a kubernetes client
Aug 31 13:20:05.074: INFO: >>> kubeConfig: /tmp/kubeconfig-29703582
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7805
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:633
STEP: Creating a pod to test downward api env vars
Aug 31 13:20:05.210: INFO: Waiting up to 5m0s for pod "downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4" in namespace "downward-api-7805" to be "Succeeded or Failed"
Aug 31 13:20:05.213: INFO: Pod "downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.851117ms
Aug 31 13:20:07.220: INFO: Pod "downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008758272s
Aug 31 13:20:09.224: INFO: Pod "downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0131997s
STEP: Saw pod success
Aug 31 13:20:09.224: INFO: Pod "downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4" satisfied condition "Succeeded or Failed"
Aug 31 13:20:09.226: INFO: Trying to get logs from node nodepool-qycy5-000003 pod downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4 container dapi-container: <nil>
STEP: delete the pod
Aug 31 13:20:09.241: INFO: Waiting for pod downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4 to disappear
Aug 31 13:20:09.243: INFO: Pod downward-api-0e2fa0dd-e407-4112-a559-6b9585faa1b4 no longer exists
[AfterEach] [sig-node] Downward API
  /workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:186
Aug 31 13:20:09.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7805" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":346,"completed":346,"skipped":6703,"failed":0}
SAug 31 13:20:09.250: INFO: Running AfterSuite actions on all nodes
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func18.2
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func7.2
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug 31 13:20:09.250: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug 31 13:20:09.250: INFO: Running AfterSuite actions on node 1
Aug 31 13:20:09.250: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":346,"completed":346,"skipped":6704,"failed":0}

Ran 346 of 7050 Specs in 5600.292 seconds
SUCCESS! -- 346 Passed | 0 Failed | 0 Pending | 6704 Skipped
PASS

Ginkgo ran 1 suite in 1h33m22.672846137s
Test Suite Passed
