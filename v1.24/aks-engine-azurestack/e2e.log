I0126 01:08:43.182602      20 e2e.go:129] Starting e2e run "1c6a89cb-38f4-4815-8e69-ef42f7e6a192" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1674695322 - Will randomize all specs
Will run 356 of 6973 specs

Jan 26 01:08:45.455: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:08:45.456: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jan 26 01:08:45.510: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jan 26 01:08:45.598: INFO: 36 / 36 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jan 26 01:08:45.598: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
Jan 26 01:08:45.598: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jan 26 01:08:45.611: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'azure-ip-masq-agent' (0 seconds elapsed)
Jan 26 01:08:45.611: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'cloud-node-manager' (0 seconds elapsed)
Jan 26 01:08:45.611: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Jan 26 01:08:45.611: INFO: e2e test version: v1.24.9
Jan 26 01:08:45.618: INFO: kube-apiserver version: v1.24.9
Jan 26 01:08:45.618: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:08:45.627: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:08:45.627: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
W0126 01:08:45.788731      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jan 26 01:08:45.788: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Jan 26 01:08:45.817: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0126 01:08:45.824849      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0126 01:08:45.834855      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jan 26 01:08:45.844: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:08:45.982: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c" in namespace "downward-api-8058" to be "Succeeded or Failed"
Jan 26 01:08:45.986: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.691062ms
Jan 26 01:08:47.995: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0132481s
Jan 26 01:08:50.009: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026619444s
Jan 26 01:08:52.022: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.040189667s
Jan 26 01:08:54.037: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 8.05499254s
Jan 26 01:08:56.044: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 10.062434994s
Jan 26 01:08:58.053: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 12.071394472s
Jan 26 01:09:00.066: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 14.084423896s
Jan 26 01:09:02.077: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 16.095189672s
Jan 26 01:09:04.090: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 18.107670075s
Jan 26 01:09:06.101: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 20.118558853s
Jan 26 01:09:08.111: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=true. Elapsed: 22.129242694s
Jan 26 01:09:10.121: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=false. Elapsed: 24.139053879s
Jan 26 01:09:12.155: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Running", Reason="", readiness=false. Elapsed: 26.173018474s
Jan 26 01:09:14.166: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 28.184121445s
STEP: Saw pod success
Jan 26 01:09:14.166: INFO: Pod "downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c" satisfied condition "Succeeded or Failed"
Jan 26 01:09:14.169: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c container client-container: <nil>
STEP: delete the pod
Jan 26 01:09:14.243: INFO: Waiting for pod downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c to disappear
Jan 26 01:09:14.247: INFO: Pod downwardapi-volume-b33b9fac-02cf-4ace-962f-ab1ba5f6542c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:09:14.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8058" for this suite.

â€¢ [SLOW TEST:28.634 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":1,"skipped":17,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:09:14.261: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Jan 26 01:09:14.430: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4893  48cab4d6-a4ef-4857-8db4-fbaf748d2c57 6492 0 2023-01-26 01:09:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-26 01:09:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:09:14.430: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4893  48cab4d6-a4ef-4857-8db4-fbaf748d2c57 6493 0 2023-01-26 01:09:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-26 01:09:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Jan 26 01:09:14.447: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4893  48cab4d6-a4ef-4857-8db4-fbaf748d2c57 6494 0 2023-01-26 01:09:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-26 01:09:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:09:14.447: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4893  48cab4d6-a4ef-4857-8db4-fbaf748d2c57 6495 0 2023-01-26 01:09:14 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-26 01:09:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 26 01:09:14.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4893" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":2,"skipped":35,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:09:14.462: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:09:14.630: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d" in namespace "downward-api-4115" to be "Succeeded or Failed"
Jan 26 01:09:14.634: INFO: Pod "downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.644959ms
Jan 26 01:09:16.640: INFO: Pod "downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010279461s
Jan 26 01:09:18.651: INFO: Pod "downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020561624s
STEP: Saw pod success
Jan 26 01:09:18.651: INFO: Pod "downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d" satisfied condition "Succeeded or Failed"
Jan 26 01:09:18.655: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d container client-container: <nil>
STEP: delete the pod
Jan 26 01:09:18.738: INFO: Waiting for pod downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d to disappear
Jan 26 01:09:18.742: INFO: Pod downwardapi-volume-d4db5e7f-520e-462b-801e-5157bfa64c0d no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:09:18.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4115" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":3,"skipped":41,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:09:18.854: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-2889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 26 01:09:19.052: INFO: PodSpec: initContainers in spec.initContainers
Jan 26 01:10:02.944: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-cb90a7f0-fc95-4f98-a4b8-eb6a54a44f04", GenerateName:"", Namespace:"init-container-2889", SelfLink:"", UID:"7c9cabc7-def2-41b0-8c6a-eef17c78ed0c", ResourceVersion:"6700", Generation:0, CreationTimestamp:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"52307673"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f85c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 26, 1, 9, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f85cc8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jr524", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0024e5580), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jr524", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jr524", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jr524", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00320a510), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-linuxpool-34140226-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002f9c000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00320a590)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00320a5b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00320a5b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00320a5bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00115eda0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.240.0.4", PodIP:"10.244.1.5", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.5"}}, StartTime:time.Date(2023, time.January, 26, 1, 9, 19, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc002f85d10), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002f9c0e0)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://d153df387bc059c5648fa3b0f3bf66a0b625d95b2b8bad646e6250f3c4dcb4e2", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0024e5600), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0024e55e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00320a63f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 01:10:02.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-2889" for this suite.

â€¢ [SLOW TEST:44.110 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":4,"skipped":81,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:02.964: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7284
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Jan 26 01:10:03.142: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.142: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.162: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.162: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.175: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.175: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.237: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.237: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 26 01:10:03.969: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 26 01:10:03.969: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 26 01:10:07.672: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Jan 26 01:10:07.693: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 0
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.695: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.696: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.696: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.712: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.712: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.746: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.746: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:07.768: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:07.768: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:07.802: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:07.802: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:09.767: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:09.767: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:09.799: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
STEP: listing Deployments
Jan 26 01:10:09.808: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Jan 26 01:10:09.835: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Jan 26 01:10:09.858: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:09.858: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:09.894: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:09.923: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:09.931: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:12.001: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:15.141: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:15.207: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 26 01:10:20.064: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 1
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:20.117: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 3
Jan 26 01:10:20.118: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 2
Jan 26 01:10:20.118: INFO: observed Deployment test-deployment in namespace deployment-7284 with ReadyReplicas 3
STEP: deleting the Deployment
Jan 26 01:10:20.127: INFO: observed event type MODIFIED
Jan 26 01:10:20.127: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
Jan 26 01:10:20.128: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 01:10:20.131: INFO: Log out all the ReplicaSets if there is no deployment created
Jan 26 01:10:20.135: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-7284  7641c3e8-5f2c-4777-ae76-2dd7ca26f9e8 6811 3 2023-01-26 01:10:03 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment eae32d9b-795d-434c-a103-6d900aded512 0xc000bc2f07 0xc000bc2f08}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:10:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eae32d9b-795d-434c-a103-6d900aded512\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:10:09 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000bc2f90 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 26 01:10:20.138: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-7284  1f88c921-71a8-44cd-95a8-d1e3aaf50a03 6910 2 2023-01-26 01:10:09 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment eae32d9b-795d-434c-a103-6d900aded512 0xc000bc2ff7 0xc000bc2ff8}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:10:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eae32d9b-795d-434c-a103-6d900aded512\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:10:15 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000bc3080 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Jan 26 01:10:20.143: INFO: pod: "test-deployment-74c6dd549b-gvbvm":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-gvbvm test-deployment-74c6dd549b- deployment-7284  d47c95b2-3af2-4bc2-acfb-2a15b04e1a48 6909 0 2023-01-26 01:10:15 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 1f88c921-71a8-44cd-95a8-d1e3aaf50a03 0xc000bc3687 0xc000bc3688}] []  [{kube-controller-manager Update v1 2023-01-26 01:10:15 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1f88c921-71a8-44cd-95a8-d1e3aaf50a03\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:10:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.8\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h64ws,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h64ws,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:15 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.8,StartTime:2023-01-26 01:10:15 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:10:19 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://a83b93511255a31518a0ba2497c45aaddfc8a6c9f261b10ec294380b49d60503,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.8,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 26 01:10:20.143: INFO: pod: "test-deployment-74c6dd549b-mgbjl":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-mgbjl test-deployment-74c6dd549b- deployment-7284  2120ba0c-2678-41cc-b2ed-646f93d5e2f5 6869 0 2023-01-26 01:10:09 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 1f88c921-71a8-44cd-95a8-d1e3aaf50a03 0xc000bc3877 0xc000bc3878}] []  [{kube-controller-manager Update v1 2023-01-26 01:10:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1f88c921-71a8-44cd-95a8-d1e3aaf50a03\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:10:15 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.4\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5vc92,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5vc92,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.6,PodIP:10.244.5.4,StartTime:2023-01-26 01:10:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:10:14 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2b5f6f541a431852e90eb9bba169bb627e8f41d9cdab6f41bab234b5bd4298b5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.5.4,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 26 01:10:20.143: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-7284  ce718d60-0572-44a3-bcab-42470acacdfd 6918 4 2023-01-26 01:10:07 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment eae32d9b-795d-434c-a103-6d900aded512 0xc000bc30e7 0xc000bc30e8}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:10:07 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"eae32d9b-795d-434c-a103-6d900aded512\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:10:20 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000bc3170 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 26 01:10:20.147: INFO: pod: "test-deployment-84b949bdfc-sqbtb":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-sqbtb test-deployment-84b949bdfc- deployment-7284  db9788ef-3c9c-4ba4-8804-271d84f11b19 6914 0 2023-01-26 01:10:07 +0000 UTC 2023-01-26 01:10:21 +0000 UTC 0xc0037043b0 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc ce718d60-0572-44a3-bcab-42470acacdfd 0xc0037043e7 0xc0037043e8}] []  [{kube-controller-manager Update v1 2023-01-26 01:10:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ce718d60-0572-44a3-bcab-42470acacdfd\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:10:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w58cr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w58cr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:10:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.5,StartTime:2023-01-26 01:10:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:10:09 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://9096ec3782c09ca5ca27fc6deee3788df7340236500c014a6a5296e85063c382,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.5,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 01:10:20.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7284" for this suite.

â€¢ [SLOW TEST:17.194 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":5,"skipped":119,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:20.160: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8991
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-a84cae8c-e6f5-4d16-b280-060baeff168e
STEP: Creating a pod to test consume secrets
Jan 26 01:10:20.342: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8" in namespace "projected-8991" to be "Succeeded or Failed"
Jan 26 01:10:20.379: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8": Phase="Pending", Reason="", readiness=false. Elapsed: 36.600398ms
Jan 26 01:10:22.390: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8": Phase="Running", Reason="", readiness=true. Elapsed: 2.04709114s
Jan 26 01:10:24.402: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8": Phase="Running", Reason="", readiness=true. Elapsed: 4.059227608s
Jan 26 01:10:26.410: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8": Phase="Running", Reason="", readiness=false. Elapsed: 6.067604215s
Jan 26 01:10:28.420: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.077562848s
STEP: Saw pod success
Jan 26 01:10:28.420: INFO: Pod "pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8" satisfied condition "Succeeded or Failed"
Jan 26 01:10:28.424: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:10:28.449: INFO: Waiting for pod pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8 to disappear
Jan 26 01:10:28.452: INFO: Pod pod-projected-secrets-8e3a423f-5b3d-4cb3-a9f8-af9530697ad8 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 01:10:28.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8991" for this suite.

â€¢ [SLOW TEST:8.307 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":6,"skipped":129,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:28.470: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1857
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-9ca9946c-1b5f-456a-bc65-8c6f1cc7e717
STEP: Creating a pod to test consume configMaps
Jan 26 01:10:28.634: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db" in namespace "projected-1857" to be "Succeeded or Failed"
Jan 26 01:10:28.638: INFO: Pod "pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db": Phase="Pending", Reason="", readiness=false. Elapsed: 3.954167ms
Jan 26 01:10:30.650: INFO: Pod "pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015292433s
Jan 26 01:10:32.657: INFO: Pod "pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022838135s
STEP: Saw pod success
Jan 26 01:10:32.657: INFO: Pod "pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db" satisfied condition "Succeeded or Failed"
Jan 26 01:10:32.661: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:10:32.690: INFO: Waiting for pod pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db to disappear
Jan 26 01:10:32.693: INFO: Pod pod-projected-configmaps-525517d3-e794-4485-b6e7-7e7bedd709db no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:10:32.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1857" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":7,"skipped":149,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:32.705: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8648
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 26 01:10:32.866: INFO: Waiting up to 5m0s for pod "pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8" in namespace "emptydir-8648" to be "Succeeded or Failed"
Jan 26 01:10:32.876: INFO: Pod "pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8": Phase="Pending", Reason="", readiness=false. Elapsed: 10.859882ms
Jan 26 01:10:34.886: INFO: Pod "pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020794124s
Jan 26 01:10:36.892: INFO: Pod "pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026553237s
STEP: Saw pod success
Jan 26 01:10:36.892: INFO: Pod "pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8" satisfied condition "Succeeded or Failed"
Jan 26 01:10:36.896: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8 container test-container: <nil>
STEP: delete the pod
Jan 26 01:10:36.920: INFO: Waiting for pod pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8 to disappear
Jan 26 01:10:36.923: INFO: Pod pod-bf152b50-38f5-4f77-9e71-2d68d465c4d8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:10:36.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8648" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":163,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:36.938: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6467
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 26 01:10:37.121: INFO: Waiting up to 5m0s for pod "pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242" in namespace "emptydir-6467" to be "Succeeded or Failed"
Jan 26 01:10:37.131: INFO: Pod "pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242": Phase="Pending", Reason="", readiness=false. Elapsed: 9.709259ms
Jan 26 01:10:39.141: INFO: Pod "pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02013533s
Jan 26 01:10:41.153: INFO: Pod "pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031830322s
STEP: Saw pod success
Jan 26 01:10:41.153: INFO: Pod "pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242" satisfied condition "Succeeded or Failed"
Jan 26 01:10:41.157: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242 container test-container: <nil>
STEP: delete the pod
Jan 26 01:10:41.222: INFO: Waiting for pod pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242 to disappear
Jan 26 01:10:41.225: INFO: Pod pod-5493efc3-bab4-49c4-b8bb-fccfebd0a242 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:10:41.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6467" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":9,"skipped":189,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:41.261: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-9454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-9454
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-9454
STEP: Deleting pre-stop pod
Jan 26 01:10:52.528: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Jan 26 01:10:52.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-9454" for this suite.

â€¢ [SLOW TEST:11.312 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":10,"skipped":198,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:10:52.574: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5653
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 26 01:10:52.773: INFO: Found 0 stateful pods, waiting for 3
Jan 26 01:11:02.782: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:11:02.782: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:11:02.782: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:11:02.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-5653 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:11:03.232: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:11:03.232: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:11:03.232: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 26 01:11:13.291: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Jan 26 01:11:23.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-5653 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 01:11:23.506: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 01:11:23.506: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 01:11:23.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Jan 26 01:11:43.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-5653 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:11:43.761: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:11:43.761: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:11:43.761: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 01:11:53.824: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Jan 26 01:12:03.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-5653 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 01:12:04.035: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 01:12:04.035: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 01:12:04.035: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 01:12:14.070: INFO: Waiting for StatefulSet statefulset-5653/ss2 to complete update
Jan 26 01:12:14.070: INFO: Waiting for Pod statefulset-5653/ss2-0 to have revision ss2-57bbdd95cb update revision ss2-5f8764d585
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 01:12:24.090: INFO: Deleting all statefulset in ns statefulset-5653
Jan 26 01:12:24.094: INFO: Scaling statefulset ss2 to 0
Jan 26 01:12:34.128: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:12:34.132: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 01:12:34.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5653" for this suite.

â€¢ [SLOW TEST:101.592 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":11,"skipped":231,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:12:34.170: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7700
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7700
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-7700
Jan 26 01:12:34.366: INFO: Found 0 stateful pods, waiting for 1
Jan 26 01:12:44.377: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 01:12:44.414: INFO: Deleting all statefulset in ns statefulset-7700
Jan 26 01:12:44.417: INFO: Scaling statefulset ss to 0
Jan 26 01:12:54.455: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:12:54.458: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 01:12:54.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7700" for this suite.

â€¢ [SLOW TEST:20.341 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":12,"skipped":240,"failed":0}
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:12:54.512: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4705
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 26 01:12:54.662: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 26 01:12:54.671: INFO: Waiting for terminating namespaces to be deleted...
Jan 26 01:12:54.675: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-0 before test
Jan 26 01:12:54.685: INFO: azure-ip-masq-agent-ndp84 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:12:54.685: INFO: cloud-node-manager-fp92n from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:12:54.685: INFO: kube-proxy-qm5rk from kube-system started at 2023-01-26 00:32:47 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:12:54.685: INFO: sonobuoy from sonobuoy started at 2023-01-26 01:08:31 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 26 01:12:54.685: INFO: sonobuoy-e2e-job-56b4e4a96bd64cd3 from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container e2e ready: true, restart count 0
Jan 26 01:12:54.685: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:12:54.685: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:12:54.685: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:12:54.685: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:12:54.685: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-1 before test
Jan 26 01:12:54.695: INFO: azure-ip-masq-agent-wthtk from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.695: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:12:54.695: INFO: cloud-node-manager-4rmf9 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.695: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:12:54.695: INFO: coredns-75bdb78f8b-9bkrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.695: INFO: 	Container coredns ready: true, restart count 0
Jan 26 01:12:54.695: INFO: kube-proxy-89dvc from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.695: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:12:54.695: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-n9kmj from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:12:54.695: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:12:54.695: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:12:54.695: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-2 before test
Jan 26 01:12:54.705: INFO: azure-ip-masq-agent-xxzsm from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:12:54.705: INFO: cloud-node-manager-j9w2p from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:12:54.705: INFO: coredns-autoscaler-84bb8dc9d5-lcvrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container autoscaler ready: true, restart count 0
Jan 26 01:12:54.705: INFO: kube-proxy-ksbr8 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:12:54.705: INFO: metrics-server-66dd6687d9-6pdpz from kube-system started at 2023-01-26 00:32:49 +0000 UTC (1 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container metrics-server ready: true, restart count 0
Jan 26 01:12:54.705: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-gsrzg from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:12:54.705: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:12:54.705: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node k8s-linuxpool-34140226-0
STEP: verifying the node has the label node k8s-linuxpool-34140226-1
STEP: verifying the node has the label node k8s-linuxpool-34140226-2
Jan 26 01:12:54.803: INFO: Pod azure-ip-masq-agent-ndp84 requesting resource cpu=50m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.804: INFO: Pod azure-ip-masq-agent-wthtk requesting resource cpu=50m on Node k8s-linuxpool-34140226-1
Jan 26 01:12:54.804: INFO: Pod azure-ip-masq-agent-xxzsm requesting resource cpu=50m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.805: INFO: Pod cloud-node-manager-4rmf9 requesting resource cpu=50m on Node k8s-linuxpool-34140226-1
Jan 26 01:12:54.805: INFO: Pod cloud-node-manager-fp92n requesting resource cpu=50m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.805: INFO: Pod cloud-node-manager-j9w2p requesting resource cpu=50m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.805: INFO: Pod coredns-75bdb78f8b-9bkrc requesting resource cpu=100m on Node k8s-linuxpool-34140226-1
Jan 26 01:12:54.806: INFO: Pod coredns-autoscaler-84bb8dc9d5-lcvrc requesting resource cpu=20m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.806: INFO: Pod kube-proxy-89dvc requesting resource cpu=100m on Node k8s-linuxpool-34140226-1
Jan 26 01:12:54.806: INFO: Pod kube-proxy-ksbr8 requesting resource cpu=100m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.806: INFO: Pod kube-proxy-qm5rk requesting resource cpu=100m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.807: INFO: Pod metrics-server-66dd6687d9-6pdpz requesting resource cpu=100m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.807: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.808: INFO: Pod sonobuoy-e2e-job-56b4e4a96bd64cd3 requesting resource cpu=0m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.808: INFO: Pod sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s requesting resource cpu=0m on Node k8s-linuxpool-34140226-0
Jan 26 01:12:54.808: INFO: Pod sonobuoy-systemd-logs-daemon-set-085b76f029c54706-gsrzg requesting resource cpu=0m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.808: INFO: Pod sonobuoy-systemd-logs-daemon-set-085b76f029c54706-n9kmj requesting resource cpu=0m on Node k8s-linuxpool-34140226-1
STEP: Starting Pods to consume most of the cluster CPU.
Jan 26 01:12:54.809: INFO: Creating a pod which consumes cpu=1190m on Node k8s-linuxpool-34140226-1
Jan 26 01:12:54.819: INFO: Creating a pod which consumes cpu=1176m on Node k8s-linuxpool-34140226-2
Jan 26 01:12:54.832: INFO: Creating a pod which consumes cpu=1260m on Node k8s-linuxpool-34140226-0
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6.173db6c09c55c34c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4705/filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6 to k8s-linuxpool-34140226-1]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6.173db6c0bc3978b8], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6.173db6c0be80ca29], Reason = [Created], Message = [Created container filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6.173db6c0c3d01373], Reason = [Started], Message = [Started container filler-pod-766d86fb-3317-4a58-84c6-ac15470e81f6]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff.173db6c09d262162], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4705/filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff to k8s-linuxpool-34140226-2]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff.173db6c0bd15bb9e], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff.173db6c0beeb04fb], Reason = [Created], Message = [Created container filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff.173db6c0c404f0eb], Reason = [Started], Message = [Started container filler-pod-d712a922-f9ba-4c97-ba6d-2661c4602fff]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd.173db6c09dcb54ef], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4705/filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd to k8s-linuxpool-34140226-0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd.173db6c0bd730e85], Reason = [Pulling], Message = [Pulling image "k8s.gcr.io/pause:3.7"]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd.173db6c0eaf7e52f], Reason = [Pulled], Message = [Successfully pulled image "k8s.gcr.io/pause:3.7" in 763.630125ms]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd.173db6c0ed8d5b36], Reason = [Created], Message = [Created container filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd.173db6c0f2aeb0ed], Reason = [Started], Message = [Started container filler-pod-f75061f4-fa33-47ca-84be-489dfaf1d6dd]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.173db6c116b519ba], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/master: true}. preemption: 0/6 nodes are available: 3 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.]
STEP: removing the label node off the node k8s-linuxpool-34140226-0
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node k8s-linuxpool-34140226-1
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node k8s-linuxpool-34140226-2
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:12:57.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4705" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":13,"skipped":247,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:12:57.983: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:12:58.712: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:13:01.757: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:13:01.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6420" for this suite.
STEP: Destroying namespace "webhook-6420-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":14,"skipped":268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:01.928: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-7146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 26 01:13:02.107: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:13:04.116: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 26 01:13:04.136: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:13:06.148: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 26 01:13:06.164: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 26 01:13:06.168: INFO: Pod pod-with-prestop-http-hook still exists
Jan 26 01:13:08.169: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 26 01:13:08.175: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 26 01:13:08.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-7146" for this suite.

â€¢ [SLOW TEST:6.303 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":313,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:08.231: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6367
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-6367
STEP: creating replication controller externalsvc in namespace services-6367
I0126 01:13:08.442184      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6367, replica count: 2
I0126 01:13:11.493163      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0126 01:13:14.493372      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Jan 26 01:13:14.533: INFO: Creating new exec pod
Jan 26 01:13:16.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-6367 exec execpodzbztn -- /bin/sh -x -c nslookup clusterip-service.services-6367.svc.cluster.local'
Jan 26 01:13:16.793: INFO: stderr: "+ nslookup clusterip-service.services-6367.svc.cluster.local\n"
Jan 26 01:13:16.793: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nclusterip-service.services-6367.svc.cluster.local\tcanonical name = externalsvc.services-6367.svc.cluster.local.\nName:\texternalsvc.services-6367.svc.cluster.local\nAddress: 10.0.160.119\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6367, will wait for the garbage collector to delete the pods
Jan 26 01:13:16.869: INFO: Deleting ReplicationController externalsvc took: 7.056116ms
Jan 26 01:13:16.970: INFO: Terminating ReplicationController externalsvc pods took: 101.087459ms
Jan 26 01:13:23.608: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:13:23.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6367" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:15.417 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":16,"skipped":327,"failed":0}
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:23.648: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-2233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:13:23.804: INFO: The status of Pod busybox-readonly-fs52eda038-5a1d-4f4f-ae48-202236de65c6 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:13:25.814: INFO: The status of Pod busybox-readonly-fs52eda038-5a1d-4f4f-ae48-202236de65c6 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 26 01:13:25.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-2233" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":17,"skipped":327,"failed":0}
SS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:25.863: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Jan 26 01:13:26.029: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 26 01:13:31.041: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 01:13:31.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2864" for this suite.

â€¢ [SLOW TEST:5.238 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":18,"skipped":329,"failed":0}
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:31.101: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-55
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-55
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 26 01:13:31.247: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 26 01:13:31.305: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:13:33.316: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:13:35.317: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:13:37.312: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:13:39.316: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:13:41.316: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:13:43.316: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 26 01:13:43.322: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 26 01:13:43.328: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 26 01:13:45.380: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 26 01:13:45.380: INFO: Going to poll 10.244.5.10 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:13:45.383: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.5.10 8081 | grep -v '^\s*$'] Namespace:pod-network-test-55 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:13:45.383: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:13:45.384: INFO: ExecWithOptions: Clientset creation
Jan 26 01:13:45.384: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-55/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.5.10+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:13:46.570: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 26 01:13:46.571: INFO: Going to poll 10.244.1.23 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:13:46.578: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.23 8081 | grep -v '^\s*$'] Namespace:pod-network-test-55 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:13:46.578: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:13:46.579: INFO: ExecWithOptions: Clientset creation
Jan 26 01:13:46.579: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-55/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.23+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:13:47.683: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 26 01:13:47.683: INFO: Going to poll 10.244.2.15 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:13:47.689: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.15 8081 | grep -v '^\s*$'] Namespace:pod-network-test-55 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:13:47.689: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:13:47.690: INFO: ExecWithOptions: Clientset creation
Jan 26 01:13:47.690: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-55/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.15+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:13:48.801: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 26 01:13:48.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-55" for this suite.

â€¢ [SLOW TEST:17.718 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":19,"skipped":329,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:13:48.820: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-3e06f252-76d1-4559-8195-db601aeeb967 in namespace container-probe-2674
Jan 26 01:13:50.983: INFO: Started pod test-webserver-3e06f252-76d1-4559-8195-db601aeeb967 in namespace container-probe-2674
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 01:13:50.986: INFO: Initial restart count of pod test-webserver-3e06f252-76d1-4559-8195-db601aeeb967 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:17:52.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2674" for this suite.

â€¢ [SLOW TEST:243.482 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":20,"skipped":374,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:17:52.302: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2517
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-76abbd45-bb88-429a-a177-ec496da4eb15
STEP: Creating a pod to test consume configMaps
Jan 26 01:17:52.508: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3" in namespace "projected-2517" to be "Succeeded or Failed"
Jan 26 01:17:52.513: INFO: Pod "pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.510567ms
Jan 26 01:17:54.526: INFO: Pod "pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017652976s
Jan 26 01:17:56.538: INFO: Pod "pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029621096s
STEP: Saw pod success
Jan 26 01:17:56.538: INFO: Pod "pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3" satisfied condition "Succeeded or Failed"
Jan 26 01:17:56.542: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:17:56.697: INFO: Waiting for pod pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3 to disappear
Jan 26 01:17:56.754: INFO: Pod pod-projected-configmaps-eecbccd2-ecb3-4aee-b35e-e3ed724fe2d3 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:17:56.755: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2517" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":382,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:17:56.771: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3943
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3943
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-3943
I0126 01:17:57.024942      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3943, replica count: 2
Jan 26 01:18:00.076: INFO: Creating new exec pod
I0126 01:18:00.076121      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:18:03.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 26 01:18:03.308: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:03.309: INFO: stdout: ""
Jan 26 01:18:04.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 26 01:18:04.532: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:04.532: INFO: stdout: "externalname-service-xq9xj"
Jan 26 01:18:04.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:04.725: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:04.725: INFO: stdout: ""
Jan 26 01:18:05.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:05.959: INFO: stderr: "+ + ncecho -v -t hostName -w\n 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:05.959: INFO: stdout: ""
Jan 26 01:18:06.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:06.920: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:06.920: INFO: stdout: ""
Jan 26 01:18:07.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:07.924: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:07.924: INFO: stdout: ""
Jan 26 01:18:08.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:08.936: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:08.936: INFO: stdout: ""
Jan 26 01:18:09.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3943 exec execpodp8hbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.209.32 80'
Jan 26 01:18:09.927: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.209.32 80\nConnection to 10.0.209.32 80 port [tcp/http] succeeded!\n"
Jan 26 01:18:09.927: INFO: stdout: "externalname-service-xq9xj"
Jan 26 01:18:09.927: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:18:09.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3943" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:13.215 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":22,"skipped":405,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:09.986: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-984
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Jan 26 01:18:10.175: INFO: created test-event-1
Jan 26 01:18:10.182: INFO: created test-event-2
Jan 26 01:18:10.187: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Jan 26 01:18:10.190: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Jan 26 01:18:10.220: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 26 01:18:10.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-984" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":23,"skipped":419,"failed":0}
SSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:10.240: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2763
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 26 01:18:14.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2763" for this suite.
â€¢{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":24,"skipped":425,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:14.440: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2222
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-849eea06-d1cc-4683-83e2-690af2d38203
STEP: Creating a pod to test consume secrets
Jan 26 01:18:14.592: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57" in namespace "projected-2222" to be "Succeeded or Failed"
Jan 26 01:18:14.599: INFO: Pod "pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57": Phase="Pending", Reason="", readiness=false. Elapsed: 6.886405ms
Jan 26 01:18:16.609: INFO: Pod "pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016106737s
Jan 26 01:18:18.618: INFO: Pod "pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025479771s
STEP: Saw pod success
Jan 26 01:18:18.618: INFO: Pod "pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57" satisfied condition "Succeeded or Failed"
Jan 26 01:18:18.621: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:18:18.670: INFO: Waiting for pod pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57 to disappear
Jan 26 01:18:18.678: INFO: Pod pod-projected-secrets-aaee0cfc-4be4-4570-8440-96835eaafa57 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 01:18:18.678: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2222" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":25,"skipped":427,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:18.693: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9862
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Jan 26 01:18:18.840: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9862 proxy --unix-socket=/tmp/kubectl-proxy-unix1616952997/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:18:18.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9862" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":26,"skipped":436,"failed":0}

------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:18.902: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1831
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 26 01:18:19.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1831 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 26 01:18:19.127: INFO: stderr: ""
Jan 26 01:18:19.127: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Jan 26 01:18:19.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1831 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Jan 26 01:18:20.230: INFO: stderr: ""
Jan 26 01:18:20.230: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 26 01:18:20.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1831 delete pods e2e-test-httpd-pod'
Jan 26 01:18:23.146: INFO: stderr: ""
Jan 26 01:18:23.146: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:18:23.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1831" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":27,"skipped":436,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:23.165: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-1057
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:18:23.877: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:18:26.916: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:18:26.920: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:18:30.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-1057" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:7.015 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":28,"skipped":447,"failed":0}
SSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:30.181: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-548
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 26 01:18:32.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-548" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":452,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:32.485: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:18:32.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5518" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":30,"skipped":483,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:32.685: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:18:32.819: INFO: Creating deployment "webserver-deployment"
Jan 26 01:18:32.828: INFO: Waiting for observed generation 1
Jan 26 01:18:34.846: INFO: Waiting for all required pods to come up
Jan 26 01:18:34.854: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Jan 26 01:18:36.870: INFO: Waiting for deployment "webserver-deployment" to complete
Jan 26 01:18:36.876: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jan 26 01:18:36.890: INFO: Updating deployment webserver-deployment
Jan 26 01:18:36.890: INFO: Waiting for observed generation 2
Jan 26 01:18:38.906: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jan 26 01:18:38.911: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jan 26 01:18:38.915: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 26 01:18:38.928: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jan 26 01:18:38.928: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jan 26 01:18:38.934: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 26 01:18:38.941: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jan 26 01:18:38.941: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jan 26 01:18:38.958: INFO: Updating deployment webserver-deployment
Jan 26 01:18:38.958: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jan 26 01:18:38.975: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jan 26 01:18:38.984: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 01:18:39.010: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-6257  37b6ff59-d680-4527-8ef5-c842f57095f3 9974 3 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:18:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036fdad8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-26 01:18:35 +0000 UTC,LastTransitionTime:2023-01-26 01:18:35 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2023-01-26 01:18:37 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jan 26 01:18:39.039: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-6257  59b8b431-6455-45b7-9e5d-b091c60846b1 9978 3 2023-01-26 01:18:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 37b6ff59-d680-4527-8ef5-c842f57095f3 0xc003511c17 0xc003511c18}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"37b6ff59-d680-4527-8ef5-c842f57095f3\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003511cb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:18:39.039: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jan 26 01:18:39.039: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-6257  0676624c-558b-4fd3-ba0a-fa6951d6f21f 9975 3 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 37b6ff59-d680-4527-8ef5-c842f57095f3 0xc003511b27 0xc003511b28}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"37b6ff59-d680-4527-8ef5-c842f57095f3\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003511bb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:18:39.141: INFO: Pod "webserver-deployment-55df494869-2w8zw" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2w8zw webserver-deployment-55df494869- deployment-6257  7a8ef380-9343-414f-8176-80e714183883 9987 0 2023-01-26 01:18:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a150 0xc00385a151}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m76qz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m76qz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.142: INFO: Pod "webserver-deployment-55df494869-5g7th" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5g7th webserver-deployment-55df494869- deployment-6257  b31ee307-52ba-4896-8c86-5b0f5290e0d7 9833 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a2c0 0xc00385a2c1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.31\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hw5h8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hw5h8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.31,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2b19b51db8214e422751fd139316e03d91ad8a7d1a72f5f5307d8e8ab4a5be24,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.31,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.142: INFO: Pod "webserver-deployment-55df494869-5zlh9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5zlh9 webserver-deployment-55df494869- deployment-6257  127c55be-8481-46b5-93ac-8ccd57fd19fa 9847 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a4a0 0xc00385a4a1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7vgrd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7vgrd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.20,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://20a642e7b58eb3a6af4628fb2608b19e9d5904b28a60bf663d590192f04f1e0b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.20,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.143: INFO: Pod "webserver-deployment-55df494869-8pt7n" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8pt7n webserver-deployment-55df494869- deployment-6257  ce50d15f-4326-496d-9cff-8d2923fb996e 10011 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a690 0xc00385a691}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwhwp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwhwp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.143: INFO: Pod "webserver-deployment-55df494869-9xrvt" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9xrvt webserver-deployment-55df494869- deployment-6257  cf98df0d-9d6e-474b-9137-60104c9da613 9851 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a7d7 0xc00385a7d8}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.14\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9l7wv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9l7wv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.6,PodIP:10.244.5.14,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://58bcd9d80fd8040813af3bf54cf4267d632fe67eaf922a44d88c8af6eaab7a9a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.5.14,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.143: INFO: Pod "webserver-deployment-55df494869-bmn2n" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bmn2n webserver-deployment-55df494869- deployment-6257  a0c175bd-8c6b-41d0-a26e-eecb5ac211b1 10009 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385a9b0 0xc00385a9b1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ccdfw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ccdfw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.144: INFO: Pod "webserver-deployment-55df494869-fhqw9" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-fhqw9 webserver-deployment-55df494869- deployment-6257  fbcb3e74-3619-4228-8df1-5d41787a6d5a 10014 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385aae7 0xc00385aae8}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r72hn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r72hn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.144: INFO: Pod "webserver-deployment-55df494869-g9czm" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-g9czm webserver-deployment-55df494869- deployment-6257  f24a196b-3c36-4d43-9700-960ae9fd124b 10012 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385ac40 0xc00385ac41}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-74tpm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-74tpm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.145: INFO: Pod "webserver-deployment-55df494869-hb6j8" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hb6j8 webserver-deployment-55df494869- deployment-6257  5557beef-9da7-4a13-be01-9d6f96e0d59e 10007 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385ad77 0xc00385ad78}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zqssg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zqssg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.145: INFO: Pod "webserver-deployment-55df494869-jwwl7" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jwwl7 webserver-deployment-55df494869- deployment-6257  594d69c6-57d3-4a55-bda9-b7934c437b50 10006 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385aed0 0xc00385aed1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v5tbg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v5tbg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.145: INFO: Pod "webserver-deployment-55df494869-ljxdz" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-ljxdz webserver-deployment-55df494869- deployment-6257  cf28add0-df87-433b-82f9-ec347a3255ee 9993 0 2023-01-26 01:18:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b020 0xc00385b021}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ms2ff,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ms2ff,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.146: INFO: Pod "webserver-deployment-55df494869-nhd8q" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nhd8q webserver-deployment-55df494869- deployment-6257  fa47a0c1-9755-4c55-b12a-5649db93afcc 9854 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b170 0xc00385b171}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.15\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4h5fb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4h5fb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.6,PodIP:10.244.5.15,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://f074e0af242d0d890e6afbebe661f256cc5792121e00f0756aafc3952d24e334,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.5.15,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.147: INFO: Pod "webserver-deployment-55df494869-nsbdn" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nsbdn webserver-deployment-55df494869- deployment-6257  aed368cf-5b3e-4c42-b5d1-6e66d0309155 9818 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b340 0xc00385b341}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.13\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fhqmr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fhqmr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.6,PodIP:10.244.5.13,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://4ed0d236970733491bfc11f0496a8c51cb0021b6cf5b0aed465976d6f62f9df4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.5.13,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.147: INFO: Pod "webserver-deployment-55df494869-nwzc8" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nwzc8 webserver-deployment-55df494869- deployment-6257  41ec0eba-ce39-4920-a462-4f77e7f2620a 10010 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b510 0xc00385b511}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vccvp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vccvp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.148: INFO: Pod "webserver-deployment-55df494869-pmdqx" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pmdqx webserver-deployment-55df494869- deployment-6257  38d3988c-ecf3-4639-ada2-62a822f61a14 9981 0 2023-01-26 01:18:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b647 0xc00385b648}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qcxf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qcxf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.148: INFO: Pod "webserver-deployment-55df494869-qctkf" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-qctkf webserver-deployment-55df494869- deployment-6257  dff30ec9-84e5-47ac-980d-cf7d48c65c6c 10005 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b7a0 0xc00385b7a1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2vc2d,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2vc2d,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.149: INFO: Pod "webserver-deployment-55df494869-rb7tm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-rb7tm webserver-deployment-55df494869- deployment-6257  83410cd9-784f-4c94-99b1-0d986d57987b 9823 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385b8f0 0xc00385b8f1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.32\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2hj2h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2hj2h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.32,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2d2429699d4edf5a8046fa370461419161e122f0d612b83b56e715bdef5aaeb9,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.32,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.149: INFO: Pod "webserver-deployment-55df494869-t47gs" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-t47gs webserver-deployment-55df494869- deployment-6257  a077bc7f-2c24-4a38-8b33-a8a9a7ae73c0 9844 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385bac0 0xc00385bac1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.19\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-257vm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-257vm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.19,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b317a64a2951d6d5a6697b3b8df9f2fa47919590cf2b00229b5de42f07538c21,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.19,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.150: INFO: Pod "webserver-deployment-55df494869-v2g8x" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-v2g8x webserver-deployment-55df494869- deployment-6257  7133028d-1fe6-4c95-b2c8-bc15a240e5ee 9842 0 2023-01-26 01:18:32 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385bc90 0xc00385bc91}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pbjws,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pbjws,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.21,StartTime:2023-01-26 01:18:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://60f8053f7a23b001094b414f170a8cd3948625ca75462239e1e8f485dfd7feb0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.150: INFO: Pod "webserver-deployment-55df494869-z4z8j" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-z4z8j webserver-deployment-55df494869- deployment-6257  087797cd-8857-4f94-9412-8ffef31089ac 10008 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 0676624c-558b-4fd3-ba0a-fa6951d6f21f 0xc00385be60 0xc00385be61}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0676624c-558b-4fd3-ba0a-fa6951d6f21f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z8wbz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z8wbz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.151: INFO: Pod "webserver-deployment-57ccb67bb8-75q2h" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-75q2h webserver-deployment-57ccb67bb8- deployment-6257  c80c869d-bd1b-4caa-a337-6a09b1d3f285 10018 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc00385bf97 0xc00385bf98}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5td2s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5td2s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.151: INFO: Pod "webserver-deployment-57ccb67bb8-crrt8" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-crrt8 webserver-deployment-57ccb67bb8- deployment-6257  1f98e8df-1f62-4d8a-8ddb-9bb9494a9afe 10017 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674100 0xc003674101}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5r4fm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5r4fm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.151: INFO: Pod "webserver-deployment-57ccb67bb8-f8hf5" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-f8hf5 webserver-deployment-57ccb67bb8- deployment-6257  e43a0a47-5844-4343-8417-3300436403f7 9969 0 2023-01-26 01:18:37 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674260 0xc003674261}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.23\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b9cln,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b9cln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.23,StartTime:2023-01-26 01:18:37 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.23,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.152: INFO: Pod "webserver-deployment-57ccb67bb8-fx647" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-fx647 webserver-deployment-57ccb67bb8- deployment-6257  fed816bd-baca-4afd-958b-3b8905ba8aae 9955 0 2023-01-26 01:18:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674470 0xc003674471}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m52pd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m52pd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.6,PodIP:10.244.5.16,StartTime:2023-01-26 01:18:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.5.16,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.152: INFO: Pod "webserver-deployment-57ccb67bb8-gmkfm" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-gmkfm webserver-deployment-57ccb67bb8- deployment-6257  ab678ac9-c188-4e7a-9538-1dd6ce549fe3 9973 0 2023-01-26 01:18:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674670 0xc003674671}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.22\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5c7r2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5c7r2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.22,StartTime:2023-01-26 01:18:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.22,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.153: INFO: Pod "webserver-deployment-57ccb67bb8-hk6f2" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-hk6f2 webserver-deployment-57ccb67bb8- deployment-6257  516ea467-1d13-434a-b6d6-ca13637e7cbd 10003 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674870 0xc003674871}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-68sr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-68sr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.153: INFO: Pod "webserver-deployment-57ccb67bb8-jdfsr" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-jdfsr webserver-deployment-57ccb67bb8- deployment-6257  5465afa5-066a-4dff-abbf-63a04b143264 10016 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc0036749d0 0xc0036749d1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4xqpx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4xqpx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.153: INFO: Pod "webserver-deployment-57ccb67bb8-lqtmn" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-lqtmn webserver-deployment-57ccb67bb8- deployment-6257  ca75d001-1649-4356-902d-75239ccc11b5 9998 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674b30 0xc003674b31}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qvhfd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qvhfd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.154: INFO: Pod "webserver-deployment-57ccb67bb8-lv2zf" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-lv2zf webserver-deployment-57ccb67bb8- deployment-6257  89b75ea6-763c-4d27-9778-4af3ee753fa5 10019 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674c90 0xc003674c91}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8lh24,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8lh24,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.154: INFO: Pod "webserver-deployment-57ccb67bb8-ntmhh" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-ntmhh webserver-deployment-57ccb67bb8- deployment-6257  9d59107a-80c5-4132-a023-b06ddf786b7f 9919 0 2023-01-26 01:18:37 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674df0 0xc003674df1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gqrtg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gqrtg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:,StartTime:2023-01-26 01:18:37 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.155: INFO: Pod "webserver-deployment-57ccb67bb8-pl6bb" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-pl6bb webserver-deployment-57ccb67bb8- deployment-6257  3fca471d-f8c8-4bba-b275-1d63c98336f5 9986 0 2023-01-26 01:18:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003674fc0 0xc003674fc1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lfs9h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lfs9h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.155: INFO: Pod "webserver-deployment-57ccb67bb8-rk4cf" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-rk4cf webserver-deployment-57ccb67bb8- deployment-6257  d1c47abd-6e5b-43b3-b34f-5f7b12934920 9898 0 2023-01-26 01:18:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc003675120 0xc003675121}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:18:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-45kx2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-45kx2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:18:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:,StartTime:2023-01-26 01:18:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 01:18:39.155: INFO: Pod "webserver-deployment-57ccb67bb8-x46h8" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-x46h8 webserver-deployment-57ccb67bb8- deployment-6257  bcb88c3b-5d51-4f4b-839a-39bc93175138 10015 0 2023-01-26 01:18:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 59b8b431-6455-45b7-9e5d-b091c60846b1 0xc0036752f0 0xc0036752f1}] []  [{kube-controller-manager Update v1 2023-01-26 01:18:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59b8b431-6455-45b7-9e5d-b091c60846b1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nx6ts,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nx6ts,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 01:18:39.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6257" for this suite.

â€¢ [SLOW TEST:6.544 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":31,"skipped":550,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:39.233: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 26 01:18:39.456: INFO: Waiting up to 5m0s for pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82" in namespace "emptydir-8281" to be "Succeeded or Failed"
Jan 26 01:18:39.463: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Pending", Reason="", readiness=false. Elapsed: 6.5697ms
Jan 26 01:18:41.474: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017161537s
Jan 26 01:18:43.482: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02549044s
Jan 26 01:18:45.492: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Pending", Reason="", readiness=false. Elapsed: 6.035942086s
Jan 26 01:18:47.498: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Pending", Reason="", readiness=false. Elapsed: 8.041119249s
Jan 26 01:18:49.505: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.048470846s
STEP: Saw pod success
Jan 26 01:18:49.505: INFO: Pod "pod-0f20c488-2889-46d4-be77-9ee27f7cdf82" satisfied condition "Succeeded or Failed"
Jan 26 01:18:49.508: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-0f20c488-2889-46d4-be77-9ee27f7cdf82 container test-container: <nil>
STEP: delete the pod
Jan 26 01:18:49.529: INFO: Waiting for pod pod-0f20c488-2889-46d4-be77-9ee27f7cdf82 to disappear
Jan 26 01:18:49.532: INFO: Pod pod-0f20c488-2889-46d4-be77-9ee27f7cdf82 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:18:49.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8281" for this suite.

â€¢ [SLOW TEST:10.312 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":32,"skipped":577,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:18:49.545: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5523
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-5523, will wait for the garbage collector to delete the pods
Jan 26 01:18:53.792: INFO: Deleting Job.batch foo took: 8.110423ms
Jan 26 01:18:53.892: INFO: Terminating Job.batch foo pods took: 100.301427ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 26 01:19:25.511: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5523" for this suite.

â€¢ [SLOW TEST:35.977 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":33,"skipped":638,"failed":0}
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:19:25.523: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4999
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4999
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-4999
Jan 26 01:19:25.686: INFO: Found 0 stateful pods, waiting for 1
Jan 26 01:19:35.696: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Jan 26 01:19:35.719: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Jan 26 01:19:35.730: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Jan 26 01:19:35.732: INFO: Observed &StatefulSet event: ADDED
Jan 26 01:19:35.732: INFO: Found Statefulset ss in namespace statefulset-4999 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 26 01:19:35.732: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Jan 26 01:19:35.732: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 26 01:19:35.739: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Jan 26 01:19:35.741: INFO: Observed &StatefulSet event: ADDED
Jan 26 01:19:35.741: INFO: Observed Statefulset ss in namespace statefulset-4999 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 26 01:19:35.741: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 01:19:35.741: INFO: Deleting all statefulset in ns statefulset-4999
Jan 26 01:19:35.745: INFO: Scaling statefulset ss to 0
Jan 26 01:19:45.781: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:19:45.785: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 01:19:45.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4999" for this suite.

â€¢ [SLOW TEST:20.290 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":34,"skipped":639,"failed":0}
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:19:45.812: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-88
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 26 01:19:50.017: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 26 01:19:50.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-88" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":35,"skipped":639,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:19:50.054: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9883
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-a5274470-7424-4aad-b2ad-bb50dd877a87
STEP: Creating the pod
Jan 26 01:19:50.274: INFO: The status of Pod pod-projected-configmaps-a44df043-aa05-4d2e-9839-95754e24c959 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:19:52.282: INFO: The status of Pod pod-projected-configmaps-a44df043-aa05-4d2e-9839-95754e24c959 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-a5274470-7424-4aad-b2ad-bb50dd877a87
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:19:54.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9883" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":36,"skipped":648,"failed":0}
SSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:19:54.335: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5901
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Jan 26 01:19:54.507: INFO: Waiting up to 5m0s for pod "var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab" in namespace "var-expansion-5901" to be "Succeeded or Failed"
Jan 26 01:19:54.609: INFO: Pod "var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab": Phase="Pending", Reason="", readiness=false. Elapsed: 101.396361ms
Jan 26 01:19:56.620: INFO: Pod "var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.112737427s
Jan 26 01:19:58.632: INFO: Pod "var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.124760513s
STEP: Saw pod success
Jan 26 01:19:58.632: INFO: Pod "var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab" satisfied condition "Succeeded or Failed"
Jan 26 01:19:58.636: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:19:58.683: INFO: Waiting for pod var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab to disappear
Jan 26 01:19:58.686: INFO: Pod var-expansion-a522c757-1555-4114-8c93-5b0e25deaaab no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 01:19:58.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5901" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":37,"skipped":654,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:19:58.701: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 26 01:20:03.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1160" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":38,"skipped":666,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:20:03.583: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-40a30cc9-926d-4cb8-9be9-62b1a72e6c94
STEP: Creating the pod
Jan 26 01:20:03.767: INFO: The status of Pod pod-configmaps-7f0153fc-b13a-4a93-964b-1e36036b06e4 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:20:05.777: INFO: The status of Pod pod-configmaps-7f0153fc-b13a-4a93-964b-1e36036b06e4 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-40a30cc9-926d-4cb8-9be9-62b1a72e6c94
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:20:09.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6802" for this suite.

â€¢ [SLOW TEST:6.255 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":717,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:20:09.839: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9753
Jan 26 01:20:10.011: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:20:12.025: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 26 01:20:12.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 26 01:20:12.240: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jan 26 01:20:12.240: INFO: stdout: "iptables"
Jan 26 01:20:12.240: INFO: proxyMode: iptables
Jan 26 01:20:12.266: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 26 01:20:12.270: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-9753
STEP: creating replication controller affinity-nodeport-timeout in namespace services-9753
I0126 01:20:12.304483      20 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-9753, replica count: 3
I0126 01:20:15.355613      20 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:20:15.375: INFO: Creating new exec pod
Jan 26 01:20:18.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Jan 26 01:20:18.634: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Jan 26 01:20:18.634: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:20:18.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.22.75 80'
Jan 26 01:20:18.825: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.0.22.75 80\nConnection to 10.0.22.75 80 port [tcp/http] succeeded!\n"
Jan 26 01:20:18.825: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:20:18.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.5 31966'
Jan 26 01:20:19.020: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.5 31966\nConnection to 10.240.0.5 31966 port [tcp/*] succeeded!\n"
Jan 26 01:20:19.020: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:20:19.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 31966'
Jan 26 01:20:19.226: INFO: stderr: "+ nc -v -t -w 2 10.240.0.4 31966\n+ echo hostName\nConnection to 10.240.0.4 31966 port [tcp/*] succeeded!\n"
Jan 26 01:20:19.226: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:20:19.226: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.6:31966/ ; done'
Jan 26 01:20:19.525: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n"
Jan 26 01:20:19.525: INFO: stdout: "\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf\naffinity-nodeport-timeout-hhhhf"
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.525: INFO: Received response from host: affinity-nodeport-timeout-hhhhf
Jan 26 01:20:19.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.240.0.6:31966/'
Jan 26 01:20:19.740: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n"
Jan 26 01:20:19.740: INFO: stdout: "affinity-nodeport-timeout-hhhhf"
Jan 26 01:20:39.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9753 exec execpod-affinity842q8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.240.0.6:31966/'
Jan 26 01:20:39.967: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.240.0.6:31966/\n"
Jan 26 01:20:39.968: INFO: stdout: "affinity-nodeport-timeout-rxhs8"
Jan 26 01:20:39.968: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-9753, will wait for the garbage collector to delete the pods
Jan 26 01:20:40.062: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 17.914378ms
Jan 26 01:20:40.163: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 101.47297ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:20:42.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9753" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:32.697 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":40,"skipped":750,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:20:42.537: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7229
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9bd7b1e0-c769-4651-8291-f19ab86fdd59 in namespace container-probe-7229
Jan 26 01:20:44.703: INFO: Started pod liveness-9bd7b1e0-c769-4651-8291-f19ab86fdd59 in namespace container-probe-7229
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 01:20:44.707: INFO: Initial restart count of pod liveness-9bd7b1e0-c769-4651-8291-f19ab86fdd59 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:24:45.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7229" for this suite.

â€¢ [SLOW TEST:243.451 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":41,"skipped":787,"failed":0}
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:24:45.988: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8158
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:24:46.225: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 26 01:24:51.241: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Jan 26 01:24:51.285: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Jan 26 01:24:51.297: INFO: observed ReplicaSet test-rs in namespace replicaset-8158 with ReadyReplicas 1, AvailableReplicas 1
Jan 26 01:24:51.320: INFO: observed ReplicaSet test-rs in namespace replicaset-8158 with ReadyReplicas 1, AvailableReplicas 1
Jan 26 01:24:51.345: INFO: observed ReplicaSet test-rs in namespace replicaset-8158 with ReadyReplicas 1, AvailableReplicas 1
Jan 26 01:24:51.398: INFO: observed ReplicaSet test-rs in namespace replicaset-8158 with ReadyReplicas 1, AvailableReplicas 1
Jan 26 01:24:52.536: INFO: observed ReplicaSet test-rs in namespace replicaset-8158 with ReadyReplicas 2, AvailableReplicas 2
Jan 26 01:24:52.841: INFO: observed Replicaset test-rs in namespace replicaset-8158 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 01:24:52.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8158" for this suite.

â€¢ [SLOW TEST:6.872 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":42,"skipped":787,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:24:52.861: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:24:53.141: INFO: The status of Pod server-envvars-88947810-cd64-4dcd-bc2f-d1d84450873a is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:24:55.151: INFO: The status of Pod server-envvars-88947810-cd64-4dcd-bc2f-d1d84450873a is Running (Ready = true)
Jan 26 01:24:55.184: INFO: Waiting up to 5m0s for pod "client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d" in namespace "pods-4565" to be "Succeeded or Failed"
Jan 26 01:24:55.189: INFO: Pod "client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.031781ms
Jan 26 01:24:57.212: INFO: Pod "client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027596374s
Jan 26 01:24:59.221: INFO: Pod "client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036933352s
STEP: Saw pod success
Jan 26 01:24:59.221: INFO: Pod "client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d" satisfied condition "Succeeded or Failed"
Jan 26 01:24:59.225: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d container env3cont: <nil>
STEP: delete the pod
Jan 26 01:24:59.272: INFO: Waiting for pod client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d to disappear
Jan 26 01:24:59.276: INFO: Pod client-envvars-98c08f1a-2a4b-4130-af7d-cdc7a8c2450d no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:24:59.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4565" for this suite.

â€¢ [SLOW TEST:6.426 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":43,"skipped":847,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:24:59.289: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-6472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:25:00.102: INFO: Checking APIGroup: apiregistration.k8s.io
Jan 26 01:25:00.103: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jan 26 01:25:00.103: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jan 26 01:25:00.103: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jan 26 01:25:00.103: INFO: Checking APIGroup: apps
Jan 26 01:25:00.104: INFO: PreferredVersion.GroupVersion: apps/v1
Jan 26 01:25:00.104: INFO: Versions found [{apps/v1 v1}]
Jan 26 01:25:00.104: INFO: apps/v1 matches apps/v1
Jan 26 01:25:00.104: INFO: Checking APIGroup: events.k8s.io
Jan 26 01:25:00.105: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jan 26 01:25:00.105: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.105: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jan 26 01:25:00.105: INFO: Checking APIGroup: authentication.k8s.io
Jan 26 01:25:00.106: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jan 26 01:25:00.106: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jan 26 01:25:00.106: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jan 26 01:25:00.106: INFO: Checking APIGroup: authorization.k8s.io
Jan 26 01:25:00.107: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jan 26 01:25:00.107: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jan 26 01:25:00.107: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jan 26 01:25:00.108: INFO: Checking APIGroup: autoscaling
Jan 26 01:25:00.109: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jan 26 01:25:00.109: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Jan 26 01:25:00.109: INFO: autoscaling/v2 matches autoscaling/v2
Jan 26 01:25:00.109: INFO: Checking APIGroup: batch
Jan 26 01:25:00.110: INFO: PreferredVersion.GroupVersion: batch/v1
Jan 26 01:25:00.110: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Jan 26 01:25:00.110: INFO: batch/v1 matches batch/v1
Jan 26 01:25:00.110: INFO: Checking APIGroup: certificates.k8s.io
Jan 26 01:25:00.111: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jan 26 01:25:00.111: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jan 26 01:25:00.111: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jan 26 01:25:00.111: INFO: Checking APIGroup: networking.k8s.io
Jan 26 01:25:00.112: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jan 26 01:25:00.112: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jan 26 01:25:00.112: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jan 26 01:25:00.112: INFO: Checking APIGroup: policy
Jan 26 01:25:00.113: INFO: PreferredVersion.GroupVersion: policy/v1
Jan 26 01:25:00.113: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Jan 26 01:25:00.113: INFO: policy/v1 matches policy/v1
Jan 26 01:25:00.113: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jan 26 01:25:00.114: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jan 26 01:25:00.114: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jan 26 01:25:00.114: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jan 26 01:25:00.114: INFO: Checking APIGroup: storage.k8s.io
Jan 26 01:25:00.115: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jan 26 01:25:00.115: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.115: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jan 26 01:25:00.115: INFO: Checking APIGroup: admissionregistration.k8s.io
Jan 26 01:25:00.116: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jan 26 01:25:00.116: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jan 26 01:25:00.116: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jan 26 01:25:00.116: INFO: Checking APIGroup: apiextensions.k8s.io
Jan 26 01:25:00.117: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jan 26 01:25:00.117: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jan 26 01:25:00.117: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jan 26 01:25:00.117: INFO: Checking APIGroup: scheduling.k8s.io
Jan 26 01:25:00.118: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jan 26 01:25:00.118: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jan 26 01:25:00.119: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jan 26 01:25:00.119: INFO: Checking APIGroup: coordination.k8s.io
Jan 26 01:25:00.120: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jan 26 01:25:00.120: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jan 26 01:25:00.120: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jan 26 01:25:00.120: INFO: Checking APIGroup: node.k8s.io
Jan 26 01:25:00.121: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jan 26 01:25:00.121: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.121: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jan 26 01:25:00.121: INFO: Checking APIGroup: discovery.k8s.io
Jan 26 01:25:00.122: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jan 26 01:25:00.122: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.122: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jan 26 01:25:00.122: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jan 26 01:25:00.123: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Jan 26 01:25:00.123: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.123: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Jan 26 01:25:00.123: INFO: Checking APIGroup: metrics.k8s.io
Jan 26 01:25:00.124: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Jan 26 01:25:00.124: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Jan 26 01:25:00.124: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Jan 26 01:25:00.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-6472" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":44,"skipped":860,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:00.137: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5243
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:25:00.739: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:25:03.766: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
Jan 26 01:25:03.794: INFO: Waiting for webhook configuration to be ready...
STEP: Creating a custom resource definition that should be denied by the webhook
Jan 26 01:25:03.904: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:25:03.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5243" for this suite.
STEP: Destroying namespace "webhook-5243-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":45,"skipped":864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:04.003: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1013
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Jan 26 01:25:04.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1013" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":46,"skipped":889,"failed":0}
SSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:04.192: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 26 01:25:04.355: INFO: Waiting up to 5m0s for pod "downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c" in namespace "downward-api-8864" to be "Succeeded or Failed"
Jan 26 01:25:04.360: INFO: Pod "downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.356586ms
Jan 26 01:25:06.370: INFO: Pod "downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c": Phase="Running", Reason="", readiness=false. Elapsed: 2.014911461s
Jan 26 01:25:08.378: INFO: Pod "downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02271336s
STEP: Saw pod success
Jan 26 01:25:08.378: INFO: Pod "downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c" satisfied condition "Succeeded or Failed"
Jan 26 01:25:08.381: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:25:08.429: INFO: Waiting for pod downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c to disappear
Jan 26 01:25:08.432: INFO: Pod downward-api-3ae677f2-d2ca-42be-a8f8-ed3347425e2c no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 26 01:25:08.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8864" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":47,"skipped":895,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-7b9b641a-3bcf-47b6-8919-2308fc3140e6
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:25:08.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8997" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":48,"skipped":926,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:08.626: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5591
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:25:09.106: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:25:12.154: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:25:12.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5591" for this suite.
STEP: Destroying namespace "webhook-5591-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":49,"skipped":987,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:12.269: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7248
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 26 01:25:12.413: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:25:33.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7248" for this suite.

â€¢ [SLOW TEST:21.537 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":50,"skipped":1033,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:33.809: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9668
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:25:33.959: INFO: Waiting up to 5m0s for pod "downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f" in namespace "projected-9668" to be "Succeeded or Failed"
Jan 26 01:25:33.963: INFO: Pod "downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.894163ms
Jan 26 01:25:35.975: INFO: Pod "downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015747554s
Jan 26 01:25:37.986: INFO: Pod "downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026856233s
STEP: Saw pod success
Jan 26 01:25:37.986: INFO: Pod "downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f" satisfied condition "Succeeded or Failed"
Jan 26 01:25:37.989: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f container client-container: <nil>
STEP: delete the pod
Jan 26 01:25:38.034: INFO: Waiting for pod downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f to disappear
Jan 26 01:25:38.037: INFO: Pod downwardapi-volume-98dbd5e1-e74c-4699-a69c-31a5ddef468f no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:25:38.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9668" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":51,"skipped":1042,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:38.048: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7261
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Jan 26 01:25:38.226: INFO: Pod name sample-pod: Found 0 pods out of 3
Jan 26 01:25:43.247: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Jan 26 01:25:43.251: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 01:25:43.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7261" for this suite.

â€¢ [SLOW TEST:5.269 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":52,"skipped":1062,"failed":0}
S
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:25:43.320: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:25:43.586: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:25:45.612: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:47.599: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:49.597: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:51.608: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:53.593: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:55.595: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:57.599: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:25:59.596: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:26:01.600: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:26:03.592: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = false)
Jan 26 01:26:05.598: INFO: The status of Pod test-webserver-06a2f7de-aed3-4251-828b-784792f5f7a1 is Running (Ready = true)
Jan 26 01:26:05.601: INFO: Container started at 2023-01-26 01:25:44 +0000 UTC, pod became ready at 2023-01-26 01:26:03 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:26:05.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5274" for this suite.

â€¢ [SLOW TEST:22.300 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":1063,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:05.620: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-4600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Jan 26 01:26:05.818: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Jan 26 01:26:07.839: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Jan 26 01:26:09.861: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Jan 26 01:26:11.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-4600" for this suite.

â€¢ [SLOW TEST:6.261 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":54,"skipped":1079,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:11.881: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 26 01:26:37.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3658" for this suite.

â€¢ [SLOW TEST:25.614 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":55,"skipped":1108,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:37.496: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-8749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 26 01:26:37.681: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:26:39.691: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 26 01:26:39.708: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:26:41.718: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 26 01:26:41.764: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 26 01:26:41.768: INFO: Pod pod-with-poststart-http-hook still exists
Jan 26 01:26:43.768: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 26 01:26:43.779: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 26 01:26:43.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-8749" for this suite.

â€¢ [SLOW TEST:6.305 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":56,"skipped":1160,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:43.802: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2060
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Jan 26 01:26:46.015: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2060 PodName:pod-sharedvolume-2bc081ce-e5e1-47ef-ba82-b4bdec8c06c4 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:26:46.015: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:26:46.015: INFO: ExecWithOptions: Clientset creation
Jan 26 01:26:46.015: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/emptydir-2060/pods/pod-sharedvolume-2bc081ce-e5e1-47ef-ba82-b4bdec8c06c4/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jan 26 01:26:46.124: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:26:46.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2060" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":57,"skipped":1164,"failed":0}
SS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:46.139: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-1541
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Jan 26 01:26:46.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-1541" for this suite.
â€¢{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":58,"skipped":1166,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:26:46.349: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8961
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-712c4ec2-88cb-4d0c-980b-b562e5cd8153 in namespace container-probe-8961
Jan 26 01:26:48.506: INFO: Started pod busybox-712c4ec2-88cb-4d0c-980b-b562e5cd8153 in namespace container-probe-8961
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 01:26:48.509: INFO: Initial restart count of pod busybox-712c4ec2-88cb-4d0c-980b-b562e5cd8153 is 0
Jan 26 01:27:38.754: INFO: Restart count of pod container-probe-8961/busybox-712c4ec2-88cb-4d0c-980b-b562e5cd8153 is now 1 (50.24504567s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:27:38.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8961" for this suite.

â€¢ [SLOW TEST:52.444 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":59,"skipped":1170,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:27:38.794: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9668
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Jan 26 01:27:38.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jan 26 01:27:39.084: INFO: stderr: ""
Jan 26 01:27:39.084: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Jan 26 01:27:39.084: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jan 26 01:27:39.085: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9668" to be "running and ready, or succeeded"
Jan 26 01:27:39.096: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 10.845677ms
Jan 26 01:27:41.107: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.022113332s
Jan 26 01:27:41.107: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jan 26 01:27:41.107: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Jan 26 01:27:41.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator'
Jan 26 01:27:41.281: INFO: stderr: ""
Jan 26 01:27:41.281: INFO: stdout: "I0126 01:27:39.774065       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/mkb 385\nI0126 01:27:39.974404       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/7n9 452\nI0126 01:27:40.174755       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/tjk 399\nI0126 01:27:40.375078       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/k7m 300\nI0126 01:27:40.574424       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/4n9 472\nI0126 01:27:40.774823       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/kcz 322\nI0126 01:27:40.974125       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/hht4 331\nI0126 01:27:41.174482       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/2g79 450\n"
STEP: limiting log lines
Jan 26 01:27:41.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator --tail=1'
Jan 26 01:27:41.416: INFO: stderr: ""
Jan 26 01:27:41.416: INFO: stdout: "I0126 01:27:41.374781       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/k6vj 532\n"
Jan 26 01:27:41.417: INFO: got output "I0126 01:27:41.374781       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/k6vj 532\n"
STEP: limiting log bytes
Jan 26 01:27:41.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator --limit-bytes=1'
Jan 26 01:27:41.537: INFO: stderr: ""
Jan 26 01:27:41.537: INFO: stdout: "I"
Jan 26 01:27:41.537: INFO: got output "I"
STEP: exposing timestamps
Jan 26 01:27:41.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator --tail=1 --timestamps'
Jan 26 01:27:41.627: INFO: stderr: ""
Jan 26 01:27:41.627: INFO: stdout: "2023-01-26T01:27:41.575327158Z I0126 01:27:41.575141       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/bbjt 421\n"
Jan 26 01:27:41.627: INFO: got output "2023-01-26T01:27:41.575327158Z I0126 01:27:41.575141       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/bbjt 421\n"
STEP: restricting to a time range
Jan 26 01:27:44.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator --since=1s'
Jan 26 01:27:44.240: INFO: stderr: ""
Jan 26 01:27:44.240: INFO: stdout: "I0126 01:27:43.374103       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/jh6 572\nI0126 01:27:43.574424       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/f6t 347\nI0126 01:27:43.774768       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/nkw 225\nI0126 01:27:43.975116       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/psbp 456\nI0126 01:27:44.174465       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/gtpd 351\n"
Jan 26 01:27:44.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 logs logs-generator logs-generator --since=24h'
Jan 26 01:27:44.339: INFO: stderr: ""
Jan 26 01:27:44.339: INFO: stdout: "I0126 01:27:39.774065       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/mkb 385\nI0126 01:27:39.974404       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/7n9 452\nI0126 01:27:40.174755       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/tjk 399\nI0126 01:27:40.375078       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/k7m 300\nI0126 01:27:40.574424       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/4n9 472\nI0126 01:27:40.774823       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/kcz 322\nI0126 01:27:40.974125       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/hht4 331\nI0126 01:27:41.174482       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/2g79 450\nI0126 01:27:41.374781       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/k6vj 532\nI0126 01:27:41.575141       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/bbjt 421\nI0126 01:27:41.774452       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/mb7h 389\nI0126 01:27:41.974798       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/7nss 433\nI0126 01:27:42.174135       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/56bh 497\nI0126 01:27:42.374441       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/bdtk 274\nI0126 01:27:42.574821       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/khr 433\nI0126 01:27:42.774107       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/22r 241\nI0126 01:27:42.974464       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/9vv9 569\nI0126 01:27:43.174818       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/xkk 518\nI0126 01:27:43.374103       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/jh6 572\nI0126 01:27:43.574424       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/f6t 347\nI0126 01:27:43.774768       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/nkw 225\nI0126 01:27:43.975116       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/psbp 456\nI0126 01:27:44.174465       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/gtpd 351\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Jan 26 01:27:44.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9668 delete pod logs-generator'
Jan 26 01:27:45.489: INFO: stderr: ""
Jan 26 01:27:45.489: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:27:45.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9668" for this suite.

â€¢ [SLOW TEST:6.722 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":60,"skipped":1171,"failed":0}
S
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:27:45.517: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9968
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-9968
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-9968
I0126 01:27:45.748362      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9968, replica count: 2
I0126 01:27:48.799210      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:27:48.799: INFO: Creating new exec pod
Jan 26 01:27:51.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 26 01:27:52.090: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 26 01:27:52.090: INFO: stdout: ""
Jan 26 01:27:53.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 26 01:27:53.340: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 26 01:27:53.340: INFO: stdout: "externalname-service-xjzhn"
Jan 26 01:27:53.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.214.180 80'
Jan 26 01:27:53.576: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.214.180 80\nConnection to 10.0.214.180 80 port [tcp/http] succeeded!\n"
Jan 26 01:27:53.576: INFO: stdout: "externalname-service-xjzhn"
Jan 26 01:27:53.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.6 31733'
Jan 26 01:27:53.773: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.6 31733\nConnection to 10.240.0.6 31733 port [tcp/*] succeeded!\n"
Jan 26 01:27:53.773: INFO: stdout: ""
Jan 26 01:27:54.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.6 31733'
Jan 26 01:27:54.973: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.6 31733\nConnection to 10.240.0.6 31733 port [tcp/*] succeeded!\n"
Jan 26 01:27:54.973: INFO: stdout: "externalname-service-w9dkp"
Jan 26 01:27:54.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 31733'
Jan 26 01:27:55.162: INFO: stderr: "+ nc -v -t -w 2 10.240.0.4 31733\nConnection to 10.240.0.4 31733 port [tcp/*] succeeded!\n+ echo hostName\n"
Jan 26 01:27:55.162: INFO: stdout: ""
Jan 26 01:27:56.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 31733'
Jan 26 01:27:56.343: INFO: stderr: "+ + echonc -v -t hostName -w\n 2 10.240.0.4 31733\nConnection to 10.240.0.4 31733 port [tcp/*] succeeded!\n"
Jan 26 01:27:56.343: INFO: stdout: ""
Jan 26 01:27:57.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9968 exec execpodrrrnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 31733'
Jan 26 01:27:57.368: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.4 31733\nConnection to 10.240.0.4 31733 port [tcp/*] succeeded!\n"
Jan 26 01:27:57.368: INFO: stdout: "externalname-service-w9dkp"
Jan 26 01:27:57.368: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:27:57.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9968" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.958 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":61,"skipped":1172,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:27:57.476: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Jan 26 01:27:57.647: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Jan 26 01:27:57.672: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 26 01:27:57.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3386" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":62,"skipped":1280,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:27:57.710: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8052
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Jan 26 01:27:57.860: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:27:59.877: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 26 01:28:00.907: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8052" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":63,"skipped":1355,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:28:00.919: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3393
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:28:01.519: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:28:04.570: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:28:04.591: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7740-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:28:07.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3393" for this suite.
STEP: Destroying namespace "webhook-3393-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.152 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":64,"skipped":1424,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:28:08.075: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1142
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:28:08.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1142" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":65,"skipped":1452,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:28:08.276: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4673
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:28:08.423: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458" in namespace "downward-api-4673" to be "Succeeded or Failed"
Jan 26 01:28:08.428: INFO: Pod "downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458": Phase="Pending", Reason="", readiness=false. Elapsed: 4.452973ms
Jan 26 01:28:10.438: INFO: Pod "downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014944573s
Jan 26 01:28:12.446: INFO: Pod "downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023263735s
STEP: Saw pod success
Jan 26 01:28:12.447: INFO: Pod "downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458" satisfied condition "Succeeded or Failed"
Jan 26 01:28:12.450: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458 container client-container: <nil>
STEP: delete the pod
Jan 26 01:28:12.471: INFO: Waiting for pod downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458 to disappear
Jan 26 01:28:12.474: INFO: Pod downwardapi-volume-8cf47cd7-e23f-425d-aec6-32defad02458 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:28:12.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4673" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1482,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:28:12.486: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:28:12.621: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 26 01:28:12.634: INFO: The status of Pod pod-exec-websocket-5d65e268-bd0e-4cea-a71c-ce48ac915723 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:28:14.642: INFO: The status of Pod pod-exec-websocket-5d65e268-bd0e-4cea-a71c-ce48ac915723 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:28:14.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5614" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1529,"failed":0}

------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:28:14.771: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8584
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-2bd1fe7e-ea54-4e7d-8354-737f2ff737ee in namespace container-probe-8584
Jan 26 01:28:16.926: INFO: Started pod busybox-2bd1fe7e-ea54-4e7d-8354-737f2ff737ee in namespace container-probe-8584
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 01:28:16.928: INFO: Initial restart count of pod busybox-2bd1fe7e-ea54-4e7d-8354-737f2ff737ee is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:32:18.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8584" for this suite.

â€¢ [SLOW TEST:243.537 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":68,"skipped":1529,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:32:18.311: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3733
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-k89n
STEP: Creating a pod to test atomic-volume-subpath
Jan 26 01:32:18.530: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-k89n" in namespace "subpath-3733" to be "Succeeded or Failed"
Jan 26 01:32:18.536: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Pending", Reason="", readiness=false. Elapsed: 6.047099ms
Jan 26 01:32:20.547: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 2.017340675s
Jan 26 01:32:22.557: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 4.027025515s
Jan 26 01:32:24.565: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 6.035408535s
Jan 26 01:32:26.575: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 8.045469081s
Jan 26 01:32:28.580: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 10.050649649s
Jan 26 01:32:30.591: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 12.060830825s
Jan 26 01:32:32.602: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 14.072534426s
Jan 26 01:32:34.612: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 16.082330096s
Jan 26 01:32:36.624: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 18.094654708s
Jan 26 01:32:38.631: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=true. Elapsed: 20.100959123s
Jan 26 01:32:40.640: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Running", Reason="", readiness=false. Elapsed: 22.11036369s
Jan 26 01:32:42.650: INFO: Pod "pod-subpath-test-configmap-k89n": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.119921159s
STEP: Saw pod success
Jan 26 01:32:42.650: INFO: Pod "pod-subpath-test-configmap-k89n" satisfied condition "Succeeded or Failed"
Jan 26 01:32:42.653: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-subpath-test-configmap-k89n container test-container-subpath-configmap-k89n: <nil>
STEP: delete the pod
Jan 26 01:32:42.699: INFO: Waiting for pod pod-subpath-test-configmap-k89n to disappear
Jan 26 01:32:42.702: INFO: Pod pod-subpath-test-configmap-k89n no longer exists
STEP: Deleting pod pod-subpath-test-configmap-k89n
Jan 26 01:32:42.702: INFO: Deleting pod "pod-subpath-test-configmap-k89n" in namespace "subpath-3733"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 26 01:32:42.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3733" for this suite.

â€¢ [SLOW TEST:24.406 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":69,"skipped":1544,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:32:42.718: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-672
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:32:42.912: INFO: The status of Pod busybox-scheduling-38fc15c3-c591-465e-b1a8-c80b4f2c9b16 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:32:44.938: INFO: The status of Pod busybox-scheduling-38fc15c3-c591-465e-b1a8-c80b4f2c9b16 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 26 01:32:44.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-672" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1554,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:32:44.968: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 26 01:32:45.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-532 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Jan 26 01:32:45.323: INFO: stderr: ""
Jan 26 01:32:45.323: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Jan 26 01:32:45.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-532 delete pods e2e-test-httpd-pod'
Jan 26 01:32:47.457: INFO: stderr: ""
Jan 26 01:32:47.457: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:32:47.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-532" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":71,"skipped":1578,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:32:47.478: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2164
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2164.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2164.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2164.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2164.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:32:57.682: INFO: DNS probes using dns-2164/dns-test-f47a2094-f295-4294-bf11-b8195cce5ef4 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 01:32:57.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2164" for this suite.

â€¢ [SLOW TEST:10.290 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":72,"skipped":1626,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:32:57.774: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3524
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-0ead7d3d-196e-40ee-bd10-25e95de00bff
STEP: Creating a pod to test consume configMaps
Jan 26 01:32:57.941: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8" in namespace "projected-3524" to be "Succeeded or Failed"
Jan 26 01:32:57.948: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Pending", Reason="", readiness=false. Elapsed: 7.696427ms
Jan 26 01:32:59.958: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=true. Elapsed: 2.016920181s
Jan 26 01:33:01.968: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=true. Elapsed: 4.02708202s
Jan 26 01:33:03.973: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=true. Elapsed: 6.032751114s
Jan 26 01:33:05.980: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=true. Elapsed: 8.039686929s
Jan 26 01:33:07.992: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=true. Elapsed: 10.051291321s
Jan 26 01:33:10.002: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Running", Reason="", readiness=false. Elapsed: 12.061622446s
Jan 26 01:33:12.011: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 14.06983346s
STEP: Saw pod success
Jan 26 01:33:12.011: INFO: Pod "pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8" satisfied condition "Succeeded or Failed"
Jan 26 01:33:12.013: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:33:12.061: INFO: Waiting for pod pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8 to disappear
Jan 26 01:33:12.064: INFO: Pod pod-projected-configmaps-52e2b9d9-930d-4873-8c53-bbbcc1c1c4a8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:33:12.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3524" for this suite.

â€¢ [SLOW TEST:14.305 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1657,"failed":0}
SSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:12.081: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3637
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 26 01:33:12.227: INFO: The status of Pod pod-update-0df302c3-1517-4a27-bd35-5ca8159f8ede is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:33:14.235: INFO: The status of Pod pod-update-0df302c3-1517-4a27-bd35-5ca8159f8ede is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 26 01:33:14.756: INFO: Successfully updated pod "pod-update-0df302c3-1517-4a27-bd35-5ca8159f8ede"
STEP: verifying the updated pod is in kubernetes
Jan 26 01:33:14.762: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:33:14.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3637" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1664,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:14.773: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4695
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:33:14.917: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 26 01:33:18.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 create -f -'
Jan 26 01:33:19.302: INFO: stderr: ""
Jan 26 01:33:19.302: INFO: stdout: "e2e-test-crd-publish-openapi-734-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 26 01:33:19.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 delete e2e-test-crd-publish-openapi-734-crds test-cr'
Jan 26 01:33:19.397: INFO: stderr: ""
Jan 26 01:33:19.397: INFO: stdout: "e2e-test-crd-publish-openapi-734-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jan 26 01:33:19.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 apply -f -'
Jan 26 01:33:19.598: INFO: stderr: ""
Jan 26 01:33:19.598: INFO: stdout: "e2e-test-crd-publish-openapi-734-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 26 01:33:19.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 delete e2e-test-crd-publish-openapi-734-crds test-cr'
Jan 26 01:33:19.747: INFO: stderr: ""
Jan 26 01:33:19.747: INFO: stdout: "e2e-test-crd-publish-openapi-734-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 26 01:33:19.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-734-crds'
Jan 26 01:33:20.412: INFO: stderr: ""
Jan 26 01:33:20.413: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-734-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:33:23.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4695" for this suite.

â€¢ [SLOW TEST:8.665 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":75,"skipped":1676,"failed":0}
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:23.455: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-7029
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 26 01:33:23.613: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 01:33:29.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-7029" for this suite.

â€¢ [SLOW TEST:5.787 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":76,"skipped":1684,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:29.244: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-8779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Jan 26 01:33:29.396: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Jan 26 01:33:29.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-8779" for this suite.
â€¢{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":77,"skipped":1716,"failed":0}
S
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:29.417: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Jan 26 01:33:31.638: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 26 01:33:33.689: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-588" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":78,"skipped":1717,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:33.703: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-2db19691-ffcc-4e58-addf-7a152877b513
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:33:35.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9458" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":79,"skipped":1737,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:35.925: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2216
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-2216
STEP: creating service affinity-nodeport in namespace services-2216
STEP: creating replication controller affinity-nodeport in namespace services-2216
I0126 01:33:36.093406      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-2216, replica count: 3
I0126 01:33:39.147923      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:33:39.162: INFO: Creating new exec pod
Jan 26 01:33:42.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-2216 exec execpod-affinity5vkbg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Jan 26 01:33:42.433: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jan 26 01:33:42.433: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:33:42.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-2216 exec execpod-affinity5vkbg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.194.103 80'
Jan 26 01:33:42.650: INFO: stderr: "+ + nc -v -t -w 2 10.0.194.103 80\necho hostName\nConnection to 10.0.194.103 80 port [tcp/http] succeeded!\n"
Jan 26 01:33:42.650: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:33:42.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-2216 exec execpod-affinity5vkbg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 30970'
Jan 26 01:33:42.827: INFO: stderr: "+ nc -v -t -w 2 10.240.0.4 30970\n+ echo hostName\nConnection to 10.240.0.4 30970 port [tcp/*] succeeded!\n"
Jan 26 01:33:42.827: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:33:42.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-2216 exec execpod-affinity5vkbg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.5 30970'
Jan 26 01:33:43.041: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.5 30970\nConnection to 10.240.0.5 30970 port [tcp/*] succeeded!\n"
Jan 26 01:33:43.041: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:33:43.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-2216 exec execpod-affinity5vkbg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.6:30970/ ; done'
Jan 26 01:33:43.344: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:30970/\n"
Jan 26 01:33:43.344: INFO: stdout: "\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd\naffinity-nodeport-6wtbd"
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Received response from host: affinity-nodeport-6wtbd
Jan 26 01:33:43.344: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-2216, will wait for the garbage collector to delete the pods
Jan 26 01:33:43.433: INFO: Deleting ReplicationController affinity-nodeport took: 7.32242ms
Jan 26 01:33:43.534: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.449651ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:33:45.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2216" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.062 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":80,"skipped":1741,"failed":0}
SSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:45.987: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-5f9b3412-f193-49c4-9e63-ba8eebebe117
STEP: Creating a pod to test consume configMaps
Jan 26 01:33:46.257: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae" in namespace "projected-9428" to be "Succeeded or Failed"
Jan 26 01:33:46.264: INFO: Pod "pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae": Phase="Pending", Reason="", readiness=false. Elapsed: 6.120401ms
Jan 26 01:33:48.269: INFO: Pod "pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011328955s
Jan 26 01:33:50.275: INFO: Pod "pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017075748s
STEP: Saw pod success
Jan 26 01:33:50.275: INFO: Pod "pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae" satisfied condition "Succeeded or Failed"
Jan 26 01:33:50.278: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:33:50.320: INFO: Waiting for pod pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae to disappear
Jan 26 01:33:50.324: INFO: Pod pod-projected-configmaps-71e07343-5a37-4083-b558-6ddffee3c6ae no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:33:50.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9428" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1745,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:50.340: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-92
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 26 01:33:50.515: INFO: Waiting up to 5m0s for pod "downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43" in namespace "downward-api-92" to be "Succeeded or Failed"
Jan 26 01:33:50.522: INFO: Pod "downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43": Phase="Pending", Reason="", readiness=false. Elapsed: 6.876114ms
Jan 26 01:33:52.532: INFO: Pod "downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43": Phase="Running", Reason="", readiness=false. Elapsed: 2.016926927s
Jan 26 01:33:54.542: INFO: Pod "downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027300045s
STEP: Saw pod success
Jan 26 01:33:54.542: INFO: Pod "downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43" satisfied condition "Succeeded or Failed"
Jan 26 01:33:54.545: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43 container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:33:54.569: INFO: Waiting for pod downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43 to disappear
Jan 26 01:33:54.572: INFO: Pod downward-api-380fce3f-32b9-4a51-9f48-305aca4b6b43 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 26 01:33:54.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-92" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1760,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:54.592: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2338
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:33:54.765: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910" in namespace "projected-2338" to be "Succeeded or Failed"
Jan 26 01:33:54.769: INFO: Pod "downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910": Phase="Pending", Reason="", readiness=false. Elapsed: 3.448557ms
Jan 26 01:33:56.775: INFO: Pod "downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009897398s
Jan 26 01:33:58.783: INFO: Pod "downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017493998s
STEP: Saw pod success
Jan 26 01:33:58.783: INFO: Pod "downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910" satisfied condition "Succeeded or Failed"
Jan 26 01:33:58.787: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910 container client-container: <nil>
STEP: delete the pod
Jan 26 01:33:58.812: INFO: Waiting for pod downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910 to disappear
Jan 26 01:33:58.816: INFO: Pod downwardapi-volume-e673318a-69ce-4d46-9b56-9d64433b2910 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:33:58.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2338" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1791,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:33:58.914: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-972
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Jan 26 01:33:59.083: INFO: Waiting up to 5m0s for pod "var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94" in namespace "var-expansion-972" to be "Succeeded or Failed"
Jan 26 01:33:59.088: INFO: Pod "var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94": Phase="Pending", Reason="", readiness=false. Elapsed: 3.962965ms
Jan 26 01:34:01.098: INFO: Pod "var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01431711s
Jan 26 01:34:03.108: INFO: Pod "var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024445052s
STEP: Saw pod success
Jan 26 01:34:03.108: INFO: Pod "var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94" satisfied condition "Succeeded or Failed"
Jan 26 01:34:03.112: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94 container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:34:03.131: INFO: Waiting for pod var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94 to disappear
Jan 26 01:34:03.134: INFO: Pod var-expansion-2b74e5a2-db65-43a2-818d-a34105be3f94 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 01:34:03.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-972" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":84,"skipped":1819,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:03.147: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9623
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Jan 26 01:34:03.298: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:34:07.334: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9623" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1848,"failed":0}
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:07.347: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1061
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 26 01:34:07.490: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 26 01:34:07.562: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:34:09.571: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:11.573: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:13.568: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:15.574: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:17.572: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:19.570: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:21.577: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:23.570: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:25.574: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:27.581: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 01:34:29.572: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 26 01:34:29.578: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 26 01:34:29.584: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 26 01:34:31.637: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 26 01:34:31.637: INFO: Going to poll 10.244.5.24 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:34:31.640: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.5.24:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1061 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:34:31.640: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:34:31.641: INFO: ExecWithOptions: Clientset creation
Jan 26 01:34:31.641: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1061/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.5.24%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:34:31.763: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 26 01:34:31.763: INFO: Going to poll 10.244.1.75 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:34:31.767: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.75:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1061 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:34:31.767: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:34:31.768: INFO: ExecWithOptions: Clientset creation
Jan 26 01:34:31.768: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1061/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.75%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:34:31.871: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 26 01:34:31.871: INFO: Going to poll 10.244.2.42 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 26 01:34:31.875: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.42:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1061 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:34:31.875: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:34:31.876: INFO: ExecWithOptions: Clientset creation
Jan 26 01:34:31.876: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1061/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.42%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 01:34:31.977: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 26 01:34:31.977: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1061" for this suite.

â€¢ [SLOW TEST:24.653 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":86,"skipped":1853,"failed":0}
SSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:32.002: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:34:32.188: INFO: Create a RollingUpdate DaemonSet
Jan 26 01:34:32.198: INFO: Check that daemon pods launch on every node of the cluster
Jan 26 01:34:32.205: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:32.205: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:32.206: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:32.210: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:34:32.210: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 01:34:33.237: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:33.237: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:33.238: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:33.243: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 01:34:33.243: INFO: Node k8s-linuxpool-34140226-1 is running 0 daemon pod, expected 1
Jan 26 01:34:34.218: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:34.219: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:34.219: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:34.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 01:34:34.223: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Jan 26 01:34:34.223: INFO: Update the DaemonSet to trigger a rollout
Jan 26 01:34:34.235: INFO: Updating DaemonSet daemon-set
Jan 26 01:34:36.265: INFO: Roll back the DaemonSet before rollout is complete
Jan 26 01:34:36.274: INFO: Updating DaemonSet daemon-set
Jan 26 01:34:36.274: INFO: Make sure DaemonSet rollback is complete
Jan 26 01:34:36.280: INFO: Wrong image for pod: daemon-set-hfdmb. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Jan 26 01:34:36.280: INFO: Pod daemon-set-hfdmb is not available
Jan 26 01:34:36.293: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:36.293: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:36.293: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:37.306: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:37.306: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:37.306: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:38.303: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:38.303: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:38.303: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:39.300: INFO: Pod daemon-set-dxs6m is not available
Jan 26 01:34:39.305: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:39.305: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 01:34:39.305: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5465, will wait for the garbage collector to delete the pods
Jan 26 01:34:39.374: INFO: Deleting DaemonSet.extensions daemon-set took: 7.152016ms
Jan 26 01:34:39.474: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.137032ms
Jan 26 01:34:41.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:34:41.083: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 01:34:41.086: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15062"},"items":null}

Jan 26 01:34:41.089: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15062"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:34:41.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5465" for this suite.

â€¢ [SLOW TEST:9.114 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":87,"skipped":1856,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:41.119: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-6150
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:34:41.258: INFO: Creating pod...
Jan 26 01:34:43.292: INFO: Creating service...
Jan 26 01:34:43.307: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=DELETE
Jan 26 01:34:43.314: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 26 01:34:43.314: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=OPTIONS
Jan 26 01:34:43.323: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 26 01:34:43.323: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=PATCH
Jan 26 01:34:43.328: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 26 01:34:43.328: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=POST
Jan 26 01:34:43.332: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 26 01:34:43.333: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=PUT
Jan 26 01:34:43.337: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 26 01:34:43.338: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=DELETE
Jan 26 01:34:43.348: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 26 01:34:43.349: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jan 26 01:34:43.355: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 26 01:34:43.356: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=PATCH
Jan 26 01:34:43.362: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 26 01:34:43.363: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=POST
Jan 26 01:34:43.369: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 26 01:34:43.370: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=PUT
Jan 26 01:34:43.378: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 26 01:34:43.379: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=GET
Jan 26 01:34:43.383: INFO: http.Client request:GET StatusCode:301
Jan 26 01:34:43.383: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=GET
Jan 26 01:34:43.390: INFO: http.Client request:GET StatusCode:301
Jan 26 01:34:43.390: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/pods/agnhost/proxy?method=HEAD
Jan 26 01:34:43.394: INFO: http.Client request:HEAD StatusCode:301
Jan 26 01:34:43.395: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6150/services/e2e-proxy-test-service/proxy?method=HEAD
Jan 26 01:34:43.405: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 26 01:34:43.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6150" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":88,"skipped":1864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:43.425: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5212
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Jan 26 01:34:43.571: INFO: Waiting up to 5m0s for pod "client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49" in namespace "containers-5212" to be "Succeeded or Failed"
Jan 26 01:34:43.579: INFO: Pod "client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49": Phase="Pending", Reason="", readiness=false. Elapsed: 8.035231ms
Jan 26 01:34:45.588: INFO: Pod "client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017737848s
Jan 26 01:34:47.596: INFO: Pod "client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025344093s
STEP: Saw pod success
Jan 26 01:34:47.596: INFO: Pod "client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49" satisfied condition "Succeeded or Failed"
Jan 26 01:34:47.602: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:34:47.631: INFO: Waiting for pod client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49 to disappear
Jan 26 01:34:47.636: INFO: Pod client-containers-847cf5e7-477c-4d73-9bb4-88b75764fe49 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 26 01:34:47.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5212" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1890,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:47.647: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-446
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-558fbe8f-e383-4283-8b36-b10ce1cb201b
STEP: Creating a pod to test consume configMaps
Jan 26 01:34:47.804: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215" in namespace "projected-446" to be "Succeeded or Failed"
Jan 26 01:34:47.807: INFO: Pod "pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215": Phase="Pending", Reason="", readiness=false. Elapsed: 3.250553ms
Jan 26 01:34:49.817: INFO: Pod "pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012478324s
Jan 26 01:34:51.827: INFO: Pod "pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02323242s
STEP: Saw pod success
Jan 26 01:34:51.827: INFO: Pod "pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215" satisfied condition "Succeeded or Failed"
Jan 26 01:34:51.831: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:34:51.855: INFO: Waiting for pod pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215 to disappear
Jan 26 01:34:51.858: INFO: Pod pod-projected-configmaps-5898c900-1bc7-48c8-8e26-485d21b67215 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:34:51.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-446" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":90,"skipped":1953,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:34:51.874: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-3494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Jan 26 01:34:52.073: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:34:54.082: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.240.0.5 on the node which pod1 resides and expect scheduled
Jan 26 01:34:54.095: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:34:56.106: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.240.0.5 but use UDP protocol on the node which pod2 resides
Jan 26 01:34:56.127: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:34:58.132: INFO: The status of Pod pod3 is Running (Ready = false)
Jan 26 01:35:00.138: INFO: The status of Pod pod3 is Running (Ready = true)
Jan 26 01:35:00.153: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:35:02.160: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Jan 26 01:35:02.164: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.240.0.5 http://127.0.0.1:54323/hostname] Namespace:hostport-3494 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:35:02.164: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:35:02.164: INFO: ExecWithOptions: Clientset creation
Jan 26 01:35:02.164: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-3494/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.240.0.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.240.0.5, port: 54323
Jan 26 01:35:02.267: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.240.0.5:54323/hostname] Namespace:hostport-3494 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:35:02.267: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:35:02.268: INFO: ExecWithOptions: Clientset creation
Jan 26 01:35:02.268: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-3494/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.240.0.5%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.240.0.5, port: 54323 UDP
Jan 26 01:35:02.410: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.240.0.5 54323] Namespace:hostport-3494 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 01:35:02.410: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:35:02.411: INFO: ExecWithOptions: Clientset creation
Jan 26 01:35:02.411: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-3494/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.240.0.5+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Jan 26 01:35:07.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-3494" for this suite.

â€¢ [SLOW TEST:15.669 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":91,"skipped":1967,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:07.543: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-b1482af7-332b-4b9d-b46e-8821bbbd409c
STEP: Creating a pod to test consume configMaps
Jan 26 01:35:07.758: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060" in namespace "projected-6642" to be "Succeeded or Failed"
Jan 26 01:35:07.765: INFO: Pod "pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060": Phase="Pending", Reason="", readiness=false. Elapsed: 7.159718ms
Jan 26 01:35:09.774: INFO: Pod "pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060": Phase="Running", Reason="", readiness=false. Elapsed: 2.015800555s
Jan 26 01:35:11.783: INFO: Pod "pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025132117s
STEP: Saw pod success
Jan 26 01:35:11.783: INFO: Pod "pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060" satisfied condition "Succeeded or Failed"
Jan 26 01:35:11.787: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Jan 26 01:35:11.807: INFO: Waiting for pod pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060 to disappear
Jan 26 01:35:11.811: INFO: Pod pod-projected-configmaps-75e9c9e6-1028-4cfa-8086-c23805c04060 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:35:11.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6642" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1981,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:11.826: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3366
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:35:12.390: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:35:15.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:35:15.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3366" for this suite.
STEP: Destroying namespace "webhook-3366-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":93,"skipped":2019,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:15.632: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Jan 26 01:35:15.844: INFO: created test-pod-1
Jan 26 01:35:15.857: INFO: created test-pod-2
Jan 26 01:35:15.869: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Jan 26 01:35:15.869: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-4964' to be running and ready
Jan 26 01:35:15.901: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 26 01:35:15.901: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 26 01:35:15.901: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 26 01:35:15.901: INFO: 0 / 3 pods in namespace 'pods-4964' are running and ready (0 seconds elapsed)
Jan 26 01:35:15.901: INFO: expected 0 pod replicas in namespace 'pods-4964', 0 are Running and Ready.
Jan 26 01:35:15.901: INFO: POD         NODE                      PHASE    GRACE  CONDITIONS
Jan 26 01:35:15.901: INFO: test-pod-1  k8s-linuxpool-34140226-1  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  }]
Jan 26 01:35:15.901: INFO: test-pod-2  k8s-linuxpool-34140226-2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  }]
Jan 26 01:35:15.901: INFO: test-pod-3  k8s-linuxpool-34140226-1  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:35:15 +0000 UTC  }]
Jan 26 01:35:15.901: INFO: 
Jan 26 01:35:17.918: INFO: 3 / 3 pods in namespace 'pods-4964' are running and ready (2 seconds elapsed)
Jan 26 01:35:17.918: INFO: expected 0 pod replicas in namespace 'pods-4964', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Jan 26 01:35:17.960: INFO: Pod quantity 3 is different from expected quantity 0
Jan 26 01:35:18.967: INFO: Pod quantity 3 is different from expected quantity 0
Jan 26 01:35:19.967: INFO: Pod quantity 2 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:35:20.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4964" for this suite.

â€¢ [SLOW TEST:5.350 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":94,"skipped":2028,"failed":0}
SSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:20.983: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:35:21.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3406" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":95,"skipped":2031,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:21.167: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 26 01:35:24.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6082" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":96,"skipped":2050,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:24.184: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Jan 26 01:35:24.346: INFO: Waiting up to 5m0s for pod "var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a" in namespace "var-expansion-6698" to be "Succeeded or Failed"
Jan 26 01:35:24.362: INFO: Pod "var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a": Phase="Pending", Reason="", readiness=false. Elapsed: 16.045156ms
Jan 26 01:35:26.373: INFO: Pod "var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026998864s
Jan 26 01:35:28.380: INFO: Pod "var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034194257s
STEP: Saw pod success
Jan 26 01:35:28.380: INFO: Pod "var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a" satisfied condition "Succeeded or Failed"
Jan 26 01:35:28.383: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:35:28.406: INFO: Waiting for pod var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a to disappear
Jan 26 01:35:28.409: INFO: Pod var-expansion-3015bf2f-b965-4978-8db4-16e72c1d813a no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 01:35:28.409: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6698" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":97,"skipped":2061,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:28.423: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4833
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:35:28.580: INFO: Waiting up to 5m0s for pod "busybox-user-65534-841336cd-d844-4371-932d-4fdc7e8fc56d" in namespace "security-context-test-4833" to be "Succeeded or Failed"
Jan 26 01:35:28.585: INFO: Pod "busybox-user-65534-841336cd-d844-4371-932d-4fdc7e8fc56d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.910575ms
Jan 26 01:35:30.596: INFO: Pod "busybox-user-65534-841336cd-d844-4371-932d-4fdc7e8fc56d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01549362s
Jan 26 01:35:32.608: INFO: Pod "busybox-user-65534-841336cd-d844-4371-932d-4fdc7e8fc56d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027137681s
Jan 26 01:35:32.608: INFO: Pod "busybox-user-65534-841336cd-d844-4371-932d-4fdc7e8fc56d" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 01:35:32.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4833" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":98,"skipped":2084,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:32.624: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:35:34.070: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:35:37.131: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:35:37.138: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:35:40.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2409" for this suite.
STEP: Destroying namespace "webhook-2409-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.823 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":99,"skipped":2138,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:40.447: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7132
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:35:41.266: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:35:44.305: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:35:44.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7132" for this suite.
STEP: Destroying namespace "webhook-7132-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":100,"skipped":2176,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:44.496: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4643
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 26 01:35:44.694: INFO: Waiting up to 5m0s for pod "pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f" in namespace "emptydir-4643" to be "Succeeded or Failed"
Jan 26 01:35:44.698: INFO: Pod "pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.499352ms
Jan 26 01:35:46.707: INFO: Pod "pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012903529s
Jan 26 01:35:48.713: INFO: Pod "pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018994756s
STEP: Saw pod success
Jan 26 01:35:48.713: INFO: Pod "pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f" satisfied condition "Succeeded or Failed"
Jan 26 01:35:48.717: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f container test-container: <nil>
STEP: delete the pod
Jan 26 01:35:48.737: INFO: Waiting for pod pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f to disappear
Jan 26 01:35:48.740: INFO: Pod pod-ad2ee15f-06a0-427e-9bcf-96e739e2fc2f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:35:48.740: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4643" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":2202,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:48.756: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 26 01:35:48.916: INFO: The status of Pod annotationupdate4d18218b-d75e-4c7d-af02-e482a4faf46f is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:35:50.927: INFO: The status of Pod annotationupdate4d18218b-d75e-4c7d-af02-e482a4faf46f is Running (Ready = true)
Jan 26 01:35:51.458: INFO: Successfully updated pod "annotationupdate4d18218b-d75e-4c7d-af02-e482a4faf46f"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:35:55.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9976" for this suite.

â€¢ [SLOW TEST:6.751 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":102,"skipped":2213,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:35:55.508: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-92
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-9vx6
STEP: Creating a pod to test atomic-volume-subpath
Jan 26 01:35:55.683: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-9vx6" in namespace "subpath-92" to be "Succeeded or Failed"
Jan 26 01:35:55.689: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.2626ms
Jan 26 01:35:57.699: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 2.016090267s
Jan 26 01:35:59.708: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 4.024815411s
Jan 26 01:36:01.718: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 6.03439257s
Jan 26 01:36:03.729: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 8.046287863s
Jan 26 01:36:05.742: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 10.058429757s
Jan 26 01:36:07.750: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 12.067168403s
Jan 26 01:36:09.761: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 14.077427673s
Jan 26 01:36:11.775: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 16.09196181s
Jan 26 01:36:13.788: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 18.104610377s
Jan 26 01:36:15.804: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=true. Elapsed: 20.121076863s
Jan 26 01:36:17.810: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Running", Reason="", readiness=false. Elapsed: 22.127098987s
Jan 26 01:36:19.821: INFO: Pod "pod-subpath-test-downwardapi-9vx6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.137617081s
STEP: Saw pod success
Jan 26 01:36:19.821: INFO: Pod "pod-subpath-test-downwardapi-9vx6" satisfied condition "Succeeded or Failed"
Jan 26 01:36:19.825: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-subpath-test-downwardapi-9vx6 container test-container-subpath-downwardapi-9vx6: <nil>
STEP: delete the pod
Jan 26 01:36:19.870: INFO: Waiting for pod pod-subpath-test-downwardapi-9vx6 to disappear
Jan 26 01:36:19.873: INFO: Pod pod-subpath-test-downwardapi-9vx6 no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-9vx6
Jan 26 01:36:19.873: INFO: Deleting pod "pod-subpath-test-downwardapi-9vx6" in namespace "subpath-92"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 26 01:36:19.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-92" for this suite.

â€¢ [SLOW TEST:24.383 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":103,"skipped":2241,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:19.892: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-240
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e
Jan 26 01:36:20.087: INFO: Pod name my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e: Found 0 pods out of 1
Jan 26 01:36:25.106: INFO: Pod name my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e: Found 1 pods out of 1
Jan 26 01:36:25.106: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e" are running
Jan 26 01:36:25.110: INFO: Pod "my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e-26wfj" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 01:36:20 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 01:36:21 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 01:36:21 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 01:36:20 +0000 UTC Reason: Message:}])
Jan 26 01:36:25.110: INFO: Trying to dial the pod
Jan 26 01:36:30.129: INFO: Controller my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e: Got expected result from replica 1 [my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e-26wfj]: "my-hostname-basic-ffa4cef0-115f-414f-891b-6624b269263e-26wfj", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 26 01:36:30.129: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-240" for this suite.

â€¢ [SLOW TEST:10.250 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":104,"skipped":2257,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:30.143: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3780
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:36:30.654: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:36:33.697: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:36:33.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3780" for this suite.
STEP: Destroying namespace "webhook-3780-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":105,"skipped":2273,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:34.013: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6496
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-5b41fc61-a3bb-47a2-9586-032b538a7f9b
STEP: Creating a pod to test consume configMaps
Jan 26 01:36:34.178: INFO: Waiting up to 5m0s for pod "pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2" in namespace "configmap-6496" to be "Succeeded or Failed"
Jan 26 01:36:34.191: INFO: Pod "pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2": Phase="Pending", Reason="", readiness=false. Elapsed: 12.56211ms
Jan 26 01:36:36.202: INFO: Pod "pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023922067s
Jan 26 01:36:38.212: INFO: Pod "pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034324581s
STEP: Saw pod success
Jan 26 01:36:38.212: INFO: Pod "pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2" satisfied condition "Succeeded or Failed"
Jan 26 01:36:38.217: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:36:38.243: INFO: Waiting for pod pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2 to disappear
Jan 26 01:36:38.248: INFO: Pod pod-configmaps-62822ba0-6ee7-45d3-b5b8-a148fdc570a2 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:36:38.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6496" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":106,"skipped":2284,"failed":0}
SS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:38.265: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-4281/secret-test-d4736945-adca-4104-b68b-2c226e76bb9c
STEP: Creating a pod to test consume secrets
Jan 26 01:36:38.417: INFO: Waiting up to 5m0s for pod "pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673" in namespace "secrets-4281" to be "Succeeded or Failed"
Jan 26 01:36:38.422: INFO: Pod "pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673": Phase="Pending", Reason="", readiness=false. Elapsed: 5.14968ms
Jan 26 01:36:40.433: INFO: Pod "pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015974608s
Jan 26 01:36:42.443: INFO: Pod "pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025301412s
STEP: Saw pod success
Jan 26 01:36:42.443: INFO: Pod "pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673" satisfied condition "Succeeded or Failed"
Jan 26 01:36:42.446: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673 container env-test: <nil>
STEP: delete the pod
Jan 26 01:36:42.471: INFO: Waiting for pod pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673 to disappear
Jan 26 01:36:42.475: INFO: Pod pod-configmaps-367fc113-d77c-4896-aa33-c4ed5eb7c673 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:36:42.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4281" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":2286,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:42.490: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1283
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 26 01:36:42.666: INFO: Waiting up to 5m0s for pod "pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01" in namespace "emptydir-1283" to be "Succeeded or Failed"
Jan 26 01:36:42.679: INFO: Pod "pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01": Phase="Pending", Reason="", readiness=false. Elapsed: 12.098887ms
Jan 26 01:36:44.690: INFO: Pod "pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023783128s
Jan 26 01:36:46.700: INFO: Pod "pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033684134s
STEP: Saw pod success
Jan 26 01:36:46.700: INFO: Pod "pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01" satisfied condition "Succeeded or Failed"
Jan 26 01:36:46.704: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01 container test-container: <nil>
STEP: delete the pod
Jan 26 01:36:46.723: INFO: Waiting for pod pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01 to disappear
Jan 26 01:36:46.727: INFO: Pod pod-e625b5ab-25e5-49ba-95ed-d629b1b3ec01 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:36:46.727: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1283" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":108,"skipped":2306,"failed":0}

------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:36:46.739: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Jan 26 01:36:46.899: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 01:36:50.040: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:37:03.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3994" for this suite.

â€¢ [SLOW TEST:16.316 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":109,"skipped":2306,"failed":0}
S
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:37:03.055: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-9186
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:37:05.278: INFO: DNS probes using dns-9186/dns-test-d17b97fb-867f-41a0-b325-a69adfb1d7d3 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 01:37:05.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9186" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":110,"skipped":2307,"failed":0}
S
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:37:05.309: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-9159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-8276de4f-cbb2-4c39-83ec-0cc4004c825b-9619
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:37:05.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-9159" for this suite.
STEP: Destroying namespace "nspatchtest-8276de4f-cbb2-4c39-83ec-0cc4004c825b-9619" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":111,"skipped":2308,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:37:05.631: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3346
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 26 01:37:05.790: INFO: The status of Pod labelsupdatec2c32073-01c2-4678-8fa4-4a1a7d64bb8a is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:37:07.801: INFO: The status of Pod labelsupdatec2c32073-01c2-4678-8fa4-4a1a7d64bb8a is Running (Ready = true)
Jan 26 01:37:08.333: INFO: Successfully updated pod "labelsupdatec2c32073-01c2-4678-8fa4-4a1a7d64bb8a"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:37:12.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3346" for this suite.

â€¢ [SLOW TEST:6.754 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":2310,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:37:12.386: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3463
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 26 01:42:12.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3463" for this suite.

â€¢ [SLOW TEST:300.194 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":113,"skipped":2334,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:12.587: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-114
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-114
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-114 to expose endpoints map[]
Jan 26 01:42:12.772: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Jan 26 01:42:13.784: INFO: successfully validated that service endpoint-test2 in namespace services-114 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-114
Jan 26 01:42:13.799: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:42:15.808: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-114 to expose endpoints map[pod1:[80]]
Jan 26 01:42:15.822: INFO: successfully validated that service endpoint-test2 in namespace services-114 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Jan 26 01:42:15.822: INFO: Creating new exec pod
Jan 26 01:42:18.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 26 01:42:19.180: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 26 01:42:19.180: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:42:19.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.125.134 80'
Jan 26 01:42:19.371: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.125.134 80\nConnection to 10.0.125.134 80 port [tcp/http] succeeded!\n"
Jan 26 01:42:19.371: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-114
Jan 26 01:42:19.389: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:42:21.396: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-114 to expose endpoints map[pod1:[80] pod2:[80]]
Jan 26 01:42:21.412: INFO: successfully validated that service endpoint-test2 in namespace services-114 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Jan 26 01:42:22.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 26 01:42:22.665: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 26 01:42:22.665: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:42:22.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.125.134 80'
Jan 26 01:42:22.854: INFO: stderr: "+ nc -v -t -w 2 10.0.125.134 80\nConnection to 10.0.125.134 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Jan 26 01:42:22.854: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-114
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-114 to expose endpoints map[pod2:[80]]
Jan 26 01:42:22.989: INFO: successfully validated that service endpoint-test2 in namespace services-114 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Jan 26 01:42:23.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 26 01:42:24.184: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 26 01:42:24.184: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:42:24.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-114 exec execpodkvxsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.125.134 80'
Jan 26 01:42:24.391: INFO: stderr: "+ nc -v -t -w 2 10.0.125.134 80\nConnection to 10.0.125.134 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Jan 26 01:42:24.391: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-114
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-114 to expose endpoints map[]
Jan 26 01:42:24.438: INFO: successfully validated that service endpoint-test2 in namespace services-114 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:42:24.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-114" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.970 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":114,"skipped":2389,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:24.557: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6398
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:42:24.709: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e" in namespace "projected-6398" to be "Succeeded or Failed"
Jan 26 01:42:24.717: INFO: Pod "downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.115115ms
Jan 26 01:42:26.726: INFO: Pod "downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017020469s
Jan 26 01:42:28.731: INFO: Pod "downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021982344s
STEP: Saw pod success
Jan 26 01:42:28.731: INFO: Pod "downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e" satisfied condition "Succeeded or Failed"
Jan 26 01:42:28.735: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e container client-container: <nil>
STEP: delete the pod
Jan 26 01:42:28.780: INFO: Waiting for pod downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e to disappear
Jan 26 01:42:28.783: INFO: Pod downwardapi-volume-0510481e-6388-418e-8dae-f37ce4a4d28e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:42:28.783: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6398" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":115,"skipped":2390,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:28.796: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Jan 26 01:42:28.957: INFO: Creating e2e-svc-a-m5hm7
Jan 26 01:42:28.985: INFO: Creating e2e-svc-b-925wc
Jan 26 01:42:29.055: INFO: Creating e2e-svc-c-pdt7f
STEP: deleting service collection
Jan 26 01:42:29.420: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:42:29.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6403" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":116,"skipped":2428,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:29.500: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9480
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:42:29.650: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jan 26 01:42:34.666: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 26 01:42:34.666: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 01:42:34.708: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-9480  55061161-c800-4e80-8df1-281dcf137540 17544 1 2023-01-26 01:42:34 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2023-01-26 01:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002c750a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Jan 26 01:42:34.719: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-9480  14390172-34b4-4dc1-86fd-15d68d6f75ed 17546 1 2023-01-26 01:42:34 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 55061161-c800-4e80-8df1-281dcf137540 0xc002c75767 0xc002c75768}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"55061161-c800-4e80-8df1-281dcf137540\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002c75808 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:42:34.719: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Jan 26 01:42:34.719: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-9480  6a0d7554-6efd-428e-a311-8028eda54b31 17545 1 2023-01-26 01:42:29 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 55061161-c800-4e80-8df1-281dcf137540 0xc002c75617 0xc002c75618}] []  [{e2e.test Update apps/v1 2023-01-26 01:42:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:42:31 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-01-26 01:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"55061161-c800-4e80-8df1-281dcf137540\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002c756f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:42:34.723: INFO: Pod "test-cleanup-controller-wb78d" is available:
&Pod{ObjectMeta:{test-cleanup-controller-wb78d test-cleanup-controller- deployment-9480  995a8fba-ab4b-4616-8d16-4b181350b3bb 17516 0 2023-01-26 01:42:29 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-controller 6a0d7554-6efd-428e-a311-8028eda54b31 0xc001190e27 0xc001190e28}] []  [{kube-controller-manager Update v1 2023-01-26 01:42:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6a0d7554-6efd-428e-a311-8028eda54b31\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:42:31 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.95\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s4tpg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s4tpg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:42:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:42:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:42:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:42:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.95,StartTime:2023-01-26 01:42:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:42:30 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bbfc4edd4140adba6ac57908d61938dfbbd17e6fe6c51df671d3f77734dfb306,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.95,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 01:42:34.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9480" for this suite.

â€¢ [SLOW TEST:5.239 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":117,"skipped":2435,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:34.741: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:42:34.917: INFO: Waiting up to 5m0s for pod "downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46" in namespace "projected-1521" to be "Succeeded or Failed"
Jan 26 01:42:34.921: INFO: Pod "downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46": Phase="Pending", Reason="", readiness=false. Elapsed: 3.799563ms
Jan 26 01:42:36.932: INFO: Pod "downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014270291s
Jan 26 01:42:38.937: INFO: Pod "downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020156052s
STEP: Saw pod success
Jan 26 01:42:38.937: INFO: Pod "downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46" satisfied condition "Succeeded or Failed"
Jan 26 01:42:38.941: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46 container client-container: <nil>
STEP: delete the pod
Jan 26 01:42:38.962: INFO: Waiting for pod downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46 to disappear
Jan 26 01:42:38.965: INFO: Pod downwardapi-volume-65b75302-7d9a-4241-9d27-626779952c46 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:42:38.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1521" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":118,"skipped":2449,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:38.980: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4733
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 26 01:42:39.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4733 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 26 01:42:39.220: INFO: stderr: ""
Jan 26 01:42:39.220: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Jan 26 01:42:44.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4733 get pod e2e-test-httpd-pod -o json'
Jan 26 01:42:44.382: INFO: stderr: ""
Jan 26 01:42:44.382: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2023-01-26T01:42:39Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4733\",\n        \"resourceVersion\": \"17625\",\n        \"uid\": \"3fd7db2d-68b6-4510-a5a8-5d5dded8ac29\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-fv6gk\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-linuxpool-34140226-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-fv6gk\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-26T01:42:39Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-26T01:42:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-26T01:42:40Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-26T01:42:39Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://bd940c38fec3790da379523b78cbfd13053fbc3ba75463164df014278afe4a90\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-26T01:42:39Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.240.0.4\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.97\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.97\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-26T01:42:39Z\"\n    }\n}\n"
STEP: replace the image in the pod
Jan 26 01:42:44.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4733 replace -f -'
Jan 26 01:42:45.292: INFO: stderr: ""
Jan 26 01:42:45.293: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Jan 26 01:42:45.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4733 delete pods e2e-test-httpd-pod'
Jan 26 01:42:47.450: INFO: stderr: ""
Jan 26 01:42:47.450: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:42:47.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4733" for this suite.

â€¢ [SLOW TEST:8.489 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":119,"skipped":2459,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:47.470: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:42:47.664: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Jan 26 01:42:47.677: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:47.677: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Jan 26 01:42:47.753: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:47.753: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 01:42:48.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 01:42:48.757: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Jan 26 01:42:48.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 01:42:48.843: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jan 26 01:42:49.850: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:49.850: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Jan 26 01:42:49.865: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:49.865: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 01:42:50.872: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:50.872: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 01:42:51.870: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:51.870: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 01:42:52.873: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 01:42:52.873: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7168, will wait for the garbage collector to delete the pods
Jan 26 01:42:52.940: INFO: Deleting DaemonSet.extensions daemon-set took: 7.184117ms
Jan 26 01:42:53.040: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.580042ms
Jan 26 01:42:55.852: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 01:42:55.852: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 01:42:55.856: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17750"},"items":null}

Jan 26 01:42:55.859: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17750"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:42:55.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7168" for this suite.

â€¢ [SLOW TEST:8.514 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":120,"skipped":2486,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:55.987: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3117
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 26 01:42:56.145: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 01:42:59.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3117" for this suite.
â€¢{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":121,"skipped":2507,"failed":0}

------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:42:59.482: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-9843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 26 01:43:11.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-9843" for this suite.

â€¢ [SLOW TEST:12.275 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":122,"skipped":2507,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:11.760: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 01:43:22.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-559" for this suite.

â€¢ [SLOW TEST:11.250 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":123,"skipped":2555,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:23.011: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-61
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:43:23.161: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 26 01:43:28.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-61 --namespace=crd-publish-openapi-61 create -f -'
Jan 26 01:43:29.363: INFO: stderr: ""
Jan 26 01:43:29.363: INFO: stdout: "e2e-test-crd-publish-openapi-8143-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 26 01:43:29.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-61 --namespace=crd-publish-openapi-61 delete e2e-test-crd-publish-openapi-8143-crds test-cr'
Jan 26 01:43:29.531: INFO: stderr: ""
Jan 26 01:43:29.531: INFO: stdout: "e2e-test-crd-publish-openapi-8143-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jan 26 01:43:29.531: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-61 --namespace=crd-publish-openapi-61 apply -f -'
Jan 26 01:43:30.165: INFO: stderr: ""
Jan 26 01:43:30.165: INFO: stdout: "e2e-test-crd-publish-openapi-8143-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 26 01:43:30.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-61 --namespace=crd-publish-openapi-61 delete e2e-test-crd-publish-openapi-8143-crds test-cr'
Jan 26 01:43:30.262: INFO: stderr: ""
Jan 26 01:43:30.262: INFO: stdout: "e2e-test-crd-publish-openapi-8143-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 26 01:43:30.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-61 explain e2e-test-crd-publish-openapi-8143-crds'
Jan 26 01:43:30.835: INFO: stderr: ""
Jan 26 01:43:30.835: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8143-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:43:34.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-61" for this suite.

â€¢ [SLOW TEST:11.020 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":124,"skipped":2568,"failed":0}
SSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:34.031: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4914
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 26 01:43:34.173: INFO: Waiting up to 5m0s for pod "downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8" in namespace "downward-api-4914" to be "Succeeded or Failed"
Jan 26 01:43:34.177: INFO: Pod "downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.68236ms
Jan 26 01:43:36.187: INFO: Pod "downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014168004s
Jan 26 01:43:38.197: INFO: Pod "downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023721633s
STEP: Saw pod success
Jan 26 01:43:38.197: INFO: Pod "downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8" satisfied condition "Succeeded or Failed"
Jan 26 01:43:38.199: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8 container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:43:38.246: INFO: Waiting for pod downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8 to disappear
Jan 26 01:43:38.250: INFO: Pod downward-api-3e4da6a4-ea89-4b92-bab8-23556a136bc8 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 26 01:43:38.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4914" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":125,"skipped":2572,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:38.260: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9705
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 01:43:49.717: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9705" for this suite.

â€¢ [SLOW TEST:11.472 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":126,"skipped":2581,"failed":0}
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:49.733: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3756
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:43:49.911: INFO: created pod pod-service-account-defaultsa
Jan 26 01:43:49.911: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jan 26 01:43:49.922: INFO: created pod pod-service-account-mountsa
Jan 26 01:43:49.922: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jan 26 01:43:49.940: INFO: created pod pod-service-account-nomountsa
Jan 26 01:43:49.940: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jan 26 01:43:49.976: INFO: created pod pod-service-account-defaultsa-mountspec
Jan 26 01:43:49.976: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jan 26 01:43:49.993: INFO: created pod pod-service-account-mountsa-mountspec
Jan 26 01:43:49.993: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jan 26 01:43:50.007: INFO: created pod pod-service-account-nomountsa-mountspec
Jan 26 01:43:50.007: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jan 26 01:43:50.022: INFO: created pod pod-service-account-defaultsa-nomountspec
Jan 26 01:43:50.022: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jan 26 01:43:50.034: INFO: created pod pod-service-account-mountsa-nomountspec
Jan 26 01:43:50.034: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jan 26 01:43:50.056: INFO: created pod pod-service-account-nomountsa-nomountspec
Jan 26 01:43:50.056: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 01:43:50.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3756" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":127,"skipped":2588,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:43:50.082: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Jan 26 01:44:30.449: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 01:45:30.643: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
Jan 26 01:45:30.643: INFO: Deleting pod "simpletest.rc-2brdb" in namespace "gc-3590"
Jan 26 01:45:30.664: INFO: Deleting pod "simpletest.rc-2gs82" in namespace "gc-3590"
Jan 26 01:45:30.676: INFO: Deleting pod "simpletest.rc-2hswr" in namespace "gc-3590"
Jan 26 01:45:30.689: INFO: Deleting pod "simpletest.rc-2jbkl" in namespace "gc-3590"
Jan 26 01:45:30.702: INFO: Deleting pod "simpletest.rc-4gw2r" in namespace "gc-3590"
Jan 26 01:45:30.714: INFO: Deleting pod "simpletest.rc-4x82d" in namespace "gc-3590"
Jan 26 01:45:30.727: INFO: Deleting pod "simpletest.rc-5czdb" in namespace "gc-3590"
Jan 26 01:45:30.744: INFO: Deleting pod "simpletest.rc-5xc7s" in namespace "gc-3590"
Jan 26 01:45:30.768: INFO: Deleting pod "simpletest.rc-6ztsk" in namespace "gc-3590"
Jan 26 01:45:30.785: INFO: Deleting pod "simpletest.rc-6zxwz" in namespace "gc-3590"
Jan 26 01:45:30.803: INFO: Deleting pod "simpletest.rc-7546v" in namespace "gc-3590"
Jan 26 01:45:30.818: INFO: Deleting pod "simpletest.rc-75bhx" in namespace "gc-3590"
Jan 26 01:45:30.834: INFO: Deleting pod "simpletest.rc-7vjtq" in namespace "gc-3590"
Jan 26 01:45:30.849: INFO: Deleting pod "simpletest.rc-7vnn5" in namespace "gc-3590"
Jan 26 01:45:30.861: INFO: Deleting pod "simpletest.rc-86zz8" in namespace "gc-3590"
Jan 26 01:45:30.873: INFO: Deleting pod "simpletest.rc-8d2gt" in namespace "gc-3590"
Jan 26 01:45:30.889: INFO: Deleting pod "simpletest.rc-8tx7p" in namespace "gc-3590"
Jan 26 01:45:30.902: INFO: Deleting pod "simpletest.rc-9748z" in namespace "gc-3590"
Jan 26 01:45:30.917: INFO: Deleting pod "simpletest.rc-9m5cj" in namespace "gc-3590"
Jan 26 01:45:30.930: INFO: Deleting pod "simpletest.rc-9mmkp" in namespace "gc-3590"
Jan 26 01:45:30.943: INFO: Deleting pod "simpletest.rc-9pfq2" in namespace "gc-3590"
Jan 26 01:45:30.954: INFO: Deleting pod "simpletest.rc-9q578" in namespace "gc-3590"
Jan 26 01:45:30.964: INFO: Deleting pod "simpletest.rc-9qr2g" in namespace "gc-3590"
Jan 26 01:45:30.985: INFO: Deleting pod "simpletest.rc-9vz59" in namespace "gc-3590"
Jan 26 01:45:31.004: INFO: Deleting pod "simpletest.rc-9x8k6" in namespace "gc-3590"
Jan 26 01:45:31.016: INFO: Deleting pod "simpletest.rc-b27dt" in namespace "gc-3590"
Jan 26 01:45:31.030: INFO: Deleting pod "simpletest.rc-b9qtn" in namespace "gc-3590"
Jan 26 01:45:31.049: INFO: Deleting pod "simpletest.rc-bhx69" in namespace "gc-3590"
Jan 26 01:45:31.067: INFO: Deleting pod "simpletest.rc-bscg2" in namespace "gc-3590"
Jan 26 01:45:31.081: INFO: Deleting pod "simpletest.rc-c8fjf" in namespace "gc-3590"
Jan 26 01:45:31.096: INFO: Deleting pod "simpletest.rc-c8tc9" in namespace "gc-3590"
Jan 26 01:45:31.116: INFO: Deleting pod "simpletest.rc-c9c97" in namespace "gc-3590"
Jan 26 01:45:31.127: INFO: Deleting pod "simpletest.rc-ctbv5" in namespace "gc-3590"
Jan 26 01:45:31.146: INFO: Deleting pod "simpletest.rc-ctxxs" in namespace "gc-3590"
Jan 26 01:45:31.163: INFO: Deleting pod "simpletest.rc-cxlr4" in namespace "gc-3590"
Jan 26 01:45:31.176: INFO: Deleting pod "simpletest.rc-d597l" in namespace "gc-3590"
Jan 26 01:45:31.188: INFO: Deleting pod "simpletest.rc-dkf2m" in namespace "gc-3590"
Jan 26 01:45:31.200: INFO: Deleting pod "simpletest.rc-dq2wh" in namespace "gc-3590"
Jan 26 01:45:31.224: INFO: Deleting pod "simpletest.rc-dvx8r" in namespace "gc-3590"
Jan 26 01:45:31.237: INFO: Deleting pod "simpletest.rc-f225w" in namespace "gc-3590"
Jan 26 01:45:31.259: INFO: Deleting pod "simpletest.rc-f8jgh" in namespace "gc-3590"
Jan 26 01:45:31.296: INFO: Deleting pod "simpletest.rc-fzcpt" in namespace "gc-3590"
Jan 26 01:45:31.320: INFO: Deleting pod "simpletest.rc-gj22h" in namespace "gc-3590"
Jan 26 01:45:31.331: INFO: Deleting pod "simpletest.rc-gjhcg" in namespace "gc-3590"
Jan 26 01:45:31.346: INFO: Deleting pod "simpletest.rc-gktgh" in namespace "gc-3590"
Jan 26 01:45:31.372: INFO: Deleting pod "simpletest.rc-hp2x7" in namespace "gc-3590"
Jan 26 01:45:31.389: INFO: Deleting pod "simpletest.rc-hvt8f" in namespace "gc-3590"
Jan 26 01:45:31.403: INFO: Deleting pod "simpletest.rc-jdjb4" in namespace "gc-3590"
Jan 26 01:45:31.415: INFO: Deleting pod "simpletest.rc-jhk87" in namespace "gc-3590"
Jan 26 01:45:31.427: INFO: Deleting pod "simpletest.rc-jn8b2" in namespace "gc-3590"
Jan 26 01:45:31.437: INFO: Deleting pod "simpletest.rc-jqd7x" in namespace "gc-3590"
Jan 26 01:45:31.448: INFO: Deleting pod "simpletest.rc-jvs9r" in namespace "gc-3590"
Jan 26 01:45:31.459: INFO: Deleting pod "simpletest.rc-jzg2c" in namespace "gc-3590"
Jan 26 01:45:31.472: INFO: Deleting pod "simpletest.rc-kp7fv" in namespace "gc-3590"
Jan 26 01:45:31.489: INFO: Deleting pod "simpletest.rc-kqzw2" in namespace "gc-3590"
Jan 26 01:45:31.501: INFO: Deleting pod "simpletest.rc-kwnbn" in namespace "gc-3590"
Jan 26 01:45:31.513: INFO: Deleting pod "simpletest.rc-kxrg4" in namespace "gc-3590"
Jan 26 01:45:31.533: INFO: Deleting pod "simpletest.rc-kzfwx" in namespace "gc-3590"
Jan 26 01:45:31.544: INFO: Deleting pod "simpletest.rc-l8kkf" in namespace "gc-3590"
Jan 26 01:45:31.557: INFO: Deleting pod "simpletest.rc-lb9n4" in namespace "gc-3590"
Jan 26 01:45:31.572: INFO: Deleting pod "simpletest.rc-lbhb8" in namespace "gc-3590"
Jan 26 01:45:31.587: INFO: Deleting pod "simpletest.rc-lgsmb" in namespace "gc-3590"
Jan 26 01:45:31.645: INFO: Deleting pod "simpletest.rc-lqwng" in namespace "gc-3590"
Jan 26 01:45:31.657: INFO: Deleting pod "simpletest.rc-lshjw" in namespace "gc-3590"
Jan 26 01:45:31.670: INFO: Deleting pod "simpletest.rc-lvqr5" in namespace "gc-3590"
Jan 26 01:45:31.684: INFO: Deleting pod "simpletest.rc-mn629" in namespace "gc-3590"
Jan 26 01:45:31.702: INFO: Deleting pod "simpletest.rc-mwzpf" in namespace "gc-3590"
Jan 26 01:45:31.722: INFO: Deleting pod "simpletest.rc-ncbd4" in namespace "gc-3590"
Jan 26 01:45:31.735: INFO: Deleting pod "simpletest.rc-ncccl" in namespace "gc-3590"
Jan 26 01:45:31.749: INFO: Deleting pod "simpletest.rc-nhxx4" in namespace "gc-3590"
Jan 26 01:45:31.761: INFO: Deleting pod "simpletest.rc-nmgqx" in namespace "gc-3590"
Jan 26 01:45:31.774: INFO: Deleting pod "simpletest.rc-nrbf6" in namespace "gc-3590"
Jan 26 01:45:31.785: INFO: Deleting pod "simpletest.rc-nt86f" in namespace "gc-3590"
Jan 26 01:45:31.806: INFO: Deleting pod "simpletest.rc-p56l9" in namespace "gc-3590"
Jan 26 01:45:31.858: INFO: Deleting pod "simpletest.rc-p5nss" in namespace "gc-3590"
Jan 26 01:45:31.910: INFO: Deleting pod "simpletest.rc-p8b8b" in namespace "gc-3590"
Jan 26 01:45:31.956: INFO: Deleting pod "simpletest.rc-p8wm5" in namespace "gc-3590"
Jan 26 01:45:32.011: INFO: Deleting pod "simpletest.rc-pcz4r" in namespace "gc-3590"
Jan 26 01:45:32.055: INFO: Deleting pod "simpletest.rc-pz567" in namespace "gc-3590"
Jan 26 01:45:32.112: INFO: Deleting pod "simpletest.rc-r9rrj" in namespace "gc-3590"
Jan 26 01:45:32.157: INFO: Deleting pod "simpletest.rc-rb9z2" in namespace "gc-3590"
Jan 26 01:45:32.217: INFO: Deleting pod "simpletest.rc-rhpbd" in namespace "gc-3590"
Jan 26 01:45:32.260: INFO: Deleting pod "simpletest.rc-rkfwb" in namespace "gc-3590"
Jan 26 01:45:32.309: INFO: Deleting pod "simpletest.rc-s5l4j" in namespace "gc-3590"
Jan 26 01:45:32.358: INFO: Deleting pod "simpletest.rc-s97g6" in namespace "gc-3590"
Jan 26 01:45:32.407: INFO: Deleting pod "simpletest.rc-s9rpt" in namespace "gc-3590"
Jan 26 01:45:32.460: INFO: Deleting pod "simpletest.rc-slklp" in namespace "gc-3590"
Jan 26 01:45:32.509: INFO: Deleting pod "simpletest.rc-swnwh" in namespace "gc-3590"
Jan 26 01:45:32.556: INFO: Deleting pod "simpletest.rc-t7hrg" in namespace "gc-3590"
Jan 26 01:45:32.604: INFO: Deleting pod "simpletest.rc-tgxw8" in namespace "gc-3590"
Jan 26 01:45:32.660: INFO: Deleting pod "simpletest.rc-tj2ht" in namespace "gc-3590"
Jan 26 01:45:32.708: INFO: Deleting pod "simpletest.rc-vrl94" in namespace "gc-3590"
Jan 26 01:45:32.758: INFO: Deleting pod "simpletest.rc-wff84" in namespace "gc-3590"
Jan 26 01:45:32.808: INFO: Deleting pod "simpletest.rc-x9k45" in namespace "gc-3590"
Jan 26 01:45:32.859: INFO: Deleting pod "simpletest.rc-x9pxw" in namespace "gc-3590"
Jan 26 01:45:32.908: INFO: Deleting pod "simpletest.rc-xx5rs" in namespace "gc-3590"
Jan 26 01:45:32.960: INFO: Deleting pod "simpletest.rc-z7nf5" in namespace "gc-3590"
Jan 26 01:45:33.013: INFO: Deleting pod "simpletest.rc-zlq2h" in namespace "gc-3590"
Jan 26 01:45:33.056: INFO: Deleting pod "simpletest.rc-znx24" in namespace "gc-3590"
Jan 26 01:45:33.108: INFO: Deleting pod "simpletest.rc-zvtz2" in namespace "gc-3590"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 01:45:33.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3590" for this suite.

â€¢ [SLOW TEST:103.170 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":128,"skipped":2603,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:45:33.254: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6247
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-6247
STEP: creating service affinity-clusterip in namespace services-6247
STEP: creating replication controller affinity-clusterip in namespace services-6247
I0126 01:45:33.534987      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-6247, replica count: 3
I0126 01:45:36.587902      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0126 01:45:39.588332      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0126 01:45:42.589340      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:45:42.606: INFO: Creating new exec pod
Jan 26 01:45:49.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-6247 exec execpod-affinityj9n5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Jan 26 01:45:49.812: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jan 26 01:45:49.812: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:45:49.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-6247 exec execpod-affinityj9n5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.179.51 80'
Jan 26 01:45:50.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.179.51 80\nConnection to 10.0.179.51 80 port [tcp/http] succeeded!\n"
Jan 26 01:45:50.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:45:50.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-6247 exec execpod-affinityj9n5s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.179.51:80/ ; done'
Jan 26 01:45:50.286: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.179.51:80/\n"
Jan 26 01:45:50.286: INFO: stdout: "\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx\naffinity-clusterip-gwvcx"
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.286: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.287: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.287: INFO: Received response from host: affinity-clusterip-gwvcx
Jan 26 01:45:50.287: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-6247, will wait for the garbage collector to delete the pods
Jan 26 01:45:50.375: INFO: Deleting ReplicationController affinity-clusterip took: 8.415141ms
Jan 26 01:45:50.476: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.52468ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:45:52.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6247" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:19.570 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":129,"skipped":2618,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:45:52.826: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-7677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-7677-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 26 01:45:52.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-7677" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":130,"skipped":2656,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:45:52.997: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-8407
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:45:53.136: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jan 26 01:45:58.171: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 26 01:45:58.171: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jan 26 01:46:00.184: INFO: Creating deployment "test-rollover-deployment"
Jan 26 01:46:00.199: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jan 26 01:46:02.213: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jan 26 01:46:02.219: INFO: Ensure that both replica sets have 1 created replica
Jan 26 01:46:02.224: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jan 26 01:46:02.241: INFO: Updating deployment test-rollover-deployment
Jan 26 01:46:02.241: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jan 26 01:46:04.251: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jan 26 01:46:04.257: INFO: Make sure deployment "test-rollover-deployment" is complete
Jan 26 01:46:04.264: INFO: all replica sets need to contain the pod-template-hash label
Jan 26 01:46:04.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 01:46:06.279: INFO: all replica sets need to contain the pod-template-hash label
Jan 26 01:46:06.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 01:46:08.272: INFO: all replica sets need to contain the pod-template-hash label
Jan 26 01:46:08.272: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 01:46:10.279: INFO: all replica sets need to contain the pod-template-hash label
Jan 26 01:46:10.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 01:46:12.278: INFO: all replica sets need to contain the pod-template-hash label
Jan 26 01:46:12.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 46, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 46, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 01:46:14.276: INFO: 
Jan 26 01:46:14.276: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 01:46:14.284: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-8407  e89335cc-2354-45d7-a524-bf5a1fe8eedc 20545 2 2023-01-26 01:46:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-26 01:46:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:46:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004cdf908 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-26 01:46:00 +0000 UTC,LastTransitionTime:2023-01-26 01:46:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2023-01-26 01:46:13 +0000 UTC,LastTransitionTime:2023-01-26 01:46:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 26 01:46:14.288: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-8407  b31bb209-d08c-4a4d-be5f-2d57d584b24f 20534 2 2023-01-26 01:46:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment e89335cc-2354-45d7-a524-bf5a1fe8eedc 0xc003933ef7 0xc003933ef8}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:46:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e89335cc-2354-45d7-a524-bf5a1fe8eedc\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:46:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003933fa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:46:14.288: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jan 26 01:46:14.289: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-8407  dca0adef-aeff-49b3-a025-e7c844bd642d 20544 2 2023-01-26 01:45:53 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment e89335cc-2354-45d7-a524-bf5a1fe8eedc 0xc003933dc7 0xc003933dc8}] []  [{e2e.test Update apps/v1 2023-01-26 01:45:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:46:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e89335cc-2354-45d7-a524-bf5a1fe8eedc\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:46:13 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003933e88 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:46:14.289: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-8407  2dd3ffb4-a480-45b3-bd8c-fb05194d11b2 20498 2 2023-01-26 01:46:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment e89335cc-2354-45d7-a524-bf5a1fe8eedc 0xc003dcc010 0xc003dcc011}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:46:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e89335cc-2354-45d7-a524-bf5a1fe8eedc\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:46:02 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003dcc0b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:46:14.292: INFO: Pod "test-rollover-deployment-779c67f4f8-2mp64" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-2mp64 test-rollover-deployment-779c67f4f8- deployment-8407  58084b4e-47d2-4086-b832-916b3020815d 20508 0 2023-01-26 01:46:02 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 b31bb209-d08c-4a4d-be5f-2d57d584b24f 0xc004cdfca7 0xc004cdfca8}] []  [{kube-controller-manager Update v1 2023-01-26 01:46:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b31bb209-d08c-4a4d-be5f-2d57d584b24f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:46:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lm5tb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lm5tb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:46:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:46:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:46:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:46:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.99,StartTime:2023-01-26 01:46:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:46:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://77bc3c9270b47a7408dd3f384d37f66e02439912ff7127872b93b3c04303bc91,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 01:46:14.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8407" for this suite.

â€¢ [SLOW TEST:21.307 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":131,"skipped":2657,"failed":0}
S
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:46:14.303: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1759
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 26 01:46:14.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1759" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":132,"skipped":2658,"failed":0}
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:46:14.481: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-3627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 26 01:46:18.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-3627" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2664,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:46:18.651: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-1330
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 26 01:46:22.876: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 26 01:46:22.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1330" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":134,"skipped":2676,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:46:22.906: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3522
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:46:23.084: INFO: created pod
Jan 26 01:46:23.085: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-3522" to be "Succeeded or Failed"
Jan 26 01:46:23.088: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.551058ms
Jan 26 01:46:25.095: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010561559s
Jan 26 01:46:27.106: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021568325s
STEP: Saw pod success
Jan 26 01:46:27.106: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jan 26 01:46:57.106: INFO: polling logs
Jan 26 01:46:57.133: INFO: Pod logs: 
I0126 01:46:23.760945       1 log.go:195] OK: Got token
I0126 01:46:23.760985       1 log.go:195] validating with in-cluster discovery
I0126 01:46:23.761381       1 log.go:195] OK: got issuer https://kubernetes.default.svc.cluster.local
I0126 01:46:23.761423       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3522:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1674698183, NotBefore:1674697583, IssuedAt:1674697583, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3522", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c57492b3-980f-4326-bc26-dcd1160dd19d"}}}
I0126 01:46:23.805435       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0126 01:46:23.823859       1 log.go:195] OK: Validated signature on JWT
I0126 01:46:23.823983       1 log.go:195] OK: Got valid claims from token!
I0126 01:46:23.824026       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3522:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1674698183, NotBefore:1674697583, IssuedAt:1674697583, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3522", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c57492b3-980f-4326-bc26-dcd1160dd19d"}}}

Jan 26 01:46:57.133: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 01:46:57.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3522" for this suite.

â€¢ [SLOW TEST:34.255 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":135,"skipped":2753,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:46:57.162: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4065
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-1b90ac69-b32e-4914-b9e1-de3b5ae7ed16
STEP: Creating a pod to test consume configMaps
Jan 26 01:46:57.361: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89" in namespace "projected-4065" to be "Succeeded or Failed"
Jan 26 01:46:57.365: INFO: Pod "pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89": Phase="Pending", Reason="", readiness=false. Elapsed: 3.947965ms
Jan 26 01:46:59.380: INFO: Pod "pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018323576s
Jan 26 01:47:01.392: INFO: Pod "pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030836057s
STEP: Saw pod success
Jan 26 01:47:01.392: INFO: Pod "pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89" satisfied condition "Succeeded or Failed"
Jan 26 01:47:01.395: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:47:01.423: INFO: Waiting for pod pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89 to disappear
Jan 26 01:47:01.428: INFO: Pod pod-projected-configmaps-b3138efe-4d89-4cf3-9e96-105de1c5ba89 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 01:47:01.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4065" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":136,"skipped":2767,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:01.442: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 01:47:18.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7698" for this suite.

â€¢ [SLOW TEST:17.266 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":137,"skipped":2779,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:18.711: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Jan 26 01:47:18.864: INFO: observed Pod pod-test in namespace pods-2433 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 26 01:47:18.869: INFO: observed Pod pod-test in namespace pods-2433 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC  }]
Jan 26 01:47:18.892: INFO: observed Pod pod-test in namespace pods-2433 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC  }]
Jan 26 01:47:20.488: INFO: Found Pod pod-test in namespace pods-2433 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:20 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:18 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Jan 26 01:47:20.547: INFO: observed event type MODIFIED
Jan 26 01:47:22.491: INFO: observed event type MODIFIED
Jan 26 01:47:23.497: INFO: observed event type MODIFIED
Jan 26 01:47:23.507: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:47:23.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2433" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":138,"skipped":2798,"failed":0}
SSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:23.535: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4080
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 26 01:47:23.777: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 26 01:47:25.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4080" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":139,"skipped":2802,"failed":0}

------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:25.799: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-5483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-4050
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:47:39.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-5483" for this suite.
STEP: Destroying namespace "nsdeletetest-909" for this suite.
Jan 26 01:47:39.246: INFO: Namespace nsdeletetest-909 was already deleted
STEP: Destroying namespace "nsdeletetest-4050" for this suite.

â€¢ [SLOW TEST:13.453 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":140,"skipped":2802,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:39.255: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4471
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:47:39.438: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"fbcc4767-c505-4c3d-a8bc-b6e1e2a0358f", Controller:(*bool)(0xc003caa116), BlockOwnerDeletion:(*bool)(0xc003caa117)}}
Jan 26 01:47:39.452: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"fa34b70b-f3c8-4cb4-91f3-53d424dbf15a", Controller:(*bool)(0xc003caa33e), BlockOwnerDeletion:(*bool)(0xc003caa33f)}}
Jan 26 01:47:39.466: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"61a06bc6-5c18-47bd-bf75-aa3d8b65d24d", Controller:(*bool)(0xc004c87a9e), BlockOwnerDeletion:(*bool)(0xc004c87a9f)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 01:47:44.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4471" for this suite.

â€¢ [SLOW TEST:5.267 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":141,"skipped":2829,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:47:44.523: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9724
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-9724
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9724
Jan 26 01:47:44.823: INFO: Found 0 stateful pods, waiting for 1
Jan 26 01:47:54.832: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Jan 26 01:47:54.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:47:55.078: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:47:55.078: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:47:55.078: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 01:47:55.083: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 26 01:48:05.094: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 01:48:05.094: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:48:05.121: INFO: POD   NODE                      PHASE    GRACE  CONDITIONS
Jan 26 01:48:05.121: INFO: ss-0  k8s-linuxpool-34140226-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  }]
Jan 26 01:48:05.121: INFO: 
Jan 26 01:48:05.121: INFO: StatefulSet ss has not reached scale 3, at 1
Jan 26 01:48:06.130: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.990321435s
Jan 26 01:48:07.138: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.981477887s
Jan 26 01:48:08.145: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.97334155s
Jan 26 01:48:09.153: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.966117929s
Jan 26 01:48:10.164: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.958199595s
Jan 26 01:48:11.172: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.947245412s
Jan 26 01:48:12.179: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.939812387s
Jan 26 01:48:13.212: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.931508148s
Jan 26 01:48:14.222: INFO: Verifying statefulset ss doesn't scale past 3 for another 899.805923ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9724
Jan 26 01:48:15.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 01:48:15.423: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 01:48:15.423: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 01:48:15.423: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 01:48:15.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 01:48:15.634: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 26 01:48:15.634: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 01:48:15.634: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 01:48:15.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 01:48:15.832: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 26 01:48:15.832: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 01:48:15.832: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 01:48:15.836: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Jan 26 01:48:25.849: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:48:25.849: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:48:25.849: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Jan 26 01:48:25.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:48:26.058: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:48:26.058: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:48:26.058: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 01:48:26.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:48:26.269: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:48:26.269: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:48:26.270: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 01:48:26.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-9724 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 01:48:26.502: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 01:48:26.502: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 01:48:26.502: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 01:48:26.502: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:48:26.507: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
Jan 26 01:48:36.523: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 01:48:36.523: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 01:48:36.523: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 01:48:36.542: INFO: POD   NODE                      PHASE    GRACE  CONDITIONS
Jan 26 01:48:36.542: INFO: ss-0  k8s-linuxpool-34140226-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  }]
Jan 26 01:48:36.542: INFO: ss-1  k8s-linuxpool-34140226-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  }]
Jan 26 01:48:36.542: INFO: ss-2  k8s-linuxpool-34140226-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  }]
Jan 26 01:48:36.542: INFO: 
Jan 26 01:48:36.542: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 26 01:48:37.549: INFO: POD   NODE                      PHASE    GRACE  CONDITIONS
Jan 26 01:48:37.549: INFO: ss-0  k8s-linuxpool-34140226-1  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:47:44 +0000 UTC  }]
Jan 26 01:48:37.549: INFO: ss-1  k8s-linuxpool-34140226-2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-26 01:48:05 +0000 UTC  }]
Jan 26 01:48:37.549: INFO: 
Jan 26 01:48:37.549: INFO: StatefulSet ss has not reached scale 0, at 2
Jan 26 01:48:38.555: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.985288123s
Jan 26 01:48:39.562: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.980434037s
Jan 26 01:48:40.569: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.973610619s
Jan 26 01:48:41.578: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.965613481s
Jan 26 01:48:42.584: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.957671445s
Jan 26 01:48:43.589: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.951303834s
Jan 26 01:48:44.598: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.94659515s
Jan 26 01:48:45.604: INFO: Verifying statefulset ss doesn't scale past 0 for another 937.907701ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9724
Jan 26 01:48:46.611: INFO: Scaling statefulset ss to 0
Jan 26 01:48:46.623: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 01:48:46.625: INFO: Deleting all statefulset in ns statefulset-9724
Jan 26 01:48:46.628: INFO: Scaling statefulset ss to 0
Jan 26 01:48:46.638: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:48:46.641: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 01:48:46.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9724" for this suite.

â€¢ [SLOW TEST:62.220 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":142,"skipped":2851,"failed":0}
SSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:48:46.743: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:48:49.108: INFO: DNS probes using dns-test-f958c372-0c00-4ab2-b5e1-becb9d6e43f8 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:48:51.165: INFO: File wheezy_udp@dns-test-service-3.dns-2038.svc.cluster.local from pod  dns-2038/dns-test-c307b708-0398-4a08-8f23-1b369717b150 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 26 01:48:51.169: INFO: File jessie_udp@dns-test-service-3.dns-2038.svc.cluster.local from pod  dns-2038/dns-test-c307b708-0398-4a08-8f23-1b369717b150 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 26 01:48:51.169: INFO: Lookups using dns-2038/dns-test-c307b708-0398-4a08-8f23-1b369717b150 failed for: [wheezy_udp@dns-test-service-3.dns-2038.svc.cluster.local jessie_udp@dns-test-service-3.dns-2038.svc.cluster.local]

Jan 26 01:48:56.178: INFO: DNS probes using dns-test-c307b708-0398-4a08-8f23-1b369717b150 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2038.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2038.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:48:58.265: INFO: DNS probes using dns-test-d652830c-f857-4dbc-9156-ad20c072de7b succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 01:48:58.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2038" for this suite.

â€¢ [SLOW TEST:11.590 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":143,"skipped":2858,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:48:58.335: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1302
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 26 01:48:58.611: INFO: Waiting up to 5m0s for pod "pod-a216b893-94cf-40f2-97c6-69adc6595dc0" in namespace "emptydir-1302" to be "Succeeded or Failed"
Jan 26 01:48:58.616: INFO: Pod "pod-a216b893-94cf-40f2-97c6-69adc6595dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.093883ms
Jan 26 01:49:00.626: INFO: Pod "pod-a216b893-94cf-40f2-97c6-69adc6595dc0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014483463s
Jan 26 01:49:02.637: INFO: Pod "pod-a216b893-94cf-40f2-97c6-69adc6595dc0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025258859s
STEP: Saw pod success
Jan 26 01:49:02.637: INFO: Pod "pod-a216b893-94cf-40f2-97c6-69adc6595dc0" satisfied condition "Succeeded or Failed"
Jan 26 01:49:02.640: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-a216b893-94cf-40f2-97c6-69adc6595dc0 container test-container: <nil>
STEP: delete the pod
Jan 26 01:49:02.689: INFO: Waiting for pod pod-a216b893-94cf-40f2-97c6-69adc6595dc0 to disappear
Jan 26 01:49:02.692: INFO: Pod pod-a216b893-94cf-40f2-97c6-69adc6595dc0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:49:02.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1302" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2867,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:02.707: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-9485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Jan 26 01:49:02.870: INFO: Major version: 1
STEP: Confirm minor version
Jan 26 01:49:02.870: INFO: cleanMinorVersion: 24
Jan 26 01:49:02.870: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Jan 26 01:49:02.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-9485" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":145,"skipped":2883,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:02.920: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 26 01:49:03.069: INFO: The status of Pod labelsupdate006c11c4-cb57-4fc1-99be-d330c07a9818 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:49:05.078: INFO: The status of Pod labelsupdate006c11c4-cb57-4fc1-99be-d330c07a9818 is Running (Ready = true)
Jan 26 01:49:05.611: INFO: Successfully updated pod "labelsupdate006c11c4-cb57-4fc1-99be-d330c07a9818"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:49:09.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3115" for this suite.

â€¢ [SLOW TEST:6.735 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2902,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:09.655: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-475
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:49:11.879: INFO: Deleting pod "var-expansion-18efafe3-8f33-44e6-88fd-bcd2abf3ba27" in namespace "var-expansion-475"
Jan 26 01:49:11.888: INFO: Wait up to 5m0s for pod "var-expansion-18efafe3-8f33-44e6-88fd-bcd2abf3ba27" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 01:49:13.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-475" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":147,"skipped":2920,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:13.912: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-939
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:49:14.071: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e" in namespace "security-context-test-939" to be "Succeeded or Failed"
Jan 26 01:49:14.075: INFO: Pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018066ms
Jan 26 01:49:16.084: INFO: Pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013737139s
Jan 26 01:49:18.092: INFO: Pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021234271s
Jan 26 01:49:20.102: INFO: Pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.031755024s
Jan 26 01:49:20.102: INFO: Pod "alpine-nnp-false-f2fa4dc1-2235-4e9a-861d-a654dbf01a4e" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 01:49:20.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-939" for this suite.

â€¢ [SLOW TEST:6.260 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":148,"skipped":2929,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:20.173: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5031
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Jan 26 01:49:20.319: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:49:22.329: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Jan 26 01:49:23.353: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 01:49:24.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5031" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":149,"skipped":2948,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:24.396: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5496
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-c9ef7800-ae97-4edb-883e-5e71ea4ce1f1
STEP: Creating a pod to test consume secrets
Jan 26 01:49:24.552: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2" in namespace "projected-5496" to be "Succeeded or Failed"
Jan 26 01:49:24.559: INFO: Pod "pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.789211ms
Jan 26 01:49:26.569: INFO: Pod "pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017406866s
Jan 26 01:49:28.575: INFO: Pod "pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023471944s
STEP: Saw pod success
Jan 26 01:49:28.575: INFO: Pod "pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2" satisfied condition "Succeeded or Failed"
Jan 26 01:49:28.578: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:49:28.604: INFO: Waiting for pod pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2 to disappear
Jan 26 01:49:28.607: INFO: Pod pod-projected-secrets-4ad65f47-ca85-40f7-912d-12089201cce2 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 01:49:28.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5496" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":150,"skipped":2953,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:28.621: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 01:49:28.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1257" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":151,"skipped":2967,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:28.861: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-6430
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Jan 26 01:49:28.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-6430" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":152,"skipped":3025,"failed":0}
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:49:29.007: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-104
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Jan 26 01:49:29.138: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 01:50:29.219: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:50:29.222: INFO: Starting informer...
STEP: Starting pod...
Jan 26 01:50:29.451: INFO: Pod is running on k8s-linuxpool-34140226-1. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Jan 26 01:50:29.473: INFO: Pod wasn't evicted. Proceeding
Jan 26 01:50:29.473: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Jan 26 01:51:44.496: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:51:44.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-104" for this suite.

â€¢ [SLOW TEST:135.513 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":153,"skipped":3031,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:51:44.532: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8882
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 26 01:51:44.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8882" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":154,"skipped":3103,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:51:44.786: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4510
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 26 01:51:44.945: INFO: Waiting up to 5m0s for pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a" in namespace "emptydir-4510" to be "Succeeded or Failed"
Jan 26 01:51:44.954: INFO: Pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a": Phase="Pending", Reason="", readiness=false. Elapsed: 8.960746ms
Jan 26 01:51:46.966: INFO: Pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a": Phase="Running", Reason="", readiness=true. Elapsed: 2.020465243s
Jan 26 01:51:48.971: INFO: Pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a": Phase="Running", Reason="", readiness=false. Elapsed: 4.025859841s
Jan 26 01:51:50.980: INFO: Pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035322669s
STEP: Saw pod success
Jan 26 01:51:50.980: INFO: Pod "pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a" satisfied condition "Succeeded or Failed"
Jan 26 01:51:50.983: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a container test-container: <nil>
STEP: delete the pod
Jan 26 01:51:51.027: INFO: Waiting for pod pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a to disappear
Jan 26 01:51:51.035: INFO: Pod pod-f78ef0d8-07a0-4160-a206-99de0afd5d7a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:51:51.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4510" for this suite.

â€¢ [SLOW TEST:6.263 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":3146,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:51:51.049: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-7008/configmap-test-c6f878ec-6421-4f8a-afe1-f52293e03733
STEP: Creating a pod to test consume configMaps
Jan 26 01:51:51.220: INFO: Waiting up to 5m0s for pod "pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d" in namespace "configmap-7008" to be "Succeeded or Failed"
Jan 26 01:51:51.224: INFO: Pod "pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.192267ms
Jan 26 01:51:53.238: INFO: Pod "pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d": Phase="Running", Reason="", readiness=false. Elapsed: 2.017790702s
Jan 26 01:51:55.254: INFO: Pod "pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033673574s
STEP: Saw pod success
Jan 26 01:51:55.254: INFO: Pod "pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d" satisfied condition "Succeeded or Failed"
Jan 26 01:51:55.258: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d container env-test: <nil>
STEP: delete the pod
Jan 26 01:51:55.297: INFO: Waiting for pod pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d to disappear
Jan 26 01:51:55.300: INFO: Pod pod-configmaps-c6e54805-13e3-44dc-a7ca-3b70f8e8163d no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:51:55.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7008" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":3188,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:51:55.313: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 26 01:53:01.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9505" for this suite.

â€¢ [SLOW TEST:66.201 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":157,"skipped":3203,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:01.515: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7916
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 01:53:29.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7916" for this suite.

â€¢ [SLOW TEST:28.249 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":158,"skipped":3214,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:29.766: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-29f8a939-bcbe-4019-9825-57e8ffe94f5e
STEP: Creating a pod to test consume secrets
Jan 26 01:53:29.929: INFO: Waiting up to 5m0s for pod "pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8" in namespace "secrets-321" to be "Succeeded or Failed"
Jan 26 01:53:29.996: INFO: Pod "pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8": Phase="Pending", Reason="", readiness=false. Elapsed: 67.029521ms
Jan 26 01:53:32.006: INFO: Pod "pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.077478148s
Jan 26 01:53:34.013: INFO: Pod "pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.08429722s
STEP: Saw pod success
Jan 26 01:53:34.013: INFO: Pod "pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8" satisfied condition "Succeeded or Failed"
Jan 26 01:53:34.016: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8 container secret-env-test: <nil>
STEP: delete the pod
Jan 26 01:53:34.065: INFO: Waiting for pod pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8 to disappear
Jan 26 01:53:34.069: INFO: Pod pod-secrets-9cc8094b-eb46-4d66-9739-e764802585c8 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:53:34.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-321" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":3232,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:34.082: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7797
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Jan 26 01:53:34.245: INFO: Waiting up to 5m0s for pod "client-containers-cbf09986-45df-45b9-b745-24bdc2a38734" in namespace "containers-7797" to be "Succeeded or Failed"
Jan 26 01:53:34.249: INFO: Pod "client-containers-cbf09986-45df-45b9-b745-24bdc2a38734": Phase="Pending", Reason="", readiness=false. Elapsed: 3.627556ms
Jan 26 01:53:36.260: INFO: Pod "client-containers-cbf09986-45df-45b9-b745-24bdc2a38734": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015353378s
Jan 26 01:53:38.265: INFO: Pod "client-containers-cbf09986-45df-45b9-b745-24bdc2a38734": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019738387s
STEP: Saw pod success
Jan 26 01:53:38.265: INFO: Pod "client-containers-cbf09986-45df-45b9-b745-24bdc2a38734" satisfied condition "Succeeded or Failed"
Jan 26 01:53:38.267: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod client-containers-cbf09986-45df-45b9-b745-24bdc2a38734 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:53:38.292: INFO: Waiting for pod client-containers-cbf09986-45df-45b9-b745-24bdc2a38734 to disappear
Jan 26 01:53:38.295: INFO: Pod client-containers-cbf09986-45df-45b9-b745-24bdc2a38734 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 26 01:53:38.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7797" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":3244,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:38.309: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7055
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:53:38.475: INFO: Waiting up to 5m0s for pod "downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2" in namespace "projected-7055" to be "Succeeded or Failed"
Jan 26 01:53:38.484: INFO: Pod "downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2": Phase="Pending", Reason="", readiness=false. Elapsed: 9.040838ms
Jan 26 01:53:40.492: INFO: Pod "downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017645312s
Jan 26 01:53:42.563: INFO: Pod "downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.088377937s
STEP: Saw pod success
Jan 26 01:53:42.563: INFO: Pod "downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2" satisfied condition "Succeeded or Failed"
Jan 26 01:53:42.566: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2 container client-container: <nil>
STEP: delete the pod
Jan 26 01:53:42.586: INFO: Waiting for pod downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2 to disappear
Jan 26 01:53:42.589: INFO: Pod downwardapi-volume-68f2c5f7-90e6-4a3a-b201-ef11e871aec2 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 01:53:42.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7055" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":161,"skipped":3264,"failed":0}
SSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:42.599: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 26 01:53:42.753: INFO: Waiting up to 5m0s for pod "downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5" in namespace "downward-api-4266" to be "Succeeded or Failed"
Jan 26 01:53:42.759: INFO: Pod "downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.103794ms
Jan 26 01:53:44.767: INFO: Pod "downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014099952s
Jan 26 01:53:46.777: INFO: Pod "downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023492931s
STEP: Saw pod success
Jan 26 01:53:46.777: INFO: Pod "downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5" satisfied condition "Succeeded or Failed"
Jan 26 01:53:46.780: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5 container dapi-container: <nil>
STEP: delete the pod
Jan 26 01:53:46.799: INFO: Waiting for pod downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5 to disappear
Jan 26 01:53:46.801: INFO: Pod downward-api-41e4f909-491c-45ff-8c7a-6667fc000aa5 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 26 01:53:46.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4266" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":3267,"failed":0}

------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:46.814: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9564
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 26 01:53:46.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9564 create -f -'
Jan 26 01:53:47.927: INFO: stderr: ""
Jan 26 01:53:47.927: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 26 01:53:48.933: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:53:48.933: INFO: Found 0 / 1
Jan 26 01:53:49.936: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:53:49.936: INFO: Found 1 / 1
Jan 26 01:53:49.936: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Jan 26 01:53:49.939: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:53:49.939: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 26 01:53:49.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9564 patch pod agnhost-primary-vjzqz -p {"metadata":{"annotations":{"x":"y"}}}'
Jan 26 01:53:50.046: INFO: stderr: ""
Jan 26 01:53:50.046: INFO: stdout: "pod/agnhost-primary-vjzqz patched\n"
STEP: checking annotations
Jan 26 01:53:50.060: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:53:50.061: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:53:50.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9564" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":163,"skipped":3267,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:50.075: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 01:53:57.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8130" for this suite.

â€¢ [SLOW TEST:7.191 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":164,"skipped":3277,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:57.266: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3971
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Jan 26 01:53:57.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-3971 api-versions'
Jan 26 01:53:57.483: INFO: stderr: ""
Jan 26 01:53:57.483: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:53:57.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3971" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":165,"skipped":3303,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:57.495: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4781
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Jan 26 01:53:57.636: INFO: Creating simple deployment test-deployment-9vr46
Jan 26 01:53:57.648: INFO: deployment "test-deployment-9vr46" doesn't have the required revision set
STEP: Getting /status
Jan 26 01:53:59.668: INFO: Deployment test-deployment-9vr46 has Conditions: [{Available True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vr46-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Jan 26 01:53:59.680: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 53, 59, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 53, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 1, 53, 59, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 1, 53, 57, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9vr46-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Jan 26 01:53:59.682: INFO: Observed &Deployment event: ADDED
Jan 26 01:53:59.682: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vr46-688c4d6789"}
Jan 26 01:53:59.682: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.682: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vr46-688c4d6789"}
Jan 26 01:53:59.682: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 26 01:53:59.683: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.683: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 26 01:53:59.683: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vr46-688c4d6789" is progressing.}
Jan 26 01:53:59.683: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.683: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 26 01:53:59.683: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vr46-688c4d6789" has successfully progressed.}
Jan 26 01:53:59.683: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.684: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 26 01:53:59.684: INFO: Observed Deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vr46-688c4d6789" has successfully progressed.}
Jan 26 01:53:59.684: INFO: Found Deployment test-deployment-9vr46 in namespace deployment-4781 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 26 01:53:59.684: INFO: Deployment test-deployment-9vr46 has an updated status
STEP: patching the Statefulset Status
Jan 26 01:53:59.684: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 26 01:53:59.690: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Jan 26 01:53:59.692: INFO: Observed &Deployment event: ADDED
Jan 26 01:53:59.692: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vr46-688c4d6789"}
Jan 26 01:53:59.693: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.693: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vr46-688c4d6789"}
Jan 26 01:53:59.693: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 26 01:53:59.693: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.694: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 26 01:53:59.694: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:57 +0000 UTC 2023-01-26 01:53:57 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vr46-688c4d6789" is progressing.}
Jan 26 01:53:59.694: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.695: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 26 01:53:59.695: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vr46-688c4d6789" has successfully progressed.}
Jan 26 01:53:59.695: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.695: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:59 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 26 01:53:59.695: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-26 01:53:59 +0000 UTC 2023-01-26 01:53:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vr46-688c4d6789" has successfully progressed.}
Jan 26 01:53:59.695: INFO: Observed deployment test-deployment-9vr46 in namespace deployment-4781 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 26 01:53:59.695: INFO: Observed &Deployment event: MODIFIED
Jan 26 01:53:59.696: INFO: Found deployment test-deployment-9vr46 in namespace deployment-4781 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jan 26 01:53:59.696: INFO: Deployment test-deployment-9vr46 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 01:53:59.702: INFO: Deployment "test-deployment-9vr46":
&Deployment{ObjectMeta:{test-deployment-9vr46  deployment-4781  aa74eb46-ae39-4cfe-99f4-f0884281f380 23052 1 2023-01-26 01:53:57 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2023-01-26 01:53:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-26 01:53:59 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-01-26 01:53:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e0b798 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-9vr46-688c4d6789",LastUpdateTime:2023-01-26 01:53:59 +0000 UTC,LastTransitionTime:2023-01-26 01:53:59 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 26 01:53:59.707: INFO: New ReplicaSet "test-deployment-9vr46-688c4d6789" of Deployment "test-deployment-9vr46":
&ReplicaSet{ObjectMeta:{test-deployment-9vr46-688c4d6789  deployment-4781  1bbd2939-5832-467f-8c14-2373d74f5f45 23048 1 2023-01-26 01:53:57 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-9vr46 aa74eb46-ae39-4cfe-99f4-f0884281f380 0xc003ceebe0 0xc003ceebe1}] []  [{kube-controller-manager Update apps/v1 2023-01-26 01:53:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"aa74eb46-ae39-4cfe-99f4-f0884281f380\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 01:53:59 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ceec88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 26 01:53:59.710: INFO: Pod "test-deployment-9vr46-688c4d6789-w22tm" is available:
&Pod{ObjectMeta:{test-deployment-9vr46-688c4d6789-w22tm test-deployment-9vr46-688c4d6789- deployment-4781  bc650982-da44-4862-8692-8f6ee45da108 23047 0 2023-01-26 01:53:57 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-9vr46-688c4d6789 1bbd2939-5832-467f-8c14-2373d74f5f45 0xc003e0bb50 0xc003e0bb51}] []  [{kube-controller-manager Update v1 2023-01-26 01:53:57 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1bbd2939-5832-467f-8c14-2373d74f5f45\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 01:53:59 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.157\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mfnf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mfnf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:53:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:53:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:53:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 01:53:57 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.157,StartTime:2023-01-26 01:53:57 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 01:53:58 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://e437cd992308a74370ec5c938948a47492962a7d0ba6d2f2f6ab80f5bf50ef85,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.157,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 01:53:59.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4781" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":166,"skipped":3325,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:53:59.729: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-2514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 26 01:54:00.721: INFO: starting watch
STEP: patching
STEP: updating
Jan 26 01:54:00.756: INFO: waiting for watch events with expected annotations
Jan 26 01:54:00.756: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:54:00.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-2514" for this suite.
â€¢{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":167,"skipped":3403,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:54:00.883: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 01:54:01.035: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e" in namespace "downward-api-2985" to be "Succeeded or Failed"
Jan 26 01:54:01.042: INFO: Pod "downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.438898ms
Jan 26 01:54:03.052: INFO: Pod "downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01689396s
Jan 26 01:54:05.100: INFO: Pod "downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.064235187s
STEP: Saw pod success
Jan 26 01:54:05.100: INFO: Pod "downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e" satisfied condition "Succeeded or Failed"
Jan 26 01:54:05.104: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e container client-container: <nil>
STEP: delete the pod
Jan 26 01:54:05.153: INFO: Waiting for pod downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e to disappear
Jan 26 01:54:05.156: INFO: Pod downwardapi-volume-e5d439b2-4b58-492d-8568-107896b68e7e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 01:54:05.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2985" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":168,"skipped":3409,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:54:05.169: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Jan 26 01:54:05.352: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23146 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:05.352: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23146 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Jan 26 01:54:05.359: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23147 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:05.359: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23147 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Jan 26 01:54:05.368: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23148 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:05.368: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23148 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Jan 26 01:54:05.374: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23149 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:05.374: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1804  c263f47a-19ef-465d-8f86-b3cc0ab741a4 23149 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Jan 26 01:54:05.378: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1804  c1b794ae-d78b-419d-87e0-678ede61ff48 23150 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:05.378: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1804  c1b794ae-d78b-419d-87e0-678ede61ff48 23150 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Jan 26 01:54:15.391: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1804  c1b794ae-d78b-419d-87e0-678ede61ff48 23192 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 01:54:15.391: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1804  c1b794ae-d78b-419d-87e0-678ede61ff48 23192 0 2023-01-26 01:54:05 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-26 01:54:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 26 01:54:25.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1804" for this suite.

â€¢ [SLOW TEST:20.242 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":169,"skipped":3413,"failed":0}
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:54:25.412: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4399
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4399
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 26 01:54:25.589: INFO: Found 0 stateful pods, waiting for 3
Jan 26 01:54:35.601: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:54:35.601: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:54:35.601: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 26 01:54:35.636: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Jan 26 01:54:45.699: INFO: Updating stateful set ss2
Jan 26 01:54:45.706: INFO: Waiting for Pod statefulset-4399/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Jan 26 01:54:55.780: INFO: Found 1 stateful pods, waiting for 3
Jan 26 01:55:05.793: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:55:05.793: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 01:55:05.793: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Jan 26 01:55:05.825: INFO: Updating stateful set ss2
Jan 26 01:55:05.835: INFO: Waiting for Pod statefulset-4399/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Jan 26 01:55:15.873: INFO: Updating stateful set ss2
Jan 26 01:55:15.881: INFO: Waiting for StatefulSet statefulset-4399/ss2 to complete update
Jan 26 01:55:15.881: INFO: Waiting for Pod statefulset-4399/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 01:55:25.896: INFO: Deleting all statefulset in ns statefulset-4399
Jan 26 01:55:25.898: INFO: Scaling statefulset ss2 to 0
Jan 26 01:55:35.934: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 01:55:35.937: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 01:55:35.967: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4399" for this suite.

â€¢ [SLOW TEST:70.572 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":170,"skipped":3413,"failed":0}
SSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:35.985: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5605.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5605.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5605.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5605.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 01:55:38.170: INFO: DNS probes using dns-5605/dns-test-dec954f9-5371-4b72-a619-fd881d085995 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 01:55:38.188: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5605" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":171,"skipped":3421,"failed":0}
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:38.202: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-6172
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Jan 26 01:55:38.350: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Jan 26 01:55:38.360: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 26 01:55:38.360: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Jan 26 01:55:38.372: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 26 01:55:38.372: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Jan 26 01:55:38.384: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jan 26 01:55:38.384: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Jan 26 01:55:45.454: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Jan 26 01:55:45.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-6172" for this suite.

â€¢ [SLOW TEST:7.287 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":172,"skipped":3430,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:45.491: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3270
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-47bf6f69-2c60-4d08-8ba8-034c76cb7c53
STEP: Creating secret with name secret-projected-all-test-volume-0c93a7f6-e67b-4a45-bd8a-dcc659049c92
STEP: Creating a pod to test Check all projections for projected volume plugin
Jan 26 01:55:45.679: INFO: Waiting up to 5m0s for pod "projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205" in namespace "projected-3270" to be "Succeeded or Failed"
Jan 26 01:55:45.689: INFO: Pod "projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205": Phase="Pending", Reason="", readiness=false. Elapsed: 9.883055ms
Jan 26 01:55:47.700: INFO: Pod "projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021188831s
Jan 26 01:55:49.710: INFO: Pod "projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030584376s
STEP: Saw pod success
Jan 26 01:55:49.710: INFO: Pod "projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205" satisfied condition "Succeeded or Failed"
Jan 26 01:55:49.712: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205 container projected-all-volume-test: <nil>
STEP: delete the pod
Jan 26 01:55:49.759: INFO: Waiting for pod projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205 to disappear
Jan 26 01:55:49.762: INFO: Pod projected-volume-1a4416e1-1c1f-49ee-b2cd-91486e184205 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Jan 26 01:55:49.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3270" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":173,"skipped":3466,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:49.774: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-349cd2d9-6f6d-45ea-9276-b98e281578f5
STEP: Creating a pod to test consume secrets
Jan 26 01:55:49.940: INFO: Waiting up to 5m0s for pod "pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a" in namespace "secrets-6751" to be "Succeeded or Failed"
Jan 26 01:55:49.944: INFO: Pod "pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.171365ms
Jan 26 01:55:51.950: INFO: Pod "pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010869316s
Jan 26 01:55:53.957: INFO: Pod "pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017635979s
STEP: Saw pod success
Jan 26 01:55:53.957: INFO: Pod "pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a" satisfied condition "Succeeded or Failed"
Jan 26 01:55:53.960: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:55:53.982: INFO: Waiting for pod pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a to disappear
Jan 26 01:55:53.985: INFO: Pod pod-secrets-b6009a8f-5644-424d-b5fb-477cc3fe012a no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:55:53.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6751" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":174,"skipped":3489,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:54.005: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 26 01:55:54.166: INFO: Waiting up to 5m0s for pod "pod-eac75e77-5d74-4426-a0b2-06b326226721" in namespace "emptydir-1454" to be "Succeeded or Failed"
Jan 26 01:55:54.169: INFO: Pod "pod-eac75e77-5d74-4426-a0b2-06b326226721": Phase="Pending", Reason="", readiness=false. Elapsed: 3.299853ms
Jan 26 01:55:56.180: INFO: Pod "pod-eac75e77-5d74-4426-a0b2-06b326226721": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014381587s
Jan 26 01:55:58.191: INFO: Pod "pod-eac75e77-5d74-4426-a0b2-06b326226721": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025029032s
STEP: Saw pod success
Jan 26 01:55:58.191: INFO: Pod "pod-eac75e77-5d74-4426-a0b2-06b326226721" satisfied condition "Succeeded or Failed"
Jan 26 01:55:58.193: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-eac75e77-5d74-4426-a0b2-06b326226721 container test-container: <nil>
STEP: delete the pod
Jan 26 01:55:58.213: INFO: Waiting for pod pod-eac75e77-5d74-4426-a0b2-06b326226721 to disappear
Jan 26 01:55:58.216: INFO: Pod pod-eac75e77-5d74-4426-a0b2-06b326226721 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 01:55:58.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1454" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":175,"skipped":3500,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:55:58.229: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6484
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:55:58.758: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:56:01.784: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:56:01.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6484" for this suite.
STEP: Destroying namespace "webhook-6484-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":176,"skipped":3512,"failed":0}
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:01.971: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-4955
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 01:56:06.164: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-4955" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":177,"skipped":3514,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:06.182: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-537
STEP: creating replication controller nodeport-test in namespace services-537
I0126 01:56:06.353375      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-537, replica count: 2
I0126 01:56:09.403991      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 01:56:09.404: INFO: Creating new exec pod
Jan 26 01:56:12.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:12.659: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:12.659: INFO: stdout: ""
Jan 26 01:56:13.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:13.850: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:13.850: INFO: stdout: ""
Jan 26 01:56:14.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:14.853: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:14.853: INFO: stdout: ""
Jan 26 01:56:15.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:15.869: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:15.869: INFO: stdout: ""
Jan 26 01:56:16.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:16.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:16.867: INFO: stdout: ""
Jan 26 01:56:17.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:17.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:17.851: INFO: stdout: ""
Jan 26 01:56:18.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:18.882: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:18.882: INFO: stdout: ""
Jan 26 01:56:19.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:19.859: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:19.859: INFO: stdout: ""
Jan 26 01:56:20.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 26 01:56:20.853: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:20.853: INFO: stdout: "nodeport-test-7dflt"
Jan 26 01:56:20.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.45.149 80'
Jan 26 01:56:21.080: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.45.149 80\nConnection to 10.0.45.149 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:21.080: INFO: stdout: ""
Jan 26 01:56:22.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.45.149 80'
Jan 26 01:56:22.278: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.45.149 80\nConnection to 10.0.45.149 80 port [tcp/http] succeeded!\n"
Jan 26 01:56:22.278: INFO: stdout: ""
Jan 26 01:56:23.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.45.149 80'
Jan 26 01:56:23.275: INFO: stderr: "+ nc -v -t -w 2 10.0.45.149 80\nConnection to 10.0.45.149 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Jan 26 01:56:23.275: INFO: stdout: "nodeport-test-7dflt"
Jan 26 01:56:23.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 30541'
Jan 26 01:56:23.472: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.4 30541\nConnection to 10.240.0.4 30541 port [tcp/*] succeeded!\n"
Jan 26 01:56:23.472: INFO: stdout: ""
Jan 26 01:56:24.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.4 30541'
Jan 26 01:56:24.681: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.4 30541\nConnection to 10.240.0.4 30541 port [tcp/*] succeeded!\n"
Jan 26 01:56:24.681: INFO: stdout: "nodeport-test-65ghg"
Jan 26 01:56:24.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-537 exec execpodndhdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.6 30541'
Jan 26 01:56:24.855: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.6 30541\nConnection to 10.240.0.6 30541 port [tcp/*] succeeded!\n"
Jan 26 01:56:24.855: INFO: stdout: "nodeport-test-65ghg"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:56:24.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-537" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:18.691 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":178,"skipped":3536,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:24.874: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-0ef016ea-9c38-4c10-937e-d32683ead3b3
STEP: Creating a pod to test consume configMaps
Jan 26 01:56:25.031: INFO: Waiting up to 5m0s for pod "pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030" in namespace "configmap-6207" to be "Succeeded or Failed"
Jan 26 01:56:25.035: INFO: Pod "pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030": Phase="Pending", Reason="", readiness=false. Elapsed: 3.726859ms
Jan 26 01:56:27.046: INFO: Pod "pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015068536s
Jan 26 01:56:29.053: INFO: Pod "pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022354748s
STEP: Saw pod success
Jan 26 01:56:29.053: INFO: Pod "pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030" satisfied condition "Succeeded or Failed"
Jan 26 01:56:29.056: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:56:29.111: INFO: Waiting for pod pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030 to disappear
Jan 26 01:56:29.113: INFO: Pod pod-configmaps-8c06fbe4-c54e-4ca2-a629-a93d9105c030 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:56:29.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6207" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3579,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:29.128: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4996
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:56:29.277: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 26 01:56:29.292: INFO: The status of Pod pod-logs-websocket-bc07ca7e-567d-4045-8b32-3483e3934854 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:56:31.308: INFO: The status of Pod pod-logs-websocket-bc07ca7e-567d-4045-8b32-3483e3934854 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 01:56:31.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4996" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3584,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:31.372: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6401
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:56:32.495: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:56:35.523: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:56:35.530: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:56:38.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6401" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:7.571 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":181,"skipped":3589,"failed":0}
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:38.944: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6048
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 26 01:56:39.104: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 26 01:56:39.113: INFO: Waiting for terminating namespaces to be deleted...
Jan 26 01:56:39.116: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-0 before test
Jan 26 01:56:39.126: INFO: azure-ip-masq-agent-ndp84 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:56:39.126: INFO: cloud-node-manager-fp92n from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:56:39.126: INFO: kube-proxy-qm5rk from kube-system started at 2023-01-26 00:32:47 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:56:39.126: INFO: sonobuoy from sonobuoy started at 2023-01-26 01:08:31 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 26 01:56:39.126: INFO: sonobuoy-e2e-job-56b4e4a96bd64cd3 from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container e2e ready: true, restart count 0
Jan 26 01:56:39.126: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:56:39.126: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:56:39.126: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:56:39.126: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:56:39.126: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-1 before test
Jan 26 01:56:39.135: INFO: azure-ip-masq-agent-wthtk from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.135: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:56:39.135: INFO: cloud-node-manager-4rmf9 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.135: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:56:39.135: INFO: coredns-75bdb78f8b-9bkrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.135: INFO: 	Container coredns ready: true, restart count 0
Jan 26 01:56:39.135: INFO: kube-proxy-89dvc from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.135: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:56:39.135: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-n9kmj from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:56:39.135: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:56:39.135: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:56:39.135: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-2 before test
Jan 26 01:56:39.144: INFO: azure-ip-masq-agent-xxzsm from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:56:39.144: INFO: cloud-node-manager-j9w2p from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:56:39.144: INFO: coredns-autoscaler-84bb8dc9d5-lcvrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container autoscaler ready: true, restart count 0
Jan 26 01:56:39.144: INFO: kube-proxy-ksbr8 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:56:39.144: INFO: metrics-server-66dd6687d9-6pdpz from kube-system started at 2023-01-26 00:32:49 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container metrics-server ready: true, restart count 0
Jan 26 01:56:39.144: INFO: pod-logs-websocket-bc07ca7e-567d-4045-8b32-3483e3934854 from pods-4996 started at 2023-01-26 01:56:29 +0000 UTC (1 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container main ready: true, restart count 0
Jan 26 01:56:39.144: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-gsrzg from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:56:39.144: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:56:39.144: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-546a19fc-fc09-4467-8841-6f7676fb3ee6 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-546a19fc-fc09-4467-8841-6f7676fb3ee6 off the node k8s-linuxpool-34140226-1
STEP: verifying the node doesn't have the label kubernetes.io/e2e-546a19fc-fc09-4467-8841-6f7676fb3ee6
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 26 01:56:43.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6048" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":182,"skipped":3591,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:43.322: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:56:43.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8367" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":183,"skipped":3623,"failed":0}
SSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:56:43.507: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 01:57:43.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2658" for this suite.

â€¢ [SLOW TEST:60.175 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":184,"skipped":3630,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:57:43.685: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7253
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-1dfbb7fb-af77-48ec-819c-d57206d9748f
STEP: Creating a pod to test consume secrets
Jan 26 01:57:43.840: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb" in namespace "projected-7253" to be "Succeeded or Failed"
Jan 26 01:57:43.847: INFO: Pod "pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.582505ms
Jan 26 01:57:45.859: INFO: Pod "pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019365779s
Jan 26 01:57:47.870: INFO: Pod "pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030042918s
STEP: Saw pod success
Jan 26 01:57:47.870: INFO: Pod "pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb" satisfied condition "Succeeded or Failed"
Jan 26 01:57:47.873: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:57:47.894: INFO: Waiting for pod pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb to disappear
Jan 26 01:57:47.897: INFO: Pod pod-projected-secrets-7936e541-cedc-4629-a9b0-94c9902d93cb no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 01:57:47.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7253" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":185,"skipped":3637,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:57:47.909: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9036
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-9036
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9036 to expose endpoints map[]
Jan 26 01:57:48.084: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jan 26 01:57:49.093: INFO: successfully validated that service multi-endpoint-test in namespace services-9036 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-9036
Jan 26 01:57:49.105: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:57:51.117: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9036 to expose endpoints map[pod1:[100]]
Jan 26 01:57:51.129: INFO: successfully validated that service multi-endpoint-test in namespace services-9036 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-9036
Jan 26 01:57:51.141: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 01:57:53.149: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9036 to expose endpoints map[pod1:[100] pod2:[101]]
Jan 26 01:57:53.168: INFO: successfully validated that service multi-endpoint-test in namespace services-9036 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Jan 26 01:57:53.168: INFO: Creating new exec pod
Jan 26 01:57:56.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9036 exec execpodqc45h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Jan 26 01:57:56.408: INFO: stderr: "+ + echonc -v hostName\n -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jan 26 01:57:56.408: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:57:56.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9036 exec execpodqc45h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.94.179 80'
Jan 26 01:57:56.606: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.94.179 80\nConnection to 10.0.94.179 80 port [tcp/http] succeeded!\n"
Jan 26 01:57:56.606: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:57:56.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9036 exec execpodqc45h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Jan 26 01:57:56.800: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jan 26 01:57:56.801: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 01:57:56.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-9036 exec execpodqc45h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.94.179 81'
Jan 26 01:57:57.009: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.94.179 81\nConnection to 10.0.94.179 81 port [tcp/*] succeeded!\n"
Jan 26 01:57:57.009: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-9036
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9036 to expose endpoints map[pod2:[101]]
Jan 26 01:57:58.088: INFO: successfully validated that service multi-endpoint-test in namespace services-9036 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-9036
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9036 to expose endpoints map[]
Jan 26 01:57:59.120: INFO: successfully validated that service multi-endpoint-test in namespace services-9036 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:57:59.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9036" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.277 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":186,"skipped":3647,"failed":0}
SS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:57:59.186: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7409
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-7409
STEP: creating replication controller externalsvc in namespace services-7409
I0126 01:57:59.392953      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7409, replica count: 2
I0126 01:58:02.444743      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Jan 26 01:58:02.480: INFO: Creating new exec pod
Jan 26 01:58:04.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-7409 exec execpodk8qhq -- /bin/sh -x -c nslookup nodeport-service.services-7409.svc.cluster.local'
Jan 26 01:58:04.750: INFO: stderr: "+ nslookup nodeport-service.services-7409.svc.cluster.local\n"
Jan 26 01:58:04.750: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nnodeport-service.services-7409.svc.cluster.local\tcanonical name = externalsvc.services-7409.svc.cluster.local.\nName:\texternalsvc.services-7409.svc.cluster.local\nAddress: 10.0.167.5\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7409, will wait for the garbage collector to delete the pods
Jan 26 01:58:04.812: INFO: Deleting ReplicationController externalsvc took: 7.225615ms
Jan 26 01:58:04.913: INFO: Terminating ReplicationController externalsvc pods took: 101.042919ms
Jan 26 01:58:07.094: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:58:07.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7409" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:7.943 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":187,"skipped":3649,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:07.130: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8853
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:58:07.270: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:58:10.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8853" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":188,"skipped":3673,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:10.509: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-5687
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 01:58:10.668: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-efee62f4-e4e3-40e9-8d2d-bc82a71aca13" in namespace "security-context-test-5687" to be "Succeeded or Failed"
Jan 26 01:58:10.673: INFO: Pod "busybox-readonly-false-efee62f4-e4e3-40e9-8d2d-bc82a71aca13": Phase="Pending", Reason="", readiness=false. Elapsed: 4.542773ms
Jan 26 01:58:12.683: INFO: Pod "busybox-readonly-false-efee62f4-e4e3-40e9-8d2d-bc82a71aca13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014282688s
Jan 26 01:58:14.691: INFO: Pod "busybox-readonly-false-efee62f4-e4e3-40e9-8d2d-bc82a71aca13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022893191s
Jan 26 01:58:14.691: INFO: Pod "busybox-readonly-false-efee62f4-e4e3-40e9-8d2d-bc82a71aca13" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 01:58:14.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-5687" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":189,"skipped":3694,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:14.708: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2983
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 26 01:58:14.849: INFO: namespace kubectl-2983
Jan 26 01:58:14.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-2983 create -f -'
Jan 26 01:58:16.081: INFO: stderr: ""
Jan 26 01:58:16.081: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 26 01:58:17.089: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:58:17.089: INFO: Found 1 / 1
Jan 26 01:58:17.089: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 26 01:58:17.092: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 01:58:17.092: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 26 01:58:17.092: INFO: wait on agnhost-primary startup in kubectl-2983 
Jan 26 01:58:17.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-2983 logs agnhost-primary-zm5j4 agnhost-primary'
Jan 26 01:58:17.260: INFO: stderr: ""
Jan 26 01:58:17.260: INFO: stdout: "Paused\n"
STEP: exposing RC
Jan 26 01:58:17.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-2983 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jan 26 01:58:17.391: INFO: stderr: ""
Jan 26 01:58:17.391: INFO: stdout: "service/rm2 exposed\n"
Jan 26 01:58:17.399: INFO: Service rm2 in namespace kubectl-2983 found.
STEP: exposing service
Jan 26 01:58:19.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-2983 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jan 26 01:58:19.513: INFO: stderr: ""
Jan 26 01:58:19.513: INFO: stdout: "service/rm3 exposed\n"
Jan 26 01:58:19.520: INFO: Service rm3 in namespace kubectl-2983 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 01:58:21.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2983" for this suite.

â€¢ [SLOW TEST:6.839 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":190,"skipped":3704,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:21.547: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Jan 26 01:58:21.724: INFO: Found Service test-service-vv5rx in namespace services-4964 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jan 26 01:58:21.724: INFO: Service test-service-vv5rx created
STEP: Getting /status
Jan 26 01:58:21.729: INFO: Service test-service-vv5rx has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Jan 26 01:58:21.748: INFO: observed Service test-service-vv5rx in namespace services-4964 with annotations: map[] & LoadBalancer: {[]}
Jan 26 01:58:21.749: INFO: Found Service test-service-vv5rx in namespace services-4964 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jan 26 01:58:21.749: INFO: Service test-service-vv5rx has service status patched
STEP: updating the ServiceStatus
Jan 26 01:58:21.766: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Jan 26 01:58:21.769: INFO: Observed Service test-service-vv5rx in namespace services-4964 with annotations: map[] & Conditions: {[]}
Jan 26 01:58:21.769: INFO: Observed event: &Service{ObjectMeta:{test-service-vv5rx  services-4964  8ca636a8-ef8a-49fd-ac80-8b80db7b8ab4 25020 0 2023-01-26 01:58:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2023-01-26 01:58:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-01-26 01:58:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.0.108.53,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.0.108.53],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jan 26 01:58:21.770: INFO: Found Service test-service-vv5rx in namespace services-4964 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 26 01:58:21.770: INFO: Service test-service-vv5rx has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Jan 26 01:58:21.790: INFO: observed Service test-service-vv5rx in namespace services-4964 with labels: map[test-service-static:true]
Jan 26 01:58:21.790: INFO: observed Service test-service-vv5rx in namespace services-4964 with labels: map[test-service-static:true]
Jan 26 01:58:21.790: INFO: observed Service test-service-vv5rx in namespace services-4964 with labels: map[test-service-static:true]
Jan 26 01:58:21.790: INFO: Found Service test-service-vv5rx in namespace services-4964 with labels: map[test-service:patched test-service-static:true]
Jan 26 01:58:21.791: INFO: Service test-service-vv5rx patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Jan 26 01:58:21.816: INFO: Observed event: ADDED
Jan 26 01:58:21.816: INFO: Observed event: MODIFIED
Jan 26 01:58:21.816: INFO: Observed event: MODIFIED
Jan 26 01:58:21.816: INFO: Observed event: MODIFIED
Jan 26 01:58:21.816: INFO: Found Service test-service-vv5rx in namespace services-4964 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jan 26 01:58:21.816: INFO: Service test-service-vv5rx deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 01:58:21.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4964" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":191,"skipped":3708,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:21.893: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4666
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-32564ada-f20d-42d0-a090-cf640c5dc6b5
STEP: Creating a pod to test consume secrets
Jan 26 01:58:22.040: INFO: Waiting up to 5m0s for pod "pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95" in namespace "secrets-4666" to be "Succeeded or Failed"
Jan 26 01:58:22.043: INFO: Pod "pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95": Phase="Pending", Reason="", readiness=false. Elapsed: 3.798361ms
Jan 26 01:58:24.051: INFO: Pod "pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95": Phase="Running", Reason="", readiness=false. Elapsed: 2.011194779s
Jan 26 01:58:26.061: INFO: Pod "pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021366039s
STEP: Saw pod success
Jan 26 01:58:26.061: INFO: Pod "pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95" satisfied condition "Succeeded or Failed"
Jan 26 01:58:26.064: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95 container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 01:58:26.092: INFO: Waiting for pod pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95 to disappear
Jan 26 01:58:26.094: INFO: Pod pod-secrets-1c912e5f-18e4-4e42-b280-52a445d7cf95 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 01:58:26.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4666" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3725,"failed":0}
SSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:26.106: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9232
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-48ecd14d-cc52-4d81-a789-d777b1801010
STEP: Creating a pod to test consume configMaps
Jan 26 01:58:26.266: INFO: Waiting up to 5m0s for pod "pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d" in namespace "configmap-9232" to be "Succeeded or Failed"
Jan 26 01:58:26.269: INFO: Pod "pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.282852ms
Jan 26 01:58:28.274: INFO: Pod "pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007545817s
Jan 26 01:58:30.284: INFO: Pod "pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01787508s
STEP: Saw pod success
Jan 26 01:58:30.284: INFO: Pod "pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d" satisfied condition "Succeeded or Failed"
Jan 26 01:58:30.287: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d container configmap-volume-test: <nil>
STEP: delete the pod
Jan 26 01:58:30.308: INFO: Waiting for pod pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d to disappear
Jan 26 01:58:30.311: INFO: Pod pod-configmaps-ef5009e4-2307-431e-b982-66c12035b45d no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 01:58:30.311: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9232" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":193,"skipped":3729,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:30.324: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 01:58:31.038: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 01:58:34.133: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Jan 26 01:58:36.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=webhook-4867 attach --namespace=webhook-4867 to-be-attached-pod -i -c=container1'
Jan 26 01:58:36.295: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 01:58:36.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4867" for this suite.
STEP: Destroying namespace "webhook-4867-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.098 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":194,"skipped":3740,"failed":0}
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:36.421: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-2396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 26 01:58:36.599: INFO: Waiting up to 5m0s for pod "security-context-fe288821-02c1-42bd-af46-498af2f685cf" in namespace "security-context-2396" to be "Succeeded or Failed"
Jan 26 01:58:36.603: INFO: Pod "security-context-fe288821-02c1-42bd-af46-498af2f685cf": Phase="Pending", Reason="", readiness=false. Elapsed: 3.338756ms
Jan 26 01:58:38.608: INFO: Pod "security-context-fe288821-02c1-42bd-af46-498af2f685cf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008352573s
Jan 26 01:58:40.619: INFO: Pod "security-context-fe288821-02c1-42bd-af46-498af2f685cf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01987705s
STEP: Saw pod success
Jan 26 01:58:40.619: INFO: Pod "security-context-fe288821-02c1-42bd-af46-498af2f685cf" satisfied condition "Succeeded or Failed"
Jan 26 01:58:40.622: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod security-context-fe288821-02c1-42bd-af46-498af2f685cf container test-container: <nil>
STEP: delete the pod
Jan 26 01:58:40.644: INFO: Waiting for pod security-context-fe288821-02c1-42bd-af46-498af2f685cf to disappear
Jan 26 01:58:40.647: INFO: Pod security-context-fe288821-02c1-42bd-af46-498af2f685cf no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 01:58:40.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-2396" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":195,"skipped":3740,"failed":0}
SSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:40.659: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Jan 26 01:58:40.818: INFO: Waiting up to 5m0s for pod "client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48" in namespace "containers-392" to be "Succeeded or Failed"
Jan 26 01:58:40.826: INFO: Pod "client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48": Phase="Pending", Reason="", readiness=false. Elapsed: 7.917827ms
Jan 26 01:58:42.838: INFO: Pod "client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019849111s
Jan 26 01:58:44.848: INFO: Pod "client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029874363s
STEP: Saw pod success
Jan 26 01:58:44.848: INFO: Pod "client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48" satisfied condition "Succeeded or Failed"
Jan 26 01:58:44.851: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 01:58:44.907: INFO: Waiting for pod client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48 to disappear
Jan 26 01:58:44.914: INFO: Pod client-containers-b8406955-08d2-48be-a77e-c0d257ba1a48 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 26 01:58:44.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-392" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":196,"skipped":3744,"failed":0}
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 01:58:44.926: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 26 01:58:45.069: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 26 01:58:45.138: INFO: Waiting for terminating namespaces to be deleted...
Jan 26 01:58:45.142: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-0 before test
Jan 26 01:58:45.154: INFO: azure-ip-masq-agent-ndp84 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:58:45.154: INFO: cloud-node-manager-fp92n from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:58:45.154: INFO: kube-proxy-qm5rk from kube-system started at 2023-01-26 00:32:47 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:58:45.154: INFO: sonobuoy from sonobuoy started at 2023-01-26 01:08:31 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 26 01:58:45.154: INFO: sonobuoy-e2e-job-56b4e4a96bd64cd3 from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container e2e ready: true, restart count 0
Jan 26 01:58:45.154: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:58:45.154: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:58:45.154: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:58:45.155: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:58:45.155: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-1 before test
Jan 26 01:58:45.166: INFO: azure-ip-masq-agent-wthtk from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.166: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:58:45.166: INFO: cloud-node-manager-4rmf9 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.166: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:58:45.166: INFO: coredns-75bdb78f8b-9bkrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.166: INFO: 	Container coredns ready: true, restart count 0
Jan 26 01:58:45.166: INFO: kube-proxy-89dvc from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.166: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:58:45.166: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-n9kmj from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:58:45.166: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:58:45.166: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 01:58:45.166: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-2 before test
Jan 26 01:58:45.184: INFO: azure-ip-masq-agent-xxzsm from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 01:58:45.184: INFO: cloud-node-manager-j9w2p from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 01:58:45.184: INFO: coredns-autoscaler-84bb8dc9d5-lcvrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container autoscaler ready: true, restart count 0
Jan 26 01:58:45.184: INFO: kube-proxy-ksbr8 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 01:58:45.184: INFO: metrics-server-66dd6687d9-6pdpz from kube-system started at 2023-01-26 00:32:49 +0000 UTC (1 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container metrics-server ready: true, restart count 0
Jan 26 01:58:45.184: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-gsrzg from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 01:58:45.184: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 01:58:45.184: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-d2360762-5744-4769-9085-f956a29f1d06 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.240.0.4 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-d2360762-5744-4769-9085-f956a29f1d06 off the node k8s-linuxpool-34140226-1
STEP: verifying the node doesn't have the label kubernetes.io/e2e-d2360762-5744-4769-9085-f956a29f1d06
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:03:49.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7895" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

â€¢ [SLOW TEST:304.462 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":197,"skipped":3751,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:03:49.390: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-9631
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Jan 26 02:03:49.549: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:03:51.560: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Jan 26 02:03:51.579: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:03:53.587: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Jan 26 02:03:53.590: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:53.590: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:53.591: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:53.591: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 26 02:03:53.723: INFO: Exec stderr: ""
Jan 26 02:03:53.724: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:53.724: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:53.725: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:53.725: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 26 02:03:53.827: INFO: Exec stderr: ""
Jan 26 02:03:53.827: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:53.827: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:53.828: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:53.828: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 26 02:03:53.953: INFO: Exec stderr: ""
Jan 26 02:03:53.953: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:53.953: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:53.954: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:53.954: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 26 02:03:54.043: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Jan 26 02:03:54.043: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.043: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.044: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.044: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 26 02:03:54.156: INFO: Exec stderr: ""
Jan 26 02:03:54.157: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.157: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.158: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.158: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 26 02:03:54.288: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Jan 26 02:03:54.288: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.288: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.289: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.289: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 26 02:03:54.396: INFO: Exec stderr: ""
Jan 26 02:03:54.396: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.396: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.397: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.397: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 26 02:03:54.498: INFO: Exec stderr: ""
Jan 26 02:03:54.499: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.499: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.500: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.500: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 26 02:03:54.661: INFO: Exec stderr: ""
Jan 26 02:03:54.661: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9631 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:03:54.661: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:03:54.662: INFO: ExecWithOptions: Clientset creation
Jan 26 02:03:54.662: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9631/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 26 02:03:54.813: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Jan 26 02:03:54.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-9631" for this suite.

â€¢ [SLOW TEST:5.438 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":198,"skipped":3763,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:03:54.830: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7148
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:03:55.503: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:03:58.528: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:03:58.532: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7690-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:04:01.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7148" for this suite.
STEP: Destroying namespace "webhook-7148-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.047 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":199,"skipped":3811,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:01.877: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Jan 26 02:04:02.044: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-3994 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:04:02.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3994" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":200,"skipped":3814,"failed":0}
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:02.163: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 26 02:04:06.406: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 26 02:04:06.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7161" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":201,"skipped":3816,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:06.436: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-6f69a89b-56b0-480f-94ac-f8e5f844c950
STEP: Creating a pod to test consume secrets
Jan 26 02:04:06.589: INFO: Waiting up to 5m0s for pod "pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71" in namespace "secrets-1874" to be "Succeeded or Failed"
Jan 26 02:04:06.594: INFO: Pod "pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71": Phase="Pending", Reason="", readiness=false. Elapsed: 4.826579ms
Jan 26 02:04:08.599: INFO: Pod "pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010102631s
Jan 26 02:04:10.611: INFO: Pod "pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022432542s
STEP: Saw pod success
Jan 26 02:04:10.611: INFO: Pod "pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71" satisfied condition "Succeeded or Failed"
Jan 26 02:04:10.614: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71 container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:04:10.663: INFO: Waiting for pod pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71 to disappear
Jan 26 02:04:10.666: INFO: Pod pod-secrets-ea46f932-0cbf-4536-8189-3808e2d0dc71 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:04:10.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1874" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":202,"skipped":3828,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:10.679: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7191
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:04:11.411: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:04:14.438: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:04:26.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7191" for this suite.
STEP: Destroying namespace "webhook-7191-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:16.081 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":203,"skipped":3851,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:26.768: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-8417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:04:26.938: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: creating replication controller svc-latency-rc in namespace svc-latency-8417
I0126 02:04:26.944936      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8417, replica count: 1
I0126 02:04:27.996117      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 02:04:28.120: INFO: Created: latency-svc-c9pdt
Jan 26 02:04:28.132: INFO: Got endpoints: latency-svc-c9pdt [36.325795ms]
Jan 26 02:04:28.168: INFO: Created: latency-svc-ldm79
Jan 26 02:04:28.185: INFO: Created: latency-svc-c42sp
Jan 26 02:04:28.190: INFO: Got endpoints: latency-svc-ldm79 [56.906032ms]
Jan 26 02:04:28.204: INFO: Created: latency-svc-75rr8
Jan 26 02:04:28.205: INFO: Got endpoints: latency-svc-c42sp [70.22795ms]
Jan 26 02:04:28.221: INFO: Created: latency-svc-2zsw4
Jan 26 02:04:28.222: INFO: Got endpoints: latency-svc-75rr8 [86.865622ms]
Jan 26 02:04:28.294: INFO: Created: latency-svc-xghn9
Jan 26 02:04:28.294: INFO: Got endpoints: latency-svc-2zsw4 [160.284325ms]
Jan 26 02:04:28.304: INFO: Got endpoints: latency-svc-xghn9 [170.651995ms]
Jan 26 02:04:28.309: INFO: Created: latency-svc-gzdtr
Jan 26 02:04:28.320: INFO: Got endpoints: latency-svc-gzdtr [186.270451ms]
Jan 26 02:04:28.326: INFO: Created: latency-svc-c6knn
Jan 26 02:04:28.334: INFO: Got endpoints: latency-svc-c6knn [199.616269ms]
Jan 26 02:04:28.339: INFO: Created: latency-svc-vz6wg
Jan 26 02:04:28.351: INFO: Got endpoints: latency-svc-vz6wg [217.213358ms]
Jan 26 02:04:28.356: INFO: Created: latency-svc-rhxgt
Jan 26 02:04:28.373: INFO: Got endpoints: latency-svc-rhxgt [239.299019ms]
Jan 26 02:04:28.377: INFO: Created: latency-svc-qf4jp
Jan 26 02:04:28.390: INFO: Got endpoints: latency-svc-qf4jp [255.569085ms]
Jan 26 02:04:28.394: INFO: Created: latency-svc-klkqg
Jan 26 02:04:28.402: INFO: Got endpoints: latency-svc-klkqg [268.259094ms]
Jan 26 02:04:28.408: INFO: Created: latency-svc-8wc7p
Jan 26 02:04:28.418: INFO: Got endpoints: latency-svc-8wc7p [283.842949ms]
Jan 26 02:04:28.427: INFO: Created: latency-svc-6qksl
Jan 26 02:04:28.438: INFO: Got endpoints: latency-svc-6qksl [303.500271ms]
Jan 26 02:04:28.443: INFO: Created: latency-svc-kfw2j
Jan 26 02:04:28.453: INFO: Got endpoints: latency-svc-kfw2j [318.497816ms]
Jan 26 02:04:28.467: INFO: Created: latency-svc-d7xg4
Jan 26 02:04:28.480: INFO: Got endpoints: latency-svc-d7xg4 [344.655645ms]
Jan 26 02:04:28.487: INFO: Created: latency-svc-grjnx
Jan 26 02:04:28.554: INFO: Got endpoints: latency-svc-grjnx [364.064662ms]
Jan 26 02:04:28.558: INFO: Created: latency-svc-m8ggp
Jan 26 02:04:28.571: INFO: Created: latency-svc-blvzq
Jan 26 02:04:28.573: INFO: Got endpoints: latency-svc-m8ggp [367.682522ms]
Jan 26 02:04:28.586: INFO: Got endpoints: latency-svc-blvzq [363.505554ms]
Jan 26 02:04:28.593: INFO: Created: latency-svc-jnmtq
Jan 26 02:04:28.603: INFO: Got endpoints: latency-svc-jnmtq [308.014644ms]
Jan 26 02:04:28.607: INFO: Created: latency-svc-dnscr
Jan 26 02:04:28.615: INFO: Got endpoints: latency-svc-dnscr [311.129695ms]
Jan 26 02:04:28.616: INFO: Created: latency-svc-dxl7d
Jan 26 02:04:28.627: INFO: Got endpoints: latency-svc-dxl7d [306.735824ms]
Jan 26 02:04:28.630: INFO: Created: latency-svc-467dr
Jan 26 02:04:28.643: INFO: Got endpoints: latency-svc-467dr [309.101962ms]
Jan 26 02:04:28.651: INFO: Created: latency-svc-pq2jw
Jan 26 02:04:28.672: INFO: Created: latency-svc-wqglj
Jan 26 02:04:28.673: INFO: Got endpoints: latency-svc-pq2jw [321.699969ms]
Jan 26 02:04:28.680: INFO: Got endpoints: latency-svc-wqglj [306.53952ms]
Jan 26 02:04:28.692: INFO: Created: latency-svc-v57x6
Jan 26 02:04:28.700: INFO: Got endpoints: latency-svc-v57x6 [310.772389ms]
Jan 26 02:04:28.872: INFO: Created: latency-svc-wj6zx
Jan 26 02:04:28.878: INFO: Created: latency-svc-7h67h
Jan 26 02:04:28.878: INFO: Created: latency-svc-q68z2
Jan 26 02:04:28.880: INFO: Created: latency-svc-cbsxv
Jan 26 02:04:28.880: INFO: Created: latency-svc-wz8p8
Jan 26 02:04:28.880: INFO: Created: latency-svc-5fb7h
Jan 26 02:04:28.880: INFO: Created: latency-svc-8h2xv
Jan 26 02:04:28.881: INFO: Created: latency-svc-p74lc
Jan 26 02:04:28.881: INFO: Created: latency-svc-w82k2
Jan 26 02:04:28.881: INFO: Created: latency-svc-62l5j
Jan 26 02:04:28.893: INFO: Got endpoints: latency-svc-wj6zx [220.087805ms]
Jan 26 02:04:28.895: INFO: Created: latency-svc-rjxss
Jan 26 02:04:28.895: INFO: Created: latency-svc-m9mqk
Jan 26 02:04:28.895: INFO: Created: latency-svc-64rd9
Jan 26 02:04:28.895: INFO: Created: latency-svc-wxxcd
Jan 26 02:04:28.895: INFO: Created: latency-svc-pnrgv
Jan 26 02:04:28.910: INFO: Got endpoints: latency-svc-7h67h [430.053243ms]
Jan 26 02:04:28.910: INFO: Got endpoints: latency-svc-q68z2 [294.597225ms]
Jan 26 02:04:28.920: INFO: Got endpoints: latency-svc-8h2xv [334.702582ms]
Jan 26 02:04:28.924: INFO: Got endpoints: latency-svc-5fb7h [505.272375ms]
Jan 26 02:04:28.937: INFO: Got endpoints: latency-svc-cbsxv [293.186402ms]
Jan 26 02:04:28.937: INFO: Got endpoints: latency-svc-w82k2 [310.648088ms]
Jan 26 02:04:28.938: INFO: Got endpoints: latency-svc-p74lc [334.904885ms]
Jan 26 02:04:28.956: INFO: Created: latency-svc-2l68n
Jan 26 02:04:28.963: INFO: Got endpoints: latency-svc-62l5j [524.695394ms]
Jan 26 02:04:28.963: INFO: Got endpoints: latency-svc-wz8p8 [408.894796ms]
Jan 26 02:04:28.964: INFO: Got endpoints: latency-svc-m9mqk [510.595263ms]
Jan 26 02:04:28.965: INFO: Got endpoints: latency-svc-pnrgv [264.145026ms]
Jan 26 02:04:28.965: INFO: Got endpoints: latency-svc-rjxss [284.441058ms]
Jan 26 02:04:28.976: INFO: Created: latency-svc-v7wzg
Jan 26 02:04:28.976: INFO: Got endpoints: latency-svc-wxxcd [574.215804ms]
Jan 26 02:04:28.986: INFO: Got endpoints: latency-svc-2l68n [92.888122ms]
Jan 26 02:04:28.986: INFO: Got endpoints: latency-svc-v7wzg [76.452152ms]
Jan 26 02:04:28.986: INFO: Got endpoints: latency-svc-64rd9 [413.523273ms]
Jan 26 02:04:29.136: INFO: Created: latency-svc-n4jwj
Jan 26 02:04:29.137: INFO: Created: latency-svc-nx8fl
Jan 26 02:04:29.137: INFO: Created: latency-svc-wwcrl
Jan 26 02:04:29.137: INFO: Created: latency-svc-p4p7j
Jan 26 02:04:29.138: INFO: Created: latency-svc-p2f27
Jan 26 02:04:29.138: INFO: Created: latency-svc-j9lw6
Jan 26 02:04:29.138: INFO: Got endpoints: latency-svc-j9lw6 [200.120177ms]
Jan 26 02:04:29.138: INFO: Created: latency-svc-chmkf
Jan 26 02:04:29.139: INFO: Created: latency-svc-5t9bx
Jan 26 02:04:29.139: INFO: Created: latency-svc-7vxx2
Jan 26 02:04:29.139: INFO: Created: latency-svc-jdlt8
Jan 26 02:04:29.139: INFO: Created: latency-svc-kmzn5
Jan 26 02:04:29.136: INFO: Created: latency-svc-zq8n7
Jan 26 02:04:29.140: INFO: Created: latency-svc-s77xj
Jan 26 02:04:29.138: INFO: Created: latency-svc-rcpbh
Jan 26 02:04:29.140: INFO: Created: latency-svc-f5cdn
Jan 26 02:04:29.150: INFO: Got endpoints: latency-svc-p4p7j [186.262551ms]
Jan 26 02:04:29.168: INFO: Created: latency-svc-sck49
Jan 26 02:04:29.178: INFO: Got endpoints: latency-svc-zq8n7 [191.218232ms]
Jan 26 02:04:29.203: INFO: Created: latency-svc-9dcfz
Jan 26 02:04:29.211: INFO: Got endpoints: latency-svc-kmzn5 [290.401556ms]
Jan 26 02:04:29.221: INFO: Got endpoints: latency-svc-nx8fl [256.540601ms]
Jan 26 02:04:29.222: INFO: Got endpoints: latency-svc-chmkf [256.775006ms]
Jan 26 02:04:29.222: INFO: Got endpoints: latency-svc-s77xj [312.00431ms]
Jan 26 02:04:29.222: INFO: Got endpoints: latency-svc-f5cdn [298.297585ms]
Jan 26 02:04:29.238: INFO: Got endpoints: latency-svc-5t9bx [274.350093ms]
Jan 26 02:04:29.245: INFO: Created: latency-svc-pv4fw
Jan 26 02:04:29.263: INFO: Created: latency-svc-gbtdk
Jan 26 02:04:29.274: INFO: Created: latency-svc-9q6sn
Jan 26 02:04:29.281: INFO: Got endpoints: latency-svc-jdlt8 [344.019734ms]
Jan 26 02:04:29.286: INFO: Created: latency-svc-shcp4
Jan 26 02:04:29.295: INFO: Created: latency-svc-vjmlt
Jan 26 02:04:29.304: INFO: Created: latency-svc-x94w2
Jan 26 02:04:29.312: INFO: Created: latency-svc-g8vjd
Jan 26 02:04:29.322: INFO: Created: latency-svc-57drl
Jan 26 02:04:29.329: INFO: Got endpoints: latency-svc-wwcrl [342.919116ms]
Jan 26 02:04:29.341: INFO: Created: latency-svc-vndw8
Jan 26 02:04:29.378: INFO: Got endpoints: latency-svc-p2f27 [414.960396ms]
Jan 26 02:04:29.390: INFO: Created: latency-svc-f6qpz
Jan 26 02:04:29.426: INFO: Got endpoints: latency-svc-7vxx2 [488.228896ms]
Jan 26 02:04:29.445: INFO: Created: latency-svc-d977x
Jan 26 02:04:29.475: INFO: Got endpoints: latency-svc-rcpbh [498.866971ms]
Jan 26 02:04:29.487: INFO: Created: latency-svc-9nx4v
Jan 26 02:04:29.528: INFO: Got endpoints: latency-svc-n4jwj [541.402267ms]
Jan 26 02:04:29.541: INFO: Created: latency-svc-zkm22
Jan 26 02:04:29.578: INFO: Got endpoints: latency-svc-sck49 [439.741902ms]
Jan 26 02:04:29.589: INFO: Created: latency-svc-mv7n7
Jan 26 02:04:29.630: INFO: Got endpoints: latency-svc-9dcfz [480.780674ms]
Jan 26 02:04:29.654: INFO: Created: latency-svc-w8kw5
Jan 26 02:04:29.686: INFO: Got endpoints: latency-svc-pv4fw [508.257624ms]
Jan 26 02:04:29.709: INFO: Created: latency-svc-bmwd5
Jan 26 02:04:29.727: INFO: Got endpoints: latency-svc-gbtdk [516.740463ms]
Jan 26 02:04:29.741: INFO: Created: latency-svc-pskbs
Jan 26 02:04:29.778: INFO: Got endpoints: latency-svc-9q6sn [556.433513ms]
Jan 26 02:04:29.791: INFO: Created: latency-svc-vwcl5
Jan 26 02:04:29.830: INFO: Got endpoints: latency-svc-shcp4 [607.992658ms]
Jan 26 02:04:29.852: INFO: Created: latency-svc-jw2mc
Jan 26 02:04:29.878: INFO: Got endpoints: latency-svc-vjmlt [657.134962ms]
Jan 26 02:04:29.917: INFO: Created: latency-svc-q4gmh
Jan 26 02:04:29.930: INFO: Got endpoints: latency-svc-x94w2 [707.166881ms]
Jan 26 02:04:29.944: INFO: Created: latency-svc-jn9d2
Jan 26 02:04:29.979: INFO: Got endpoints: latency-svc-g8vjd [741.323641ms]
Jan 26 02:04:29.993: INFO: Created: latency-svc-mqwdj
Jan 26 02:04:30.029: INFO: Got endpoints: latency-svc-57drl [747.412841ms]
Jan 26 02:04:30.040: INFO: Created: latency-svc-47dlk
Jan 26 02:04:30.081: INFO: Got endpoints: latency-svc-vndw8 [752.019616ms]
Jan 26 02:04:30.101: INFO: Created: latency-svc-kph4m
Jan 26 02:04:30.129: INFO: Got endpoints: latency-svc-f6qpz [750.922798ms]
Jan 26 02:04:30.153: INFO: Created: latency-svc-gkv8s
Jan 26 02:04:30.180: INFO: Got endpoints: latency-svc-d977x [754.963165ms]
Jan 26 02:04:30.195: INFO: Created: latency-svc-n9lqr
Jan 26 02:04:30.230: INFO: Got endpoints: latency-svc-9nx4v [754.986065ms]
Jan 26 02:04:30.251: INFO: Created: latency-svc-m9nrd
Jan 26 02:04:30.281: INFO: Got endpoints: latency-svc-zkm22 [753.095834ms]
Jan 26 02:04:30.330: INFO: Got endpoints: latency-svc-mv7n7 [752.645627ms]
Jan 26 02:04:30.344: INFO: Created: latency-svc-tcfkl
Jan 26 02:04:30.357: INFO: Created: latency-svc-frc7n
Jan 26 02:04:30.375: INFO: Got endpoints: latency-svc-w8kw5 [745.095203ms]
Jan 26 02:04:30.387: INFO: Created: latency-svc-gk6f6
Jan 26 02:04:30.427: INFO: Got endpoints: latency-svc-bmwd5 [741.28424ms]
Jan 26 02:04:30.441: INFO: Created: latency-svc-wwvz4
Jan 26 02:04:30.483: INFO: Got endpoints: latency-svc-pskbs [755.051066ms]
Jan 26 02:04:30.493: INFO: Created: latency-svc-kc95v
Jan 26 02:04:30.529: INFO: Got endpoints: latency-svc-vwcl5 [750.308688ms]
Jan 26 02:04:30.546: INFO: Created: latency-svc-kr7lw
Jan 26 02:04:30.577: INFO: Got endpoints: latency-svc-jw2mc [746.227922ms]
Jan 26 02:04:30.594: INFO: Created: latency-svc-496lb
Jan 26 02:04:30.627: INFO: Got endpoints: latency-svc-q4gmh [748.120053ms]
Jan 26 02:04:30.641: INFO: Created: latency-svc-s7f7z
Jan 26 02:04:30.683: INFO: Got endpoints: latency-svc-jn9d2 [752.972732ms]
Jan 26 02:04:30.700: INFO: Created: latency-svc-mm6rl
Jan 26 02:04:30.729: INFO: Got endpoints: latency-svc-mqwdj [749.697479ms]
Jan 26 02:04:30.745: INFO: Created: latency-svc-7lzz2
Jan 26 02:04:30.782: INFO: Got endpoints: latency-svc-47dlk [753.334038ms]
Jan 26 02:04:30.797: INFO: Created: latency-svc-xxwx6
Jan 26 02:04:30.828: INFO: Got endpoints: latency-svc-kph4m [746.845031ms]
Jan 26 02:04:30.846: INFO: Created: latency-svc-qnzfx
Jan 26 02:04:30.880: INFO: Got endpoints: latency-svc-gkv8s [750.925198ms]
Jan 26 02:04:30.891: INFO: Created: latency-svc-8kz9r
Jan 26 02:04:30.926: INFO: Got endpoints: latency-svc-n9lqr [745.731413ms]
Jan 26 02:04:30.940: INFO: Created: latency-svc-vgvzx
Jan 26 02:04:30.976: INFO: Got endpoints: latency-svc-m9nrd [745.39541ms]
Jan 26 02:04:30.987: INFO: Created: latency-svc-24wvv
Jan 26 02:04:31.029: INFO: Got endpoints: latency-svc-tcfkl [748.27976ms]
Jan 26 02:04:31.042: INFO: Created: latency-svc-ht5f5
Jan 26 02:04:31.082: INFO: Got endpoints: latency-svc-frc7n [751.17161ms]
Jan 26 02:04:31.095: INFO: Created: latency-svc-ptc8f
Jan 26 02:04:31.128: INFO: Got endpoints: latency-svc-gk6f6 [752.17363ms]
Jan 26 02:04:31.145: INFO: Created: latency-svc-wpg6s
Jan 26 02:04:31.177: INFO: Got endpoints: latency-svc-wwvz4 [749.847694ms]
Jan 26 02:04:31.188: INFO: Created: latency-svc-ghrm5
Jan 26 02:04:31.227: INFO: Got endpoints: latency-svc-kc95v [744.912316ms]
Jan 26 02:04:31.242: INFO: Created: latency-svc-jfrmq
Jan 26 02:04:31.278: INFO: Got endpoints: latency-svc-kr7lw [749.744298ms]
Jan 26 02:04:31.291: INFO: Created: latency-svc-4698x
Jan 26 02:04:31.331: INFO: Got endpoints: latency-svc-496lb [754.790884ms]
Jan 26 02:04:31.342: INFO: Created: latency-svc-w5cql
Jan 26 02:04:31.375: INFO: Got endpoints: latency-svc-s7f7z [748.647585ms]
Jan 26 02:04:31.387: INFO: Created: latency-svc-rv9l9
Jan 26 02:04:31.426: INFO: Got endpoints: latency-svc-mm6rl [743.525604ms]
Jan 26 02:04:31.443: INFO: Created: latency-svc-s4nvh
Jan 26 02:04:31.477: INFO: Got endpoints: latency-svc-7lzz2 [747.37387ms]
Jan 26 02:04:31.490: INFO: Created: latency-svc-g9tj8
Jan 26 02:04:31.529: INFO: Got endpoints: latency-svc-xxwx6 [747.245371ms]
Jan 26 02:04:31.541: INFO: Created: latency-svc-j7n2x
Jan 26 02:04:31.579: INFO: Got endpoints: latency-svc-qnzfx [750.629529ms]
Jan 26 02:04:31.591: INFO: Created: latency-svc-wgx4z
Jan 26 02:04:31.634: INFO: Got endpoints: latency-svc-8kz9r [754.589897ms]
Jan 26 02:04:31.674: INFO: Created: latency-svc-dz49s
Jan 26 02:04:31.680: INFO: Got endpoints: latency-svc-vgvzx [753.607383ms]
Jan 26 02:04:31.704: INFO: Created: latency-svc-77c4d
Jan 26 02:04:31.737: INFO: Got endpoints: latency-svc-24wvv [761.104508ms]
Jan 26 02:04:31.765: INFO: Created: latency-svc-mfj57
Jan 26 02:04:31.796: INFO: Got endpoints: latency-svc-ht5f5 [767.170207ms]
Jan 26 02:04:31.832: INFO: Got endpoints: latency-svc-ptc8f [750.903239ms]
Jan 26 02:04:31.839: INFO: Created: latency-svc-p2l96
Jan 26 02:04:31.859: INFO: Created: latency-svc-g8rwj
Jan 26 02:04:31.882: INFO: Got endpoints: latency-svc-wpg6s [754.407397ms]
Jan 26 02:04:31.902: INFO: Created: latency-svc-r7xbr
Jan 26 02:04:31.930: INFO: Got endpoints: latency-svc-ghrm5 [752.595168ms]
Jan 26 02:04:31.959: INFO: Created: latency-svc-2nctl
Jan 26 02:04:31.980: INFO: Got endpoints: latency-svc-jfrmq [752.488566ms]
Jan 26 02:04:32.001: INFO: Created: latency-svc-fc8p5
Jan 26 02:04:32.030: INFO: Got endpoints: latency-svc-4698x [751.266546ms]
Jan 26 02:04:32.048: INFO: Created: latency-svc-zr6xr
Jan 26 02:04:32.079: INFO: Got endpoints: latency-svc-w5cql [748.035993ms]
Jan 26 02:04:32.093: INFO: Created: latency-svc-dhlqk
Jan 26 02:04:32.131: INFO: Got endpoints: latency-svc-rv9l9 [755.442215ms]
Jan 26 02:04:32.159: INFO: Created: latency-svc-pvplg
Jan 26 02:04:32.180: INFO: Got endpoints: latency-svc-s4nvh [754.168293ms]
Jan 26 02:04:32.206: INFO: Created: latency-svc-b42q5
Jan 26 02:04:32.230: INFO: Got endpoints: latency-svc-g9tj8 [753.809687ms]
Jan 26 02:04:32.249: INFO: Created: latency-svc-lnwzd
Jan 26 02:04:32.414: INFO: Got endpoints: latency-svc-j7n2x [884.132629ms]
Jan 26 02:04:32.414: INFO: Got endpoints: latency-svc-wgx4z [835.448629ms]
Jan 26 02:04:32.425: INFO: Got endpoints: latency-svc-dz49s [790.329288ms]
Jan 26 02:04:32.436: INFO: Got endpoints: latency-svc-77c4d [756.269528ms]
Jan 26 02:04:32.441: INFO: Created: latency-svc-ng4nq
Jan 26 02:04:32.449: INFO: Created: latency-svc-6d7ld
Jan 26 02:04:32.464: INFO: Created: latency-svc-bwkpg
Jan 26 02:04:32.480: INFO: Created: latency-svc-pssx7
Jan 26 02:04:32.485: INFO: Got endpoints: latency-svc-mfj57 [748.520201ms]
Jan 26 02:04:32.503: INFO: Created: latency-svc-xrcs8
Jan 26 02:04:32.536: INFO: Got endpoints: latency-svc-p2l96 [739.34915ms]
Jan 26 02:04:32.561: INFO: Created: latency-svc-vh9nz
Jan 26 02:04:32.586: INFO: Got endpoints: latency-svc-g8rwj [753.805888ms]
Jan 26 02:04:32.600: INFO: Created: latency-svc-bnmh2
Jan 26 02:04:32.627: INFO: Got endpoints: latency-svc-r7xbr [744.82414ms]
Jan 26 02:04:32.644: INFO: Created: latency-svc-l4zl5
Jan 26 02:04:32.678: INFO: Got endpoints: latency-svc-2nctl [747.535585ms]
Jan 26 02:04:32.698: INFO: Created: latency-svc-k6762
Jan 26 02:04:32.731: INFO: Got endpoints: latency-svc-fc8p5 [751.114944ms]
Jan 26 02:04:32.751: INFO: Created: latency-svc-4grw4
Jan 26 02:04:32.779: INFO: Got endpoints: latency-svc-zr6xr [749.347315ms]
Jan 26 02:04:32.791: INFO: Created: latency-svc-x2zlv
Jan 26 02:04:32.833: INFO: Got endpoints: latency-svc-dhlqk [753.729086ms]
Jan 26 02:04:32.857: INFO: Created: latency-svc-fp5nb
Jan 26 02:04:32.879: INFO: Got endpoints: latency-svc-pvplg [747.808888ms]
Jan 26 02:04:32.892: INFO: Created: latency-svc-vwrrm
Jan 26 02:04:32.929: INFO: Got endpoints: latency-svc-b42q5 [748.277496ms]
Jan 26 02:04:32.940: INFO: Created: latency-svc-h8wk7
Jan 26 02:04:32.979: INFO: Got endpoints: latency-svc-lnwzd [748.983108ms]
Jan 26 02:04:32.994: INFO: Created: latency-svc-6r5jc
Jan 26 02:04:33.026: INFO: Got endpoints: latency-svc-ng4nq [612.715768ms]
Jan 26 02:04:33.039: INFO: Created: latency-svc-xdk6k
Jan 26 02:04:33.075: INFO: Got endpoints: latency-svc-6d7ld [660.768859ms]
Jan 26 02:04:33.094: INFO: Created: latency-svc-8k6n5
Jan 26 02:04:33.130: INFO: Got endpoints: latency-svc-bwkpg [705.632796ms]
Jan 26 02:04:33.142: INFO: Created: latency-svc-6lh94
Jan 26 02:04:33.198: INFO: Got endpoints: latency-svc-pssx7 [761.87742ms]
Jan 26 02:04:33.237: INFO: Got endpoints: latency-svc-xrcs8 [751.179744ms]
Jan 26 02:04:33.246: INFO: Created: latency-svc-xwgcq
Jan 26 02:04:33.264: INFO: Created: latency-svc-wzx4r
Jan 26 02:04:33.277: INFO: Got endpoints: latency-svc-vh9nz [741.596987ms]
Jan 26 02:04:33.292: INFO: Created: latency-svc-dnlg7
Jan 26 02:04:33.330: INFO: Got endpoints: latency-svc-bnmh2 [743.954725ms]
Jan 26 02:04:33.343: INFO: Created: latency-svc-6f5vj
Jan 26 02:04:33.381: INFO: Got endpoints: latency-svc-l4zl5 [754.213994ms]
Jan 26 02:04:33.394: INFO: Created: latency-svc-v6vd5
Jan 26 02:04:33.430: INFO: Got endpoints: latency-svc-k6762 [751.874355ms]
Jan 26 02:04:33.444: INFO: Created: latency-svc-9gvmc
Jan 26 02:04:33.478: INFO: Got endpoints: latency-svc-4grw4 [746.200162ms]
Jan 26 02:04:33.495: INFO: Created: latency-svc-hnsm9
Jan 26 02:04:33.530: INFO: Got endpoints: latency-svc-x2zlv [750.394532ms]
Jan 26 02:04:33.546: INFO: Created: latency-svc-ztgsw
Jan 26 02:04:33.578: INFO: Got endpoints: latency-svc-fp5nb [744.638337ms]
Jan 26 02:04:33.590: INFO: Created: latency-svc-2cln8
Jan 26 02:04:33.635: INFO: Got endpoints: latency-svc-vwrrm [755.862621ms]
Jan 26 02:04:33.652: INFO: Created: latency-svc-7tf5f
Jan 26 02:04:33.682: INFO: Got endpoints: latency-svc-h8wk7 [753.717586ms]
Jan 26 02:04:33.701: INFO: Created: latency-svc-8ldgs
Jan 26 02:04:33.729: INFO: Got endpoints: latency-svc-6r5jc [749.246013ms]
Jan 26 02:04:33.763: INFO: Created: latency-svc-r57kb
Jan 26 02:04:33.787: INFO: Got endpoints: latency-svc-xdk6k [761.056106ms]
Jan 26 02:04:33.798: INFO: Created: latency-svc-88vbl
Jan 26 02:04:33.827: INFO: Got endpoints: latency-svc-8k6n5 [751.931557ms]
Jan 26 02:04:33.840: INFO: Created: latency-svc-qcw7g
Jan 26 02:04:33.878: INFO: Got endpoints: latency-svc-6lh94 [747.443683ms]
Jan 26 02:04:33.898: INFO: Created: latency-svc-pvb7w
Jan 26 02:04:33.928: INFO: Got endpoints: latency-svc-xwgcq [729.160183ms]
Jan 26 02:04:33.948: INFO: Created: latency-svc-4q4fm
Jan 26 02:04:33.977: INFO: Got endpoints: latency-svc-wzx4r [739.873559ms]
Jan 26 02:04:33.990: INFO: Created: latency-svc-pqwxs
Jan 26 02:04:34.037: INFO: Got endpoints: latency-svc-dnlg7 [759.569182ms]
Jan 26 02:04:34.049: INFO: Created: latency-svc-5rvwh
Jan 26 02:04:34.111: INFO: Got endpoints: latency-svc-6f5vj [781.107036ms]
Jan 26 02:04:34.127: INFO: Created: latency-svc-rbjn6
Jan 26 02:04:34.130: INFO: Got endpoints: latency-svc-v6vd5 [748.531001ms]
Jan 26 02:04:34.141: INFO: Created: latency-svc-f2sm4
Jan 26 02:04:34.178: INFO: Got endpoints: latency-svc-9gvmc [747.906791ms]
Jan 26 02:04:34.195: INFO: Created: latency-svc-7ghzq
Jan 26 02:04:34.227: INFO: Got endpoints: latency-svc-hnsm9 [748.915907ms]
Jan 26 02:04:34.237: INFO: Created: latency-svc-9vh9r
Jan 26 02:04:34.281: INFO: Got endpoints: latency-svc-ztgsw [750.951941ms]
Jan 26 02:04:34.295: INFO: Created: latency-svc-dt52l
Jan 26 02:04:34.328: INFO: Got endpoints: latency-svc-2cln8 [750.32653ms]
Jan 26 02:04:34.341: INFO: Created: latency-svc-jmkqd
Jan 26 02:04:34.376: INFO: Got endpoints: latency-svc-7tf5f [741.328282ms]
Jan 26 02:04:34.389: INFO: Created: latency-svc-vpk7v
Jan 26 02:04:34.430: INFO: Got endpoints: latency-svc-8ldgs [746.841273ms]
Jan 26 02:04:34.444: INFO: Created: latency-svc-lskhg
Jan 26 02:04:34.477: INFO: Got endpoints: latency-svc-r57kb [747.748988ms]
Jan 26 02:04:34.488: INFO: Created: latency-svc-cjsg5
Jan 26 02:04:34.527: INFO: Got endpoints: latency-svc-88vbl [739.186047ms]
Jan 26 02:04:34.545: INFO: Created: latency-svc-jjmhz
Jan 26 02:04:34.581: INFO: Got endpoints: latency-svc-qcw7g [753.139077ms]
Jan 26 02:04:34.593: INFO: Created: latency-svc-mq7jf
Jan 26 02:04:34.627: INFO: Got endpoints: latency-svc-pvb7w [749.217412ms]
Jan 26 02:04:34.645: INFO: Created: latency-svc-tb8gf
Jan 26 02:04:34.681: INFO: Got endpoints: latency-svc-4q4fm [753.302979ms]
Jan 26 02:04:34.702: INFO: Created: latency-svc-6vjxd
Jan 26 02:04:34.737: INFO: Got endpoints: latency-svc-pqwxs [760.445197ms]
Jan 26 02:04:34.761: INFO: Created: latency-svc-d8znh
Jan 26 02:04:34.789: INFO: Got endpoints: latency-svc-5rvwh [751.995658ms]
Jan 26 02:04:34.804: INFO: Created: latency-svc-44rs4
Jan 26 02:04:34.834: INFO: Got endpoints: latency-svc-rbjn6 [722.274369ms]
Jan 26 02:04:34.849: INFO: Created: latency-svc-2gd5d
Jan 26 02:04:34.879: INFO: Got endpoints: latency-svc-f2sm4 [748.894706ms]
Jan 26 02:04:34.891: INFO: Created: latency-svc-pw4gk
Jan 26 02:04:34.929: INFO: Got endpoints: latency-svc-7ghzq [751.733554ms]
Jan 26 02:04:34.953: INFO: Created: latency-svc-74zmd
Jan 26 02:04:34.978: INFO: Got endpoints: latency-svc-9vh9r [751.891756ms]
Jan 26 02:04:34.991: INFO: Created: latency-svc-psfqd
Jan 26 02:04:35.028: INFO: Got endpoints: latency-svc-dt52l [747.368282ms]
Jan 26 02:04:35.090: INFO: Got endpoints: latency-svc-jmkqd [761.928621ms]
Jan 26 02:04:35.096: INFO: Created: latency-svc-8hw84
Jan 26 02:04:35.105: INFO: Created: latency-svc-f92ss
Jan 26 02:04:35.130: INFO: Got endpoints: latency-svc-vpk7v [753.803787ms]
Jan 26 02:04:35.141: INFO: Created: latency-svc-tk9fs
Jan 26 02:04:35.179: INFO: Got endpoints: latency-svc-lskhg [748.835206ms]
Jan 26 02:04:35.249: INFO: Got endpoints: latency-svc-cjsg5 [772.015987ms]
Jan 26 02:04:35.251: INFO: Created: latency-svc-zwr9c
Jan 26 02:04:35.263: INFO: Created: latency-svc-sfqbk
Jan 26 02:04:35.275: INFO: Got endpoints: latency-svc-jjmhz [748.514601ms]
Jan 26 02:04:35.289: INFO: Created: latency-svc-mtcwh
Jan 26 02:04:35.327: INFO: Got endpoints: latency-svc-mq7jf [746.516468ms]
Jan 26 02:04:35.344: INFO: Created: latency-svc-dkp4k
Jan 26 02:04:35.380: INFO: Got endpoints: latency-svc-tb8gf [752.390365ms]
Jan 26 02:04:35.394: INFO: Created: latency-svc-ppjqw
Jan 26 02:04:35.432: INFO: Got endpoints: latency-svc-6vjxd [750.997441ms]
Jan 26 02:04:35.444: INFO: Created: latency-svc-slwmx
Jan 26 02:04:35.478: INFO: Got endpoints: latency-svc-d8znh [740.312965ms]
Jan 26 02:04:35.489: INFO: Created: latency-svc-crs47
Jan 26 02:04:35.526: INFO: Got endpoints: latency-svc-44rs4 [736.604404ms]
Jan 26 02:04:35.541: INFO: Created: latency-svc-pcdwl
Jan 26 02:04:35.606: INFO: Got endpoints: latency-svc-2gd5d [771.979186ms]
Jan 26 02:04:35.618: INFO: Created: latency-svc-r6tjh
Jan 26 02:04:35.633: INFO: Got endpoints: latency-svc-pw4gk [754.041991ms]
Jan 26 02:04:35.646: INFO: Created: latency-svc-kwb2d
Jan 26 02:04:35.692: INFO: Got endpoints: latency-svc-74zmd [762.323628ms]
Jan 26 02:04:35.717: INFO: Created: latency-svc-dlkdg
Jan 26 02:04:35.730: INFO: Got endpoints: latency-svc-psfqd [751.679653ms]
Jan 26 02:04:35.747: INFO: Created: latency-svc-mprcb
Jan 26 02:04:35.783: INFO: Got endpoints: latency-svc-8hw84 [754.746103ms]
Jan 26 02:04:35.802: INFO: Created: latency-svc-2z288
Jan 26 02:04:35.867: INFO: Got endpoints: latency-svc-f92ss [776.43656ms]
Jan 26 02:04:35.881: INFO: Got endpoints: latency-svc-tk9fs [750.526334ms]
Jan 26 02:04:35.887: INFO: Created: latency-svc-js9wb
Jan 26 02:04:35.899: INFO: Created: latency-svc-ckrq4
Jan 26 02:04:35.932: INFO: Got endpoints: latency-svc-zwr9c [753.792388ms]
Jan 26 02:04:35.951: INFO: Created: latency-svc-h9vl7
Jan 26 02:04:36.032: INFO: Got endpoints: latency-svc-sfqbk [783.376874ms]
Jan 26 02:04:36.033: INFO: Got endpoints: latency-svc-mtcwh [757.882455ms]
Jan 26 02:04:36.077: INFO: Got endpoints: latency-svc-dkp4k [750.358931ms]
Jan 26 02:04:36.128: INFO: Got endpoints: latency-svc-ppjqw [747.915991ms]
Jan 26 02:04:36.180: INFO: Got endpoints: latency-svc-slwmx [747.458883ms]
Jan 26 02:04:36.227: INFO: Got endpoints: latency-svc-crs47 [748.806505ms]
Jan 26 02:04:36.278: INFO: Got endpoints: latency-svc-pcdwl [751.924457ms]
Jan 26 02:04:36.326: INFO: Got endpoints: latency-svc-r6tjh [720.391938ms]
Jan 26 02:04:36.382: INFO: Got endpoints: latency-svc-kwb2d [748.928007ms]
Jan 26 02:04:36.428: INFO: Got endpoints: latency-svc-dlkdg [736.150298ms]
Jan 26 02:04:36.480: INFO: Got endpoints: latency-svc-mprcb [749.243412ms]
Jan 26 02:04:36.526: INFO: Got endpoints: latency-svc-2z288 [742.696705ms]
Jan 26 02:04:36.579: INFO: Got endpoints: latency-svc-js9wb [711.841997ms]
Jan 26 02:04:36.627: INFO: Got endpoints: latency-svc-ckrq4 [746.390466ms]
Jan 26 02:04:36.685: INFO: Got endpoints: latency-svc-h9vl7 [752.13876ms]
Jan 26 02:04:36.685: INFO: Latencies: [56.906032ms 70.22795ms 76.452152ms 86.865622ms 92.888122ms 160.284325ms 170.651995ms 186.262551ms 186.270451ms 191.218232ms 199.616269ms 200.120177ms 217.213358ms 220.087805ms 239.299019ms 255.569085ms 256.540601ms 256.775006ms 264.145026ms 268.259094ms 274.350093ms 283.842949ms 284.441058ms 290.401556ms 293.186402ms 294.597225ms 298.297585ms 303.500271ms 306.53952ms 306.735824ms 308.014644ms 309.101962ms 310.648088ms 310.772389ms 311.129695ms 312.00431ms 318.497816ms 321.699969ms 334.702582ms 334.904885ms 342.919116ms 344.019734ms 344.655645ms 363.505554ms 364.064662ms 367.682522ms 408.894796ms 413.523273ms 414.960396ms 430.053243ms 439.741902ms 480.780674ms 488.228896ms 498.866971ms 505.272375ms 508.257624ms 510.595263ms 516.740463ms 524.695394ms 541.402267ms 556.433513ms 574.215804ms 607.992658ms 612.715768ms 657.134962ms 660.768859ms 705.632796ms 707.166881ms 711.841997ms 720.391938ms 722.274369ms 729.160183ms 736.150298ms 736.604404ms 739.186047ms 739.34915ms 739.873559ms 740.312965ms 741.28424ms 741.323641ms 741.328282ms 741.596987ms 742.696705ms 743.525604ms 743.954725ms 744.638337ms 744.82414ms 744.912316ms 745.095203ms 745.39541ms 745.731413ms 746.200162ms 746.227922ms 746.390466ms 746.516468ms 746.841273ms 746.845031ms 747.245371ms 747.368282ms 747.37387ms 747.412841ms 747.443683ms 747.458883ms 747.535585ms 747.748988ms 747.808888ms 747.906791ms 747.915991ms 748.035993ms 748.120053ms 748.277496ms 748.27976ms 748.514601ms 748.520201ms 748.531001ms 748.647585ms 748.806505ms 748.835206ms 748.894706ms 748.915907ms 748.928007ms 748.983108ms 749.217412ms 749.243412ms 749.246013ms 749.347315ms 749.697479ms 749.744298ms 749.847694ms 750.308688ms 750.32653ms 750.358931ms 750.394532ms 750.526334ms 750.629529ms 750.903239ms 750.922798ms 750.925198ms 750.951941ms 750.997441ms 751.114944ms 751.17161ms 751.179744ms 751.266546ms 751.679653ms 751.733554ms 751.874355ms 751.891756ms 751.924457ms 751.931557ms 751.995658ms 752.019616ms 752.13876ms 752.17363ms 752.390365ms 752.488566ms 752.595168ms 752.645627ms 752.972732ms 753.095834ms 753.139077ms 753.302979ms 753.334038ms 753.607383ms 753.717586ms 753.729086ms 753.792388ms 753.803787ms 753.805888ms 753.809687ms 754.041991ms 754.168293ms 754.213994ms 754.407397ms 754.589897ms 754.746103ms 754.790884ms 754.963165ms 754.986065ms 755.051066ms 755.442215ms 755.862621ms 756.269528ms 757.882455ms 759.569182ms 760.445197ms 761.056106ms 761.104508ms 761.87742ms 761.928621ms 762.323628ms 767.170207ms 771.979186ms 772.015987ms 776.43656ms 781.107036ms 783.376874ms 790.329288ms 835.448629ms 884.132629ms]
Jan 26 02:04:36.685: INFO: 50 %ile: 747.412841ms
Jan 26 02:04:36.685: INFO: 90 %ile: 755.442215ms
Jan 26 02:04:36.685: INFO: 99 %ile: 835.448629ms
Jan 26 02:04:36.685: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Jan 26 02:04:36.685: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-8417" for this suite.

â€¢ [SLOW TEST:9.945 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":204,"skipped":3859,"failed":0}
SSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:36.715: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 26 02:04:36.899: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 26 02:04:36.909: INFO: starting watch
STEP: patching
STEP: updating
Jan 26 02:04:36.931: INFO: waiting for watch events with expected annotations
Jan 26 02:04:36.931: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 26 02:04:36.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1962" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":205,"skipped":3862,"failed":0}
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:37.026: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 26 02:04:37.158: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 02:04:41.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1514" for this suite.
â€¢{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":206,"skipped":3870,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:04:41.562: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8760
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Jan 26 02:05:02.025: INFO: EndpointSlice for Service endpointslice-8760/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 26 02:05:12.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8760" for this suite.

â€¢ [SLOW TEST:30.513 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":207,"skipped":3881,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:12.078: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:05:12.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 create -f -'
Jan 26 02:05:13.228: INFO: stderr: ""
Jan 26 02:05:13.228: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jan 26 02:05:13.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 create -f -'
Jan 26 02:05:14.216: INFO: stderr: ""
Jan 26 02:05:14.216: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 26 02:05:15.225: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 02:05:15.225: INFO: Found 1 / 1
Jan 26 02:05:15.225: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 26 02:05:15.228: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 26 02:05:15.228: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 26 02:05:15.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 describe pod agnhost-primary-rz5z4'
Jan 26 02:05:15.349: INFO: stderr: ""
Jan 26 02:05:15.349: INFO: stdout: "Name:         agnhost-primary-rz5z4\nNamespace:    kubectl-1693\nPriority:     0\nNode:         k8s-linuxpool-34140226-1/10.240.0.4\nStart Time:   Thu, 26 Jan 2023 02:05:13 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           10.244.1.187\nIPs:\n  IP:           10.244.1.187\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://95b071cbd78506513dca02431ac44de63808e3ac0bab67150e8faa724042fb63\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 26 Jan 2023 02:05:13 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dtjxq (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-dtjxq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1693/agnhost-primary-rz5z4 to k8s-linuxpool-34140226-1\n  Normal  Pulled     2s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
Jan 26 02:05:15.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 describe rc agnhost-primary'
Jan 26 02:05:15.456: INFO: stderr: ""
Jan 26 02:05:15.456: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1693\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-rz5z4\n"
Jan 26 02:05:15.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 describe service agnhost-primary'
Jan 26 02:05:15.547: INFO: stderr: ""
Jan 26 02:05:15.547: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1693\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.0.31.9\nIPs:               10.0.31.9\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.187:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jan 26 02:05:15.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 describe node k8s-linuxpool-34140226-0'
Jan 26 02:05:15.672: INFO: stderr: ""
Jan 26 02:05:15.672: INFO: stdout: "Name:               k8s-linuxpool-34140226-0\nRoles:              agent\nLabels:             agentpool=linuxpool\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=Standard_D2_v2\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=redmond\n                    failure-domain.beta.kubernetes.io/zone=1\n                    kubernetes.azure.com/cluster=test124conformance2\n                    kubernetes.azure.com/role=agent\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-linuxpool-34140226-0\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=agent\n                    node-role.kubernetes.io/agent=\n                    node.kubernetes.io/instance-type=Standard_D2_v2\n                    storageprofile=managed\n                    storagetier=Standard_LRS\n                    topology.kubernetes.io/region=redmond\n                    topology.kubernetes.io/zone=1\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 26 Jan 2023 00:31:49 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-linuxpool-34140226-0\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 26 Jan 2023 02:05:08 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 26 Jan 2023 00:32:53 +0000   Thu, 26 Jan 2023 00:32:53 +0000   RouteCreated                 RouteController created a route\n  MemoryPressure       False   Thu, 26 Jan 2023 02:04:36 +0000   Thu, 26 Jan 2023 00:31:49 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 26 Jan 2023 02:04:36 +0000   Thu, 26 Jan 2023 00:31:49 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 26 Jan 2023 02:04:36 +0000   Thu, 26 Jan 2023 00:31:49 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 26 Jan 2023 02:04:36 +0000   Thu, 26 Jan 2023 00:31:52 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.240.0.6\n  Hostname:    k8s-linuxpool-34140226-0\nCapacity:\n  cpu:                2\n  ephemeral-storage:  30298176Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7076232Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  27922798956\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             6308232Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 f9d4923f1cc244869672b0da88e97ccd\n  System UUID:                1a809dd8-5a42-3c44-9030-ae9ff030bb49\n  Boot ID:                    fd07f396-40ef-4e40-b180-f7badcf1f580\n  Kernel Version:             5.15.0-1030-azure\n  OS Image:                   Ubuntu 20.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.13+azure-2\n  Kubelet Version:            v1.24.9\n  Kube-Proxy Version:         v1.24.9\nPodCIDR:                      10.244.5.0/24\nPodCIDRs:                     10.244.5.0/24\nProviderID:                   azure:///subscriptions/27bf94d3-bae0-4f37-a059-1455ab4a955b/resourceGroups/test124conformance2/providers/Microsoft.Compute/virtualMachines/k8s-linuxpool-34140226-0\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 azure-ip-masq-agent-ndp84                                  50m (2%)      50m (2%)    50Mi (0%)        250Mi (4%)     92m\n  kube-system                 cloud-node-manager-fp92n                                   50m (2%)      2 (100%)    50Mi (0%)        512Mi (8%)     92m\n  kube-system                 kube-proxy-qm5rk                                           100m (5%)     0 (0%)      0 (0%)           0 (0%)         92m\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\n  sonobuoy                    sonobuoy-e2e-job-56b4e4a96bd64cd3                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s    0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                200m (10%)  2050m (102%)\n  memory             100Mi (1%)  762Mi (12%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
Jan 26 02:05:15.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-1693 describe namespace kubectl-1693'
Jan 26 02:05:15.767: INFO: stderr: ""
Jan 26 02:05:15.767: INFO: stdout: "Name:         kubectl-1693\nLabels:       e2e-framework=kubectl\n              e2e-run=1c6a89cb-38f4-4815-8e69-ef42f7e6a192\n              kubernetes.io/metadata.name=kubectl-1693\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:05:15.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1693" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":208,"skipped":3913,"failed":0}
SSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:15.783: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-3212
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3212.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3212.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3212.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3212.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 02:05:17.968: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.972: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.975: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.979: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.982: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.985: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.988: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.991: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3212.svc.cluster.local from pod dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3: the server could not find the requested resource (get pods dns-test-be05290f-8735-432c-a55f-501258f737b3)
Jan 26 02:05:17.991: INFO: Lookups using dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3212.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3212.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3212.svc.cluster.local jessie_udp@dns-test-service-2.dns-3212.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3212.svc.cluster.local]

Jan 26 02:05:23.020: INFO: DNS probes using dns-3212/dns-test-be05290f-8735-432c-a55f-501258f737b3 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 02:05:23.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3212" for this suite.

â€¢ [SLOW TEST:7.327 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":209,"skipped":3916,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:23.114: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9350
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:05:23.281: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0" in namespace "projected-9350" to be "Succeeded or Failed"
Jan 26 02:05:23.295: INFO: Pod "downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0": Phase="Pending", Reason="", readiness=false. Elapsed: 13.090215ms
Jan 26 02:05:25.304: INFO: Pod "downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022147529s
Jan 26 02:05:27.314: INFO: Pod "downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032542473s
STEP: Saw pod success
Jan 26 02:05:27.314: INFO: Pod "downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0" satisfied condition "Succeeded or Failed"
Jan 26 02:05:27.317: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0 container client-container: <nil>
STEP: delete the pod
Jan 26 02:05:27.339: INFO: Waiting for pod downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0 to disappear
Jan 26 02:05:27.342: INFO: Pod downwardapi-volume-b7831677-2661-4536-94c9-8eecf22d61b0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 02:05:27.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9350" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":3932,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:27.360: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6416
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-24817cd5-c6a3-4ace-b039-dd70175ab2b4
STEP: Creating a pod to test consume configMaps
Jan 26 02:05:27.503: INFO: Waiting up to 5m0s for pod "pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad" in namespace "configmap-6416" to be "Succeeded or Failed"
Jan 26 02:05:27.508: INFO: Pod "pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad": Phase="Pending", Reason="", readiness=false. Elapsed: 4.038866ms
Jan 26 02:05:29.516: INFO: Pod "pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012968923s
Jan 26 02:05:31.527: INFO: Pod "pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02307s
STEP: Saw pod success
Jan 26 02:05:31.527: INFO: Pod "pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad" satisfied condition "Succeeded or Failed"
Jan 26 02:05:31.529: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad container agnhost-container: <nil>
STEP: delete the pod
Jan 26 02:05:31.550: INFO: Waiting for pod pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad to disappear
Jan 26 02:05:31.553: INFO: Pod pod-configmaps-6052aaa4-0068-4ee7-aa20-ab25aba9bcad no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:05:31.553: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6416" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":211,"skipped":3946,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:31.564: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8302
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-00bf1dfc-6fa5-414e-96b3-bcabb48474e9
STEP: Creating a pod to test consume secrets
Jan 26 02:05:31.748: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735" in namespace "projected-8302" to be "Succeeded or Failed"
Jan 26 02:05:31.752: INFO: Pod "pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735": Phase="Pending", Reason="", readiness=false. Elapsed: 3.979065ms
Jan 26 02:05:33.758: INFO: Pod "pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010070976s
Jan 26 02:05:35.767: INFO: Pod "pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019089828s
STEP: Saw pod success
Jan 26 02:05:35.767: INFO: Pod "pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735" satisfied condition "Succeeded or Failed"
Jan 26 02:05:35.770: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:05:35.796: INFO: Waiting for pod pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735 to disappear
Jan 26 02:05:35.799: INFO: Pod pod-projected-secrets-a6e51d95-3251-415d-8671-d92e66a8b735 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 02:05:35.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8302" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":212,"skipped":3960,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:05:35.811: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3854
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Jan 26 02:05:42.000: INFO: 80 pods remaining
Jan 26 02:05:42.000: INFO: 80 pods has nil DeletionTimestamp
Jan 26 02:05:42.000: INFO: 
Jan 26 02:05:43.010: INFO: 70 pods remaining
Jan 26 02:05:43.013: INFO: 70 pods has nil DeletionTimestamp
Jan 26 02:05:43.014: INFO: 
Jan 26 02:05:44.001: INFO: 60 pods remaining
Jan 26 02:05:44.002: INFO: 60 pods has nil DeletionTimestamp
Jan 26 02:05:44.002: INFO: 
Jan 26 02:05:45.012: INFO: 40 pods remaining
Jan 26 02:05:45.012: INFO: 40 pods has nil DeletionTimestamp
Jan 26 02:05:45.012: INFO: 
Jan 26 02:05:46.040: INFO: 31 pods remaining
Jan 26 02:05:46.040: INFO: 30 pods has nil DeletionTimestamp
Jan 26 02:05:46.040: INFO: 
Jan 26 02:05:46.999: INFO: 20 pods remaining
Jan 26 02:05:46.999: INFO: 20 pods has nil DeletionTimestamp
Jan 26 02:05:46.999: INFO: 
STEP: Gathering metrics
Jan 26 02:05:48.057: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 02:06:48.248: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 02:06:48.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3854" for this suite.

â€¢ [SLOW TEST:72.454 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":213,"skipped":3980,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:06:48.265: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:06:48.439: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Jan 26 02:06:50.504: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 26 02:06:50.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-472" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":214,"skipped":3984,"failed":0}
SSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:06:50.524: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6554
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-7c6cf8c4-e4bb-4495-b278-c2d3b7ba19a2
STEP: Creating a pod to test consume configMaps
Jan 26 02:06:50.679: INFO: Waiting up to 5m0s for pod "pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24" in namespace "configmap-6554" to be "Succeeded or Failed"
Jan 26 02:06:50.684: INFO: Pod "pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24": Phase="Pending", Reason="", readiness=false. Elapsed: 4.322871ms
Jan 26 02:06:52.695: INFO: Pod "pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015454051s
Jan 26 02:06:54.705: INFO: Pod "pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025127707s
STEP: Saw pod success
Jan 26 02:06:54.705: INFO: Pod "pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24" satisfied condition "Succeeded or Failed"
Jan 26 02:06:54.708: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 02:06:54.734: INFO: Waiting for pod pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24 to disappear
Jan 26 02:06:54.737: INFO: Pod pod-configmaps-95bf0edb-d3b0-4bbc-b024-2061b1653c24 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:06:54.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6554" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":215,"skipped":3989,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:06:54.755: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-1556
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:06:54.911: INFO: Creating pod...
Jan 26 02:06:56.945: INFO: Creating service...
Jan 26 02:06:56.959: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/DELETE
Jan 26 02:06:56.971: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 26 02:06:56.971: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/GET
Jan 26 02:06:56.977: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 26 02:06:56.977: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/HEAD
Jan 26 02:06:56.981: INFO: http.Client request:HEAD | StatusCode:200
Jan 26 02:06:56.981: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/OPTIONS
Jan 26 02:06:56.985: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 26 02:06:56.985: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/PATCH
Jan 26 02:06:56.989: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 26 02:06:56.990: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/POST
Jan 26 02:06:56.994: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 26 02:06:56.995: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/pods/agnhost/proxy/some/path/with/PUT
Jan 26 02:06:56.999: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 26 02:06:57.000: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/DELETE
Jan 26 02:06:57.008: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 26 02:06:57.008: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/GET
Jan 26 02:06:57.015: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 26 02:06:57.015: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/HEAD
Jan 26 02:06:57.021: INFO: http.Client request:HEAD | StatusCode:200
Jan 26 02:06:57.022: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/OPTIONS
Jan 26 02:06:57.032: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 26 02:06:57.032: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/PATCH
Jan 26 02:06:57.040: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 26 02:06:57.040: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/POST
Jan 26 02:06:57.047: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 26 02:06:57.047: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-1556/services/test-service/proxy/some/path/with/PUT
Jan 26 02:06:57.055: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 26 02:06:57.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-1556" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":216,"skipped":4006,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:06:57.076: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9272
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Jan 26 02:06:58.360: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 02:07:58.554: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 02:07:58.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9272" for this suite.

â€¢ [SLOW TEST:61.497 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":217,"skipped":4023,"failed":0}
S
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:07:58.574: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7080
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 in namespace container-probe-7080
Jan 26 02:08:00.824: INFO: Started pod liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 in namespace container-probe-7080
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 02:08:00.827: INFO: Initial restart count of pod liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is 0
Jan 26 02:08:20.929: INFO: Restart count of pod container-probe-7080/liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is now 1 (20.102105257s elapsed)
Jan 26 02:08:41.032: INFO: Restart count of pod container-probe-7080/liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is now 2 (40.204879132s elapsed)
Jan 26 02:09:01.141: INFO: Restart count of pod container-probe-7080/liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is now 3 (1m0.314366863s elapsed)
Jan 26 02:09:21.260: INFO: Restart count of pod container-probe-7080/liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is now 4 (1m20.432552121s elapsed)
Jan 26 02:10:29.584: INFO: Restart count of pod container-probe-7080/liveness-5d7822a6-2ce4-4461-8a21-ffdc9a9c52e1 is now 5 (2m28.757083052s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 02:10:29.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7080" for this suite.

â€¢ [SLOW TEST:151.037 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":218,"skipped":4024,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:10:29.618: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-2676
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Jan 26 02:10:29.805: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 02:11:29.872: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:11:29.875: INFO: Starting informer...
STEP: Starting pods...
Jan 26 02:11:30.098: INFO: Pod1 is running on k8s-linuxpool-34140226-1. Tainting Node
Jan 26 02:11:32.341: INFO: Pod2 is running on k8s-linuxpool-34140226-1. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Jan 26 02:11:37.795: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jan 26 02:11:57.818: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:11:57.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-2676" for this suite.

â€¢ [SLOW TEST:88.269 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":219,"skipped":4088,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:11:57.888: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 02:12:14.188: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3461" for this suite.

â€¢ [SLOW TEST:16.331 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":220,"skipped":4089,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:12:14.219: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-1950
Jan 26 02:12:14.378: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:12:16.388: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 26 02:12:16.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 26 02:12:16.616: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jan 26 02:12:16.616: INFO: stdout: "iptables"
Jan 26 02:12:16.616: INFO: proxyMode: iptables
Jan 26 02:12:16.630: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 26 02:12:16.634: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-1950
STEP: creating replication controller affinity-clusterip-timeout in namespace services-1950
I0126 02:12:16.660791      20 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-1950, replica count: 3
I0126 02:12:19.711539      20 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 02:12:19.720: INFO: Creating new exec pod
Jan 26 02:12:22.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec execpod-affinitymcvfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Jan 26 02:12:22.940: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-timeout 80\n+ echo hostName\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Jan 26 02:12:22.940: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:12:22.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec execpod-affinitymcvfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.122.123 80'
Jan 26 02:12:23.132: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.122.123 80\nConnection to 10.0.122.123 80 port [tcp/http] succeeded!\n"
Jan 26 02:12:23.132: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:12:23.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec execpod-affinitymcvfz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.122.123:80/ ; done'
Jan 26 02:12:23.447: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n"
Jan 26 02:12:23.447: INFO: stdout: "\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr\naffinity-clusterip-timeout-2fnqr"
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Received response from host: affinity-clusterip-timeout-2fnqr
Jan 26 02:12:23.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec execpod-affinitymcvfz -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.122.123:80/'
Jan 26 02:12:23.642: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n"
Jan 26 02:12:23.642: INFO: stdout: "affinity-clusterip-timeout-2fnqr"
Jan 26 02:12:43.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-1950 exec execpod-affinitymcvfz -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.122.123:80/'
Jan 26 02:12:43.848: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.122.123:80/\n"
Jan 26 02:12:43.848: INFO: stdout: "affinity-clusterip-timeout-fq6zz"
Jan 26 02:12:43.848: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-1950, will wait for the garbage collector to delete the pods
Jan 26 02:12:43.929: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 7.737921ms
Jan 26 02:12:44.030: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 101.001583ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 02:12:46.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1950" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:31.973 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":221,"skipped":4097,"failed":0}
S
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:12:46.192: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-89
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:12:46.373: INFO: The status of Pod pod-secrets-54f11e37-0948-49b1-ae3c-d81bfce704a7 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:12:48.378: INFO: The status of Pod pod-secrets-54f11e37-0948-49b1-ae3c-d81bfce704a7 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 26 02:12:48.409: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-89" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":222,"skipped":4098,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:12:48.421: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5852
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-f20af242-a89f-44b4-8f01-aac871deb322
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:12:48.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5852" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":223,"skipped":4142,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:12:48.582: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3859
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-3859
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3859
Jan 26 02:12:48.737: INFO: Found 0 stateful pods, waiting for 1
Jan 26 02:12:58.743: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Jan 26 02:12:58.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 02:12:58.977: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 02:12:58.977: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 02:12:58.977: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 02:12:58.981: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 26 02:13:08.989: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 02:13:08.989: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 02:13:09.013: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999998s
Jan 26 02:13:10.021: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.98714266s
Jan 26 02:13:11.029: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.979156297s
Jan 26 02:13:12.036: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.971992458s
Jan 26 02:13:13.044: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.964766235s
Jan 26 02:13:14.051: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.956406494s
Jan 26 02:13:15.058: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.949803081s
Jan 26 02:13:16.067: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.94147104s
Jan 26 02:13:17.075: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.933275702s
Jan 26 02:13:18.083: INFO: Verifying statefulset ss doesn't scale past 1 for another 926.12218ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3859
Jan 26 02:13:19.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 02:13:19.306: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 02:13:19.306: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 02:13:19.306: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 02:13:19.313: INFO: Found 1 stateful pods, waiting for 3
Jan 26 02:13:29.322: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 02:13:29.322: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 02:13:29.322: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Jan 26 02:13:29.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 02:13:29.551: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 02:13:29.551: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 02:13:29.551: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 02:13:29.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 02:13:29.771: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 02:13:29.771: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 02:13:29.771: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 02:13:29.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 26 02:13:29.979: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 26 02:13:29.979: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 26 02:13:29.979: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 26 02:13:29.979: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 02:13:29.985: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jan 26 02:13:40.000: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 02:13:40.000: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 02:13:40.000: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 26 02:13:40.021: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999998s
Jan 26 02:13:41.029: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995440432s
Jan 26 02:13:42.037: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987633513s
Jan 26 02:13:43.044: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980108098s
Jan 26 02:13:44.051: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.972757499s
Jan 26 02:13:45.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.965258584s
Jan 26 02:13:46.068: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.957514765s
Jan 26 02:13:47.076: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.948219721s
Jan 26 02:13:48.085: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.940247498s
Jan 26 02:13:49.093: INFO: Verifying statefulset ss doesn't scale past 3 for another 931.951271ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3859
Jan 26 02:13:50.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 02:13:50.301: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 02:13:50.301: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 02:13:50.301: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 02:13:50.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 02:13:50.510: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 02:13:50.510: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 02:13:50.510: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 02:13:50.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=statefulset-3859 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 26 02:13:50.729: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 26 02:13:50.729: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 26 02:13:50.729: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 26 02:13:50.729: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 02:14:00.765: INFO: Deleting all statefulset in ns statefulset-3859
Jan 26 02:14:00.768: INFO: Scaling statefulset ss to 0
Jan 26 02:14:00.781: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 02:14:00.784: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 02:14:00.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3859" for this suite.

â€¢ [SLOW TEST:72.243 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":224,"skipped":4162,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:00.825: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9391
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 26 02:14:00.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 create -f -'
Jan 26 02:14:01.206: INFO: stderr: ""
Jan 26 02:14:01.206: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 26 02:14:01.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:14:01.316: INFO: stderr: ""
Jan 26 02:14:01.316: INFO: stdout: "update-demo-nautilus-59fhh update-demo-nautilus-m7tch "
Jan 26 02:14:01.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods update-demo-nautilus-59fhh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:14:01.398: INFO: stderr: ""
Jan 26 02:14:01.398: INFO: stdout: ""
Jan 26 02:14:01.398: INFO: update-demo-nautilus-59fhh is created but not running
Jan 26 02:14:06.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:14:06.496: INFO: stderr: ""
Jan 26 02:14:06.496: INFO: stdout: "update-demo-nautilus-59fhh update-demo-nautilus-m7tch "
Jan 26 02:14:06.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods update-demo-nautilus-59fhh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:14:06.583: INFO: stderr: ""
Jan 26 02:14:06.583: INFO: stdout: "true"
Jan 26 02:14:06.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods update-demo-nautilus-59fhh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:14:06.673: INFO: stderr: ""
Jan 26 02:14:06.673: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:14:06.673: INFO: validating pod update-demo-nautilus-59fhh
Jan 26 02:14:06.678: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:14:06.678: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:14:06.678: INFO: update-demo-nautilus-59fhh is verified up and running
Jan 26 02:14:06.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods update-demo-nautilus-m7tch -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:14:06.761: INFO: stderr: ""
Jan 26 02:14:06.761: INFO: stdout: "true"
Jan 26 02:14:06.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods update-demo-nautilus-m7tch -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:14:06.850: INFO: stderr: ""
Jan 26 02:14:06.850: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:14:06.850: INFO: validating pod update-demo-nautilus-m7tch
Jan 26 02:14:06.854: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:14:06.854: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:14:06.854: INFO: update-demo-nautilus-m7tch is verified up and running
STEP: using delete to clean up resources
Jan 26 02:14:06.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 delete --grace-period=0 --force -f -'
Jan 26 02:14:06.942: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:14:06.942: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 26 02:14:06.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get rc,svc -l name=update-demo --no-headers'
Jan 26 02:14:07.036: INFO: stderr: "No resources found in kubectl-9391 namespace.\n"
Jan 26 02:14:07.036: INFO: stdout: ""
Jan 26 02:14:07.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9391 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 26 02:14:07.123: INFO: stderr: ""
Jan 26 02:14:07.123: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:14:07.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9391" for this suite.

â€¢ [SLOW TEST:6.309 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":225,"skipped":4167,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:07.134: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-ppxf
STEP: Creating a pod to test atomic-volume-subpath
Jan 26 02:14:07.281: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-ppxf" in namespace "subpath-2738" to be "Succeeded or Failed"
Jan 26 02:14:07.285: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Pending", Reason="", readiness=false. Elapsed: 3.70316ms
Jan 26 02:14:09.292: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 2.01139463s
Jan 26 02:14:11.303: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 4.022394117s
Jan 26 02:14:13.308: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 6.026729416s
Jan 26 02:14:15.317: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 8.035820959s
Jan 26 02:14:17.328: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 10.046970594s
Jan 26 02:14:19.336: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 12.055261168s
Jan 26 02:14:21.347: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 14.06586338s
Jan 26 02:14:23.351: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 16.070420694s
Jan 26 02:14:25.358: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 18.077357069s
Jan 26 02:14:27.369: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=true. Elapsed: 20.087747171s
Jan 26 02:14:29.378: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Running", Reason="", readiness=false. Elapsed: 22.096869153s
Jan 26 02:14:31.389: INFO: Pod "pod-subpath-test-secret-ppxf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.10755576s
STEP: Saw pod success
Jan 26 02:14:31.389: INFO: Pod "pod-subpath-test-secret-ppxf" satisfied condition "Succeeded or Failed"
Jan 26 02:14:31.391: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-subpath-test-secret-ppxf container test-container-subpath-secret-ppxf: <nil>
STEP: delete the pod
Jan 26 02:14:31.444: INFO: Waiting for pod pod-subpath-test-secret-ppxf to disappear
Jan 26 02:14:31.447: INFO: Pod pod-subpath-test-secret-ppxf no longer exists
STEP: Deleting pod pod-subpath-test-secret-ppxf
Jan 26 02:14:31.447: INFO: Deleting pod "pod-subpath-test-secret-ppxf" in namespace "subpath-2738"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 26 02:14:31.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2738" for this suite.

â€¢ [SLOW TEST:24.327 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":226,"skipped":4172,"failed":0}
SSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:31.463: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3407
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 02:14:42.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3407" for this suite.

â€¢ [SLOW TEST:11.265 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":227,"skipped":4176,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:42.728: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 26 02:14:42.875: INFO: Waiting up to 5m0s for pod "pod-d76ec600-d259-4c6b-b506-9b262e4dcc83" in namespace "emptydir-2465" to be "Succeeded or Failed"
Jan 26 02:14:42.879: INFO: Pod "pod-d76ec600-d259-4c6b-b506-9b262e4dcc83": Phase="Pending", Reason="", readiness=false. Elapsed: 4.167566ms
Jan 26 02:14:44.888: INFO: Pod "pod-d76ec600-d259-4c6b-b506-9b262e4dcc83": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013011392s
Jan 26 02:14:46.898: INFO: Pod "pod-d76ec600-d259-4c6b-b506-9b262e4dcc83": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022907835s
STEP: Saw pod success
Jan 26 02:14:46.898: INFO: Pod "pod-d76ec600-d259-4c6b-b506-9b262e4dcc83" satisfied condition "Succeeded or Failed"
Jan 26 02:14:46.902: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-d76ec600-d259-4c6b-b506-9b262e4dcc83 container test-container: <nil>
STEP: delete the pod
Jan 26 02:14:46.924: INFO: Waiting for pod pod-d76ec600-d259-4c6b-b506-9b262e4dcc83 to disappear
Jan 26 02:14:46.927: INFO: Pod pod-d76ec600-d259-4c6b-b506-9b262e4dcc83 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:14:46.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2465" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":228,"skipped":4176,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:46.942: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 26 02:14:50.129: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 26 02:14:50.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7804" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":229,"skipped":4201,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:14:50.159: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3543
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:14:50.319: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Jan 26 02:14:50.330: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:50.330: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:50.330: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:50.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:14:50.338: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:14:51.349: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:51.349: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:51.349: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:51.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:14:51.353: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Jan 26 02:14:51.391: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:51.391: INFO: Wrong image for pod: daemon-set-lc8g2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:51.391: INFO: Wrong image for pod: daemon-set-rhnkm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:51.397: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:51.397: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:51.397: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:52.405: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:52.405: INFO: Wrong image for pod: daemon-set-lc8g2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:52.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:52.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:52.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:53.403: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:53.403: INFO: Wrong image for pod: daemon-set-lc8g2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:53.408: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:53.408: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:53.408: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:54.406: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:54.406: INFO: Pod daemon-set-9vmsw is not available
Jan 26 02:14:54.406: INFO: Wrong image for pod: daemon-set-lc8g2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:54.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:54.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:54.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:55.405: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:55.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:55.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:55.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:56.404: INFO: Wrong image for pod: daemon-set-5kz7j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 26 02:14:56.404: INFO: Pod daemon-set-85lgw is not available
Jan 26 02:14:56.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:56.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:56.409: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:57.410: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:57.410: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:57.410: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.402: INFO: Pod daemon-set-s72gx is not available
Jan 26 02:14:58.407: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.407: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.407: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Jan 26 02:14:58.411: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.412: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.412: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:58.415: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 26 02:14:58.415: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 02:14:59.425: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:59.425: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:59.425: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:14:59.428: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:14:59.428: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3543, will wait for the garbage collector to delete the pods
Jan 26 02:14:59.502: INFO: Deleting DaemonSet.extensions daemon-set took: 6.163509ms
Jan 26 02:14:59.602: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.343772ms
Jan 26 02:15:02.318: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:15:02.318: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 02:15:02.321: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32689"},"items":null}

Jan 26 02:15:02.323: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32689"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:15:02.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3543" for this suite.

â€¢ [SLOW TEST:12.197 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":230,"skipped":4227,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:02.357: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3495
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-q76k
STEP: Creating a pod to test atomic-volume-subpath
Jan 26 02:15:02.526: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-q76k" in namespace "subpath-3495" to be "Succeeded or Failed"
Jan 26 02:15:02.529: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Pending", Reason="", readiness=false. Elapsed: 2.979748ms
Jan 26 02:15:04.539: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 2.01298182s
Jan 26 02:15:06.546: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 4.020349457s
Jan 26 02:15:08.552: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 6.025904565s
Jan 26 02:15:10.565: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 8.038737389s
Jan 26 02:15:12.577: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 10.050936707s
Jan 26 02:15:14.587: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 12.061090155s
Jan 26 02:15:16.597: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 14.070499991s
Jan 26 02:15:18.602: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 16.075683359s
Jan 26 02:15:20.613: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 18.087209924s
Jan 26 02:15:22.623: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=true. Elapsed: 20.097034109s
Jan 26 02:15:24.633: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Running", Reason="", readiness=false. Elapsed: 22.106515288s
Jan 26 02:15:26.642: INFO: Pod "pod-subpath-test-configmap-q76k": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.115478459s
STEP: Saw pod success
Jan 26 02:15:26.642: INFO: Pod "pod-subpath-test-configmap-q76k" satisfied condition "Succeeded or Failed"
Jan 26 02:15:26.644: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-subpath-test-configmap-q76k container test-container-subpath-configmap-q76k: <nil>
STEP: delete the pod
Jan 26 02:15:26.665: INFO: Waiting for pod pod-subpath-test-configmap-q76k to disappear
Jan 26 02:15:26.668: INFO: Pod pod-subpath-test-configmap-q76k no longer exists
STEP: Deleting pod pod-subpath-test-configmap-q76k
Jan 26 02:15:26.668: INFO: Deleting pod "pod-subpath-test-configmap-q76k" in namespace "subpath-3495"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 26 02:15:26.671: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3495" for this suite.

â€¢ [SLOW TEST:24.324 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":231,"skipped":4266,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:26.682: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6776
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:15:26.816: INFO: Creating simple deployment test-new-deployment
Jan 26 02:15:26.826: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 02:15:28.900: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-6776  b732eda0-4390-4838-86b6-4f3ee37961b5 32848 3 2023-01-26 02:15:26 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-26 02:15:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:15:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0027ead48 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-26 02:15:28 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2023-01-26 02:15:28 +0000 UTC,LastTransitionTime:2023-01-26 02:15:26 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 26 02:15:28.911: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-6776  efb62bd9-bc76-4d00-a265-e544c9ac093b 32855 2 2023-01-26 02:15:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment b732eda0-4390-4838-86b6-4f3ee37961b5 0xc00515fc87 0xc00515fc88}] []  [{kube-controller-manager Update apps/v1 2023-01-26 02:15:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b732eda0-4390-4838-86b6-4f3ee37961b5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:15:28 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00515fd18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 26 02:15:28.921: INFO: Pod "test-new-deployment-55df494869-77vrg" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-77vrg test-new-deployment-55df494869- deployment-6776  e8ca9c4f-005d-41a6-9dfd-5c69dcd014b5 32856 0 2023-01-26 02:15:28 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 efb62bd9-bc76-4d00-a265-e544c9ac093b 0xc0027dabd7 0xc0027dabd8}] []  [{kube-controller-manager Update v1 2023-01-26 02:15:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"efb62bd9-bc76-4d00-a265-e544c9ac093b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 02:15:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lb75k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lb75k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:,StartTime:2023-01-26 02:15:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 02:15:28.922: INFO: Pod "test-new-deployment-55df494869-xf2zs" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-xf2zs test-new-deployment-55df494869- deployment-6776  16332267-7773-4b35-9245-e1eb39f2e697 32842 0 2023-01-26 02:15:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 efb62bd9-bc76-4d00-a265-e544c9ac093b 0xc0027db170 0xc0027db171}] []  [{kube-controller-manager Update v1 2023-01-26 02:15:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"efb62bd9-bc76-4d00-a265-e544c9ac093b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 02:15:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.238\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zjqt4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zjqt4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:15:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.4,PodIP:10.244.1.238,StartTime:2023-01-26 02:15:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 02:15:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://aabe53b47529081143a4123d5122534d7d9bd3489d4828902c2f76b063707d4b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.238,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 02:15:28.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6776" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":232,"skipped":4273,"failed":0}
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:28.951: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4790
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:29.115: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-3946
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-4790
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Jan 26 02:15:35.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-3946" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 26 02:15:35.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4790" for this suite.

â€¢ [SLOW TEST:6.438 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":233,"skipped":4278,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:35.390: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 26 02:15:35.534: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:15:53.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4382" for this suite.

â€¢ [SLOW TEST:18.106 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":234,"skipped":4280,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:15:53.496: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4431
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Jan 26 02:16:04.431: INFO: 70 pods remaining
Jan 26 02:16:04.431: INFO: 70 pods has nil DeletionTimestamp
Jan 26 02:16:04.431: INFO: 
STEP: Gathering metrics
Jan 26 02:16:09.539: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 02:17:09.720: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
Jan 26 02:17:09.720: INFO: Deleting pod "simpletest-rc-to-be-deleted-22qcb" in namespace "gc-4431"
Jan 26 02:17:09.742: INFO: Deleting pod "simpletest-rc-to-be-deleted-254p9" in namespace "gc-4431"
Jan 26 02:17:09.767: INFO: Deleting pod "simpletest-rc-to-be-deleted-28r6q" in namespace "gc-4431"
Jan 26 02:17:09.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dv8v" in namespace "gc-4431"
Jan 26 02:17:09.836: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pkcm" in namespace "gc-4431"
Jan 26 02:17:09.861: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z8qn" in namespace "gc-4431"
Jan 26 02:17:09.895: INFO: Deleting pod "simpletest-rc-to-be-deleted-467c4" in namespace "gc-4431"
Jan 26 02:17:09.916: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g5hk" in namespace "gc-4431"
Jan 26 02:17:09.939: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jsrs" in namespace "gc-4431"
Jan 26 02:17:09.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-4nhxl" in namespace "gc-4431"
Jan 26 02:17:09.984: INFO: Deleting pod "simpletest-rc-to-be-deleted-52m8l" in namespace "gc-4431"
Jan 26 02:17:10.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bsm2" in namespace "gc-4431"
Jan 26 02:17:10.031: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kxzq" in namespace "gc-4431"
Jan 26 02:17:10.056: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mqdp" in namespace "gc-4431"
Jan 26 02:17:10.082: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lgfr" in namespace "gc-4431"
Jan 26 02:17:10.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zd77" in namespace "gc-4431"
Jan 26 02:17:10.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zrw4" in namespace "gc-4431"
Jan 26 02:17:10.158: INFO: Deleting pod "simpletest-rc-to-be-deleted-749qr" in namespace "gc-4431"
Jan 26 02:17:10.176: INFO: Deleting pod "simpletest-rc-to-be-deleted-74pq6" in namespace "gc-4431"
Jan 26 02:17:10.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-79kks" in namespace "gc-4431"
Jan 26 02:17:10.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-7krc7" in namespace "gc-4431"
Jan 26 02:17:10.241: INFO: Deleting pod "simpletest-rc-to-be-deleted-7v246" in namespace "gc-4431"
Jan 26 02:17:10.256: INFO: Deleting pod "simpletest-rc-to-be-deleted-85f4f" in namespace "gc-4431"
Jan 26 02:17:10.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-87xzv" in namespace "gc-4431"
Jan 26 02:17:10.290: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m8pl" in namespace "gc-4431"
Jan 26 02:17:10.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mgxs" in namespace "gc-4431"
Jan 26 02:17:10.333: INFO: Deleting pod "simpletest-rc-to-be-deleted-8pm5m" in namespace "gc-4431"
Jan 26 02:17:10.355: INFO: Deleting pod "simpletest-rc-to-be-deleted-8v7vd" in namespace "gc-4431"
Jan 26 02:17:10.372: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xnqb" in namespace "gc-4431"
Jan 26 02:17:10.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-8z6ts" in namespace "gc-4431"
Jan 26 02:17:10.424: INFO: Deleting pod "simpletest-rc-to-be-deleted-9c4rp" in namespace "gc-4431"
Jan 26 02:17:10.445: INFO: Deleting pod "simpletest-rc-to-be-deleted-9gqv9" in namespace "gc-4431"
Jan 26 02:17:10.459: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qdg4" in namespace "gc-4431"
Jan 26 02:17:10.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-blcf9" in namespace "gc-4431"
Jan 26 02:17:10.492: INFO: Deleting pod "simpletest-rc-to-be-deleted-bsdtp" in namespace "gc-4431"
Jan 26 02:17:10.524: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvbzz" in namespace "gc-4431"
Jan 26 02:17:10.540: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvwtn" in namespace "gc-4431"
Jan 26 02:17:10.557: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc5qb" in namespace "gc-4431"
Jan 26 02:17:10.577: INFO: Deleting pod "simpletest-rc-to-be-deleted-drfq8" in namespace "gc-4431"
Jan 26 02:17:10.600: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwm7d" in namespace "gc-4431"
Jan 26 02:17:10.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-f62ch" in namespace "gc-4431"
Jan 26 02:17:10.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgbp6" in namespace "gc-4431"
Jan 26 02:17:10.650: INFO: Deleting pod "simpletest-rc-to-be-deleted-fpwp6" in namespace "gc-4431"
Jan 26 02:17:10.674: INFO: Deleting pod "simpletest-rc-to-be-deleted-g6cnf" in namespace "gc-4431"
Jan 26 02:17:10.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkv59" in namespace "gc-4431"
Jan 26 02:17:10.713: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpskr" in namespace "gc-4431"
Jan 26 02:17:10.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5lrv" in namespace "gc-4431"
Jan 26 02:17:10.752: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkbfg" in namespace "gc-4431"
Jan 26 02:17:10.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-hl84j" in namespace "gc-4431"
Jan 26 02:17:10.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4w9d" in namespace "gc-4431"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 02:17:10.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4431" for this suite.

â€¢ [SLOW TEST:77.333 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":235,"skipped":4282,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:17:10.830: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1238
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 26 02:17:11.010: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 02:18:11.075: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:18:11.078: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-7718
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Jan 26 02:18:13.283: INFO: found a healthy node: k8s-linuxpool-34140226-1
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:18:57.450: INFO: pods created so far: [1 1 1]
Jan 26 02:18:57.450: INFO: length of pods created so far: 3
Jan 26 02:18:59.478: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Jan 26 02:19:06.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-7718" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:19:06.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1238" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:115.808 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":236,"skipped":4287,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:19:06.641: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-928
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Jan 26 02:19:06.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-928 cluster-info'
Jan 26 02:19:06.878: INFO: stderr: ""
Jan 26 02:19:06.878: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.0.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:19:06.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-928" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":237,"skipped":4298,"failed":0}
SSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:19:06.893: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7466
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:19:07.087: INFO: Creating deployment "test-recreate-deployment"
Jan 26 02:19:07.154: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jan 26 02:19:07.161: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jan 26 02:19:09.197: INFO: Waiting deployment "test-recreate-deployment" to complete
Jan 26 02:19:09.201: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jan 26 02:19:09.230: INFO: Updating deployment test-recreate-deployment
Jan 26 02:19:09.230: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 02:19:09.459: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-7466  7b5f5a76-5e96-4eee-b2cf-ffb56fc1a263 35443 2 2023-01-26 02:19:07 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00b08a428 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-26 02:19:09 +0000 UTC,LastTransitionTime:2023-01-26 02:19:09 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2023-01-26 02:19:09 +0000 UTC,LastTransitionTime:2023-01-26 02:19:07 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jan 26 02:19:09.463: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-7466  7d1729a8-0bb3-4bec-a192-3eac6fd32a2c 35441 1 2023-01-26 02:19:09 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 7b5f5a76-5e96-4eee-b2cf-ffb56fc1a263 0xc003c364c0 0xc003c364c1}] []  [{kube-controller-manager Update apps/v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b5f5a76-5e96-4eee-b2cf-ffb56fc1a263\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003c36558 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 02:19:09.463: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jan 26 02:19:09.463: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-7466  28917716-f865-4cd9-89b0-9c5d6ac32d9c 35431 2 2023-01-26 02:19:07 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 7b5f5a76-5e96-4eee-b2cf-ffb56fc1a263 0xc003c363a7 0xc003c363a8}] []  [{kube-controller-manager Update apps/v1 2023-01-26 02:19:07 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7b5f5a76-5e96-4eee-b2cf-ffb56fc1a263\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003c36458 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 02:19:09.468: INFO: Pod "test-recreate-deployment-cd8586fc7-cp8ns" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-cp8ns test-recreate-deployment-cd8586fc7- deployment-7466  b0cc4d16-00f5-4807-839a-828e2e18c58c 35442 0 2023-01-26 02:19:09 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 7d1729a8-0bb3-4bec-a192-3eac6fd32a2c 0xc003c369c0 0xc003c369c1}] []  [{kube-controller-manager Update v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7d1729a8-0bb3-4bec-a192-3eac6fd32a2c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 02:19:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gq5pc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gq5pc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:19:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:19:09 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:19:09 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:19:09 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:,StartTime:2023-01-26 02:19:09 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 02:19:09.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7466" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":238,"skipped":4301,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:19:09.482: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4523
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Jan 26 02:19:09.628: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jan 26 02:19:09.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:10.412: INFO: stderr: ""
Jan 26 02:19:10.412: INFO: stdout: "service/agnhost-replica created\n"
Jan 26 02:19:10.412: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jan 26 02:19:10.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:10.708: INFO: stderr: ""
Jan 26 02:19:10.708: INFO: stdout: "service/agnhost-primary created\n"
Jan 26 02:19:10.708: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jan 26 02:19:10.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:11.033: INFO: stderr: ""
Jan 26 02:19:11.033: INFO: stdout: "service/frontend created\n"
Jan 26 02:19:11.033: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jan 26 02:19:11.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:11.733: INFO: stderr: ""
Jan 26 02:19:11.733: INFO: stdout: "deployment.apps/frontend created\n"
Jan 26 02:19:11.733: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 26 02:19:11.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:11.976: INFO: stderr: ""
Jan 26 02:19:11.976: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jan 26 02:19:11.976: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 26 02:19:11.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 create -f -'
Jan 26 02:19:12.208: INFO: stderr: ""
Jan 26 02:19:12.208: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Jan 26 02:19:12.208: INFO: Waiting for all frontend pods to be Running.
Jan 26 02:19:17.266: INFO: Waiting for frontend to serve content.
Jan 26 02:19:17.279: INFO: Trying to add a new entry to the guestbook.
Jan 26 02:19:17.294: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Jan 26 02:19:17.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:17.510: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:17.510: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Jan 26 02:19:17.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:17.639: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:17.639: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 26 02:19:17.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:17.747: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:17.747: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 26 02:19:17.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:17.924: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:17.924: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 26 02:19:17.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:18.049: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:18.049: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 26 02:19:18.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4523 delete --grace-period=0 --force -f -'
Jan 26 02:19:18.146: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:19:18.146: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:19:18.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4523" for this suite.

â€¢ [SLOW TEST:8.690 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":239,"skipped":4305,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:19:18.173: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4379
STEP: creating service affinity-nodeport-transition in namespace services-4379
STEP: creating replication controller affinity-nodeport-transition in namespace services-4379
I0126 02:19:18.349125      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4379, replica count: 3
I0126 02:19:21.400302      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 02:19:21.416: INFO: Creating new exec pod
Jan 26 02:19:24.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Jan 26 02:19:24.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jan 26 02:19:24.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:19:24.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.145.96 80'
Jan 26 02:19:24.872: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.145.96 80\nConnection to 10.0.145.96 80 port [tcp/http] succeeded!\n"
Jan 26 02:19:24.872: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:19:24.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.6 32413'
Jan 26 02:19:25.106: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.6 32413\nConnection to 10.240.0.6 32413 port [tcp/*] succeeded!\n"
Jan 26 02:19:25.106: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:19:25.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.5 32413'
Jan 26 02:19:25.361: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.5 32413\nConnection to 10.240.0.5 32413 port [tcp/*] succeeded!\n"
Jan 26 02:19:25.361: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:19:25.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.6:32413/ ; done'
Jan 26 02:19:25.690: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n"
Jan 26 02:19:25.690: INFO: stdout: "\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-xz2vk\naffinity-nodeport-transition-xz2vk\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-xz2vk\naffinity-nodeport-transition-xz2vk\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-b5s62\naffinity-nodeport-transition-xz2vk\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8"
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-xz2vk
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-xz2vk
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-xz2vk
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-xz2vk
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-b5s62
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-xz2vk
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:25.690: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:25.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-4379 exec execpod-affinitygpd4q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.6:32413/ ; done'
Jan 26 02:19:26.002: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.6:32413/\n"
Jan 26 02:19:26.002: INFO: stdout: "\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8\naffinity-nodeport-transition-vscq8"
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Received response from host: affinity-nodeport-transition-vscq8
Jan 26 02:19:26.002: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4379, will wait for the garbage collector to delete the pods
Jan 26 02:19:26.087: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.672241ms
Jan 26 02:19:26.187: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.652031ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 02:19:28.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4379" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.329 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":240,"skipped":4340,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:19:28.505: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Jan 26 02:19:29.453: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 02:20:29.664: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 02:20:29.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3258" for this suite.

â€¢ [SLOW TEST:61.189 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":241,"skipped":4363,"failed":0}
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:20:29.697: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8838
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8838
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 26 02:20:29.851: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 26 02:20:29.906: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:20:31.913: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:20:33.917: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:20:35.917: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:20:37.916: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:20:39.913: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:20:41.914: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 26 02:20:41.920: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 26 02:20:41.927: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 26 02:20:43.957: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 26 02:20:43.957: INFO: Breadth first check of 10.244.5.142 on host 10.240.0.6...
Jan 26 02:20:43.960: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.31:9080/dial?request=hostname&protocol=udp&host=10.244.5.142&port=8081&tries=1'] Namespace:pod-network-test-8838 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:20:43.960: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:20:43.961: INFO: ExecWithOptions: Clientset creation
Jan 26 02:20:43.961: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8838/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.5.142%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:20:44.076: INFO: Waiting for responses: map[]
Jan 26 02:20:44.076: INFO: reached 10.244.5.142 after 0/1 tries
Jan 26 02:20:44.076: INFO: Breadth first check of 10.244.1.30 on host 10.240.0.4...
Jan 26 02:20:44.081: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.31:9080/dial?request=hostname&protocol=udp&host=10.244.1.30&port=8081&tries=1'] Namespace:pod-network-test-8838 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:20:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:20:44.081: INFO: ExecWithOptions: Clientset creation
Jan 26 02:20:44.081: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8838/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.30%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:20:44.224: INFO: Waiting for responses: map[]
Jan 26 02:20:44.224: INFO: reached 10.244.1.30 after 0/1 tries
Jan 26 02:20:44.224: INFO: Breadth first check of 10.244.2.204 on host 10.240.0.5...
Jan 26 02:20:44.229: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.31:9080/dial?request=hostname&protocol=udp&host=10.244.2.204&port=8081&tries=1'] Namespace:pod-network-test-8838 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:20:44.229: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:20:44.230: INFO: ExecWithOptions: Clientset creation
Jan 26 02:20:44.230: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-8838/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.204%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:20:44.357: INFO: Waiting for responses: map[]
Jan 26 02:20:44.357: INFO: reached 10.244.2.204 after 0/1 tries
Jan 26 02:20:44.357: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 26 02:20:44.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8838" for this suite.

â€¢ [SLOW TEST:14.677 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":242,"skipped":4367,"failed":0}
SSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:20:44.376: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8697
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 26 02:20:44.594: INFO: The status of Pod pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:20:46.600: INFO: The status of Pod pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 26 02:20:47.126: INFO: Successfully updated pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168"
Jan 26 02:20:47.126: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168" in namespace "pods-8697" to be "terminated due to deadline exceeded"
Jan 26 02:20:47.129: INFO: Pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168": Phase="Running", Reason="", readiness=true. Elapsed: 3.667661ms
Jan 26 02:20:49.139: INFO: Pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168": Phase="Running", Reason="", readiness=true. Elapsed: 2.01351681s
Jan 26 02:20:51.149: INFO: Pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.022970151s
Jan 26 02:20:51.149: INFO: Pod "pod-update-activedeadlineseconds-5731ff54-9dd9-4190-a043-795783497168" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 02:20:51.149: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8697" for this suite.

â€¢ [SLOW TEST:6.792 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":243,"skipped":4371,"failed":0}
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:20:51.170: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-8077
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 26 02:20:51.351: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 02:21:51.415: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 26 02:21:51.454: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 26 02:21:51.467: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 26 02:21:51.501: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 26 02:21:51.515: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 26 02:21:51.596: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 26 02:21:51.609: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:22:09.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-8077" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:78.671 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":244,"skipped":4374,"failed":0}
SSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:09.843: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-3e3e8194-8916-467e-bbc0-794af40d73cc
STEP: Creating secret with name s-test-opt-upd-5db0597c-cfbf-4836-8a7d-daab256a0b77
STEP: Creating the pod
Jan 26 02:22:10.086: INFO: The status of Pod pod-projected-secrets-ccb395be-52a8-41e6-ba23-14b6b70eafc1 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:22:12.095: INFO: The status of Pod pod-projected-secrets-ccb395be-52a8-41e6-ba23-14b6b70eafc1 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-3e3e8194-8916-467e-bbc0-794af40d73cc
STEP: Updating secret s-test-opt-upd-5db0597c-cfbf-4836-8a7d-daab256a0b77
STEP: Creating secret with name s-test-opt-create-aac2dabc-f6b1-462f-a333-cd8a7e8936df
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 02:22:14.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1054" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":245,"skipped":4378,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:14.228: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Jan 26 02:22:14.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4629 create -f -'
Jan 26 02:22:14.638: INFO: stderr: ""
Jan 26 02:22:14.638: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Jan 26 02:22:14.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4629 diff -f -'
Jan 26 02:22:14.877: INFO: rc: 1
Jan 26 02:22:14.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-4629 delete -f -'
Jan 26 02:22:14.987: INFO: stderr: ""
Jan 26 02:22:14.987: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:22:14.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4629" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":246,"skipped":4395,"failed":0}
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:15.006: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:22:15.176: INFO: The status of Pod busybox-host-aliases6c5ca51e-5961-46f9-9cfe-9ec597ffb3ce is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:22:17.223: INFO: The status of Pod busybox-host-aliases6c5ca51e-5961-46f9-9cfe-9ec597ffb3ce is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 26 02:22:17.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8910" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":247,"skipped":4398,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:17.284: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-9829
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:22:17.431: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:22:18.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-9829" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":248,"skipped":4433,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:18.084: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-3704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Jan 26 02:22:18.241: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Jan 26 02:22:18.269: INFO: waiting for watch events with expected annotations in namespace
Jan 26 02:22:18.269: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Jan 26 02:22:18.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-3704" for this suite.
â€¢{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":249,"skipped":4442,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:18.309: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6124
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Jan 26 02:22:20.553: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6124 pod-service-account-f8283d2f-d14d-4f83-8d10-b1158b180378 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Jan 26 02:22:20.773: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6124 pod-service-account-f8283d2f-d14d-4f83-8d10-b1158b180378 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Jan 26 02:22:20.954: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6124 pod-service-account-f8283d2f-d14d-4f83-8d10-b1158b180378 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jan 26 02:22:21.157: INFO: Got root ca configmap in namespace "svcaccounts-6124"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 02:22:21.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6124" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":250,"skipped":4460,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:22:21.198: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4816
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 26 02:24:01.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4816" for this suite.

â€¢ [SLOW TEST:100.349 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":251,"skipped":4481,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:01.547: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-f64a7b02-b2df-42c4-85fa-51a6f41bff74
STEP: Creating a pod to test consume secrets
Jan 26 02:24:01.703: INFO: Waiting up to 5m0s for pod "pod-secrets-d1900581-6856-4843-90b6-99660020bc47" in namespace "secrets-9779" to be "Succeeded or Failed"
Jan 26 02:24:01.707: INFO: Pod "pod-secrets-d1900581-6856-4843-90b6-99660020bc47": Phase="Pending", Reason="", readiness=false. Elapsed: 4.104768ms
Jan 26 02:24:03.715: INFO: Pod "pod-secrets-d1900581-6856-4843-90b6-99660020bc47": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011636806s
Jan 26 02:24:05.722: INFO: Pod "pod-secrets-d1900581-6856-4843-90b6-99660020bc47": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018630836s
STEP: Saw pod success
Jan 26 02:24:05.722: INFO: Pod "pod-secrets-d1900581-6856-4843-90b6-99660020bc47" satisfied condition "Succeeded or Failed"
Jan 26 02:24:05.725: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-secrets-d1900581-6856-4843-90b6-99660020bc47 container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:24:05.770: INFO: Waiting for pod pod-secrets-d1900581-6856-4843-90b6-99660020bc47 to disappear
Jan 26 02:24:05.773: INFO: Pod pod-secrets-d1900581-6856-4843-90b6-99660020bc47 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:24:05.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9779" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":252,"skipped":4490,"failed":0}
S
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:05.788: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-4889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Jan 26 02:24:05.960: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Jan 26 02:24:06.455: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Jan 26 02:24:08.524: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-bd4454f8c\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 02:24:10.528: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-bd4454f8c\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 02:24:12.535: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-bd4454f8c\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 02:24:14.532: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-bd4454f8c\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 02:24:16.533: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 26, 2, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-bd4454f8c\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 26 02:24:18.727: INFO: Waited 183.387709ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Jan 26 02:24:18.811: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Jan 26 02:24:19.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-4889" for this suite.

â€¢ [SLOW TEST:13.530 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":253,"skipped":4491,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:19.320: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6804 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6804;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6804 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6804;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6804.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6804.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6804.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6804.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6804.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6804.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6804.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6804.svc;check="$$(dig +notcp +noall +answer +search 202.189.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.189.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.189.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.189.202_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6804 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6804;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6804 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6804;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6804.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6804.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6804.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6804.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6804.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6804.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6804.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6804.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6804.svc;check="$$(dig +notcp +noall +answer +search 202.189.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.189.202_udp@PTR;check="$$(dig +tcp +noall +answer +search 202.189.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.189.202_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 02:24:21.564: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.570: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.574: INFO: Unable to read wheezy_udp@dns-test-service.dns-6804 from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.578: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6804 from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.581: INFO: Unable to read wheezy_udp@dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.586: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.589: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.593: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.613: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.618: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.625: INFO: Unable to read jessie_udp@dns-test-service.dns-6804 from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.631: INFO: Unable to read jessie_tcp@dns-test-service.dns-6804 from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.636: INFO: Unable to read jessie_udp@dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.641: INFO: Unable to read jessie_tcp@dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.646: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.652: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6804.svc from pod dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d: the server could not find the requested resource (get pods dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d)
Jan 26 02:24:21.674: INFO: Lookups using dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6804 wheezy_tcp@dns-test-service.dns-6804 wheezy_udp@dns-test-service.dns-6804.svc wheezy_tcp@dns-test-service.dns-6804.svc wheezy_udp@_http._tcp.dns-test-service.dns-6804.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6804.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6804 jessie_tcp@dns-test-service.dns-6804 jessie_udp@dns-test-service.dns-6804.svc jessie_tcp@dns-test-service.dns-6804.svc jessie_udp@_http._tcp.dns-test-service.dns-6804.svc jessie_tcp@_http._tcp.dns-test-service.dns-6804.svc]

Jan 26 02:24:26.772: INFO: DNS probes using dns-6804/dns-test-e39aed71-b181-4f60-a2cc-d69c8384ca6d succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 02:24:26.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6804" for this suite.

â€¢ [SLOW TEST:7.550 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":254,"skipped":4495,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:26.876: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-eaba92da-0e35-4d0b-a063-cf932de04275
STEP: Creating a pod to test consume configMaps
Jan 26 02:24:27.050: INFO: Waiting up to 5m0s for pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15" in namespace "configmap-1194" to be "Succeeded or Failed"
Jan 26 02:24:27.053: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Pending", Reason="", readiness=false. Elapsed: 3.595259ms
Jan 26 02:24:29.058: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008192401s
Jan 26 02:24:31.069: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019505353s
Jan 26 02:24:33.075: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Running", Reason="", readiness=true. Elapsed: 6.025156442s
Jan 26 02:24:35.084: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Running", Reason="", readiness=false. Elapsed: 8.034356368s
Jan 26 02:24:37.095: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.044726813s
STEP: Saw pod success
Jan 26 02:24:37.095: INFO: Pod "pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15" satisfied condition "Succeeded or Failed"
Jan 26 02:24:37.098: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 02:24:37.120: INFO: Waiting for pod pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15 to disappear
Jan 26 02:24:37.124: INFO: Pod pod-configmaps-682d7fca-9266-4e55-8a1b-0af857670d15 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:24:37.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1194" for this suite.

â€¢ [SLOW TEST:10.271 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":255,"skipped":4514,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:37.148: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4509
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:24:37.357: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882" in namespace "projected-4509" to be "Succeeded or Failed"
Jan 26 02:24:37.364: INFO: Pod "downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882": Phase="Pending", Reason="", readiness=false. Elapsed: 7.056116ms
Jan 26 02:24:39.374: INFO: Pod "downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01678255s
Jan 26 02:24:41.384: INFO: Pod "downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026261962s
STEP: Saw pod success
Jan 26 02:24:41.384: INFO: Pod "downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882" satisfied condition "Succeeded or Failed"
Jan 26 02:24:41.387: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882 container client-container: <nil>
STEP: delete the pod
Jan 26 02:24:41.470: INFO: Waiting for pod downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882 to disappear
Jan 26 02:24:41.474: INFO: Pod downwardapi-volume-6d79cd2e-e862-4245-ab69-fdcdd8dd9882 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 02:24:41.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4509" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":256,"skipped":4532,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:41.489: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-9028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 26 02:24:41.742: INFO: starting watch
STEP: patching
STEP: updating
Jan 26 02:24:41.757: INFO: waiting for watch events with expected annotations
Jan 26 02:24:41.757: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Jan 26 02:24:41.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-9028" for this suite.
â€¢{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":257,"skipped":4560,"failed":0}
SSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:41.815: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-7414
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Jan 26 02:24:41.965: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7414  cf133bbf-209c-4795-bd04-e24e70de7ed9 37533 0 2023-01-26 02:24:41 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2023-01-26 02:24:41 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dbfqm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dbfqm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 26 02:24:41.978: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:24:43.990: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Jan 26 02:24:43.990: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7414 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:24:43.990: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:24:43.990: INFO: ExecWithOptions: Clientset creation
Jan 26 02:24:43.991: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-7414/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Jan 26 02:24:44.140: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7414 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:24:44.140: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:24:44.141: INFO: ExecWithOptions: Clientset creation
Jan 26 02:24:44.141: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-7414/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 26 02:24:44.263: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 02:24:44.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7414" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":258,"skipped":4566,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:44.293: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2362
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-effdd44b-229c-43dd-b52b-090c1d21df00
STEP: Creating a pod to test consume secrets
Jan 26 02:24:44.520: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de" in namespace "projected-2362" to be "Succeeded or Failed"
Jan 26 02:24:44.523: INFO: Pod "pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de": Phase="Pending", Reason="", readiness=false. Elapsed: 3.261454ms
Jan 26 02:24:46.533: INFO: Pod "pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012923643s
Jan 26 02:24:48.545: INFO: Pod "pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024802868s
STEP: Saw pod success
Jan 26 02:24:48.545: INFO: Pod "pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de" satisfied condition "Succeeded or Failed"
Jan 26 02:24:48.548: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:24:48.568: INFO: Waiting for pod pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de to disappear
Jan 26 02:24:48.571: INFO: Pod pod-projected-secrets-d0ac9196-0e92-412f-af3d-8dd63d7605de no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 26 02:24:48.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2362" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":259,"skipped":4624,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:48.585: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8550
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:24:48.757: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924" in namespace "security-context-test-8550" to be "Succeeded or Failed"
Jan 26 02:24:48.761: INFO: Pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924": Phase="Pending", Reason="", readiness=false. Elapsed: 4.044466ms
Jan 26 02:24:50.770: INFO: Pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013091134s
Jan 26 02:24:52.774: INFO: Pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017005617s
Jan 26 02:24:52.774: INFO: Pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924" satisfied condition "Succeeded or Failed"
Jan 26 02:24:52.781: INFO: Got logs for pod "busybox-privileged-false-c4eeb6b9-ab40-4ab7-88bf-f606d37bb924": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 02:24:52.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8550" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":260,"skipped":4646,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:24:52.794: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2063
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 26 02:24:52.968: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 02:25:53.028: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 26 02:25:53.060: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 26 02:25:53.071: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 26 02:25:53.119: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 26 02:25:53.142: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 26 02:25:53.225: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 26 02:25:53.311: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:26:01.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2063" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:68.720 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":261,"skipped":4668,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:01.514: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-6171
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-8rg4n in namespace proxy-6171
I0126 02:26:01.732084      20 runners.go:193] Created replication controller with name: proxy-service-8rg4n, namespace: proxy-6171, replica count: 1
I0126 02:26:02.783841      20 runners.go:193] proxy-service-8rg4n Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0126 02:26:03.784968      20 runners.go:193] proxy-service-8rg4n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0126 02:26:04.785139      20 runners.go:193] proxy-service-8rg4n Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 02:26:04.796: INFO: setup took 3.097234243s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Jan 26 02:26:04.811: INFO: (0) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 13.632008ms)
Jan 26 02:26:04.813: INFO: (0) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 16.661354ms)
Jan 26 02:26:04.815: INFO: (0) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 18.538483ms)
Jan 26 02:26:04.816: INFO: (0) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 18.842087ms)
Jan 26 02:26:04.817: INFO: (0) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 19.999705ms)
Jan 26 02:26:04.818: INFO: (0) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 21.560529ms)
Jan 26 02:26:04.818: INFO: (0) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 21.233424ms)
Jan 26 02:26:04.834: INFO: (0) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 36.72106ms)
Jan 26 02:26:04.834: INFO: (0) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 37.448271ms)
Jan 26 02:26:04.834: INFO: (0) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 37.237768ms)
Jan 26 02:26:04.834: INFO: (0) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 37.362669ms)
Jan 26 02:26:04.837: INFO: (0) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 39.785307ms)
Jan 26 02:26:04.840: INFO: (0) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 43.691567ms)
Jan 26 02:26:04.841: INFO: (0) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 43.91017ms)
Jan 26 02:26:04.842: INFO: (0) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 44.855284ms)
Jan 26 02:26:04.842: INFO: (0) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 44.742783ms)
Jan 26 02:26:04.874: INFO: (1) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 32.636398ms)
Jan 26 02:26:04.874: INFO: (1) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 31.531381ms)
Jan 26 02:26:04.875: INFO: (1) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 31.795885ms)
Jan 26 02:26:04.876: INFO: (1) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 33.177006ms)
Jan 26 02:26:04.876: INFO: (1) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 33.494311ms)
Jan 26 02:26:04.884: INFO: (1) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 40.883624ms)
Jan 26 02:26:04.884: INFO: (1) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 40.974225ms)
Jan 26 02:26:04.884: INFO: (1) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 41.389631ms)
Jan 26 02:26:04.884: INFO: (1) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 41.598435ms)
Jan 26 02:26:04.884: INFO: (1) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 41.876939ms)
Jan 26 02:26:04.892: INFO: (1) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 49.264251ms)
Jan 26 02:26:04.892: INFO: (1) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 49.637257ms)
Jan 26 02:26:04.892: INFO: (1) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 50.005763ms)
Jan 26 02:26:04.895: INFO: (1) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 53.092609ms)
Jan 26 02:26:04.895: INFO: (1) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 52.418799ms)
Jan 26 02:26:04.896: INFO: (1) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 53.768521ms)
Jan 26 02:26:04.923: INFO: (2) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 26.802309ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 26.2784ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 26.816509ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 26.587706ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 27.811824ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 27.504019ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 27.447819ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 28.464734ms)
Jan 26 02:26:04.924: INFO: (2) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 27.426518ms)
Jan 26 02:26:04.925: INFO: (2) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 28.513635ms)
Jan 26 02:26:04.930: INFO: (2) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 32.647098ms)
Jan 26 02:26:04.933: INFO: (2) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 36.301553ms)
Jan 26 02:26:04.933: INFO: (2) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 36.988964ms)
Jan 26 02:26:04.934: INFO: (2) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 37.34197ms)
Jan 26 02:26:04.935: INFO: (2) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 37.784677ms)
Jan 26 02:26:04.935: INFO: (2) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 38.525088ms)
Jan 26 02:26:04.954: INFO: (3) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 17.992874ms)
Jan 26 02:26:04.955: INFO: (3) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 18.717486ms)
Jan 26 02:26:04.955: INFO: (3) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 19.202493ms)
Jan 26 02:26:04.956: INFO: (3) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 19.306194ms)
Jan 26 02:26:04.956: INFO: (3) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 20.238609ms)
Jan 26 02:26:04.956: INFO: (3) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 19.6475ms)
Jan 26 02:26:04.956: INFO: (3) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 20.057606ms)
Jan 26 02:26:04.956: INFO: (3) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 20.29361ms)
Jan 26 02:26:04.957: INFO: (3) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 21.771832ms)
Jan 26 02:26:04.958: INFO: (3) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 22.25784ms)
Jan 26 02:26:04.958: INFO: (3) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 22.422242ms)
Jan 26 02:26:04.962: INFO: (3) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 25.388687ms)
Jan 26 02:26:04.962: INFO: (3) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 25.951196ms)
Jan 26 02:26:04.962: INFO: (3) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 26.497504ms)
Jan 26 02:26:04.963: INFO: (3) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 26.611806ms)
Jan 26 02:26:04.963: INFO: (3) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 27.068613ms)
Jan 26 02:26:04.974: INFO: (4) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 11.261271ms)
Jan 26 02:26:04.974: INFO: (4) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 11.422575ms)
Jan 26 02:26:04.976: INFO: (4) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 13.056699ms)
Jan 26 02:26:04.979: INFO: (4) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 15.579038ms)
Jan 26 02:26:04.979: INFO: (4) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 15.72604ms)
Jan 26 02:26:04.980: INFO: (4) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 15.821541ms)
Jan 26 02:26:04.980: INFO: (4) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 15.926943ms)
Jan 26 02:26:04.979: INFO: (4) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 15.158031ms)
Jan 26 02:26:04.982: INFO: (4) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 17.875672ms)
Jan 26 02:26:04.984: INFO: (4) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 19.6524ms)
Jan 26 02:26:04.984: INFO: (4) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 20.203208ms)
Jan 26 02:26:04.985: INFO: (4) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 20.779917ms)
Jan 26 02:26:04.985: INFO: (4) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 20.911319ms)
Jan 26 02:26:04.985: INFO: (4) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 21.061622ms)
Jan 26 02:26:04.985: INFO: (4) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 21.793332ms)
Jan 26 02:26:04.986: INFO: (4) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 22.90435ms)
Jan 26 02:26:04.997: INFO: (5) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 10.422158ms)
Jan 26 02:26:04.999: INFO: (5) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 11.981583ms)
Jan 26 02:26:04.999: INFO: (5) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 12.037584ms)
Jan 26 02:26:04.999: INFO: (5) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 11.972982ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 12.124985ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.658293ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 12.507891ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 12.42839ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 12.272488ms)
Jan 26 02:26:05.000: INFO: (5) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.44109ms)
Jan 26 02:26:05.006: INFO: (5) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 19.733701ms)
Jan 26 02:26:05.008: INFO: (5) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 21.014721ms)
Jan 26 02:26:05.008: INFO: (5) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 21.376626ms)
Jan 26 02:26:05.009: INFO: (5) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 21.854333ms)
Jan 26 02:26:05.009: INFO: (5) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 22.115237ms)
Jan 26 02:26:05.009: INFO: (5) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 21.954835ms)
Jan 26 02:26:05.018: INFO: (6) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 8.53333ms)
Jan 26 02:26:05.019: INFO: (6) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 8.792834ms)
Jan 26 02:26:05.019: INFO: (6) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 9.491944ms)
Jan 26 02:26:05.019: INFO: (6) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 9.283942ms)
Jan 26 02:26:05.019: INFO: (6) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 9.277841ms)
Jan 26 02:26:05.020: INFO: (6) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 9.738549ms)
Jan 26 02:26:05.022: INFO: (6) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 12.004283ms)
Jan 26 02:26:05.026: INFO: (6) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 15.215032ms)
Jan 26 02:26:05.026: INFO: (6) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 15.864142ms)
Jan 26 02:26:05.026: INFO: (6) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 16.622054ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 16.315149ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 17.493367ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 17.502367ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 17.617269ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 17.447566ms)
Jan 26 02:26:05.027: INFO: (6) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 16.779456ms)
Jan 26 02:26:05.034: INFO: (7) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 6.510999ms)
Jan 26 02:26:05.036: INFO: (7) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 8.060223ms)
Jan 26 02:26:05.036: INFO: (7) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 8.285127ms)
Jan 26 02:26:05.040: INFO: (7) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 11.77248ms)
Jan 26 02:26:05.042: INFO: (7) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 13.75111ms)
Jan 26 02:26:05.042: INFO: (7) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 13.999913ms)
Jan 26 02:26:05.042: INFO: (7) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 14.203517ms)
Jan 26 02:26:05.045: INFO: (7) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 16.576353ms)
Jan 26 02:26:05.045: INFO: (7) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 17.147462ms)
Jan 26 02:26:05.046: INFO: (7) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 18.193877ms)
Jan 26 02:26:05.046: INFO: (7) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 18.234378ms)
Jan 26 02:26:05.046: INFO: (7) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 19.00079ms)
Jan 26 02:26:05.047: INFO: (7) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 18.732885ms)
Jan 26 02:26:05.047: INFO: (7) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 19.241793ms)
Jan 26 02:26:05.047: INFO: (7) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 18.941289ms)
Jan 26 02:26:05.047: INFO: (7) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 19.289094ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 9.382543ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 9.584646ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 10.034253ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 9.728149ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 10.235056ms)
Jan 26 02:26:05.058: INFO: (8) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 10.371658ms)
Jan 26 02:26:05.059: INFO: (8) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 9.930552ms)
Jan 26 02:26:05.061: INFO: (8) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.553591ms)
Jan 26 02:26:05.063: INFO: (8) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 14.930327ms)
Jan 26 02:26:05.064: INFO: (8) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 16.310248ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 16.002544ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 16.149146ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 16.761856ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 16.969459ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 16.817357ms)
Jan 26 02:26:05.065: INFO: (8) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 16.349149ms)
Jan 26 02:26:05.077: INFO: (9) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 11.73808ms)
Jan 26 02:26:05.080: INFO: (9) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 13.377604ms)
Jan 26 02:26:05.080: INFO: (9) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 13.77391ms)
Jan 26 02:26:05.080: INFO: (9) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 14.237017ms)
Jan 26 02:26:05.080: INFO: (9) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 14.855227ms)
Jan 26 02:26:05.080: INFO: (9) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 13.889912ms)
Jan 26 02:26:05.081: INFO: (9) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 15.262033ms)
Jan 26 02:26:05.081: INFO: (9) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 15.070029ms)
Jan 26 02:26:05.081: INFO: (9) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 15.331034ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 15.880642ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 16.214748ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 15.642838ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 16.503451ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 16.660154ms)
Jan 26 02:26:05.082: INFO: (9) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 16.838056ms)
Jan 26 02:26:05.083: INFO: (9) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 16.832157ms)
Jan 26 02:26:05.089: INFO: (10) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 6.202895ms)
Jan 26 02:26:05.090: INFO: (10) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 6.971206ms)
Jan 26 02:26:05.093: INFO: (10) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 10.037353ms)
Jan 26 02:26:05.093: INFO: (10) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 10.095554ms)
Jan 26 02:26:05.094: INFO: (10) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 10.955267ms)
Jan 26 02:26:05.098: INFO: (10) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 14.714325ms)
Jan 26 02:26:05.098: INFO: (10) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 14.651423ms)
Jan 26 02:26:05.098: INFO: (10) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 14.925527ms)
Jan 26 02:26:05.099: INFO: (10) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 15.416935ms)
Jan 26 02:26:05.099: INFO: (10) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 15.481436ms)
Jan 26 02:26:05.099: INFO: (10) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 16.142746ms)
Jan 26 02:26:05.102: INFO: (10) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 18.484982ms)
Jan 26 02:26:05.103: INFO: (10) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 19.419496ms)
Jan 26 02:26:05.103: INFO: (10) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 20.29471ms)
Jan 26 02:26:05.103: INFO: (10) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 20.455612ms)
Jan 26 02:26:05.104: INFO: (10) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 20.653115ms)
Jan 26 02:26:05.111: INFO: (11) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 7.22721ms)
Jan 26 02:26:05.119: INFO: (11) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 13.988414ms)
Jan 26 02:26:05.121: INFO: (11) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 16.584153ms)
Jan 26 02:26:05.121: INFO: (11) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 16.618453ms)
Jan 26 02:26:05.121: INFO: (11) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 16.242148ms)
Jan 26 02:26:05.121: INFO: (11) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 16.668254ms)
Jan 26 02:26:05.122: INFO: (11) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 17.416466ms)
Jan 26 02:26:05.123: INFO: (11) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 18.36538ms)
Jan 26 02:26:05.123: INFO: (11) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 18.248878ms)
Jan 26 02:26:05.123: INFO: (11) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 18.876488ms)
Jan 26 02:26:05.125: INFO: (11) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 20.474812ms)
Jan 26 02:26:05.125: INFO: (11) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 20.99172ms)
Jan 26 02:26:05.125: INFO: (11) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 20.892019ms)
Jan 26 02:26:05.125: INFO: (11) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 21.252525ms)
Jan 26 02:26:05.126: INFO: (11) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 21.296125ms)
Jan 26 02:26:05.126: INFO: (11) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 21.702831ms)
Jan 26 02:26:05.142: INFO: (12) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 15.10243ms)
Jan 26 02:26:05.142: INFO: (12) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 16.251248ms)
Jan 26 02:26:05.142: INFO: (12) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 15.647238ms)
Jan 26 02:26:05.143: INFO: (12) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 16.132547ms)
Jan 26 02:26:05.143: INFO: (12) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 15.801241ms)
Jan 26 02:26:05.143: INFO: (12) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 16.624154ms)
Jan 26 02:26:05.143: INFO: (12) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 16.458351ms)
Jan 26 02:26:05.143: INFO: (12) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 17.03926ms)
Jan 26 02:26:05.144: INFO: (12) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 17.129761ms)
Jan 26 02:26:05.145: INFO: (12) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 19.378496ms)
Jan 26 02:26:05.145: INFO: (12) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 19.282094ms)
Jan 26 02:26:05.146: INFO: (12) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 19.200293ms)
Jan 26 02:26:05.146: INFO: (12) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 19.6596ms)
Jan 26 02:26:05.146: INFO: (12) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 19.6934ms)
Jan 26 02:26:05.146: INFO: (12) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 19.769402ms)
Jan 26 02:26:05.146: INFO: (12) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 20.122107ms)
Jan 26 02:26:05.159: INFO: (13) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 12.666193ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 14.115715ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 13.997914ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 14.051714ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 14.151316ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 14.552522ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 14.515222ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 14.653423ms)
Jan 26 02:26:05.161: INFO: (13) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 14.522922ms)
Jan 26 02:26:05.162: INFO: (13) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 14.577922ms)
Jan 26 02:26:05.166: INFO: (13) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 19.695101ms)
Jan 26 02:26:05.167: INFO: (13) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 20.115007ms)
Jan 26 02:26:05.167: INFO: (13) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 20.045205ms)
Jan 26 02:26:05.167: INFO: (13) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 20.221909ms)
Jan 26 02:26:05.167: INFO: (13) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 20.622414ms)
Jan 26 02:26:05.168: INFO: (13) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 20.873419ms)
Jan 26 02:26:05.229: INFO: (14) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 61.342236ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 75.302749ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 75.610854ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 75.554653ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 75.764355ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 75.945258ms)
Jan 26 02:26:05.244: INFO: (14) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 75.520551ms)
Jan 26 02:26:05.245: INFO: (14) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 76.507267ms)
Jan 26 02:26:05.245: INFO: (14) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 76.266964ms)
Jan 26 02:26:05.245: INFO: (14) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 76.938874ms)
Jan 26 02:26:05.246: INFO: (14) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 77.711885ms)
Jan 26 02:26:05.249: INFO: (14) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 81.062136ms)
Jan 26 02:26:05.250: INFO: (14) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 81.676046ms)
Jan 26 02:26:05.250: INFO: (14) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 82.281255ms)
Jan 26 02:26:05.250: INFO: (14) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 82.376457ms)
Jan 26 02:26:05.250: INFO: (14) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 82.472858ms)
Jan 26 02:26:05.262: INFO: (15) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 10.045553ms)
Jan 26 02:26:05.263: INFO: (15) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 11.752179ms)
Jan 26 02:26:05.264: INFO: (15) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.117785ms)
Jan 26 02:26:05.265: INFO: (15) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 13.800211ms)
Jan 26 02:26:05.265: INFO: (15) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 13.413705ms)
Jan 26 02:26:05.266: INFO: (15) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 14.154516ms)
Jan 26 02:26:05.268: INFO: (15) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 16.336249ms)
Jan 26 02:26:05.268: INFO: (15) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 16.680255ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 17.294163ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 17.424966ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 17.02576ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 17.203362ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 17.629169ms)
Jan 26 02:26:05.269: INFO: (15) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 18.36088ms)
Jan 26 02:26:05.270: INFO: (15) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 18.242978ms)
Jan 26 02:26:05.272: INFO: (15) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 20.267209ms)
Jan 26 02:26:05.279: INFO: (16) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 6.736803ms)
Jan 26 02:26:05.279: INFO: (16) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 7.168209ms)
Jan 26 02:26:05.284: INFO: (16) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 10.941567ms)
Jan 26 02:26:05.284: INFO: (16) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 11.562677ms)
Jan 26 02:26:05.284: INFO: (16) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 11.247671ms)
Jan 26 02:26:05.284: INFO: (16) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 11.660578ms)
Jan 26 02:26:05.284: INFO: (16) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 11.658878ms)
Jan 26 02:26:05.285: INFO: (16) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.259187ms)
Jan 26 02:26:05.285: INFO: (16) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 11.939182ms)
Jan 26 02:26:05.285: INFO: (16) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 12.030883ms)
Jan 26 02:26:05.288: INFO: (16) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 15.10183ms)
Jan 26 02:26:05.290: INFO: (16) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 18.024775ms)
Jan 26 02:26:05.290: INFO: (16) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 17.851272ms)
Jan 26 02:26:05.291: INFO: (16) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 18.33828ms)
Jan 26 02:26:05.291: INFO: (16) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 18.288779ms)
Jan 26 02:26:05.291: INFO: (16) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 18.735686ms)
Jan 26 02:26:05.304: INFO: (17) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 12.822595ms)
Jan 26 02:26:05.304: INFO: (17) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 12.570191ms)
Jan 26 02:26:05.308: INFO: (17) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 16.472052ms)
Jan 26 02:26:05.308: INFO: (17) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 16.350849ms)
Jan 26 02:26:05.308: INFO: (17) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 16.720655ms)
Jan 26 02:26:05.309: INFO: (17) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 17.263163ms)
Jan 26 02:26:05.309: INFO: (17) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 18.169877ms)
Jan 26 02:26:05.309: INFO: (17) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 17.799971ms)
Jan 26 02:26:05.310: INFO: (17) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 18.128076ms)
Jan 26 02:26:05.310: INFO: (17) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 18.724486ms)
Jan 26 02:26:05.310: INFO: (17) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 18.798787ms)
Jan 26 02:26:05.312: INFO: (17) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 20.275009ms)
Jan 26 02:26:05.313: INFO: (17) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 21.470127ms)
Jan 26 02:26:05.313: INFO: (17) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 21.910035ms)
Jan 26 02:26:05.314: INFO: (17) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 21.715931ms)
Jan 26 02:26:05.314: INFO: (17) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 22.137438ms)
Jan 26 02:26:05.323: INFO: (18) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 7.85912ms)
Jan 26 02:26:05.337: INFO: (18) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 22.444642ms)
Jan 26 02:26:05.338: INFO: (18) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 22.96235ms)
Jan 26 02:26:05.338: INFO: (18) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 23.466258ms)
Jan 26 02:26:05.338: INFO: (18) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 23.663261ms)
Jan 26 02:26:05.338: INFO: (18) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 23.561359ms)
Jan 26 02:26:05.338: INFO: (18) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 23.57506ms)
Jan 26 02:26:05.339: INFO: (18) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 24.340172ms)
Jan 26 02:26:05.339: INFO: (18) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 24.665176ms)
Jan 26 02:26:05.340: INFO: (18) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 25.696392ms)
Jan 26 02:26:05.340: INFO: (18) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 25.382588ms)
Jan 26 02:26:05.340: INFO: (18) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 26.068998ms)
Jan 26 02:26:05.341: INFO: (18) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 26.582605ms)
Jan 26 02:26:05.341: INFO: (18) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 26.093998ms)
Jan 26 02:26:05.344: INFO: (18) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 29.610152ms)
Jan 26 02:26:05.345: INFO: (18) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 30.353763ms)
Jan 26 02:26:05.363: INFO: (19) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:462/proxy/: tls qux (200; 18.417381ms)
Jan 26 02:26:05.364: INFO: (19) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 18.831687ms)
Jan 26 02:26:05.364: INFO: (19) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:443/proxy/tlsrewritem... (200; 18.838788ms)
Jan 26 02:26:05.368: INFO: (19) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">test<... (200; 21.990235ms)
Jan 26 02:26:05.369: INFO: (19) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:160/proxy/: foo (200; 23.182154ms)
Jan 26 02:26:05.369: INFO: (19) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname2/proxy/: bar (200; 24.184469ms)
Jan 26 02:26:05.371: INFO: (19) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:1080/proxy/rewriteme">... (200; 24.961781ms)
Jan 26 02:26:05.371: INFO: (19) /api/v1/namespaces/proxy-6171/pods/http:proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 25.58389ms)
Jan 26 02:26:05.372: INFO: (19) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85:162/proxy/: bar (200; 26.763308ms)
Jan 26 02:26:05.373: INFO: (19) /api/v1/namespaces/proxy-6171/services/http:proxy-service-8rg4n:portname1/proxy/: foo (200; 27.421018ms)
Jan 26 02:26:05.373: INFO: (19) /api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/: <a href="/api/v1/namespaces/proxy-6171/pods/proxy-service-8rg4n-jpz85/proxy/rewriteme">test</a> (200; 27.200914ms)
Jan 26 02:26:05.373: INFO: (19) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname2/proxy/: tls qux (200; 27.926126ms)
Jan 26 02:26:05.374: INFO: (19) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname1/proxy/: foo (200; 27.754224ms)
Jan 26 02:26:05.374: INFO: (19) /api/v1/namespaces/proxy-6171/services/proxy-service-8rg4n:portname2/proxy/: bar (200; 28.023328ms)
Jan 26 02:26:05.374: INFO: (19) /api/v1/namespaces/proxy-6171/services/https:proxy-service-8rg4n:tlsportname1/proxy/: tls baz (200; 28.412733ms)
Jan 26 02:26:05.374: INFO: (19) /api/v1/namespaces/proxy-6171/pods/https:proxy-service-8rg4n-jpz85:460/proxy/: tls baz (200; 28.654337ms)
STEP: deleting ReplicationController proxy-service-8rg4n in namespace proxy-6171, will wait for the garbage collector to delete the pods
Jan 26 02:26:05.457: INFO: Deleting ReplicationController proxy-service-8rg4n took: 26.510604ms
Jan 26 02:26:05.557: INFO: Terminating ReplicationController proxy-service-8rg4n pods took: 100.922639ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 26 02:26:08.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6171" for this suite.

â€¢ [SLOW TEST:6.676 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":262,"skipped":4683,"failed":0}
SSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:08.190: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 26 02:26:10.383: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1777" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":4686,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:10.398: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:26:10.555: INFO: Waiting up to 5m0s for pod "downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251" in namespace "downward-api-497" to be "Succeeded or Failed"
Jan 26 02:26:10.562: INFO: Pod "downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251": Phase="Pending", Reason="", readiness=false. Elapsed: 7.445222ms
Jan 26 02:26:12.574: INFO: Pod "downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019853767s
Jan 26 02:26:14.583: INFO: Pod "downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028767154s
STEP: Saw pod success
Jan 26 02:26:14.583: INFO: Pod "downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251" satisfied condition "Succeeded or Failed"
Jan 26 02:26:14.588: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251 container client-container: <nil>
STEP: delete the pod
Jan 26 02:26:14.640: INFO: Waiting for pod downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251 to disappear
Jan 26 02:26:14.644: INFO: Pod downwardapi-volume-50ec9750-d575-4794-b58e-4da249b40251 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 02:26:14.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-497" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":4710,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:14.661: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:26:14.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3583" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":265,"skipped":4711,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:14.943: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6046
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:26:15.512: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:26:18.557: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:26:18.564: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8229-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:26:21.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6046" for this suite.
STEP: Destroying namespace "webhook-6046-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.990 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":266,"skipped":4829,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:21.942: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-995
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Jan 26 02:26:24.159: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 26 02:26:28.285: INFO: running pods: 2 < 3
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 26 02:26:30.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-995" for this suite.

â€¢ [SLOW TEST:8.419 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":267,"skipped":4843,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:30.362: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4657
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:26:30.512: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 26 02:26:33.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4657 --namespace=crd-publish-openapi-4657 create -f -'
Jan 26 02:26:34.976: INFO: stderr: ""
Jan 26 02:26:34.976: INFO: stdout: "e2e-test-crd-publish-openapi-3515-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 26 02:26:34.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4657 --namespace=crd-publish-openapi-4657 delete e2e-test-crd-publish-openapi-3515-crds test-cr'
Jan 26 02:26:35.122: INFO: stderr: ""
Jan 26 02:26:35.122: INFO: stdout: "e2e-test-crd-publish-openapi-3515-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jan 26 02:26:35.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4657 --namespace=crd-publish-openapi-4657 apply -f -'
Jan 26 02:26:35.400: INFO: stderr: ""
Jan 26 02:26:35.400: INFO: stdout: "e2e-test-crd-publish-openapi-3515-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 26 02:26:35.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4657 --namespace=crd-publish-openapi-4657 delete e2e-test-crd-publish-openapi-3515-crds test-cr'
Jan 26 02:26:35.502: INFO: stderr: ""
Jan 26 02:26:35.502: INFO: stdout: "e2e-test-crd-publish-openapi-3515-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Jan 26 02:26:35.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-4657 explain e2e-test-crd-publish-openapi-3515-crds'
Jan 26 02:26:36.439: INFO: stderr: ""
Jan 26 02:26:36.439: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3515-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:26:41.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4657" for this suite.

â€¢ [SLOW TEST:10.973 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":268,"skipped":4844,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:41.335: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9006
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Jan 26 02:26:41.480: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:26:44.488: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:26:58.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9006" for this suite.

â€¢ [SLOW TEST:17.243 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":269,"skipped":4844,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:26:58.581: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-9638
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-3724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-6950
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:27:05.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-9638" for this suite.
STEP: Destroying namespace "nsdeletetest-3724" for this suite.
Jan 26 02:27:05.077: INFO: Namespace nsdeletetest-3724 was already deleted
STEP: Destroying namespace "nsdeletetest-6950" for this suite.

â€¢ [SLOW TEST:6.503 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":270,"skipped":4867,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:05.087: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:27:05.248: INFO: Waiting up to 5m0s for pod "downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b" in namespace "downward-api-4406" to be "Succeeded or Failed"
Jan 26 02:27:05.259: INFO: Pod "downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b": Phase="Pending", Reason="", readiness=false. Elapsed: 10.814966ms
Jan 26 02:27:07.268: INFO: Pod "downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020463886s
Jan 26 02:27:09.276: INFO: Pod "downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02774407s
STEP: Saw pod success
Jan 26 02:27:09.276: INFO: Pod "downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b" satisfied condition "Succeeded or Failed"
Jan 26 02:27:09.279: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b container client-container: <nil>
STEP: delete the pod
Jan 26 02:27:09.300: INFO: Waiting for pod downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b to disappear
Jan 26 02:27:09.303: INFO: Pod downwardapi-volume-452e274c-c709-4124-997d-7df1e00ca00b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 02:27:09.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4406" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":271,"skipped":4880,"failed":0}
SSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:09.318: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6759
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-072e00d7-48b4-465f-ab6a-60c23a944400
STEP: Creating a pod to test consume secrets
Jan 26 02:27:09.497: INFO: Waiting up to 5m0s for pod "pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e" in namespace "secrets-6759" to be "Succeeded or Failed"
Jan 26 02:27:09.503: INFO: Pod "pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.519885ms
Jan 26 02:27:11.513: INFO: Pod "pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015302307s
Jan 26 02:27:13.519: INFO: Pod "pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021849954s
STEP: Saw pod success
Jan 26 02:27:13.519: INFO: Pod "pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e" satisfied condition "Succeeded or Failed"
Jan 26 02:27:13.523: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:27:13.549: INFO: Waiting for pod pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e to disappear
Jan 26 02:27:13.553: INFO: Pod pod-secrets-056a3803-5547-45e1-ba33-57fd90d56a5e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:27:13.553: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6759" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":272,"skipped":4885,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:13.568: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-278
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 26 02:27:13.759: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:13.759: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:13.759: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:13.762: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:27:13.762: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:27:14.772: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:14.772: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:14.772: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:14.776: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:27:14.776: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:27:15.769: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:15.769: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:15.770: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:15.774: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:27:15.774: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Jan 26 02:27:15.801: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38691"},"items":null}

Jan 26 02:27:15.805: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38691"},"items":[{"metadata":{"name":"daemon-set-b75h7","generateName":"daemon-set-","namespace":"daemonsets-278","uid":"9ebb6379-a17d-4ca5-849d-b8b9ed7a5782","resourceVersion":"38689","creationTimestamp":"2023-01-26T02:27:13Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24a1974e-8afa-4d01-9c5e-1dd612213cd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24a1974e-8afa-4d01-9c5e-1dd612213cd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.47\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-clxbw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-clxbw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-linuxpool-34140226-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-linuxpool-34140226-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"}],"hostIP":"10.240.0.4","podIP":"10.244.1.47","podIPs":[{"ip":"10.244.1.47"}],"startTime":"2023-01-26T02:27:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-26T02:27:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://58cac038118386805ca85fb1aa6f18759cf86a0e7166d2d062c2d4566c2d7582","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-c9zwm","generateName":"daemon-set-","namespace":"daemonsets-278","uid":"52622283-61ba-4938-b398-c3271941c7aa","resourceVersion":"38686","creationTimestamp":"2023-01-26T02:27:13Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24a1974e-8afa-4d01-9c5e-1dd612213cd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24a1974e-8afa-4d01-9c5e-1dd612213cd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.151\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8f95m","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8f95m","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-linuxpool-34140226-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-linuxpool-34140226-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"}],"hostIP":"10.240.0.6","podIP":"10.244.5.151","podIPs":[{"ip":"10.244.5.151"}],"startTime":"2023-01-26T02:27:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-26T02:27:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://790f086e2be44ec1a93b4c709a1575e488f4781c28c00581799cf775c0849032","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ddhdv","generateName":"daemon-set-","namespace":"daemonsets-278","uid":"30cdcd46-1d3b-4c94-96d1-3e3b95aa1ffe","resourceVersion":"38684","creationTimestamp":"2023-01-26T02:27:13Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24a1974e-8afa-4d01-9c5e-1dd612213cd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24a1974e-8afa-4d01-9c5e-1dd612213cd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-26T02:27:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.220\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8v2rv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8v2rv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-linuxpool-34140226-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-linuxpool-34140226-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-26T02:27:13Z"}],"hostIP":"10.240.0.5","podIP":"10.244.2.220","podIPs":[{"ip":"10.244.2.220"}],"startTime":"2023-01-26T02:27:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-26T02:27:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://6c30dcac0a4d7c94232cd1a4f61b5f3498f9996e1cc026a425966fc15bcf678d","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:27:15.820: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-278" for this suite.
â€¢{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":273,"skipped":4904,"failed":0}
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:15.850: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3651
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3651
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:27:16.035: INFO: Found 0 stateful pods, waiting for 1
Jan 26 02:27:26.042: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Jan 26 02:27:26.082: INFO: Found 1 stateful pods, waiting for 2
Jan 26 02:27:36.095: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 26 02:27:36.095: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 02:27:36.121: INFO: Deleting all statefulset in ns statefulset-3651
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 02:27:36.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3651" for this suite.

â€¢ [SLOW TEST:20.381 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":274,"skipped":4909,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:36.234: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Jan 26 02:27:38.972: INFO: Successfully updated pod "adopt-release-2kf6q"
STEP: Checking that the Job readopts the Pod
Jan 26 02:27:38.972: INFO: Waiting up to 15m0s for pod "adopt-release-2kf6q" in namespace "job-8693" to be "adopted"
Jan 26 02:27:38.976: INFO: Pod "adopt-release-2kf6q": Phase="Running", Reason="", readiness=true. Elapsed: 4.121464ms
Jan 26 02:27:40.986: INFO: Pod "adopt-release-2kf6q": Phase="Running", Reason="", readiness=true. Elapsed: 2.013738968s
Jan 26 02:27:40.986: INFO: Pod "adopt-release-2kf6q" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Jan 26 02:27:41.515: INFO: Successfully updated pod "adopt-release-2kf6q"
STEP: Checking that the Job releases the Pod
Jan 26 02:27:41.515: INFO: Waiting up to 15m0s for pod "adopt-release-2kf6q" in namespace "job-8693" to be "released"
Jan 26 02:27:41.518: INFO: Pod "adopt-release-2kf6q": Phase="Running", Reason="", readiness=true. Elapsed: 3.081048ms
Jan 26 02:27:43.523: INFO: Pod "adopt-release-2kf6q": Phase="Running", Reason="", readiness=true. Elapsed: 2.008184282s
Jan 26 02:27:43.523: INFO: Pod "adopt-release-2kf6q" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 26 02:27:43.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8693" for this suite.

â€¢ [SLOW TEST:7.300 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":275,"skipped":4968,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:43.536: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 26 02:27:43.682: INFO: Waiting up to 5m0s for pod "pod-d0c3849f-247d-4dfc-8fd9-51eecf508735" in namespace "emptydir-6136" to be "Succeeded or Failed"
Jan 26 02:27:43.686: INFO: Pod "pod-d0c3849f-247d-4dfc-8fd9-51eecf508735": Phase="Pending", Reason="", readiness=false. Elapsed: 3.377152ms
Jan 26 02:27:45.697: INFO: Pod "pod-d0c3849f-247d-4dfc-8fd9-51eecf508735": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015254502s
Jan 26 02:27:47.715: INFO: Pod "pod-d0c3849f-247d-4dfc-8fd9-51eecf508735": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032957553s
STEP: Saw pod success
Jan 26 02:27:47.715: INFO: Pod "pod-d0c3849f-247d-4dfc-8fd9-51eecf508735" satisfied condition "Succeeded or Failed"
Jan 26 02:27:47.719: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-d0c3849f-247d-4dfc-8fd9-51eecf508735 container test-container: <nil>
STEP: delete the pod
Jan 26 02:27:47.743: INFO: Waiting for pod pod-d0c3849f-247d-4dfc-8fd9-51eecf508735 to disappear
Jan 26 02:27:47.746: INFO: Pod pod-d0c3849f-247d-4dfc-8fd9-51eecf508735 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:27:47.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6136" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":4995,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:47.770: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7463
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 26 02:27:47.947: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7463" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":277,"skipped":5005,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:48.073: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:27:48.240: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f" in namespace "projected-5130" to be "Succeeded or Failed"
Jan 26 02:27:48.244: INFO: Pod "downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.961561ms
Jan 26 02:27:50.254: INFO: Pod "downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014538303s
Jan 26 02:27:52.263: INFO: Pod "downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02349962s
STEP: Saw pod success
Jan 26 02:27:52.263: INFO: Pod "downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f" satisfied condition "Succeeded or Failed"
Jan 26 02:27:52.267: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f container client-container: <nil>
STEP: delete the pod
Jan 26 02:27:52.292: INFO: Waiting for pod downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f to disappear
Jan 26 02:27:52.296: INFO: Pod downwardapi-volume-7803cb9a-fe5c-41ba-b9fd-585586d73d5f no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 02:27:52.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5130" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":278,"skipped":5040,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:52.324: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 26 02:27:52.524: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:52.524: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:52.524: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:52.528: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:27:52.528: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:27:53.537: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:53.537: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:53.537: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:53.541: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 02:27:53.541: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:27:54.536: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:54.536: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:54.536: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:27:54.540: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:27:54.540: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Jan 26 02:27:54.548: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Jan 26 02:27:54.558: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Jan 26 02:27:54.560: INFO: Observed &DaemonSet event: ADDED
Jan 26 02:27:54.560: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.560: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.560: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.561: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.561: INFO: Found daemon set daemon-set in namespace daemonsets-9173 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 26 02:27:54.561: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Jan 26 02:27:54.624: INFO: Observed &DaemonSet event: ADDED
Jan 26 02:27:54.624: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.624: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.625: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.625: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.625: INFO: Observed daemon set daemon-set in namespace daemonsets-9173 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 26 02:27:54.625: INFO: Observed &DaemonSet event: MODIFIED
Jan 26 02:27:54.625: INFO: Found daemon set daemon-set in namespace daemonsets-9173 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jan 26 02:27:54.625: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9173, will wait for the garbage collector to delete the pods
Jan 26 02:27:54.691: INFO: Deleting DaemonSet.extensions daemon-set took: 7.033811ms
Jan 26 02:27:54.791: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.713095ms
Jan 26 02:27:57.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:27:57.298: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 02:27:57.301: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39146"},"items":null}

Jan 26 02:27:57.304: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39146"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:27:57.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9173" for this suite.

â€¢ [SLOW TEST:5.015 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":279,"skipped":5070,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:27:57.342: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9865
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 26 02:27:57.499: INFO: Waiting up to 5m0s for pod "downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e" in namespace "downward-api-9865" to be "Succeeded or Failed"
Jan 26 02:27:57.504: INFO: Pod "downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.327969ms
Jan 26 02:27:59.517: INFO: Pod "downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017908964s
Jan 26 02:28:01.526: INFO: Pod "downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027072095s
STEP: Saw pod success
Jan 26 02:28:01.526: INFO: Pod "downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e" satisfied condition "Succeeded or Failed"
Jan 26 02:28:01.530: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e container dapi-container: <nil>
STEP: delete the pod
Jan 26 02:28:01.554: INFO: Waiting for pod downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e to disappear
Jan 26 02:28:01.557: INFO: Pod downward-api-8a40d7ab-bba9-473e-a022-2d087bbf385e no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 26 02:28:01.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9865" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":280,"skipped":5140,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:01.571: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Jan 26 02:28:01.819: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39193 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 02:28:01.820: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39194 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 02:28:01.820: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39195 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Jan 26 02:28:11.858: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39256 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 02:28:11.858: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39257 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 02:28:11.859: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6352  aae913ce-1c52-43b2-90e2-ee34f12bdb5f 39258 0 2023-01-26 02:28:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-26 02:28:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 26 02:28:11.859: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6352" for this suite.

â€¢ [SLOW TEST:10.301 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":281,"skipped":5147,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:11.873: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:28:12.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9909" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":282,"skipped":5185,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:12.089: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3371
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3371
STEP: creating service affinity-clusterip-transition in namespace services-3371
STEP: creating replication controller affinity-clusterip-transition in namespace services-3371
I0126 02:28:12.258821      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-3371, replica count: 3
I0126 02:28:15.310065      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 26 02:28:15.325: INFO: Creating new exec pod
Jan 26 02:28:18.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3371 exec execpod-affinitypfq62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Jan 26 02:28:18.565: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jan 26 02:28:18.565: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:28:18.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3371 exec execpod-affinitypfq62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.61.60 80'
Jan 26 02:28:18.775: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.0.61.60 80\nConnection to 10.0.61.60 80 port [tcp/http] succeeded!\n"
Jan 26 02:28:18.775: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 26 02:28:18.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3371 exec execpod-affinitypfq62 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.61.60:80/ ; done'
Jan 26 02:28:19.198: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n"
Jan 26 02:28:19.199: INFO: stdout: "\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-rkpsb\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-rkpsb\naffinity-clusterip-transition-rkpsb\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-rkpsb\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-rkpsb\naffinity-clusterip-transition-wrzc8\naffinity-clusterip-transition-twf8j"
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-rkpsb
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-rkpsb
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-rkpsb
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-rkpsb
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-rkpsb
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-wrzc8
Jan 26 02:28:19.199: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=services-3371 exec execpod-affinitypfq62 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.61.60:80/ ; done'
Jan 26 02:28:19.594: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.61.60:80/\n"
Jan 26 02:28:19.594: INFO: stdout: "\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j\naffinity-clusterip-transition-twf8j"
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Received response from host: affinity-clusterip-transition-twf8j
Jan 26 02:28:19.594: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3371, will wait for the garbage collector to delete the pods
Jan 26 02:28:19.671: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.698705ms
Jan 26 02:28:19.772: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.725286ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 02:28:21.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3371" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:9.523 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":283,"skipped":5198,"failed":0}
SSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:21.612: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 26 02:28:21.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-537" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":284,"skipped":5201,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:21.834: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8786
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-8786/configmap-test-ff28e8e9-fd0e-433a-b84d-b398d711b261
STEP: Creating a pod to test consume configMaps
Jan 26 02:28:21.997: INFO: Waiting up to 5m0s for pod "pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b" in namespace "configmap-8786" to be "Succeeded or Failed"
Jan 26 02:28:22.012: INFO: Pod "pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b": Phase="Pending", Reason="", readiness=false. Elapsed: 15.317541ms
Jan 26 02:28:24.021: INFO: Pod "pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024269566s
Jan 26 02:28:26.031: INFO: Pod "pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03437374s
STEP: Saw pod success
Jan 26 02:28:26.031: INFO: Pod "pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b" satisfied condition "Succeeded or Failed"
Jan 26 02:28:26.036: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b container env-test: <nil>
STEP: delete the pod
Jan 26 02:28:26.066: INFO: Waiting for pod pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b to disappear
Jan 26 02:28:26.069: INFO: Pod pod-configmaps-e7166856-90d9-4243-abd1-48301a43f10b no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:28:26.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8786" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5238,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:26.086: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-3671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Jan 26 02:28:26.239: INFO: Pod name pod-release: Found 0 pods out of 1
Jan 26 02:28:31.259: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 26 02:28:32.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3671" for this suite.

â€¢ [SLOW TEST:6.228 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":286,"skipped":5254,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:32.317: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-2974
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 26 02:28:32.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-2974" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:32.525: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4721
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 26 02:28:32.671: INFO: Waiting up to 5m0s for pod "pod-e326e514-aed9-411d-b197-9d38ce7fc604" in namespace "emptydir-4721" to be "Succeeded or Failed"
Jan 26 02:28:32.681: INFO: Pod "pod-e326e514-aed9-411d-b197-9d38ce7fc604": Phase="Pending", Reason="", readiness=false. Elapsed: 9.041343ms
Jan 26 02:28:34.691: INFO: Pod "pod-e326e514-aed9-411d-b197-9d38ce7fc604": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019268496s
Jan 26 02:28:36.698: INFO: Pod "pod-e326e514-aed9-411d-b197-9d38ce7fc604": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026202602s
STEP: Saw pod success
Jan 26 02:28:36.698: INFO: Pod "pod-e326e514-aed9-411d-b197-9d38ce7fc604" satisfied condition "Succeeded or Failed"
Jan 26 02:28:36.701: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-e326e514-aed9-411d-b197-9d38ce7fc604 container test-container: <nil>
STEP: delete the pod
Jan 26 02:28:36.721: INFO: Waiting for pod pod-e326e514-aed9-411d-b197-9d38ce7fc604 to disappear
Jan 26 02:28:36.725: INFO: Pod pod-e326e514-aed9-411d-b197-9d38ce7fc604 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:28:36.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4721" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5290,"failed":0}
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:36.739: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-3717
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 26 02:28:36.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-3717" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":289,"skipped":5296,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:36.923: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-9283
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 26 02:28:37.091: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:28:39.100: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 26 02:28:39.119: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:28:41.130: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 26 02:28:41.152: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 26 02:28:41.155: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 26 02:28:43.156: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 26 02:28:43.162: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 26 02:28:45.157: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 26 02:28:45.168: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 26 02:28:45.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-9283" for this suite.

â€¢ [SLOW TEST:8.318 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":290,"skipped":5314,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:45.242: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-5698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:28:45.448: INFO: Got root ca configmap in namespace "svcaccounts-5698"
Jan 26 02:28:45.461: INFO: Deleted root ca configmap in namespace "svcaccounts-5698"
STEP: waiting for a new root ca configmap created
Jan 26 02:28:45.969: INFO: Recreated root ca configmap in namespace "svcaccounts-5698"
Jan 26 02:28:45.977: INFO: Updated root ca configmap in namespace "svcaccounts-5698"
STEP: waiting for the root ca configmap reconciled
Jan 26 02:28:46.482: INFO: Reconciled root ca configmap in namespace "svcaccounts-5698"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 02:28:46.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5698" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":291,"skipped":5346,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:28:46.504: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-667
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:28:46.658: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Creating first CR 
Jan 26 02:28:49.262: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:28:49Z]] name:name1 resourceVersion:39733 uid:1d13127d-789e-43f9-ba42-e444bf993f36] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Jan 26 02:28:59.276: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:28:59Z]] name:name2 resourceVersion:39782 uid:8e4789f4-e318-43c5-a4e5-694e3275f704] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Jan 26 02:29:09.292: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:29:09Z]] name:name1 resourceVersion:39807 uid:1d13127d-789e-43f9-ba42-e444bf993f36] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Jan 26 02:29:19.314: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:29:19Z]] name:name2 resourceVersion:39832 uid:8e4789f4-e318-43c5-a4e5-694e3275f704] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Jan 26 02:29:29.340: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:29:09Z]] name:name1 resourceVersion:39859 uid:1d13127d-789e-43f9-ba42-e444bf993f36] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Jan 26 02:29:39.356: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-26T02:28:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-26T02:29:19Z]] name:name2 resourceVersion:39884 uid:8e4789f4-e318-43c5-a4e5-694e3275f704] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:29:49.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-667" for this suite.

â€¢ [SLOW TEST:63.452 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":292,"skipped":5352,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:29:49.957: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7084
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Jan 26 02:29:50.124: INFO: Waiting up to 5m0s for pod "pod-c6375815-320c-4384-8818-f1d0be6c1c22" in namespace "emptydir-7084" to be "Succeeded or Failed"
Jan 26 02:29:50.128: INFO: Pod "pod-c6375815-320c-4384-8818-f1d0be6c1c22": Phase="Pending", Reason="", readiness=false. Elapsed: 3.454853ms
Jan 26 02:29:52.138: INFO: Pod "pod-c6375815-320c-4384-8818-f1d0be6c1c22": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013481521s
Jan 26 02:29:54.145: INFO: Pod "pod-c6375815-320c-4384-8818-f1d0be6c1c22": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020235499s
STEP: Saw pod success
Jan 26 02:29:54.145: INFO: Pod "pod-c6375815-320c-4384-8818-f1d0be6c1c22" satisfied condition "Succeeded or Failed"
Jan 26 02:29:54.148: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-c6375815-320c-4384-8818-f1d0be6c1c22 container test-container: <nil>
STEP: delete the pod
Jan 26 02:29:54.192: INFO: Waiting for pod pod-c6375815-320c-4384-8818-f1d0be6c1c22 to disappear
Jan 26 02:29:54.196: INFO: Pod pod-c6375815-320c-4384-8818-f1d0be6c1c22 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:29:54.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7084" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":293,"skipped":5353,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:29:54.212: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 26 02:29:54.393: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 26 02:29:54.398: INFO: starting watch
STEP: patching
STEP: updating
Jan 26 02:29:54.423: INFO: waiting for watch events with expected annotations
Jan 26 02:29:54.423: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 26 02:29:54.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4110" for this suite.
â€¢{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":294,"skipped":5382,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:29:54.541: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2018
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Jan 26 02:29:54.678: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Jan 26 02:30:08.359: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:30:13.008: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:30:26.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2018" for this suite.

â€¢ [SLOW TEST:31.638 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":295,"skipped":5440,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:26.181: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4500
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 02:30:39.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4500" for this suite.

â€¢ [SLOW TEST:13.317 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":296,"skipped":5441,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:39.500: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1003
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1003.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1003.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 163.22.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.22.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.22.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.22.163_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1003.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1003.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1003.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1003.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1003.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 163.22.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.22.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.22.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.22.163_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 26 02:30:41.747: INFO: Unable to read wheezy_udp@dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.751: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.755: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.759: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.779: INFO: Unable to read jessie_udp@dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.783: INFO: Unable to read jessie_tcp@dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.787: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.791: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local from pod dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93: the server could not find the requested resource (get pods dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93)
Jan 26 02:30:41.806: INFO: Lookups using dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93 failed for: [wheezy_udp@dns-test-service.dns-1003.svc.cluster.local wheezy_tcp@dns-test-service.dns-1003.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local jessie_udp@dns-test-service.dns-1003.svc.cluster.local jessie_tcp@dns-test-service.dns-1003.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1003.svc.cluster.local]

Jan 26 02:30:46.875: INFO: DNS probes using dns-1003/dns-test-d5d151e1-0b8e-43d3-aebc-42ea032b9d93 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 26 02:30:46.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1003" for this suite.

â€¢ [SLOW TEST:7.482 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":297,"skipped":5475,"failed":0}
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:46.986: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5825
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 26 02:30:47.170: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 26 02:30:47.190: INFO: Waiting for terminating namespaces to be deleted...
Jan 26 02:30:47.195: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-0 before test
Jan 26 02:30:47.205: INFO: azure-ip-masq-agent-ndp84 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 02:30:47.205: INFO: cloud-node-manager-fp92n from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 02:30:47.205: INFO: kube-proxy-qm5rk from kube-system started at 2023-01-26 00:32:47 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 02:30:47.205: INFO: sonobuoy from sonobuoy started at 2023-01-26 01:08:31 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 26 02:30:47.205: INFO: sonobuoy-e2e-job-56b4e4a96bd64cd3 from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container e2e ready: true, restart count 0
Jan 26 02:30:47.205: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 02:30:47.205: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-8jz5s from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 02:30:47.205: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 02:30:47.205: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 02:30:47.205: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-1 before test
Jan 26 02:30:47.223: INFO: azure-ip-masq-agent-wthtk from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.223: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 02:30:47.223: INFO: cloud-node-manager-4rmf9 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.223: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 02:30:47.223: INFO: coredns-75bdb78f8b-9bkrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.224: INFO: 	Container coredns ready: true, restart count 0
Jan 26 02:30:47.224: INFO: kube-proxy-89dvc from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.224: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 02:30:47.224: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-n9kmj from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 02:30:47.224: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 02:30:47.224: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 26 02:30:47.224: INFO: 
Logging pods the apiserver thinks is on node k8s-linuxpool-34140226-2 before test
Jan 26 02:30:47.236: INFO: azure-ip-masq-agent-xxzsm from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.236: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 26 02:30:47.236: INFO: cloud-node-manager-j9w2p from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.236: INFO: 	Container cloud-node-manager ready: true, restart count 0
Jan 26 02:30:47.236: INFO: coredns-autoscaler-84bb8dc9d5-lcvrc from kube-system started at 2023-01-26 00:32:45 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.236: INFO: 	Container autoscaler ready: true, restart count 0
Jan 26 02:30:47.236: INFO: kube-proxy-ksbr8 from kube-system started at 2023-01-26 00:32:46 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.236: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 26 02:30:47.236: INFO: metrics-server-66dd6687d9-6pdpz from kube-system started at 2023-01-26 00:32:49 +0000 UTC (1 container statuses recorded)
Jan 26 02:30:47.236: INFO: 	Container metrics-server ready: true, restart count 0
Jan 26 02:30:47.236: INFO: sonobuoy-systemd-logs-daemon-set-085b76f029c54706-gsrzg from sonobuoy started at 2023-01-26 01:08:36 +0000 UTC (2 container statuses recorded)
Jan 26 02:30:47.237: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 26 02:30:47.237: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.173dbb0080e398ae], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/master: true}, 6 node(s) didn't match Pod's node affinity/selector. preemption: 0/6 nodes are available: 6 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:30:48.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5825" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":298,"skipped":5479,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:48.311: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-54
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:30:48.480: INFO: Waiting up to 5m0s for pod "downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e" in namespace "projected-54" to be "Succeeded or Failed"
Jan 26 02:30:48.487: INFO: Pod "downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.806308ms
Jan 26 02:30:50.502: INFO: Pod "downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021099224s
Jan 26 02:30:52.508: INFO: Pod "downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027480505s
STEP: Saw pod success
Jan 26 02:30:52.508: INFO: Pod "downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e" satisfied condition "Succeeded or Failed"
Jan 26 02:30:52.512: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e container client-container: <nil>
STEP: delete the pod
Jan 26 02:30:52.533: INFO: Waiting for pod downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e to disappear
Jan 26 02:30:52.537: INFO: Pod downwardapi-volume-10ef4f40-f0f9-4376-b754-237d474f9e4e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 02:30:52.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-54" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5500,"failed":0}

------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:52.549: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Jan 26 02:30:52.708: INFO: Waiting up to 5m0s for pod "var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221" in namespace "var-expansion-8681" to be "Succeeded or Failed"
Jan 26 02:30:52.731: INFO: Pod "var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221": Phase="Pending", Reason="", readiness=false. Elapsed: 22.891167ms
Jan 26 02:30:54.741: INFO: Pod "var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032292496s
Jan 26 02:30:56.751: INFO: Pod "var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.042276134s
STEP: Saw pod success
Jan 26 02:30:56.751: INFO: Pod "var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221" satisfied condition "Succeeded or Failed"
Jan 26 02:30:56.755: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221 container dapi-container: <nil>
STEP: delete the pod
Jan 26 02:30:56.783: INFO: Waiting for pod var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221 to disappear
Jan 26 02:30:56.787: INFO: Pod var-expansion-65e59b8e-20ec-4a51-a904-5474a505e221 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 02:30:56.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8681" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5500,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:30:56.800: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Jan 26 02:32:57.540: INFO: Successfully updated pod "var-expansion-c3b39466-79dd-41cb-a145-225f521a1daf"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Jan 26 02:32:59.551: INFO: Deleting pod "var-expansion-c3b39466-79dd-41cb-a145-225f521a1daf" in namespace "var-expansion-1425"
Jan 26 02:32:59.562: INFO: Wait up to 5m0s for pod "var-expansion-c3b39466-79dd-41cb-a145-225f521a1daf" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 02:33:31.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1425" for this suite.

â€¢ [SLOW TEST:154.787 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":301,"skipped":5509,"failed":0}
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:33:31.587: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Jan 26 02:33:31.742: INFO: created test-podtemplate-1
Jan 26 02:33:31.748: INFO: created test-podtemplate-2
Jan 26 02:33:31.753: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Jan 26 02:33:31.757: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Jan 26 02:33:31.776: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 26 02:33:31.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-587" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":302,"skipped":5509,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:33:31.791: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-1341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Jan 26 02:33:31.939: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 26 02:33:31.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-1341" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":303,"skipped":5519,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:33:31.954: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-7827
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:33:32.098: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:33:33.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-7827" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":304,"skipped":5564,"failed":0}
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:33:33.156: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 26 02:33:33.379: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 26 02:34:33.476: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:33.479: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-3751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:34:33.683: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Jan 26 02:34:33.706: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Jan 26 02:34:33.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-3751" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:34:33.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3826" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:60.663 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":305,"skipped":5570,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:33.819: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:34:33.966: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jan 26 02:34:34.011: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 26 02:34:39.064: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 26 02:34:39.064: INFO: Creating deployment "test-rolling-update-deployment"
Jan 26 02:34:39.075: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jan 26 02:34:39.082: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jan 26 02:34:41.094: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jan 26 02:34:41.098: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 26 02:34:41.107: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-3474  00d8f1bf-7357-4052-86ac-1b689efe4500 41085 1 2023-01-26 02:34:39 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2023-01-26 02:34:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:34:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00ab736f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-26 02:34:39 +0000 UTC,LastTransitionTime:2023-01-26 02:34:39 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2023-01-26 02:34:40 +0000 UTC,LastTransitionTime:2023-01-26 02:34:39 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 26 02:34:41.111: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-3474  2d09a26e-0136-452f-91d6-ee18fea1833d 41075 1 2023-01-26 02:34:39 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 00d8f1bf-7357-4052-86ac-1b689efe4500 0xc00ab73bc7 0xc00ab73bc8}] []  [{kube-controller-manager Update apps/v1 2023-01-26 02:34:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00d8f1bf-7357-4052-86ac-1b689efe4500\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:34:40 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00ab73c78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 26 02:34:41.111: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jan 26 02:34:41.111: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-3474  542cd707-dea6-4764-bb6c-9a0ddb42c820 41084 2 2023-01-26 02:34:33 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 00d8f1bf-7357-4052-86ac-1b689efe4500 0xc00ab73a97 0xc00ab73a98}] []  [{e2e.test Update apps/v1 2023-01-26 02:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:34:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"00d8f1bf-7357-4052-86ac-1b689efe4500\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-26 02:34:40 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00ab73b58 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 26 02:34:41.115: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-8wtgp" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-8wtgp test-rolling-update-deployment-67c8f74c6c- deployment-3474  28241bd0-a495-448a-b804-49f4d7dc1477 41074 0 2023-01-26 02:34:39 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c 2d09a26e-0136-452f-91d6-ee18fea1833d 0xc00ae83a57 0xc00ae83a58}] []  [{kube-controller-manager Update v1 2023-01-26 02:34:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d09a26e-0136-452f-91d6-ee18fea1833d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-26 02:34:40 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.235\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4srfv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4srfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-linuxpool-34140226-2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:34:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:34:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:34:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-26 02:34:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.5,PodIP:10.244.2.235,StartTime:2023-01-26 02:34:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-26 02:34:39 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://485528e348fbb39a5b9507dc12a980d0aa29c085eea75c1a7426fd35c73c7221,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.235,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 26 02:34:41.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3474" for this suite.

â€¢ [SLOW TEST:7.311 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":306,"skipped":5635,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:41.130: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 26 02:34:41.350: INFO: The status of Pod annotationupdate6ba42445-e512-4e59-ae23-ee6676aacc76 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:34:43.362: INFO: The status of Pod annotationupdate6ba42445-e512-4e59-ae23-ee6676aacc76 is Running (Ready = true)
Jan 26 02:34:43.919: INFO: Successfully updated pod "annotationupdate6ba42445-e512-4e59-ae23-ee6676aacc76"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 26 02:34:47.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8032" for this suite.

â€¢ [SLOW TEST:6.838 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5656,"failed":0}
SSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:47.969: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 26 02:34:48.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3420" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":308,"skipped":5664,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:48.231: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5340
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:34:48.385: INFO: Waiting up to 5m0s for pod "downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9" in namespace "downward-api-5340" to be "Succeeded or Failed"
Jan 26 02:34:48.392: INFO: Pod "downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.36512ms
Jan 26 02:34:50.399: INFO: Pod "downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013892866s
Jan 26 02:34:52.411: INFO: Pod "downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026565928s
STEP: Saw pod success
Jan 26 02:34:52.411: INFO: Pod "downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9" satisfied condition "Succeeded or Failed"
Jan 26 02:34:52.415: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9 container client-container: <nil>
STEP: delete the pod
Jan 26 02:34:52.461: INFO: Waiting for pod downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9 to disappear
Jan 26 02:34:52.465: INFO: Pod downwardapi-volume-de0fcd4b-309c-4088-bf8e-e5894f9872f9 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 02:34:52.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5340" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5689,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:52.483: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-4f6301ed-7d18-494e-bd88-0007e1650086
STEP: Creating configMap with name cm-test-opt-upd-4e4214c0-2e99-418a-957a-e25de435c3d6
STEP: Creating the pod
Jan 26 02:34:52.662: INFO: The status of Pod pod-projected-configmaps-da6235b6-716a-4f6e-b427-ac0d7f4c897b is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:34:54.670: INFO: The status of Pod pod-projected-configmaps-da6235b6-716a-4f6e-b427-ac0d7f4c897b is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-4f6301ed-7d18-494e-bd88-0007e1650086
STEP: Updating configmap cm-test-opt-upd-4e4214c0-2e99-418a-957a-e25de435c3d6
STEP: Creating configMap with name cm-test-opt-create-a94294bc-0e11-48ee-bc28-58d018ad9243
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 26 02:34:56.775: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8379" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":310,"skipped":5701,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:34:56.793: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:34:59.029: INFO: Deleting pod "var-expansion-2fcad477-f0a5-4fbb-ae1b-382cc9daf074" in namespace "var-expansion-3738"
Jan 26 02:34:59.042: INFO: Wait up to 5m0s for pod "var-expansion-2fcad477-f0a5-4fbb-ae1b-382cc9daf074" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 02:35:01.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3738" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":311,"skipped":5754,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:01.070: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 02:35:01.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6015" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":312,"skipped":5761,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:01.310: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:35:01.465: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e" in namespace "downward-api-9332" to be "Succeeded or Failed"
Jan 26 02:35:01.473: INFO: Pod "downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.699125ms
Jan 26 02:35:03.482: INFO: Pod "downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e": Phase="Running", Reason="", readiness=false. Elapsed: 2.016885527s
Jan 26 02:35:05.491: INFO: Pod "downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025400917s
STEP: Saw pod success
Jan 26 02:35:05.491: INFO: Pod "downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e" satisfied condition "Succeeded or Failed"
Jan 26 02:35:05.494: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e container client-container: <nil>
STEP: delete the pod
Jan 26 02:35:05.572: INFO: Waiting for pod downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e to disappear
Jan 26 02:35:05.576: INFO: Pod downwardapi-volume-ad5ae2ab-c481-4e67-a2d1-189bda90739e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 02:35:05.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9332" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":313,"skipped":5807,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:05.594: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2255
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-1cba630f-9374-4aeb-bd4d-4d7341af5483 in namespace container-probe-2255
Jan 26 02:35:07.780: INFO: Started pod liveness-1cba630f-9374-4aeb-bd4d-4d7341af5483 in namespace container-probe-2255
STEP: checking the pod's current state and verifying that restartCount is present
Jan 26 02:35:07.783: INFO: Initial restart count of pod liveness-1cba630f-9374-4aeb-bd4d-4d7341af5483 is 0
Jan 26 02:35:27.877: INFO: Restart count of pod container-probe-2255/liveness-1cba630f-9374-4aeb-bd4d-4d7341af5483 is now 1 (20.094133121s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 26 02:35:27.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2255" for this suite.

â€¢ [SLOW TEST:22.314 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5860,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:27.908: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1868
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 26 02:35:28.170: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:28.170: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:28.170: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:28.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:35:28.174: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:35:29.237: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:29.237: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:29.237: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:29.242: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 26 02:35:29.242: INFO: Node k8s-linuxpool-34140226-1 is running 0 daemon pod, expected 1
Jan 26 02:35:30.183: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.183: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.184: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:35:30.188: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Jan 26 02:35:30.211: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.211: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.211: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:30.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 26 02:35:30.215: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 02:35:31.224: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:31.224: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:31.224: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:31.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 26 02:35:31.229: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 02:35:32.223: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:32.223: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:32.223: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:32.228: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 26 02:35:32.228: INFO: Node k8s-linuxpool-34140226-2 is running 0 daemon pod, expected 1
Jan 26 02:35:33.227: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:33.228: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:33.228: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:35:33.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:35:33.233: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1868, will wait for the garbage collector to delete the pods
Jan 26 02:35:33.298: INFO: Deleting DaemonSet.extensions daemon-set took: 6.852513ms
Jan 26 02:35:33.398: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.124048ms
Jan 26 02:35:36.307: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:35:36.307: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 02:35:36.310: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41576"},"items":null}

Jan 26 02:35:36.313: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41576"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:35:36.328: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1868" for this suite.

â€¢ [SLOW TEST:8.433 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":315,"skipped":5872,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:36.347: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1355
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-1355
STEP: Waiting until pod test-pod will start running in namespace statefulset-1355
STEP: Creating statefulset with conflicting port in namespace statefulset-1355
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1355
Jan 26 02:35:38.572: INFO: Observed stateful pod in namespace: statefulset-1355, name: ss-0, uid: a87d98be-7e4e-4ea8-b702-e0fcf3edac34, status phase: Pending. Waiting for statefulset controller to delete.
Jan 26 02:35:38.591: INFO: Observed stateful pod in namespace: statefulset-1355, name: ss-0, uid: a87d98be-7e4e-4ea8-b702-e0fcf3edac34, status phase: Failed. Waiting for statefulset controller to delete.
Jan 26 02:35:38.612: INFO: Observed stateful pod in namespace: statefulset-1355, name: ss-0, uid: a87d98be-7e4e-4ea8-b702-e0fcf3edac34, status phase: Failed. Waiting for statefulset controller to delete.
Jan 26 02:35:38.613: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1355
STEP: Removing pod with conflicting port in namespace statefulset-1355
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1355 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 26 02:35:40.652: INFO: Deleting all statefulset in ns statefulset-1355
Jan 26 02:35:40.656: INFO: Scaling statefulset ss to 0
Jan 26 02:35:50.685: INFO: Waiting for statefulset status.replicas updated to 0
Jan 26 02:35:50.689: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 26 02:35:50.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1355" for this suite.

â€¢ [SLOW TEST:14.377 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":316,"skipped":5911,"failed":0}
S
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:35:50.724: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 26 02:36:00.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5485" for this suite.

â€¢ [SLOW TEST:10.175 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":317,"skipped":5912,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:00.904: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 26 02:36:17.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9348" for this suite.

â€¢ [SLOW TEST:16.466 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":318,"skipped":5959,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:17.371: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-5852
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 26 02:36:21.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-5852" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":319,"skipped":5991,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:21.662: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1107
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 26 02:36:21.815: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380" in namespace "downward-api-1107" to be "Succeeded or Failed"
Jan 26 02:36:21.818: INFO: Pod "downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380": Phase="Pending", Reason="", readiness=false. Elapsed: 3.504357ms
Jan 26 02:36:23.823: INFO: Pod "downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008073427s
Jan 26 02:36:25.832: INFO: Pod "downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017064556s
STEP: Saw pod success
Jan 26 02:36:25.832: INFO: Pod "downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380" satisfied condition "Succeeded or Failed"
Jan 26 02:36:25.835: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380 container client-container: <nil>
STEP: delete the pod
Jan 26 02:36:25.857: INFO: Waiting for pod downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380 to disappear
Jan 26 02:36:25.860: INFO: Pod downwardapi-volume-a8c50381-49cb-4bc7-8162-71512c75e380 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 26 02:36:25.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1107" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":320,"skipped":6012,"failed":0}
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:25.875: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7581
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Jan 26 02:36:26.041: INFO: Waiting up to 5m0s for pod "test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04" in namespace "svcaccounts-7581" to be "Succeeded or Failed"
Jan 26 02:36:26.045: INFO: Pod "test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04": Phase="Pending", Reason="", readiness=false. Elapsed: 3.360755ms
Jan 26 02:36:28.055: INFO: Pod "test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013956165s
Jan 26 02:36:30.061: INFO: Pod "test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019958099s
STEP: Saw pod success
Jan 26 02:36:30.061: INFO: Pod "test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04" satisfied condition "Succeeded or Failed"
Jan 26 02:36:30.065: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04 container agnhost-container: <nil>
STEP: delete the pod
Jan 26 02:36:30.103: INFO: Waiting for pod test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04 to disappear
Jan 26 02:36:30.108: INFO: Pod test-pod-a11fdddc-ce7b-4df2-a675-67c3d4a11e04 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 26 02:36:30.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7581" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":321,"skipped":6020,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:30.124: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6413
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Jan 26 02:36:30.313: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6413  3ec82fd6-fc4a-48f5-854f-056818bd8717 42049 0 2023-01-26 02:36:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-26 02:36:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 26 02:36:30.313: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6413  3ec82fd6-fc4a-48f5-854f-056818bd8717 42050 0 2023-01-26 02:36:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-26 02:36:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 26 02:36:30.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6413" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":322,"skipped":6077,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:36:30.332: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5418
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 26 02:42:00.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5418" for this suite.

â€¢ [SLOW TEST:330.204 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":323,"skipped":6131,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:00.536: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8405
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 26 02:42:00.685: INFO: Waiting up to 5m0s for pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab" in namespace "emptydir-8405" to be "Succeeded or Failed"
Jan 26 02:42:00.697: INFO: Pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab": Phase="Pending", Reason="", readiness=false. Elapsed: 12.614508ms
Jan 26 02:42:02.708: INFO: Pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab": Phase="Running", Reason="", readiness=true. Elapsed: 2.023653668s
Jan 26 02:42:04.715: INFO: Pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab": Phase="Running", Reason="", readiness=false. Elapsed: 4.03064942s
Jan 26 02:42:06.725: INFO: Pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.03990201s
STEP: Saw pod success
Jan 26 02:42:06.725: INFO: Pod "pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab" satisfied condition "Succeeded or Failed"
Jan 26 02:42:06.728: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab container test-container: <nil>
STEP: delete the pod
Jan 26 02:42:06.789: INFO: Waiting for pod pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab to disappear
Jan 26 02:42:06.792: INFO: Pod pod-4e3b75fb-70de-47b1-900d-68b4bf8caaab no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:42:06.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8405" for this suite.

â€¢ [SLOW TEST:6.268 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":324,"skipped":6134,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:06.805: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:42:07.059: INFO: Endpoints addresses: [10.240.255.5 10.240.255.6 10.240.255.7] , ports: [443]
Jan 26 02:42:07.059: INFO: EndpointSlices addresses: [10.240.255.5 10.240.255.6 10.240.255.7] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 26 02:42:07.060: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4343" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":325,"skipped":6154,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:07.095: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-9491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:42:07.231: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:42:13.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-9491" for this suite.

â€¢ [SLOW TEST:6.107 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":326,"skipped":6183,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:13.203: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Jan 26 02:42:13.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 create -f -'
Jan 26 02:42:14.613: INFO: stderr: ""
Jan 26 02:42:14.613: INFO: stdout: "pod/pause created\n"
Jan 26 02:42:14.613: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jan 26 02:42:14.613: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-9785" to be "running and ready"
Jan 26 02:42:14.676: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 63.059235ms
Jan 26 02:42:16.691: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.07806181s
Jan 26 02:42:16.691: INFO: Pod "pause" satisfied condition "running and ready"
Jan 26 02:42:16.691: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Jan 26 02:42:16.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 label pods pause testing-label=testing-label-value'
Jan 26 02:42:16.789: INFO: stderr: ""
Jan 26 02:42:16.789: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Jan 26 02:42:16.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 get pod pause -L testing-label'
Jan 26 02:42:16.878: INFO: stderr: ""
Jan 26 02:42:16.878: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Jan 26 02:42:16.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 label pods pause testing-label-'
Jan 26 02:42:16.982: INFO: stderr: ""
Jan 26 02:42:16.982: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Jan 26 02:42:16.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 get pod pause -L testing-label'
Jan 26 02:42:17.061: INFO: stderr: ""
Jan 26 02:42:17.061: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Jan 26 02:42:17.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 delete --grace-period=0 --force -f -'
Jan 26 02:42:17.161: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:42:17.161: INFO: stdout: "pod \"pause\" force deleted\n"
Jan 26 02:42:17.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 get rc,svc -l name=pause --no-headers'
Jan 26 02:42:17.255: INFO: stderr: "No resources found in kubectl-9785 namespace.\n"
Jan 26 02:42:17.255: INFO: stdout: ""
Jan 26 02:42:17.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9785 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 26 02:42:17.346: INFO: stderr: ""
Jan 26 02:42:17.346: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:42:17.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9785" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":327,"skipped":6200,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:17.363: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:42:17.591: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Jan 26 02:42:20.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 create -f -'
Jan 26 02:42:21.924: INFO: stderr: ""
Jan 26 02:42:21.924: INFO: stdout: "e2e-test-crd-publish-openapi-7560-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 26 02:42:21.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 delete e2e-test-crd-publish-openapi-7560-crds test-foo'
Jan 26 02:42:22.009: INFO: stderr: ""
Jan 26 02:42:22.009: INFO: stdout: "e2e-test-crd-publish-openapi-7560-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jan 26 02:42:22.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 apply -f -'
Jan 26 02:42:22.786: INFO: stderr: ""
Jan 26 02:42:22.786: INFO: stdout: "e2e-test-crd-publish-openapi-7560-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 26 02:42:22.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 delete e2e-test-crd-publish-openapi-7560-crds test-foo'
Jan 26 02:42:22.908: INFO: stderr: ""
Jan 26 02:42:22.908: INFO: stdout: "e2e-test-crd-publish-openapi-7560-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Jan 26 02:42:22.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 create -f -'
Jan 26 02:42:23.701: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Jan 26 02:42:23.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 create -f -'
Jan 26 02:42:23.897: INFO: rc: 1
Jan 26 02:42:23.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 apply -f -'
Jan 26 02:42:24.085: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Jan 26 02:42:24.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 create -f -'
Jan 26 02:42:24.280: INFO: rc: 1
Jan 26 02:42:24.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 --namespace=crd-publish-openapi-8751 apply -f -'
Jan 26 02:42:24.480: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Jan 26 02:42:24.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 explain e2e-test-crd-publish-openapi-7560-crds'
Jan 26 02:42:24.674: INFO: stderr: ""
Jan 26 02:42:24.674: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7560-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Jan 26 02:42:24.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 explain e2e-test-crd-publish-openapi-7560-crds.metadata'
Jan 26 02:42:24.884: INFO: stderr: ""
Jan 26 02:42:24.884: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7560-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jan 26 02:42:24.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 explain e2e-test-crd-publish-openapi-7560-crds.spec'
Jan 26 02:42:25.142: INFO: stderr: ""
Jan 26 02:42:25.142: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7560-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jan 26 02:42:25.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 explain e2e-test-crd-publish-openapi-7560-crds.spec.bars'
Jan 26 02:42:25.401: INFO: stderr: ""
Jan 26 02:42:25.401: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7560-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Jan 26 02:42:25.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=crd-publish-openapi-8751 explain e2e-test-crd-publish-openapi-7560-crds.spec.bars2'
Jan 26 02:42:25.645: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:42:29.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8751" for this suite.

â€¢ [SLOW TEST:11.676 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":328,"skipped":6218,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:29.041: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:42:29.203: INFO: Creating ReplicaSet my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091
Jan 26 02:42:29.215: INFO: Pod name my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091: Found 0 pods out of 1
Jan 26 02:42:34.222: INFO: Pod name my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091: Found 1 pods out of 1
Jan 26 02:42:34.222: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091" is running
Jan 26 02:42:34.226: INFO: Pod "my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091-x5hv6" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 02:42:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 02:42:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 02:42:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-26 02:42:29 +0000 UTC Reason: Message:}])
Jan 26 02:42:34.226: INFO: Trying to dial the pod
Jan 26 02:42:39.241: INFO: Controller my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091: Got expected result from replica 1 [my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091-x5hv6]: "my-hostname-basic-410d1a19-2713-4f3f-ace7-1211d3642091-x5hv6", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 02:42:39.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-161" for this suite.

â€¢ [SLOW TEST:10.212 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":329,"skipped":6224,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:39.253: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 26 02:42:39.402: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:42:41.413: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 26 02:42:41.449: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:42:43.455: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 26 02:42:43.468: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 26 02:42:43.471: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 26 02:42:45.471: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 26 02:42:45.508: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 26 02:42:47.471: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 26 02:42:47.481: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 26 02:42:47.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4450" for this suite.

â€¢ [SLOW TEST:8.275 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6237,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:42:47.528: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1120
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:42:48.305: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:42:51.357: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:43:01.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1120" for this suite.
STEP: Destroying namespace "webhook-1120-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:14.142 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":331,"skipped":6260,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:43:01.682: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2776
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-t2qb
STEP: Creating a pod to test atomic-volume-subpath
Jan 26 02:43:01.852: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-t2qb" in namespace "subpath-2776" to be "Succeeded or Failed"
Jan 26 02:43:01.855: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.680661ms
Jan 26 02:43:03.862: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 2.009964163s
Jan 26 02:43:05.867: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 4.01543875s
Jan 26 02:43:07.876: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 6.024464122s
Jan 26 02:43:09.885: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 8.033513195s
Jan 26 02:43:11.897: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 10.045050808s
Jan 26 02:43:13.904: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 12.052166252s
Jan 26 02:43:15.909: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 14.056861525s
Jan 26 02:43:17.919: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 16.067082489s
Jan 26 02:43:19.929: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 18.077119949s
Jan 26 02:43:21.939: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=true. Elapsed: 20.087543416s
Jan 26 02:43:23.946: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Running", Reason="", readiness=false. Elapsed: 22.094576526s
Jan 26 02:43:25.951: INFO: Pod "pod-subpath-test-projected-t2qb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.099317299s
STEP: Saw pod success
Jan 26 02:43:25.951: INFO: Pod "pod-subpath-test-projected-t2qb" satisfied condition "Succeeded or Failed"
Jan 26 02:43:25.961: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-subpath-test-projected-t2qb container test-container-subpath-projected-t2qb: <nil>
STEP: delete the pod
Jan 26 02:43:25.997: INFO: Waiting for pod pod-subpath-test-projected-t2qb to disappear
Jan 26 02:43:26.001: INFO: Pod pod-subpath-test-projected-t2qb no longer exists
STEP: Deleting pod pod-subpath-test-projected-t2qb
Jan 26 02:43:26.001: INFO: Deleting pod "pod-subpath-test-projected-t2qb" in namespace "subpath-2776"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 26 02:43:26.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2776" for this suite.

â€¢ [SLOW TEST:24.365 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":332,"skipped":6287,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:43:26.047: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Jan 26 02:43:36.356: INFO: The status of Pod kube-controller-manager-k8s-master-34140226-2 is Running (Ready = true)
Jan 26 02:44:36.536: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 26 02:44:36.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2867" for this suite.

â€¢ [SLOW TEST:70.509 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":333,"skipped":6288,"failed":0}
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:44:36.557: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-4e514a86-2891-44c7-840c-2fdc1235548f
STEP: Creating secret with name s-test-opt-upd-e2cf3a40-8227-431a-8d7d-c3c41b60dcd4
STEP: Creating the pod
Jan 26 02:44:36.759: INFO: The status of Pod pod-secrets-4038cbd1-40df-42ee-82da-0cd3d04478bd is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:44:38.766: INFO: The status of Pod pod-secrets-4038cbd1-40df-42ee-82da-0cd3d04478bd is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-4e514a86-2891-44c7-840c-2fdc1235548f
STEP: Updating secret s-test-opt-upd-e2cf3a40-8227-431a-8d7d-c3c41b60dcd4
STEP: Creating secret with name s-test-opt-create-c92dd09e-8a94-4386-9830-83a1465deb44
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:44:40.850: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5345" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":334,"skipped":6288,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:44:40.872: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Jan 26 02:44:41.021: INFO: The status of Pod pod-hostip-0cc26fbc-f533-44e0-8ce4-11fe5a654cd7 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:44:43.038: INFO: The status of Pod pod-hostip-0cc26fbc-f533-44e0-8ce4-11fe5a654cd7 is Running (Ready = true)
Jan 26 02:44:43.043: INFO: Pod pod-hostip-0cc26fbc-f533-44e0-8ce4-11fe5a654cd7 has hostIP: 10.240.0.4
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 26 02:44:43.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9146" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":335,"skipped":6309,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:44:43.059: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4564
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Jan 26 02:44:43.232: INFO: Waiting up to 5m0s for pod "pod-5bd12e0a-b548-4043-8cd8-ecf341fde944" in namespace "emptydir-4564" to be "Succeeded or Failed"
Jan 26 02:44:43.235: INFO: Pod "pod-5bd12e0a-b548-4043-8cd8-ecf341fde944": Phase="Pending", Reason="", readiness=false. Elapsed: 3.088851ms
Jan 26 02:44:45.254: INFO: Pod "pod-5bd12e0a-b548-4043-8cd8-ecf341fde944": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021181775s
Jan 26 02:44:47.260: INFO: Pod "pod-5bd12e0a-b548-4043-8cd8-ecf341fde944": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027431205s
STEP: Saw pod success
Jan 26 02:44:47.260: INFO: Pod "pod-5bd12e0a-b548-4043-8cd8-ecf341fde944" satisfied condition "Succeeded or Failed"
Jan 26 02:44:47.263: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-5bd12e0a-b548-4043-8cd8-ecf341fde944 container test-container: <nil>
STEP: delete the pod
Jan 26 02:44:47.285: INFO: Waiting for pod pod-5bd12e0a-b548-4043-8cd8-ecf341fde944 to disappear
Jan 26 02:44:47.288: INFO: Pod pod-5bd12e0a-b548-4043-8cd8-ecf341fde944 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 26 02:44:47.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4564" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":336,"skipped":6314,"failed":0}
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:44:47.308: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-4062
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Jan 26 02:44:47.775: INFO: Pod name wrapped-volume-race-7a41e608-4185-49a5-9598-89f78f378f99: Found 0 pods out of 5
Jan 26 02:44:52.795: INFO: Pod name wrapped-volume-race-7a41e608-4185-49a5-9598-89f78f378f99: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-7a41e608-4185-49a5-9598-89f78f378f99 in namespace emptydir-wrapper-4062, will wait for the garbage collector to delete the pods
Jan 26 02:45:02.892: INFO: Deleting ReplicationController wrapped-volume-race-7a41e608-4185-49a5-9598-89f78f378f99 took: 6.946914ms
Jan 26 02:45:03.092: INFO: Terminating ReplicationController wrapped-volume-race-7a41e608-4185-49a5-9598-89f78f378f99 pods took: 200.707691ms
STEP: Creating RC which spawns configmap-volume pods
Jan 26 02:45:07.227: INFO: Pod name wrapped-volume-race-2b14e2fe-e0a6-49e5-8357-637dddb1f811: Found 0 pods out of 5
Jan 26 02:45:12.251: INFO: Pod name wrapped-volume-race-2b14e2fe-e0a6-49e5-8357-637dddb1f811: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-2b14e2fe-e0a6-49e5-8357-637dddb1f811 in namespace emptydir-wrapper-4062, will wait for the garbage collector to delete the pods
Jan 26 02:45:24.361: INFO: Deleting ReplicationController wrapped-volume-race-2b14e2fe-e0a6-49e5-8357-637dddb1f811 took: 7.823628ms
Jan 26 02:45:24.462: INFO: Terminating ReplicationController wrapped-volume-race-2b14e2fe-e0a6-49e5-8357-637dddb1f811 pods took: 100.889656ms
STEP: Creating RC which spawns configmap-volume pods
Jan 26 02:45:28.690: INFO: Pod name wrapped-volume-race-009815df-b17d-473d-8ddb-7017c03dea1d: Found 0 pods out of 5
Jan 26 02:45:33.701: INFO: Pod name wrapped-volume-race-009815df-b17d-473d-8ddb-7017c03dea1d: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-009815df-b17d-473d-8ddb-7017c03dea1d in namespace emptydir-wrapper-4062, will wait for the garbage collector to delete the pods
Jan 26 02:45:43.792: INFO: Deleting ReplicationController wrapped-volume-race-009815df-b17d-473d-8ddb-7017c03dea1d took: 7.837329ms
Jan 26 02:45:43.892: INFO: Terminating ReplicationController wrapped-volume-race-009815df-b17d-473d-8ddb-7017c03dea1d pods took: 100.396547ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 26 02:45:48.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-4062" for this suite.

â€¢ [SLOW TEST:61.691 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":337,"skipped":6316,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:45:48.999: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-212
STEP: Creating secret with name secret-test-6bf3c2c0-3f8d-4dd2-b91c-27315dd736dc
STEP: Creating a pod to test consume secrets
Jan 26 02:45:49.319: INFO: Waiting up to 5m0s for pod "pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9" in namespace "secrets-8008" to be "Succeeded or Failed"
Jan 26 02:45:49.326: INFO: Pod "pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.547307ms
Jan 26 02:45:51.336: INFO: Pod "pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016506974s
Jan 26 02:45:53.340: INFO: Pod "pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021063952s
STEP: Saw pod success
Jan 26 02:45:53.340: INFO: Pod "pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9" satisfied condition "Succeeded or Failed"
Jan 26 02:45:53.343: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9 container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:45:53.369: INFO: Waiting for pod pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9 to disappear
Jan 26 02:45:53.372: INFO: Pod pod-secrets-7af2566c-6cc2-4957-a81e-4d8ac74140a9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:45:53.372: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8008" for this suite.
STEP: Destroying namespace "secret-namespace-212" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":338,"skipped":6318,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:45:53.390: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-6437
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 26 02:45:57.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-6437" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":339,"skipped":6334,"failed":0}

------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:45:57.647: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:45:57.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3724" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":340,"skipped":6334,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:45:57.840: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3139
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Jan 26 02:45:57.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-3139 version'
Jan 26 02:45:58.073: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jan 26 02:45:58.073: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.9\", GitCommit:\"9710807c82740b9799453677c977758becf0acbb\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T10:15:09Z\", GoVersion:\"go1.18.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.9\", GitCommit:\"9710807c82740b9799453677c977758becf0acbb\", GitTreeState:\"clean\", BuildDate:\"2022-12-13T08:17:45Z\", GoVersion:\"go1.18.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:45:58.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3139" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":341,"skipped":6338,"failed":0}
S
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:45:58.091: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-14091fb1-106a-4dfa-9813-13c3b1f214d3
STEP: Creating a pod to test consume configMaps
Jan 26 02:45:58.244: INFO: Waiting up to 5m0s for pod "pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c" in namespace "configmap-5907" to be "Succeeded or Failed"
Jan 26 02:45:58.248: INFO: Pod "pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.569458ms
Jan 26 02:46:00.259: INFO: Pod "pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01506836s
Jan 26 02:46:02.271: INFO: Pod "pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02678156s
STEP: Saw pod success
Jan 26 02:46:02.271: INFO: Pod "pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c" satisfied condition "Succeeded or Failed"
Jan 26 02:46:02.274: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c container agnhost-container: <nil>
STEP: delete the pod
Jan 26 02:46:02.296: INFO: Waiting for pod pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c to disappear
Jan 26 02:46:02.299: INFO: Pod pod-configmaps-55fefddd-0b92-45d7-8624-a7f3efb2ba1c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:46:02.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5907" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":342,"skipped":6339,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:02.311: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7664
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:46:03.111: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:46:06.144: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:46:06.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7664" for this suite.
STEP: Destroying namespace "webhook-7664-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":343,"skipped":6383,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:06.502: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-742
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Jan 26 02:46:06.678: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 26 02:46:11.711: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Jan 26 02:46:11.716: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Jan 26 02:46:11.734: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Jan 26 02:46:11.737: INFO: Observed &ReplicaSet event: ADDED
Jan 26 02:46:11.738: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.738: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.738: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.738: INFO: Found replicaset test-rs in namespace replicaset-742 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 26 02:46:11.738: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Jan 26 02:46:11.738: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 26 02:46:11.747: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Jan 26 02:46:11.750: INFO: Observed &ReplicaSet event: ADDED
Jan 26 02:46:11.750: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.751: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.751: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.751: INFO: Observed replicaset test-rs in namespace replicaset-742 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 26 02:46:11.751: INFO: Observed &ReplicaSet event: MODIFIED
Jan 26 02:46:11.751: INFO: Found replicaset test-rs in namespace replicaset-742 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jan 26 02:46:11.751: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 26 02:46:11.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-742" for this suite.

â€¢ [SLOW TEST:5.267 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":344,"skipped":6432,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:11.771: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6169
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-709ca375-3d4c-44e8-b775-0fd4774df782
STEP: Creating configMap with name cm-test-opt-upd-c47ce1d4-5c1b-422b-abf7-e4881540fc86
STEP: Creating the pod
Jan 26 02:46:11.952: INFO: The status of Pod pod-configmaps-3e81c6d7-e66b-4044-9f85-962e95af653b is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:46:13.959: INFO: The status of Pod pod-configmaps-3e81c6d7-e66b-4044-9f85-962e95af653b is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-709ca375-3d4c-44e8-b775-0fd4774df782
STEP: Updating configmap cm-test-opt-upd-c47ce1d4-5c1b-422b-abf7-e4881540fc86
STEP: Creating configMap with name cm-test-opt-create-6a83028f-d751-45dc-ad8d-4773124e0b4a
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 26 02:46:18.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6169" for this suite.

â€¢ [SLOW TEST:6.305 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":345,"skipped":6454,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:18.077: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-7634
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 26 02:46:18.257: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 26 02:46:18.261: INFO: starting watch
STEP: patching
STEP: updating
Jan 26 02:46:18.279: INFO: waiting for watch events with expected annotations
Jan 26 02:46:18.279: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Jan 26 02:46:18.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-7634" for this suite.
â€¢{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":346,"skipped":6462,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:18.343: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9833
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 26 02:46:18.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 create -f -'
Jan 26 02:46:19.160: INFO: stderr: ""
Jan 26 02:46:19.160: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 26 02:46:19.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:19.278: INFO: stderr: ""
Jan 26 02:46:19.278: INFO: stdout: "update-demo-nautilus-jbvv7 update-demo-nautilus-lct5g "
Jan 26 02:46:19.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-jbvv7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:19.378: INFO: stderr: ""
Jan 26 02:46:19.378: INFO: stdout: ""
Jan 26 02:46:19.378: INFO: update-demo-nautilus-jbvv7 is created but not running
Jan 26 02:46:24.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:24.481: INFO: stderr: ""
Jan 26 02:46:24.481: INFO: stdout: "update-demo-nautilus-jbvv7 update-demo-nautilus-lct5g "
Jan 26 02:46:24.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-jbvv7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:24.576: INFO: stderr: ""
Jan 26 02:46:24.576: INFO: stdout: "true"
Jan 26 02:46:24.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-jbvv7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:46:24.671: INFO: stderr: ""
Jan 26 02:46:24.671: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:46:24.671: INFO: validating pod update-demo-nautilus-jbvv7
Jan 26 02:46:24.676: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:46:24.676: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:46:24.676: INFO: update-demo-nautilus-jbvv7 is verified up and running
Jan 26 02:46:24.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:24.766: INFO: stderr: ""
Jan 26 02:46:24.766: INFO: stdout: "true"
Jan 26 02:46:24.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:46:24.853: INFO: stderr: ""
Jan 26 02:46:24.853: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:46:24.853: INFO: validating pod update-demo-nautilus-lct5g
Jan 26 02:46:24.858: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:46:24.858: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:46:24.858: INFO: update-demo-nautilus-lct5g is verified up and running
STEP: scaling down the replication controller
Jan 26 02:46:24.860: INFO: scanned /root for discovery docs: <nil>
Jan 26 02:46:24.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jan 26 02:46:25.964: INFO: stderr: ""
Jan 26 02:46:25.964: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 26 02:46:25.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:26.054: INFO: stderr: ""
Jan 26 02:46:26.054: INFO: stdout: "update-demo-nautilus-jbvv7 update-demo-nautilus-lct5g "
STEP: Replicas for name=update-demo: expected=1 actual=2
Jan 26 02:46:31.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:31.155: INFO: stderr: ""
Jan 26 02:46:31.155: INFO: stdout: "update-demo-nautilus-jbvv7 update-demo-nautilus-lct5g "
STEP: Replicas for name=update-demo: expected=1 actual=2
Jan 26 02:46:36.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:36.246: INFO: stderr: ""
Jan 26 02:46:36.246: INFO: stdout: "update-demo-nautilus-lct5g "
Jan 26 02:46:36.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:36.353: INFO: stderr: ""
Jan 26 02:46:36.353: INFO: stdout: "true"
Jan 26 02:46:36.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:46:36.441: INFO: stderr: ""
Jan 26 02:46:36.441: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:46:36.441: INFO: validating pod update-demo-nautilus-lct5g
Jan 26 02:46:36.445: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:46:36.445: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:46:36.445: INFO: update-demo-nautilus-lct5g is verified up and running
STEP: scaling up the replication controller
Jan 26 02:46:36.447: INFO: scanned /root for discovery docs: <nil>
Jan 26 02:46:36.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jan 26 02:46:37.558: INFO: stderr: ""
Jan 26 02:46:37.558: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 26 02:46:37.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 26 02:46:37.649: INFO: stderr: ""
Jan 26 02:46:37.649: INFO: stdout: "update-demo-nautilus-lct5g update-demo-nautilus-rcc7t "
Jan 26 02:46:37.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:37.754: INFO: stderr: ""
Jan 26 02:46:37.754: INFO: stdout: "true"
Jan 26 02:46:37.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-lct5g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:46:37.843: INFO: stderr: ""
Jan 26 02:46:37.843: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:46:37.843: INFO: validating pod update-demo-nautilus-lct5g
Jan 26 02:46:37.847: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:46:37.847: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:46:37.847: INFO: update-demo-nautilus-lct5g is verified up and running
Jan 26 02:46:37.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-rcc7t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 26 02:46:37.952: INFO: stderr: ""
Jan 26 02:46:37.952: INFO: stdout: "true"
Jan 26 02:46:37.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods update-demo-nautilus-rcc7t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 26 02:46:38.038: INFO: stderr: ""
Jan 26 02:46:38.038: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 26 02:46:38.038: INFO: validating pod update-demo-nautilus-rcc7t
Jan 26 02:46:38.043: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 26 02:46:38.043: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 26 02:46:38.043: INFO: update-demo-nautilus-rcc7t is verified up and running
STEP: using delete to clean up resources
Jan 26 02:46:38.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 delete --grace-period=0 --force -f -'
Jan 26 02:46:38.134: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 26 02:46:38.134: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 26 02:46:38.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get rc,svc -l name=update-demo --no-headers'
Jan 26 02:46:38.232: INFO: stderr: "No resources found in kubectl-9833 namespace.\n"
Jan 26 02:46:38.232: INFO: stdout: ""
Jan 26 02:46:38.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-254551239 --namespace=kubectl-9833 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 26 02:46:38.318: INFO: stderr: ""
Jan 26 02:46:38.318: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 26 02:46:38.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9833" for this suite.

â€¢ [SLOW TEST:19.994 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":347,"skipped":6465,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:46:38.337: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1224
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1224
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 26 02:46:38.530: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 26 02:46:38.581: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 26 02:46:40.591: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:42.590: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:44.597: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:46.591: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:48.585: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:50.592: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:52.591: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:54.589: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:56.595: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:46:58.587: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 26 02:47:00.593: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 26 02:47:00.599: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 26 02:47:00.605: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 26 02:47:02.636: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 26 02:47:02.636: INFO: Breadth first check of 10.244.5.164 on host 10.240.0.6...
Jan 26 02:47:02.639: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.83:9080/dial?request=hostname&protocol=http&host=10.244.5.164&port=8083&tries=1'] Namespace:pod-network-test-1224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:47:02.639: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:47:02.640: INFO: ExecWithOptions: Clientset creation
Jan 26 02:47:02.640: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.5.164%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:47:02.765: INFO: Waiting for responses: map[]
Jan 26 02:47:02.765: INFO: reached 10.244.5.164 after 0/1 tries
Jan 26 02:47:02.765: INFO: Breadth first check of 10.244.1.82 on host 10.240.0.4...
Jan 26 02:47:02.769: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.83:9080/dial?request=hostname&protocol=http&host=10.244.1.82&port=8083&tries=1'] Namespace:pod-network-test-1224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:47:02.769: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:47:02.770: INFO: ExecWithOptions: Clientset creation
Jan 26 02:47:02.770: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.82%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:47:02.881: INFO: Waiting for responses: map[]
Jan 26 02:47:02.882: INFO: reached 10.244.1.82 after 0/1 tries
Jan 26 02:47:02.882: INFO: Breadth first check of 10.244.2.7 on host 10.240.0.5...
Jan 26 02:47:02.886: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.83:9080/dial?request=hostname&protocol=http&host=10.244.2.7&port=8083&tries=1'] Namespace:pod-network-test-1224 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:47:02.886: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:47:02.886: INFO: ExecWithOptions: Clientset creation
Jan 26 02:47:02.886: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1224/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 26 02:47:03.006: INFO: Waiting for responses: map[]
Jan 26 02:47:03.006: INFO: reached 10.244.2.7 after 0/1 tries
Jan 26 02:47:03.006: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 26 02:47:03.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1224" for this suite.

â€¢ [SLOW TEST:24.686 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6474,"failed":0}
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:03.024: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-6ecee439-a7da-44c4-9023-8396279bc022
STEP: Creating a pod to test consume secrets
Jan 26 02:47:03.206: INFO: Waiting up to 5m0s for pod "pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8" in namespace "secrets-321" to be "Succeeded or Failed"
Jan 26 02:47:03.209: INFO: Pod "pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.107251ms
Jan 26 02:47:05.219: INFO: Pod "pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013393822s
Jan 26 02:47:07.229: INFO: Pod "pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023496776s
STEP: Saw pod success
Jan 26 02:47:07.229: INFO: Pod "pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8" satisfied condition "Succeeded or Failed"
Jan 26 02:47:07.232: INFO: Trying to get logs from node k8s-linuxpool-34140226-2 pod pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8 container secret-volume-test: <nil>
STEP: delete the pod
Jan 26 02:47:07.255: INFO: Waiting for pod pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8 to disappear
Jan 26 02:47:07.258: INFO: Pod pod-secrets-9f88e15c-3cf8-4d2c-9628-60598c5a69e8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 26 02:47:07.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-321" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":349,"skipped":6474,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:07.273: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5322
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:47:07.939: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:47:10.987: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:47:11.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5322" for this suite.
STEP: Destroying namespace "webhook-5322-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":350,"skipped":6518,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:11.145: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 26 02:47:12.102: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 26 02:47:15.128: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 26 02:47:15.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5979" for this suite.
STEP: Destroying namespace "webhook-5979-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":351,"skipped":6533,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:15.292: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5787
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 26 02:47:15.467: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:15.467: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:15.467: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:15.471: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:47:15.471: INFO: Node k8s-linuxpool-34140226-0 is running 0 daemon pod, expected 1
Jan 26 02:47:16.499: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:16.499: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:16.499: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:16.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 26 02:47:16.516: INFO: Node k8s-linuxpool-34140226-1 is running 0 daemon pod, expected 1
Jan 26 02:47:17.486: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.486: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.486: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:47:17.490: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Jan 26 02:47:17.518: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.518: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-1 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.518: INFO: DaemonSet pods can't tolerate node k8s-master-34140226-2 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 26 02:47:17.525: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 26 02:47:17.525: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5787, will wait for the garbage collector to delete the pods
Jan 26 02:47:18.598: INFO: Deleting DaemonSet.extensions daemon-set took: 6.815812ms
Jan 26 02:47:18.699: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.117763ms
Jan 26 02:47:19.908: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 26 02:47:19.908: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 26 02:47:19.911: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45781"},"items":null}

Jan 26 02:47:19.914: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45781"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 26 02:47:19.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5787" for this suite.
â€¢{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":352,"skipped":6545,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:19.941: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 26 02:47:20.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1789" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":353,"skipped":6549,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:20.118: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-1116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 26 02:47:20.276: INFO: Waiting up to 5m0s for pod "security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208" in namespace "security-context-1116" to be "Succeeded or Failed"
Jan 26 02:47:20.285: INFO: Pod "security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208": Phase="Pending", Reason="", readiness=false. Elapsed: 8.581741ms
Jan 26 02:47:22.295: INFO: Pod "security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018108274s
Jan 26 02:47:24.302: INFO: Pod "security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025394799s
STEP: Saw pod success
Jan 26 02:47:24.302: INFO: Pod "security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208" satisfied condition "Succeeded or Failed"
Jan 26 02:47:24.304: INFO: Trying to get logs from node k8s-linuxpool-34140226-1 pod security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208 container test-container: <nil>
STEP: delete the pod
Jan 26 02:47:24.328: INFO: Waiting for pod security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208 to disappear
Jan 26 02:47:24.331: INFO: Pod security-context-2dd3ad3c-3766-49ac-af10-ef689ce99208 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 26 02:47:24.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-1116" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":354,"skipped":6563,"failed":0}
SSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:24.345: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-4384
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Jan 26 02:47:24.553: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 26 02:47:24.588: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-4384" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":355,"skipped":6568,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 26 02:47:24.602: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9005
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Jan 26 02:47:26.765: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9005 PodName:var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:47:26.765: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:47:26.766: INFO: ExecWithOptions: Clientset creation
Jan 26 02:47:26.766: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9005/pods/var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Jan 26 02:47:26.911: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9005 PodName:var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 26 02:47:26.911: INFO: >>> kubeConfig: /tmp/kubeconfig-254551239
Jan 26 02:47:26.912: INFO: ExecWithOptions: Clientset creation
Jan 26 02:47:26.912: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-9005/pods/var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Jan 26 02:47:27.519: INFO: Successfully updated pod "var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Jan 26 02:47:27.522: INFO: Deleting pod "var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df" in namespace "var-expansion-9005"
Jan 26 02:47:27.531: INFO: Wait up to 5m0s for pod "var-expansion-1a25ab89-b9d0-4b77-a786-78a5ebae26df" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 26 02:48:01.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9005" for this suite.

â€¢ [SLOW TEST:36.956 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":356,"skipped":6572,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSJan 26 02:48:01.560: INFO: Running AfterSuite actions on all nodes
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Jan 26 02:48:01.560: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Jan 26 02:48:01.560: INFO: Running AfterSuite actions on node 1
Jan 26 02:48:01.560: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6617,"failed":0}

Ran 356 of 6973 Specs in 5956.110 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6617 Skipped
PASS

Ginkgo ran 1 suite in 1h39m18.659452539s
Test Suite Passed
