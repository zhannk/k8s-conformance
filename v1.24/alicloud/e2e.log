I0804 08:46:18.461684      20 e2e.go:129] Starting e2e run "381bec00-5724-4857-bfb3-fb184ac9d497" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1659602778 - Will randomize all specs
Will run 356 of 6971 specs

Aug  4 08:46:19.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:46:19.722: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug  4 08:46:19.740: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug  4 08:46:19.778: INFO: 26 / 26 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug  4 08:46:19.778: INFO: expected 11 pod replicas in namespace 'kube-system', 11 are Running and Ready.
Aug  4 08:46:19.778: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug  4 08:46:19.786: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'csi-plugin' (0 seconds elapsed)
Aug  4 08:46:19.786: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
Aug  4 08:46:19.786: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-windows' (0 seconds elapsed)
Aug  4 08:46:19.786: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy-worker' (0 seconds elapsed)
Aug  4 08:46:19.786: INFO: 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-proxy-worker-windows' (0 seconds elapsed)
Aug  4 08:46:19.786: INFO: e2e test version: v1.24.3
Aug  4 08:46:19.787: INFO: kube-apiserver version: v1.24.3-aliyun.1
Aug  4 08:46:19.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:46:19.792: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:46:19.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
W0804 08:46:19.810958      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug  4 08:46:19.810: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Aug  4 08:46:19.817: INFO: PSP annotation exists on dry run pod: "ack.privileged"; assuming PodSecurityPolicy is enabled
W0804 08:46:19.821239      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0804 08:46:19.825499      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug  4 08:46:19.832: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-059d4e37-3c4f-4467-be50-99a9ea10031f
STEP: Creating a pod to test consume configMaps
Aug  4 08:46:19.964: INFO: Waiting up to 5m0s for pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2" in namespace "configmap-1505" to be "Succeeded or Failed"
Aug  4 08:46:19.968: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.83991ms
Aug  4 08:46:21.976: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012143991s
Aug  4 08:46:23.982: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018786935s
Aug  4 08:46:25.991: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Running", Reason="", readiness=true. Elapsed: 6.027108178s
Aug  4 08:46:28.000: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Running", Reason="", readiness=false. Elapsed: 8.036504527s
Aug  4 08:46:30.006: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.042405229s
STEP: Saw pod success
Aug  4 08:46:30.006: INFO: Pod "pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2" satisfied condition "Succeeded or Failed"
Aug  4 08:46:30.010: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:46:30.039: INFO: Waiting for pod pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2 to disappear
Aug  4 08:46:30.043: INFO: Pod pod-configmaps-ac783342-6700-4a8a-a925-da7cb579b5a2 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 08:46:30.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1505" for this suite.

• [SLOW TEST:10.264 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":1,"skipped":14,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:46:30.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3549
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:46:30.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3549" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":2,"skipped":21,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:46:30.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 08:46:42.376: INFO: DNS probes using dns-5899/dns-test-c1fa970d-6d0e-4ced-b19f-ee0ade41bace succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 08:46:42.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5899" for this suite.

• [SLOW TEST:12.200 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":3,"skipped":44,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:46:42.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:46:42.567: INFO: Create a RollingUpdate DaemonSet
Aug  4 08:46:42.571: INFO: Check that daemon pods launch on every node of the cluster
Aug  4 08:46:42.580: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:42.580: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:43.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:43.593: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:44.595: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:44.595: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:45.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:45.592: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:46.594: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:46.594: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:47.594: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:47.594: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:48.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:46:48.593: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:49.596: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  4 08:46:49.596: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:46:50.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug  4 08:46:50.593: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 08:46:51.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 08:46:51.592: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
Aug  4 08:46:51.592: INFO: Update the DaemonSet to trigger a rollout
Aug  4 08:46:51.601: INFO: Updating DaemonSet daemon-set
Aug  4 08:46:54.628: INFO: Roll back the DaemonSet before rollout is complete
Aug  4 08:46:54.638: INFO: Updating DaemonSet daemon-set
Aug  4 08:46:54.638: INFO: Make sure DaemonSet rollback is complete
Aug  4 08:46:54.643: INFO: Wrong image for pod: daemon-set-zpssg. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug  4 08:46:54.643: INFO: Pod daemon-set-zpssg is not available
Aug  4 08:47:00.658: INFO: Pod daemon-set-nrkdv is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5789, will wait for the garbage collector to delete the pods
Aug  4 08:47:00.733: INFO: Deleting DaemonSet.extensions daemon-set took: 7.634809ms
Aug  4 08:47:00.834: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.635482ms
Aug  4 08:47:02.141: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:47:02.141: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 08:47:02.146: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4802250"},"items":null}

Aug  4 08:47:02.150: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4802250"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 08:47:02.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5789" for this suite.

• [SLOW TEST:19.787 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":4,"skipped":100,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:02.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 08:47:02.756: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 08:47:04.772: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 08:47:06.778: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 8, 47, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 08:47:09.789: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug  4 08:47:13.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=webhook-3409 attach --namespace=webhook-3409 to-be-attached-pod -i -c=container1'
Aug  4 08:47:13.939: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:47:13.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3409" for this suite.
STEP: Destroying namespace "webhook-3409-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:11.816 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":5,"skipped":112,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:14.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug  4 08:47:14.140: INFO: Waiting up to 5m0s for pod "pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0" in namespace "emptydir-8237" to be "Succeeded or Failed"
Aug  4 08:47:14.143: INFO: Pod "pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.471336ms
Aug  4 08:47:16.150: INFO: Pod "pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010477974s
Aug  4 08:47:18.159: INFO: Pod "pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019000308s
STEP: Saw pod success
Aug  4 08:47:18.159: INFO: Pod "pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0" satisfied condition "Succeeded or Failed"
Aug  4 08:47:18.162: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0 container test-container: <nil>
STEP: delete the pod
Aug  4 08:47:18.192: INFO: Waiting for pod pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0 to disappear
Aug  4 08:47:18.196: INFO: Pod pod-c52bdbe4-50ae-499a-8cc5-966b8a5ecae0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 08:47:18.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8237" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":6,"skipped":133,"failed":0}

------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:18.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-74
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  4 08:47:18.349: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  4 08:47:18.354: INFO: starting watch
STEP: patching
STEP: updating
Aug  4 08:47:18.370: INFO: waiting for watch events with expected annotations
Aug  4 08:47:18.370: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  4 08:47:18.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-74" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":7,"skipped":133,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:18.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1101
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  4 08:47:18.558: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  4 08:47:18.600: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:47:20.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:22.607: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:24.607: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:26.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:28.606: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:30.606: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:32.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:34.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:36.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:38.605: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:47:40.608: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  4 08:47:40.615: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug  4 08:47:40.623: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug  4 08:47:40.631: INFO: The status of Pod netserver-3 is Running (Ready = true)
Aug  4 08:47:40.638: INFO: The status of Pod netserver-4 is Running (Ready = true)
STEP: Creating test pods
Aug  4 08:47:42.665: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
Aug  4 08:47:42.665: INFO: Breadth first check of 10.115.0.198 on host 192.168.0.121...
Aug  4 08:47:42.669: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.0.199:9080/dial?request=hostname&protocol=udp&host=10.115.0.198&port=8081&tries=1'] Namespace:pod-network-test-1101 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:42.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:42.669: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:42.669: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-1101/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.0.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.115.0.198%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 08:47:42.744: INFO: Waiting for responses: map[]
Aug  4 08:47:42.744: INFO: reached 10.115.0.198 after 0/1 tries
Aug  4 08:47:42.744: INFO: Breadth first check of 10.115.0.8 on host 192.168.0.122...
Aug  4 08:47:42.748: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.0.199:9080/dial?request=hostname&protocol=udp&host=10.115.0.8&port=8081&tries=1'] Namespace:pod-network-test-1101 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:42.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:42.748: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:42.748: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-1101/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.0.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.115.0.8%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 08:47:42.797: INFO: Waiting for responses: map[]
Aug  4 08:47:42.797: INFO: reached 10.115.0.8 after 0/1 tries
Aug  4 08:47:42.797: INFO: Breadth first check of 10.115.0.135 on host 192.168.0.123...
Aug  4 08:47:42.801: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.0.199:9080/dial?request=hostname&protocol=udp&host=10.115.0.135&port=8081&tries=1'] Namespace:pod-network-test-1101 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:42.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:42.801: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:42.801: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-1101/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.0.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.115.0.135%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 08:47:42.847: INFO: Waiting for responses: map[]
Aug  4 08:47:42.847: INFO: reached 10.115.0.135 after 0/1 tries
Aug  4 08:47:42.847: INFO: Breadth first check of 10.115.1.7 on host 192.168.0.124...
Aug  4 08:47:42.852: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.0.199:9080/dial?request=hostname&protocol=udp&host=10.115.1.7&port=8081&tries=1'] Namespace:pod-network-test-1101 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:42.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:42.852: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:42.852: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-1101/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.0.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.115.1.7%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 08:47:42.905: INFO: Waiting for responses: map[]
Aug  4 08:47:42.905: INFO: reached 10.115.1.7 after 0/1 tries
Aug  4 08:47:42.905: INFO: Breadth first check of 10.115.0.71 on host 192.168.0.125...
Aug  4 08:47:42.909: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.0.199:9080/dial?request=hostname&protocol=udp&host=10.115.0.71&port=8081&tries=1'] Namespace:pod-network-test-1101 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:42.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:42.909: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:42.909: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-1101/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.0.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.115.0.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 08:47:42.963: INFO: Waiting for responses: map[]
Aug  4 08:47:42.963: INFO: reached 10.115.0.71 after 0/1 tries
Aug  4 08:47:42.963: INFO: Going to retry 0 out of 5 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  4 08:47:42.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1101" for this suite.

• [SLOW TEST:24.548 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":166,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:42.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-1315/secret-test-a6a347d3-610a-490a-889a-c9c69c54c775
STEP: Creating a pod to test consume secrets
Aug  4 08:47:43.125: INFO: Waiting up to 5m0s for pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01" in namespace "secrets-1315" to be "Succeeded or Failed"
Aug  4 08:47:43.129: INFO: Pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01": Phase="Pending", Reason="", readiness=false. Elapsed: 3.584484ms
Aug  4 08:47:45.136: INFO: Pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011102555s
Aug  4 08:47:47.144: INFO: Pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018205831s
Aug  4 08:47:49.150: INFO: Pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.024501142s
STEP: Saw pod success
Aug  4 08:47:49.150: INFO: Pod "pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01" satisfied condition "Succeeded or Failed"
Aug  4 08:47:49.153: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01 container env-test: <nil>
STEP: delete the pod
Aug  4 08:47:49.174: INFO: Waiting for pod pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01 to disappear
Aug  4 08:47:49.178: INFO: Pod pod-configmaps-bdd1e352-3f0e-419c-ab5c-ee668c3bdc01 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  4 08:47:49.178: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1315" for this suite.

• [SLOW TEST:6.212 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":9,"skipped":186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:49.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2798
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:47:49.318: INFO: Creating pod...
Aug  4 08:47:51.339: INFO: Creating service...
Aug  4 08:47:51.351: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=DELETE
Aug  4 08:47:51.361: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  4 08:47:51.361: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=OPTIONS
Aug  4 08:47:51.366: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  4 08:47:51.366: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=PATCH
Aug  4 08:47:51.372: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  4 08:47:51.372: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=POST
Aug  4 08:47:51.378: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  4 08:47:51.378: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=PUT
Aug  4 08:47:51.382: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  4 08:47:51.382: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=DELETE
Aug  4 08:47:51.389: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  4 08:47:51.389: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=OPTIONS
Aug  4 08:47:51.396: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  4 08:47:51.396: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=PATCH
Aug  4 08:47:51.404: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  4 08:47:51.404: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=POST
Aug  4 08:47:51.410: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  4 08:47:51.410: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=PUT
Aug  4 08:47:51.419: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  4 08:47:51.419: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=GET
Aug  4 08:47:51.422: INFO: http.Client request:GET StatusCode:301
Aug  4 08:47:51.422: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=GET
Aug  4 08:47:51.429: INFO: http.Client request:GET StatusCode:301
Aug  4 08:47:51.429: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/pods/agnhost/proxy?method=HEAD
Aug  4 08:47:51.433: INFO: http.Client request:HEAD StatusCode:301
Aug  4 08:47:51.433: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-2798/services/e2e-proxy-test-service/proxy?method=HEAD
Aug  4 08:47:51.438: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  4 08:47:51.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2798" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":10,"skipped":218,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:51.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9242
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  4 08:47:51.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:47:51.622: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:47:52.636: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  4 08:47:52.636: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:47:53.635: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 08:47:53.635: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Aug  4 08:47:53.664: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4803255"},"items":null}

Aug  4 08:47:53.669: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4803255"},"items":[{"metadata":{"name":"daemon-set-5tfnn","generateName":"daemon-set-","namespace":"daemonsets-9242","uid":"4edcab0b-f017-4862-8c92-82a107cf8742","resourceVersion":"4803239","creationTimestamp":"2022-08-04T08:47:51Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"ack.privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1331e672-a87d-48db-b025-cb8c6caef0a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1331e672-a87d-48db-b025-cb8c6caef0a2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6bjbp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6bjbp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cn-hongkong.192.168.0.121","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cn-hongkong.192.168.0.121"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"}],"hostIP":"192.168.0.121","podIP":"10.115.0.200","podIPs":[{"ip":"10.115.0.200"}],"startTime":"2022-08-04T08:47:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-04T08:47:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://e972724496449b80004aa380e0f7a803321668d39ae474b2dcc3afefaa864bff","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dn2x5","generateName":"daemon-set-","namespace":"daemonsets-9242","uid":"22f4d97d-62ba-4a1a-8b41-ef4222af10a4","resourceVersion":"4803232","creationTimestamp":"2022-08-04T08:47:51Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"ack.privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1331e672-a87d-48db-b025-cb8c6caef0a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1331e672-a87d-48db-b025-cb8c6caef0a2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-58rnq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-58rnq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cn-hongkong.192.168.0.124","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cn-hongkong.192.168.0.124"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"}],"hostIP":"192.168.0.124","podIP":"10.115.1.9","podIPs":[{"ip":"10.115.1.9"}],"startTime":"2022-08-04T08:47:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-04T08:47:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://0b788b546e6a472f779981e5fe7ab5bfcb3e2fd9c5b95f1a05a34564fb78c384","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dp4l9","generateName":"daemon-set-","namespace":"daemonsets-9242","uid":"7115cf79-9d27-4536-90f3-878a00c03926","resourceVersion":"4803241","creationTimestamp":"2022-08-04T08:47:51Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"ack.privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1331e672-a87d-48db-b025-cb8c6caef0a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1331e672-a87d-48db-b025-cb8c6caef0a2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9z7kb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9z7kb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cn-hongkong.192.168.0.123","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cn-hongkong.192.168.0.123"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"}],"hostIP":"192.168.0.123","podIP":"10.115.0.137","podIPs":[{"ip":"10.115.0.137"}],"startTime":"2022-08-04T08:47:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-04T08:47:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://1c70bedcb9b78f715a68e1d1e3c3795e589e2729460aac906c2652bf88314598","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kgsm7","generateName":"daemon-set-","namespace":"daemonsets-9242","uid":"8347cd95-23e4-4445-b12e-ae69606fb6a9","resourceVersion":"4803234","creationTimestamp":"2022-08-04T08:47:51Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"ack.privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1331e672-a87d-48db-b025-cb8c6caef0a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1331e672-a87d-48db-b025-cb8c6caef0a2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-shnwp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-shnwp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cn-hongkong.192.168.0.122","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cn-hongkong.192.168.0.122"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"}],"hostIP":"192.168.0.122","podIP":"10.115.0.9","podIPs":[{"ip":"10.115.0.9"}],"startTime":"2022-08-04T08:47:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-04T08:47:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://6d9d98bcf8dd8a498baa0261827ffe74bbda5dd627c4c814584a1708f7044094","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xhqx7","generateName":"daemon-set-","namespace":"daemonsets-9242","uid":"9f217d4a-f7bb-42ce-92d1-d07cf6190837","resourceVersion":"4803251","creationTimestamp":"2022-08-04T08:47:51Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"ack.privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1331e672-a87d-48db-b025-cb8c6caef0a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1331e672-a87d-48db-b025-cb8c6caef0a2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-04T08:47:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g6pxv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g6pxv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cn-hongkong.192.168.0.125","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cn-hongkong.192.168.0.125"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-04T08:47:51Z"}],"hostIP":"192.168.0.125","podIP":"10.115.0.72","podIPs":[{"ip":"10.115.0.72"}],"startTime":"2022-08-04T08:47:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-04T08:47:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://a1049ec61cada4e8ca06ac080ca029ad405835b872f16434545308130f012661","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 08:47:53.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9242" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":11,"skipped":281,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:53.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug  4 08:47:55.847: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8957 PodName:pod-sharedvolume-f443d43f-5409-4fcd-b9ad-fc5d4e456d74 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:47:55.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:47:55.848: INFO: ExecWithOptions: Clientset creation
Aug  4 08:47:55.848: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/emptydir-8957/pods/pod-sharedvolume-f443d43f-5409-4fcd-b9ad-fc5d4e456d74/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Aug  4 08:47:55.917: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 08:47:55.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8957" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":12,"skipped":284,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:47:55.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8071
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8071
Aug  4 08:47:56.068: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:47:58.075: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug  4 08:47:58.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug  4 08:47:58.192: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug  4 08:47:58.192: INFO: stdout: "ipvs"
Aug  4 08:47:58.192: INFO: proxyMode: ipvs
Aug  4 08:47:58.207: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug  4 08:47:58.211: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-8071
STEP: creating replication controller affinity-clusterip-timeout in namespace services-8071
I0804 08:47:58.227906      20 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-8071, replica count: 3
I0804 08:48:01.279155      20 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 08:48:01.290: INFO: Creating new exec pod
Aug  4 08:48:04.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec execpod-affinitysfszq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug  4 08:48:04.410: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug  4 08:48:04.410: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:48:04.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec execpod-affinitysfszq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.134.33 80'
Aug  4 08:48:04.498: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.134.33 80\nConnection to 172.16.134.33 80 port [tcp/http] succeeded!\n"
Aug  4 08:48:04.498: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:48:04.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec execpod-affinitysfszq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.16.134.33:80/ ; done'
Aug  4 08:48:04.635: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n"
Aug  4 08:48:04.635: INFO: stdout: "\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv\naffinity-clusterip-timeout-xhfsv"
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Received response from host: affinity-clusterip-timeout-xhfsv
Aug  4 08:48:04.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec execpod-affinitysfszq -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.16.134.33:80/'
Aug  4 08:48:04.727: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n"
Aug  4 08:48:04.727: INFO: stdout: "affinity-clusterip-timeout-xhfsv"
Aug  4 08:50:14.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8071 exec execpod-affinitysfszq -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.16.134.33:80/'
Aug  4 08:50:14.839: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.16.134.33:80/\n"
Aug  4 08:50:14.839: INFO: stdout: "affinity-clusterip-timeout-c6b49"
Aug  4 08:50:14.839: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-8071, will wait for the garbage collector to delete the pods
Aug  4 08:50:14.916: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 7.605221ms
Aug  4 08:50:15.017: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 101.02221ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:50:17.036: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8071" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:141.117 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":13,"skipped":301,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:17.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Aug  4 08:50:17.183: INFO: Waiting up to 5m0s for pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b" in namespace "var-expansion-6345" to be "Succeeded or Failed"
Aug  4 08:50:17.188: INFO: Pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.965355ms
Aug  4 08:50:19.194: INFO: Pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011168473s
Aug  4 08:50:21.202: INFO: Pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019171954s
Aug  4 08:50:23.209: INFO: Pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02648694s
STEP: Saw pod success
Aug  4 08:50:23.209: INFO: Pod "var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b" satisfied condition "Succeeded or Failed"
Aug  4 08:50:23.213: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b container dapi-container: <nil>
STEP: delete the pod
Aug  4 08:50:23.241: INFO: Waiting for pod var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b to disappear
Aug  4 08:50:23.245: INFO: Pod var-expansion-6cc7fe81-fe3a-4adc-8741-68a82218474b no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 08:50:23.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6345" for this suite.

• [SLOW TEST:6.210 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":14,"skipped":321,"failed":0}
S
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:23.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3699
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-3699/configmap-test-c23248ce-a3c5-4b06-a406-04194426d643
STEP: Creating a pod to test consume configMaps
Aug  4 08:50:23.399: INFO: Waiting up to 5m0s for pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164" in namespace "configmap-3699" to be "Succeeded or Failed"
Aug  4 08:50:23.402: INFO: Pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164": Phase="Pending", Reason="", readiness=false. Elapsed: 3.378469ms
Aug  4 08:50:25.410: INFO: Pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011039043s
Aug  4 08:50:27.417: INFO: Pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01828219s
Aug  4 08:50:29.425: INFO: Pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.026107981s
STEP: Saw pod success
Aug  4 08:50:29.425: INFO: Pod "pod-configmaps-df087752-35b7-4db8-a66c-c75592167164" satisfied condition "Succeeded or Failed"
Aug  4 08:50:29.428: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod pod-configmaps-df087752-35b7-4db8-a66c-c75592167164 container env-test: <nil>
STEP: delete the pod
Aug  4 08:50:29.461: INFO: Waiting for pod pod-configmaps-df087752-35b7-4db8-a66c-c75592167164 to disappear
Aug  4 08:50:29.464: INFO: Pod pod-configmaps-df087752-35b7-4db8-a66c-c75592167164 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 08:50:29.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3699" for this suite.

• [SLOW TEST:6.217 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":322,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:29.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  4 08:50:29.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8909 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug  4 08:50:29.659: INFO: stderr: ""
Aug  4 08:50:29.659: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug  4 08:50:34.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8909 get pod e2e-test-httpd-pod -o json'
Aug  4 08:50:34.756: INFO: stderr: ""
Aug  4 08:50:34.756: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"ack.privileged\"\n        },\n        \"creationTimestamp\": \"2022-08-04T08:50:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8909\",\n        \"resourceVersion\": \"4805789\",\n        \"uid\": \"d25ff71d-7bb1-47f5-9dbb-f0a2454950a2\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mdtq2\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cn-hongkong.192.168.0.123\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mdtq2\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-04T08:50:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-04T08:50:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-04T08:50:31Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-04T08:50:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3ef473f4791019ce5c10c0dce7ba7f02dfd0593df39c5e40b2bf6b815ef56106\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-04T08:50:30Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.0.123\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.115.0.141\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.115.0.141\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-04T08:50:29Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug  4 08:50:34.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8909 replace -f -'
Aug  4 08:50:35.244: INFO: stderr: ""
Aug  4 08:50:35.244: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Aug  4 08:50:35.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8909 delete pods e2e-test-httpd-pod'
Aug  4 08:50:37.045: INFO: stderr: ""
Aug  4 08:50:37.045: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:50:37.045: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8909" for this suite.

• [SLOW TEST:7.586 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":16,"skipped":340,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:37.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Aug  4 08:50:37.198: INFO: Waiting up to 5m0s for pod "test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c" in namespace "svcaccounts-6162" to be "Succeeded or Failed"
Aug  4 08:50:37.201: INFO: Pod "test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.527524ms
Aug  4 08:50:39.207: INFO: Pod "test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009297296s
Aug  4 08:50:41.214: INFO: Pod "test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016435403s
STEP: Saw pod success
Aug  4 08:50:41.214: INFO: Pod "test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c" satisfied condition "Succeeded or Failed"
Aug  4 08:50:41.219: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:50:41.236: INFO: Waiting for pod test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c to disappear
Aug  4 08:50:41.240: INFO: Pod test-pod-b44ed5a3-2e71-4ad0-9d2a-0f1d331ad47c no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 08:50:41.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6162" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":17,"skipped":368,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:41.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5453
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 08:50:52.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5453" for this suite.

• [SLOW TEST:11.264 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":18,"skipped":382,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:52.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  4 08:50:58.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1367" for this suite.

• [SLOW TEST:5.910 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":19,"skipped":410,"failed":0}
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:50:58.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-6494
STEP: Creating secret with name secret-test-9ccf5c6b-a72d-4d8a-9862-28649c638a5a
STEP: Creating a pod to test consume secrets
Aug  4 08:50:58.691: INFO: Waiting up to 5m0s for pod "pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6" in namespace "secrets-2157" to be "Succeeded or Failed"
Aug  4 08:50:58.695: INFO: Pod "pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.412245ms
Aug  4 08:51:00.700: INFO: Pod "pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008504272s
Aug  4 08:51:02.708: INFO: Pod "pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016520216s
STEP: Saw pod success
Aug  4 08:51:02.708: INFO: Pod "pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6" satisfied condition "Succeeded or Failed"
Aug  4 08:51:02.711: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 08:51:02.732: INFO: Waiting for pod pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6 to disappear
Aug  4 08:51:02.735: INFO: Pod pod-secrets-88a4f134-6bd3-4224-8b76-be11937acae6 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 08:51:02.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2157" for this suite.
STEP: Destroying namespace "secret-namespace-6494" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":20,"skipped":410,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:02.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-5746
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:51:02.894: INFO: Endpoints addresses: [192.168.0.118] , ports: [6443]
Aug  4 08:51:02.894: INFO: EndpointSlices addresses: [192.168.0.118] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  4 08:51:02.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-5746" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":21,"skipped":422,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:02.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 08:51:19.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9345" for this suite.

• [SLOW TEST:16.253 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":22,"skipped":428,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:19.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5072
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 08:51:19.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5072" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":23,"skipped":467,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:19.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Aug  4 08:51:19.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6950 create -f -'
Aug  4 08:51:19.554: INFO: stderr: ""
Aug  4 08:51:19.554: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug  4 08:51:19.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6950 diff -f -'
Aug  4 08:51:19.667: INFO: rc: 1
Aug  4 08:51:19.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6950 delete -f -'
Aug  4 08:51:19.715: INFO: stderr: ""
Aug  4 08:51:19.715: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:51:19.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6950" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":24,"skipped":497,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:19.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:51:19.903: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5605" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":25,"skipped":515,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:19.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4941
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-2184fcb2-4778-4ab3-88cf-0a2496087eb1
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  4 08:51:20.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4941" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":26,"skipped":557,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:20.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-1964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:51:20.192: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-b683c76b-1600-408e-9860-1a7d2a49cd59" in namespace "security-context-test-1964" to be "Succeeded or Failed"
Aug  4 08:51:20.195: INFO: Pod "busybox-readonly-false-b683c76b-1600-408e-9860-1a7d2a49cd59": Phase="Pending", Reason="", readiness=false. Elapsed: 3.460864ms
Aug  4 08:51:22.204: INFO: Pod "busybox-readonly-false-b683c76b-1600-408e-9860-1a7d2a49cd59": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012474702s
Aug  4 08:51:24.209: INFO: Pod "busybox-readonly-false-b683c76b-1600-408e-9860-1a7d2a49cd59": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01730286s
Aug  4 08:51:24.209: INFO: Pod "busybox-readonly-false-b683c76b-1600-408e-9860-1a7d2a49cd59" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 08:51:24.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1964" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":572,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:24.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-536
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug  4 08:51:24.360: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  4 08:51:29.367: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug  4 08:51:29.371: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug  4 08:51:29.381: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug  4 08:51:29.382: INFO: Observed &ReplicaSet event: ADDED
Aug  4 08:51:29.382: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.382: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.383: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.383: INFO: Found replicaset test-rs in namespace replicaset-536 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  4 08:51:29.383: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug  4 08:51:29.383: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  4 08:51:29.387: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug  4 08:51:29.389: INFO: Observed &ReplicaSet event: ADDED
Aug  4 08:51:29.389: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.389: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.389: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.389: INFO: Observed replicaset test-rs in namespace replicaset-536 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  4 08:51:29.389: INFO: Observed &ReplicaSet event: MODIFIED
Aug  4 08:51:29.389: INFO: Found replicaset test-rs in namespace replicaset-536 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug  4 08:51:29.390: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 08:51:29.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-536" for this suite.

• [SLOW TEST:5.182 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":28,"skipped":575,"failed":0}
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:29.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6034
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug  4 08:51:29.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6034 create -f -'
Aug  4 08:51:30.126: INFO: stderr: ""
Aug  4 08:51:30.126: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  4 08:51:31.131: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 08:51:31.131: INFO: Found 0 / 1
Aug  4 08:51:32.131: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 08:51:32.131: INFO: Found 1 / 1
Aug  4 08:51:32.131: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug  4 08:51:32.136: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 08:51:32.136: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  4 08:51:32.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6034 patch pod agnhost-primary-fbpvg -p {"metadata":{"annotations":{"x":"y"}}}'
Aug  4 08:51:32.189: INFO: stderr: ""
Aug  4 08:51:32.189: INFO: stdout: "pod/agnhost-primary-fbpvg patched\n"
STEP: checking annotations
Aug  4 08:51:32.193: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 08:51:32.193: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:51:32.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6034" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":29,"skipped":575,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:32.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6216
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:51:32.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:51:38.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6216" for this suite.

• [SLOW TEST:6.353 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":30,"skipped":575,"failed":0}
SSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:38.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5125
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-3b3ae2bc-9edd-422c-b7e1-08506a9e934a
STEP: Creating a pod to test consume secrets
Aug  4 08:51:38.700: INFO: Waiting up to 5m0s for pod "pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc" in namespace "secrets-5125" to be "Succeeded or Failed"
Aug  4 08:51:38.705: INFO: Pod "pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.735975ms
Aug  4 08:51:40.710: INFO: Pod "pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00983665s
Aug  4 08:51:42.717: INFO: Pod "pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016907804s
STEP: Saw pod success
Aug  4 08:51:42.717: INFO: Pod "pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc" satisfied condition "Succeeded or Failed"
Aug  4 08:51:42.722: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 08:51:42.740: INFO: Waiting for pod pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc to disappear
Aug  4 08:51:42.744: INFO: Pod pod-secrets-0f32efa4-ae91-449f-9be5-3b11c84d39fc no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 08:51:42.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5125" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":31,"skipped":580,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:42.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-7823
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  4 08:51:43.387: INFO: starting watch
STEP: patching
STEP: updating
Aug  4 08:51:43.397: INFO: waiting for watch events with expected annotations
Aug  4 08:51:43.397: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:51:43.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-7823" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":32,"skipped":594,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:43.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:51:43.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5481" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":33,"skipped":594,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:43.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1323
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  4 08:51:43.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1323 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug  4 08:51:43.783: INFO: stderr: ""
Aug  4 08:51:43.783: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug  4 08:51:43.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1323 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug  4 08:51:44.381: INFO: stderr: ""
Aug  4 08:51:44.382: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  4 08:51:44.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1323 delete pods e2e-test-httpd-pod'
Aug  4 08:51:47.418: INFO: stderr: ""
Aug  4 08:51:47.418: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:51:47.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1323" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":34,"skipped":622,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:47.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9924
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:51:47.569: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e" in namespace "security-context-test-9924" to be "Succeeded or Failed"
Aug  4 08:51:47.573: INFO: Pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.541537ms
Aug  4 08:51:49.578: INFO: Pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009277893s
Aug  4 08:51:51.585: INFO: Pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015846582s
Aug  4 08:51:51.585: INFO: Pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e" satisfied condition "Succeeded or Failed"
Aug  4 08:51:51.594: INFO: Got logs for pod "busybox-privileged-false-65fa7166-01a5-4516-ae53-53161d9eec5e": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 08:51:51.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9924" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":35,"skipped":636,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:51.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2244
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-2244
STEP: creating replication controller nodeport-test in namespace services-2244
I0804 08:51:51.759856      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2244, replica count: 2
Aug  4 08:51:54.811: INFO: Creating new exec pod
I0804 08:51:54.811210      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 08:51:57.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-2244 exec execpodcw9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug  4 08:51:57.944: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug  4 08:51:57.944: INFO: stdout: ""
Aug  4 08:51:58.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-2244 exec execpodcw9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug  4 08:51:59.047: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug  4 08:51:59.047: INFO: stdout: "nodeport-test-2fh5n"
Aug  4 08:51:59.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-2244 exec execpodcw9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.50.142 80'
Aug  4 08:51:59.129: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.50.142 80\nConnection to 172.16.50.142 80 port [tcp/http] succeeded!\n"
Aug  4 08:51:59.129: INFO: stdout: "nodeport-test-njp6k"
Aug  4 08:51:59.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-2244 exec execpodcw9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.125 31697'
Aug  4 08:51:59.217: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.125 31697\nConnection to 192.168.0.125 31697 port [tcp/*] succeeded!\n"
Aug  4 08:51:59.217: INFO: stdout: "nodeport-test-njp6k"
Aug  4 08:51:59.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-2244 exec execpodcw9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.122 31697'
Aug  4 08:51:59.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.122 31697\nConnection to 192.168.0.122 31697 port [tcp/*] succeeded!\n"
Aug  4 08:51:59.304: INFO: stdout: "nodeport-test-njp6k"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:51:59.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2244" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.707 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":36,"skipped":639,"failed":0}
SSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:51:59.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-784
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Aug  4 08:51:59.454: INFO: Waiting up to 5m0s for pod "client-containers-75b6619b-87df-46eb-8955-249736d2dec2" in namespace "containers-784" to be "Succeeded or Failed"
Aug  4 08:51:59.458: INFO: Pod "client-containers-75b6619b-87df-46eb-8955-249736d2dec2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.440908ms
Aug  4 08:52:01.463: INFO: Pod "client-containers-75b6619b-87df-46eb-8955-249736d2dec2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009259371s
Aug  4 08:52:03.471: INFO: Pod "client-containers-75b6619b-87df-46eb-8955-249736d2dec2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01651413s
STEP: Saw pod success
Aug  4 08:52:03.471: INFO: Pod "client-containers-75b6619b-87df-46eb-8955-249736d2dec2" satisfied condition "Succeeded or Failed"
Aug  4 08:52:03.474: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod client-containers-75b6619b-87df-46eb-8955-249736d2dec2 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:52:03.496: INFO: Waiting for pod client-containers-75b6619b-87df-46eb-8955-249736d2dec2 to disappear
Aug  4 08:52:03.500: INFO: Pod client-containers-75b6619b-87df-46eb-8955-249736d2dec2 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  4 08:52:03.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-784" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":642,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:03.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7629
STEP: creating service affinity-clusterip in namespace services-7629
STEP: creating replication controller affinity-clusterip in namespace services-7629
I0804 08:52:03.649825      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7629, replica count: 3
I0804 08:52:06.701152      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 08:52:06.712: INFO: Creating new exec pod
Aug  4 08:52:09.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7629 exec execpod-affinity8gbbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug  4 08:52:09.825: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug  4 08:52:09.825: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:52:09.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7629 exec execpod-affinity8gbbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.120.110 80'
Aug  4 08:52:09.921: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.120.110 80\nConnection to 172.16.120.110 80 port [tcp/http] succeeded!\n"
Aug  4 08:52:09.921: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:52:09.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7629 exec execpod-affinity8gbbw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.16.120.110:80/ ; done'
Aug  4 08:52:10.066: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.120.110:80/\n"
Aug  4 08:52:10.066: INFO: stdout: "\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc\naffinity-clusterip-9xpxc"
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Received response from host: affinity-clusterip-9xpxc
Aug  4 08:52:10.066: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-7629, will wait for the garbage collector to delete the pods
Aug  4 08:52:10.139: INFO: Deleting ReplicationController affinity-clusterip took: 7.591672ms
Aug  4 08:52:10.240: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.628876ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:52:12.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7629" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.760 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":38,"skipped":683,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:12.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-2997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:52:12.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: creating replication controller svc-latency-rc in namespace svc-latency-2997
I0804 08:52:12.403779      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2997, replica count: 1
I0804 08:52:13.455608      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0804 08:52:14.456127      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 08:52:14.568: INFO: Created: latency-svc-vb72d
Aug  4 08:52:14.572: INFO: Got endpoints: latency-svc-vb72d [16.342757ms]
Aug  4 08:52:14.582: INFO: Created: latency-svc-tjslm
Aug  4 08:52:14.587: INFO: Got endpoints: latency-svc-tjslm [14.467328ms]
Aug  4 08:52:14.588: INFO: Created: latency-svc-wgrzp
Aug  4 08:52:14.592: INFO: Got endpoints: latency-svc-wgrzp [19.484404ms]
Aug  4 08:52:14.594: INFO: Created: latency-svc-bcfg6
Aug  4 08:52:14.597: INFO: Got endpoints: latency-svc-bcfg6 [25.079208ms]
Aug  4 08:52:14.598: INFO: Created: latency-svc-9wq9d
Aug  4 08:52:14.602: INFO: Got endpoints: latency-svc-9wq9d [29.93568ms]
Aug  4 08:52:14.604: INFO: Created: latency-svc-hrsp9
Aug  4 08:52:14.608: INFO: Got endpoints: latency-svc-hrsp9 [35.523982ms]
Aug  4 08:52:14.610: INFO: Created: latency-svc-4sc9v
Aug  4 08:52:14.614: INFO: Got endpoints: latency-svc-4sc9v [41.251333ms]
Aug  4 08:52:14.615: INFO: Created: latency-svc-vcmhq
Aug  4 08:52:14.620: INFO: Got endpoints: latency-svc-vcmhq [47.04845ms]
Aug  4 08:52:14.622: INFO: Created: latency-svc-trdbs
Aug  4 08:52:14.626: INFO: Got endpoints: latency-svc-trdbs [52.932225ms]
Aug  4 08:52:14.627: INFO: Created: latency-svc-r6tg2
Aug  4 08:52:14.631: INFO: Got endpoints: latency-svc-r6tg2 [58.733669ms]
Aug  4 08:52:14.632: INFO: Created: latency-svc-78mvm
Aug  4 08:52:14.636: INFO: Got endpoints: latency-svc-78mvm [63.527917ms]
Aug  4 08:52:14.638: INFO: Created: latency-svc-gplp4
Aug  4 08:52:14.642: INFO: Got endpoints: latency-svc-gplp4 [69.252256ms]
Aug  4 08:52:14.644: INFO: Created: latency-svc-wfz64
Aug  4 08:52:14.647: INFO: Got endpoints: latency-svc-wfz64 [74.696211ms]
Aug  4 08:52:14.650: INFO: Created: latency-svc-556jq
Aug  4 08:52:14.654: INFO: Got endpoints: latency-svc-556jq [81.567721ms]
Aug  4 08:52:14.656: INFO: Created: latency-svc-dh767
Aug  4 08:52:14.660: INFO: Got endpoints: latency-svc-dh767 [86.879797ms]
Aug  4 08:52:14.661: INFO: Created: latency-svc-lg4l2
Aug  4 08:52:14.665: INFO: Got endpoints: latency-svc-lg4l2 [92.641759ms]
Aug  4 08:52:14.666: INFO: Created: latency-svc-6595b
Aug  4 08:52:14.671: INFO: Got endpoints: latency-svc-6595b [84.047112ms]
Aug  4 08:52:14.673: INFO: Created: latency-svc-rbsd9
Aug  4 08:52:14.677: INFO: Got endpoints: latency-svc-rbsd9 [84.601009ms]
Aug  4 08:52:14.678: INFO: Created: latency-svc-mknzh
Aug  4 08:52:14.681: INFO: Got endpoints: latency-svc-mknzh [83.930628ms]
Aug  4 08:52:14.683: INFO: Created: latency-svc-hmwlj
Aug  4 08:52:14.688: INFO: Got endpoints: latency-svc-hmwlj [85.570842ms]
Aug  4 08:52:14.688: INFO: Created: latency-svc-ksq7m
Aug  4 08:52:14.692: INFO: Got endpoints: latency-svc-ksq7m [84.351876ms]
Aug  4 08:52:14.694: INFO: Created: latency-svc-s7f9w
Aug  4 08:52:14.698: INFO: Got endpoints: latency-svc-s7f9w [84.023211ms]
Aug  4 08:52:14.699: INFO: Created: latency-svc-vs2gd
Aug  4 08:52:14.703: INFO: Got endpoints: latency-svc-vs2gd [83.794861ms]
Aug  4 08:52:14.705: INFO: Created: latency-svc-kpzcx
Aug  4 08:52:14.709: INFO: Got endpoints: latency-svc-kpzcx [83.239856ms]
Aug  4 08:52:14.710: INFO: Created: latency-svc-4fk62
Aug  4 08:52:14.714: INFO: Got endpoints: latency-svc-4fk62 [82.919845ms]
Aug  4 08:52:14.715: INFO: Created: latency-svc-89szz
Aug  4 08:52:14.719: INFO: Got endpoints: latency-svc-89szz [83.238167ms]
Aug  4 08:52:14.721: INFO: Created: latency-svc-4d6dk
Aug  4 08:52:14.725: INFO: Got endpoints: latency-svc-4d6dk [83.314284ms]
Aug  4 08:52:14.727: INFO: Created: latency-svc-9hntk
Aug  4 08:52:14.730: INFO: Got endpoints: latency-svc-9hntk [82.836381ms]
Aug  4 08:52:14.732: INFO: Created: latency-svc-wx5tm
Aug  4 08:52:14.736: INFO: Got endpoints: latency-svc-wx5tm [81.967569ms]
Aug  4 08:52:14.740: INFO: Created: latency-svc-z6g9q
Aug  4 08:52:14.741: INFO: Got endpoints: latency-svc-z6g9q [81.183368ms]
Aug  4 08:52:14.743: INFO: Created: latency-svc-mnflb
Aug  4 08:52:14.747: INFO: Got endpoints: latency-svc-mnflb [81.386994ms]
Aug  4 08:52:14.748: INFO: Created: latency-svc-h4dkn
Aug  4 08:52:14.753: INFO: Got endpoints: latency-svc-h4dkn [81.603362ms]
Aug  4 08:52:14.754: INFO: Created: latency-svc-7b69w
Aug  4 08:52:14.758: INFO: Got endpoints: latency-svc-7b69w [81.321658ms]
Aug  4 08:52:14.761: INFO: Created: latency-svc-tc8wv
Aug  4 08:52:14.765: INFO: Created: latency-svc-x4lsx
Aug  4 08:52:14.772: INFO: Created: latency-svc-fjlpd
Aug  4 08:52:14.772: INFO: Got endpoints: latency-svc-tc8wv [90.690433ms]
Aug  4 08:52:14.777: INFO: Created: latency-svc-4nbb5
Aug  4 08:52:14.782: INFO: Created: latency-svc-k2szv
Aug  4 08:52:14.788: INFO: Created: latency-svc-2gw9h
Aug  4 08:52:14.793: INFO: Created: latency-svc-rfbcq
Aug  4 08:52:14.798: INFO: Created: latency-svc-bbmjp
Aug  4 08:52:14.805: INFO: Created: latency-svc-plr5c
Aug  4 08:52:14.810: INFO: Created: latency-svc-v6vql
Aug  4 08:52:14.822: INFO: Created: latency-svc-k4rlw
Aug  4 08:52:14.823: INFO: Got endpoints: latency-svc-x4lsx [134.573822ms]
Aug  4 08:52:14.828: INFO: Created: latency-svc-8mqfk
Aug  4 08:52:14.835: INFO: Created: latency-svc-tcw26
Aug  4 08:52:14.839: INFO: Created: latency-svc-zdnhp
Aug  4 08:52:14.846: INFO: Created: latency-svc-bwkm4
Aug  4 08:52:14.853: INFO: Created: latency-svc-bw5ds
Aug  4 08:52:14.857: INFO: Created: latency-svc-l29x7
Aug  4 08:52:14.872: INFO: Got endpoints: latency-svc-fjlpd [179.677132ms]
Aug  4 08:52:14.883: INFO: Created: latency-svc-j9lkv
Aug  4 08:52:14.922: INFO: Got endpoints: latency-svc-4nbb5 [223.913711ms]
Aug  4 08:52:14.933: INFO: Created: latency-svc-8vs54
Aug  4 08:52:14.972: INFO: Got endpoints: latency-svc-k2szv [268.688075ms]
Aug  4 08:52:14.982: INFO: Created: latency-svc-btvwp
Aug  4 08:52:15.022: INFO: Got endpoints: latency-svc-2gw9h [313.199097ms]
Aug  4 08:52:15.033: INFO: Created: latency-svc-pbwc2
Aug  4 08:52:15.071: INFO: Got endpoints: latency-svc-rfbcq [357.18505ms]
Aug  4 08:52:15.082: INFO: Created: latency-svc-np4l7
Aug  4 08:52:15.123: INFO: Got endpoints: latency-svc-bbmjp [403.433853ms]
Aug  4 08:52:15.133: INFO: Created: latency-svc-6zhdd
Aug  4 08:52:15.172: INFO: Got endpoints: latency-svc-plr5c [447.031911ms]
Aug  4 08:52:15.183: INFO: Created: latency-svc-g8gpk
Aug  4 08:52:15.222: INFO: Got endpoints: latency-svc-v6vql [492.202027ms]
Aug  4 08:52:15.232: INFO: Created: latency-svc-gw5kn
Aug  4 08:52:15.273: INFO: Got endpoints: latency-svc-k4rlw [536.668021ms]
Aug  4 08:52:15.283: INFO: Created: latency-svc-scl58
Aug  4 08:52:15.322: INFO: Got endpoints: latency-svc-8mqfk [581.355256ms]
Aug  4 08:52:15.332: INFO: Created: latency-svc-4jz6c
Aug  4 08:52:15.372: INFO: Got endpoints: latency-svc-tcw26 [625.061089ms]
Aug  4 08:52:15.381: INFO: Created: latency-svc-w8gtj
Aug  4 08:52:15.422: INFO: Got endpoints: latency-svc-zdnhp [669.555183ms]
Aug  4 08:52:15.432: INFO: Created: latency-svc-jp4kz
Aug  4 08:52:15.472: INFO: Got endpoints: latency-svc-bwkm4 [714.102162ms]
Aug  4 08:52:15.482: INFO: Created: latency-svc-zbncb
Aug  4 08:52:15.522: INFO: Got endpoints: latency-svc-bw5ds [749.425723ms]
Aug  4 08:52:15.532: INFO: Created: latency-svc-nc6sg
Aug  4 08:52:15.571: INFO: Got endpoints: latency-svc-l29x7 [748.811803ms]
Aug  4 08:52:15.581: INFO: Created: latency-svc-tmp6l
Aug  4 08:52:15.622: INFO: Got endpoints: latency-svc-j9lkv [749.982929ms]
Aug  4 08:52:15.632: INFO: Created: latency-svc-k6hkb
Aug  4 08:52:15.671: INFO: Got endpoints: latency-svc-8vs54 [749.583382ms]
Aug  4 08:52:15.681: INFO: Created: latency-svc-dcq8m
Aug  4 08:52:15.722: INFO: Got endpoints: latency-svc-btvwp [749.713087ms]
Aug  4 08:52:15.732: INFO: Created: latency-svc-p4kkd
Aug  4 08:52:15.773: INFO: Got endpoints: latency-svc-pbwc2 [750.763535ms]
Aug  4 08:52:15.783: INFO: Created: latency-svc-6hdbv
Aug  4 08:52:15.821: INFO: Got endpoints: latency-svc-np4l7 [749.976412ms]
Aug  4 08:52:15.832: INFO: Created: latency-svc-w5bz9
Aug  4 08:52:15.871: INFO: Got endpoints: latency-svc-6zhdd [748.331381ms]
Aug  4 08:52:15.883: INFO: Created: latency-svc-8bn7z
Aug  4 08:52:15.921: INFO: Got endpoints: latency-svc-g8gpk [748.95679ms]
Aug  4 08:52:15.931: INFO: Created: latency-svc-fsj4d
Aug  4 08:52:15.972: INFO: Got endpoints: latency-svc-gw5kn [750.012981ms]
Aug  4 08:52:15.983: INFO: Created: latency-svc-4vgb7
Aug  4 08:52:16.022: INFO: Got endpoints: latency-svc-scl58 [748.867859ms]
Aug  4 08:52:16.033: INFO: Created: latency-svc-xq8z6
Aug  4 08:52:16.072: INFO: Got endpoints: latency-svc-4jz6c [749.597819ms]
Aug  4 08:52:16.082: INFO: Created: latency-svc-fhrtg
Aug  4 08:52:16.123: INFO: Got endpoints: latency-svc-w8gtj [751.077138ms]
Aug  4 08:52:16.132: INFO: Created: latency-svc-8wg4p
Aug  4 08:52:16.172: INFO: Got endpoints: latency-svc-jp4kz [749.472931ms]
Aug  4 08:52:16.183: INFO: Created: latency-svc-vjqvv
Aug  4 08:52:16.222: INFO: Got endpoints: latency-svc-zbncb [749.940635ms]
Aug  4 08:52:16.233: INFO: Created: latency-svc-pvjhp
Aug  4 08:52:16.272: INFO: Got endpoints: latency-svc-nc6sg [750.682419ms]
Aug  4 08:52:16.281: INFO: Created: latency-svc-wmrrf
Aug  4 08:52:16.321: INFO: Got endpoints: latency-svc-tmp6l [750.015705ms]
Aug  4 08:52:16.333: INFO: Created: latency-svc-m9ntn
Aug  4 08:52:16.372: INFO: Got endpoints: latency-svc-k6hkb [749.661047ms]
Aug  4 08:52:16.383: INFO: Created: latency-svc-275mq
Aug  4 08:52:16.423: INFO: Got endpoints: latency-svc-dcq8m [751.758784ms]
Aug  4 08:52:16.432: INFO: Created: latency-svc-xv2rp
Aug  4 08:52:16.472: INFO: Got endpoints: latency-svc-p4kkd [749.663998ms]
Aug  4 08:52:16.483: INFO: Created: latency-svc-89s9n
Aug  4 08:52:16.522: INFO: Got endpoints: latency-svc-6hdbv [748.743567ms]
Aug  4 08:52:16.532: INFO: Created: latency-svc-29xtw
Aug  4 08:52:16.572: INFO: Got endpoints: latency-svc-w5bz9 [750.708988ms]
Aug  4 08:52:16.581: INFO: Created: latency-svc-j6f89
Aug  4 08:52:16.622: INFO: Got endpoints: latency-svc-8bn7z [750.854925ms]
Aug  4 08:52:16.634: INFO: Created: latency-svc-llqz6
Aug  4 08:52:16.672: INFO: Got endpoints: latency-svc-fsj4d [751.100572ms]
Aug  4 08:52:16.683: INFO: Created: latency-svc-dgssw
Aug  4 08:52:16.723: INFO: Got endpoints: latency-svc-4vgb7 [750.671762ms]
Aug  4 08:52:16.732: INFO: Created: latency-svc-bb5jr
Aug  4 08:52:16.772: INFO: Got endpoints: latency-svc-xq8z6 [749.951218ms]
Aug  4 08:52:16.783: INFO: Created: latency-svc-4f5r7
Aug  4 08:52:16.822: INFO: Got endpoints: latency-svc-fhrtg [750.309496ms]
Aug  4 08:52:16.832: INFO: Created: latency-svc-2hkkq
Aug  4 08:52:16.873: INFO: Got endpoints: latency-svc-8wg4p [749.644474ms]
Aug  4 08:52:16.881: INFO: Created: latency-svc-7ks2v
Aug  4 08:52:16.922: INFO: Got endpoints: latency-svc-vjqvv [750.602096ms]
Aug  4 08:52:16.934: INFO: Created: latency-svc-d5g56
Aug  4 08:52:16.972: INFO: Got endpoints: latency-svc-pvjhp [749.816948ms]
Aug  4 08:52:16.982: INFO: Created: latency-svc-7ht6w
Aug  4 08:52:17.022: INFO: Got endpoints: latency-svc-wmrrf [750.168842ms]
Aug  4 08:52:17.031: INFO: Created: latency-svc-vrd6l
Aug  4 08:52:17.071: INFO: Got endpoints: latency-svc-m9ntn [749.95614ms]
Aug  4 08:52:17.083: INFO: Created: latency-svc-66dhg
Aug  4 08:52:17.122: INFO: Got endpoints: latency-svc-275mq [750.437697ms]
Aug  4 08:52:17.133: INFO: Created: latency-svc-f8ndf
Aug  4 08:52:17.173: INFO: Got endpoints: latency-svc-xv2rp [749.741718ms]
Aug  4 08:52:17.182: INFO: Created: latency-svc-skq6b
Aug  4 08:52:17.222: INFO: Got endpoints: latency-svc-89s9n [750.081096ms]
Aug  4 08:52:17.233: INFO: Created: latency-svc-nnmgk
Aug  4 08:52:17.272: INFO: Got endpoints: latency-svc-29xtw [749.946626ms]
Aug  4 08:52:17.282: INFO: Created: latency-svc-4lgbp
Aug  4 08:52:17.321: INFO: Got endpoints: latency-svc-j6f89 [749.07531ms]
Aug  4 08:52:17.330: INFO: Created: latency-svc-kvxx8
Aug  4 08:52:17.372: INFO: Got endpoints: latency-svc-llqz6 [749.597284ms]
Aug  4 08:52:17.383: INFO: Created: latency-svc-67l5q
Aug  4 08:52:17.421: INFO: Got endpoints: latency-svc-dgssw [748.910288ms]
Aug  4 08:52:17.431: INFO: Created: latency-svc-nwr8c
Aug  4 08:52:17.472: INFO: Got endpoints: latency-svc-bb5jr [748.659063ms]
Aug  4 08:52:17.481: INFO: Created: latency-svc-lkwlv
Aug  4 08:52:17.522: INFO: Got endpoints: latency-svc-4f5r7 [750.539762ms]
Aug  4 08:52:17.534: INFO: Created: latency-svc-hbtj9
Aug  4 08:52:17.572: INFO: Got endpoints: latency-svc-2hkkq [749.745814ms]
Aug  4 08:52:17.582: INFO: Created: latency-svc-lvhlp
Aug  4 08:52:17.622: INFO: Got endpoints: latency-svc-7ks2v [748.967903ms]
Aug  4 08:52:17.630: INFO: Created: latency-svc-7q8wr
Aug  4 08:52:17.671: INFO: Got endpoints: latency-svc-d5g56 [748.926909ms]
Aug  4 08:52:17.681: INFO: Created: latency-svc-l7v6g
Aug  4 08:52:17.722: INFO: Got endpoints: latency-svc-7ht6w [750.604437ms]
Aug  4 08:52:17.734: INFO: Created: latency-svc-8fwsr
Aug  4 08:52:17.771: INFO: Got endpoints: latency-svc-vrd6l [748.760465ms]
Aug  4 08:52:17.780: INFO: Created: latency-svc-nhcdr
Aug  4 08:52:17.822: INFO: Got endpoints: latency-svc-66dhg [750.841995ms]
Aug  4 08:52:17.832: INFO: Created: latency-svc-hnpz7
Aug  4 08:52:17.872: INFO: Got endpoints: latency-svc-f8ndf [749.930289ms]
Aug  4 08:52:17.884: INFO: Created: latency-svc-qxqc4
Aug  4 08:52:17.922: INFO: Got endpoints: latency-svc-skq6b [749.161512ms]
Aug  4 08:52:17.932: INFO: Created: latency-svc-c9gvz
Aug  4 08:52:17.972: INFO: Got endpoints: latency-svc-nnmgk [749.994835ms]
Aug  4 08:52:17.982: INFO: Created: latency-svc-wtvd6
Aug  4 08:52:18.023: INFO: Got endpoints: latency-svc-4lgbp [751.294303ms]
Aug  4 08:52:18.035: INFO: Created: latency-svc-4mkjp
Aug  4 08:52:18.072: INFO: Got endpoints: latency-svc-kvxx8 [750.917229ms]
Aug  4 08:52:18.081: INFO: Created: latency-svc-jmscv
Aug  4 08:52:18.121: INFO: Got endpoints: latency-svc-67l5q [749.847867ms]
Aug  4 08:52:18.132: INFO: Created: latency-svc-8mjcz
Aug  4 08:52:18.173: INFO: Got endpoints: latency-svc-nwr8c [751.344018ms]
Aug  4 08:52:18.184: INFO: Created: latency-svc-dzlcm
Aug  4 08:52:18.222: INFO: Got endpoints: latency-svc-lkwlv [750.071162ms]
Aug  4 08:52:18.231: INFO: Created: latency-svc-xhtfn
Aug  4 08:52:18.272: INFO: Got endpoints: latency-svc-hbtj9 [749.795147ms]
Aug  4 08:52:18.282: INFO: Created: latency-svc-g84qj
Aug  4 08:52:18.323: INFO: Got endpoints: latency-svc-lvhlp [750.989267ms]
Aug  4 08:52:18.334: INFO: Created: latency-svc-8hk6p
Aug  4 08:52:18.372: INFO: Got endpoints: latency-svc-7q8wr [750.561339ms]
Aug  4 08:52:18.381: INFO: Created: latency-svc-fbtn6
Aug  4 08:52:18.422: INFO: Got endpoints: latency-svc-l7v6g [751.199719ms]
Aug  4 08:52:18.433: INFO: Created: latency-svc-m6mjn
Aug  4 08:52:18.473: INFO: Got endpoints: latency-svc-8fwsr [750.357109ms]
Aug  4 08:52:18.485: INFO: Created: latency-svc-bbchq
Aug  4 08:52:18.522: INFO: Got endpoints: latency-svc-nhcdr [750.894336ms]
Aug  4 08:52:18.531: INFO: Created: latency-svc-km6js
Aug  4 08:52:18.572: INFO: Got endpoints: latency-svc-hnpz7 [749.587805ms]
Aug  4 08:52:18.582: INFO: Created: latency-svc-qvwhc
Aug  4 08:52:18.623: INFO: Got endpoints: latency-svc-qxqc4 [751.068557ms]
Aug  4 08:52:18.635: INFO: Created: latency-svc-l8vt2
Aug  4 08:52:18.673: INFO: Got endpoints: latency-svc-c9gvz [750.964869ms]
Aug  4 08:52:18.682: INFO: Created: latency-svc-gkg7n
Aug  4 08:52:18.721: INFO: Got endpoints: latency-svc-wtvd6 [749.728334ms]
Aug  4 08:52:18.732: INFO: Created: latency-svc-w495p
Aug  4 08:52:18.773: INFO: Got endpoints: latency-svc-4mkjp [749.809299ms]
Aug  4 08:52:18.784: INFO: Created: latency-svc-7tsbp
Aug  4 08:52:18.823: INFO: Got endpoints: latency-svc-jmscv [750.760504ms]
Aug  4 08:52:18.832: INFO: Created: latency-svc-7scvw
Aug  4 08:52:18.873: INFO: Got endpoints: latency-svc-8mjcz [751.151232ms]
Aug  4 08:52:18.883: INFO: Created: latency-svc-shpm9
Aug  4 08:52:18.922: INFO: Got endpoints: latency-svc-dzlcm [749.490378ms]
Aug  4 08:52:18.934: INFO: Created: latency-svc-ncp9w
Aug  4 08:52:18.972: INFO: Got endpoints: latency-svc-xhtfn [749.978539ms]
Aug  4 08:52:18.981: INFO: Created: latency-svc-vqvd6
Aug  4 08:52:19.022: INFO: Got endpoints: latency-svc-g84qj [750.313251ms]
Aug  4 08:52:19.032: INFO: Created: latency-svc-r7wtw
Aug  4 08:52:19.072: INFO: Got endpoints: latency-svc-8hk6p [749.548268ms]
Aug  4 08:52:19.084: INFO: Created: latency-svc-vg9gn
Aug  4 08:52:19.122: INFO: Got endpoints: latency-svc-fbtn6 [749.87439ms]
Aug  4 08:52:19.131: INFO: Created: latency-svc-b78ql
Aug  4 08:52:19.172: INFO: Got endpoints: latency-svc-m6mjn [749.747757ms]
Aug  4 08:52:19.182: INFO: Created: latency-svc-2bgft
Aug  4 08:52:19.222: INFO: Got endpoints: latency-svc-bbchq [749.493083ms]
Aug  4 08:52:19.234: INFO: Created: latency-svc-hk9z9
Aug  4 08:52:19.272: INFO: Got endpoints: latency-svc-km6js [749.820135ms]
Aug  4 08:52:19.281: INFO: Created: latency-svc-gtgrd
Aug  4 08:52:19.321: INFO: Got endpoints: latency-svc-qvwhc [749.473955ms]
Aug  4 08:52:19.331: INFO: Created: latency-svc-mcvsx
Aug  4 08:52:19.372: INFO: Got endpoints: latency-svc-l8vt2 [749.008126ms]
Aug  4 08:52:19.384: INFO: Created: latency-svc-v65tc
Aug  4 08:52:19.422: INFO: Got endpoints: latency-svc-gkg7n [749.202899ms]
Aug  4 08:52:19.431: INFO: Created: latency-svc-tgwzf
Aug  4 08:52:19.472: INFO: Got endpoints: latency-svc-w495p [750.106287ms]
Aug  4 08:52:19.482: INFO: Created: latency-svc-vsk9k
Aug  4 08:52:19.522: INFO: Got endpoints: latency-svc-7tsbp [749.102473ms]
Aug  4 08:52:19.534: INFO: Created: latency-svc-95w9l
Aug  4 08:52:19.573: INFO: Got endpoints: latency-svc-7scvw [750.357182ms]
Aug  4 08:52:19.582: INFO: Created: latency-svc-snbn2
Aug  4 08:52:19.622: INFO: Got endpoints: latency-svc-shpm9 [749.062405ms]
Aug  4 08:52:19.636: INFO: Created: latency-svc-gm2tv
Aug  4 08:52:19.672: INFO: Got endpoints: latency-svc-ncp9w [750.003169ms]
Aug  4 08:52:19.683: INFO: Created: latency-svc-ml7ww
Aug  4 08:52:19.722: INFO: Got endpoints: latency-svc-vqvd6 [750.433573ms]
Aug  4 08:52:19.731: INFO: Created: latency-svc-bc74w
Aug  4 08:52:19.771: INFO: Got endpoints: latency-svc-r7wtw [749.087143ms]
Aug  4 08:52:19.782: INFO: Created: latency-svc-vvgkq
Aug  4 08:52:19.822: INFO: Got endpoints: latency-svc-vg9gn [749.438418ms]
Aug  4 08:52:19.834: INFO: Created: latency-svc-jz59m
Aug  4 08:52:19.872: INFO: Got endpoints: latency-svc-b78ql [750.35858ms]
Aug  4 08:52:19.881: INFO: Created: latency-svc-bt2h4
Aug  4 08:52:19.922: INFO: Got endpoints: latency-svc-2bgft [749.544523ms]
Aug  4 08:52:19.932: INFO: Created: latency-svc-w62jw
Aug  4 08:52:19.972: INFO: Got endpoints: latency-svc-hk9z9 [749.506958ms]
Aug  4 08:52:19.984: INFO: Created: latency-svc-h2tdl
Aug  4 08:52:20.022: INFO: Got endpoints: latency-svc-gtgrd [750.143311ms]
Aug  4 08:52:20.031: INFO: Created: latency-svc-g567c
Aug  4 08:52:20.073: INFO: Got endpoints: latency-svc-mcvsx [751.186174ms]
Aug  4 08:52:20.083: INFO: Created: latency-svc-lbfdf
Aug  4 08:52:20.122: INFO: Got endpoints: latency-svc-v65tc [749.855015ms]
Aug  4 08:52:20.134: INFO: Created: latency-svc-wgnm2
Aug  4 08:52:20.172: INFO: Got endpoints: latency-svc-tgwzf [749.890611ms]
Aug  4 08:52:20.181: INFO: Created: latency-svc-78sq4
Aug  4 08:52:20.222: INFO: Got endpoints: latency-svc-vsk9k [750.11999ms]
Aug  4 08:52:20.232: INFO: Created: latency-svc-4w746
Aug  4 08:52:20.272: INFO: Got endpoints: latency-svc-95w9l [750.366787ms]
Aug  4 08:52:20.284: INFO: Created: latency-svc-s7cq7
Aug  4 08:52:20.322: INFO: Got endpoints: latency-svc-snbn2 [748.914436ms]
Aug  4 08:52:20.331: INFO: Created: latency-svc-swcfk
Aug  4 08:52:20.372: INFO: Got endpoints: latency-svc-gm2tv [749.789886ms]
Aug  4 08:52:20.382: INFO: Created: latency-svc-bkd9k
Aug  4 08:52:20.423: INFO: Got endpoints: latency-svc-ml7ww [750.375487ms]
Aug  4 08:52:20.433: INFO: Created: latency-svc-crr4h
Aug  4 08:52:20.471: INFO: Got endpoints: latency-svc-bc74w [748.671419ms]
Aug  4 08:52:20.480: INFO: Created: latency-svc-dvqkz
Aug  4 08:52:20.522: INFO: Got endpoints: latency-svc-vvgkq [750.562481ms]
Aug  4 08:52:20.533: INFO: Created: latency-svc-w66xz
Aug  4 08:52:20.572: INFO: Got endpoints: latency-svc-jz59m [750.58258ms]
Aug  4 08:52:20.583: INFO: Created: latency-svc-zz957
Aug  4 08:52:20.622: INFO: Got endpoints: latency-svc-bt2h4 [749.571462ms]
Aug  4 08:52:20.630: INFO: Created: latency-svc-ztf4q
Aug  4 08:52:20.672: INFO: Got endpoints: latency-svc-w62jw [750.201165ms]
Aug  4 08:52:20.683: INFO: Created: latency-svc-hmfhn
Aug  4 08:52:20.723: INFO: Got endpoints: latency-svc-h2tdl [750.873591ms]
Aug  4 08:52:20.733: INFO: Created: latency-svc-mmjjp
Aug  4 08:52:20.772: INFO: Got endpoints: latency-svc-g567c [749.782619ms]
Aug  4 08:52:20.781: INFO: Created: latency-svc-rxj5j
Aug  4 08:52:20.822: INFO: Got endpoints: latency-svc-lbfdf [749.432219ms]
Aug  4 08:52:20.834: INFO: Created: latency-svc-j4qd6
Aug  4 08:52:20.872: INFO: Got endpoints: latency-svc-wgnm2 [749.637194ms]
Aug  4 08:52:20.882: INFO: Created: latency-svc-wdhx5
Aug  4 08:52:20.922: INFO: Got endpoints: latency-svc-78sq4 [749.824427ms]
Aug  4 08:52:20.931: INFO: Created: latency-svc-jvx8x
Aug  4 08:52:20.972: INFO: Got endpoints: latency-svc-4w746 [750.329781ms]
Aug  4 08:52:20.984: INFO: Created: latency-svc-v8vq5
Aug  4 08:52:21.022: INFO: Got endpoints: latency-svc-s7cq7 [750.121538ms]
Aug  4 08:52:21.033: INFO: Created: latency-svc-np488
Aug  4 08:52:21.072: INFO: Got endpoints: latency-svc-swcfk [749.947721ms]
Aug  4 08:52:21.081: INFO: Created: latency-svc-rr4m4
Aug  4 08:52:21.122: INFO: Got endpoints: latency-svc-bkd9k [750.651305ms]
Aug  4 08:52:21.134: INFO: Created: latency-svc-fwpdb
Aug  4 08:52:21.173: INFO: Got endpoints: latency-svc-crr4h [750.226274ms]
Aug  4 08:52:21.183: INFO: Created: latency-svc-d2clt
Aug  4 08:52:21.222: INFO: Got endpoints: latency-svc-dvqkz [750.415883ms]
Aug  4 08:52:21.231: INFO: Created: latency-svc-cps2s
Aug  4 08:52:21.273: INFO: Got endpoints: latency-svc-w66xz [750.663958ms]
Aug  4 08:52:21.285: INFO: Created: latency-svc-sjt8r
Aug  4 08:52:21.323: INFO: Got endpoints: latency-svc-zz957 [750.194279ms]
Aug  4 08:52:21.333: INFO: Created: latency-svc-qwtcr
Aug  4 08:52:21.372: INFO: Got endpoints: latency-svc-ztf4q [749.558604ms]
Aug  4 08:52:21.380: INFO: Created: latency-svc-4ht6h
Aug  4 08:52:21.422: INFO: Got endpoints: latency-svc-hmfhn [749.566399ms]
Aug  4 08:52:21.433: INFO: Created: latency-svc-pcbgd
Aug  4 08:52:21.472: INFO: Got endpoints: latency-svc-mmjjp [749.01792ms]
Aug  4 08:52:21.482: INFO: Created: latency-svc-5dnf6
Aug  4 08:52:21.522: INFO: Got endpoints: latency-svc-rxj5j [750.065349ms]
Aug  4 08:52:21.531: INFO: Created: latency-svc-c55rx
Aug  4 08:52:21.572: INFO: Got endpoints: latency-svc-j4qd6 [749.631868ms]
Aug  4 08:52:21.583: INFO: Created: latency-svc-x6sq4
Aug  4 08:52:21.621: INFO: Got endpoints: latency-svc-wdhx5 [749.526104ms]
Aug  4 08:52:21.632: INFO: Created: latency-svc-tx4nj
Aug  4 08:52:21.673: INFO: Got endpoints: latency-svc-jvx8x [750.725293ms]
Aug  4 08:52:21.682: INFO: Created: latency-svc-mjkrk
Aug  4 08:52:21.722: INFO: Got endpoints: latency-svc-v8vq5 [749.808943ms]
Aug  4 08:52:21.733: INFO: Created: latency-svc-6mmhf
Aug  4 08:52:21.772: INFO: Got endpoints: latency-svc-np488 [749.396126ms]
Aug  4 08:52:21.782: INFO: Created: latency-svc-ffl68
Aug  4 08:52:21.823: INFO: Got endpoints: latency-svc-rr4m4 [751.168663ms]
Aug  4 08:52:21.832: INFO: Created: latency-svc-kq2kg
Aug  4 08:52:21.871: INFO: Got endpoints: latency-svc-fwpdb [749.220426ms]
Aug  4 08:52:21.883: INFO: Created: latency-svc-2qwwp
Aug  4 08:52:21.922: INFO: Got endpoints: latency-svc-d2clt [749.006692ms]
Aug  4 08:52:21.932: INFO: Created: latency-svc-wwv4p
Aug  4 08:52:21.972: INFO: Got endpoints: latency-svc-cps2s [750.746973ms]
Aug  4 08:52:21.981: INFO: Created: latency-svc-g8jbw
Aug  4 08:52:22.021: INFO: Got endpoints: latency-svc-sjt8r [748.780602ms]
Aug  4 08:52:22.033: INFO: Created: latency-svc-7wxxq
Aug  4 08:52:22.072: INFO: Got endpoints: latency-svc-qwtcr [749.216261ms]
Aug  4 08:52:22.082: INFO: Created: latency-svc-q92c8
Aug  4 08:52:22.122: INFO: Got endpoints: latency-svc-4ht6h [750.366928ms]
Aug  4 08:52:22.131: INFO: Created: latency-svc-qjh5w
Aug  4 08:52:22.172: INFO: Got endpoints: latency-svc-pcbgd [750.201014ms]
Aug  4 08:52:22.183: INFO: Created: latency-svc-w2m4d
Aug  4 08:52:22.222: INFO: Got endpoints: latency-svc-5dnf6 [750.341208ms]
Aug  4 08:52:22.233: INFO: Created: latency-svc-bxkjr
Aug  4 08:52:22.273: INFO: Got endpoints: latency-svc-c55rx [750.882804ms]
Aug  4 08:52:22.282: INFO: Created: latency-svc-v9wmn
Aug  4 08:52:22.322: INFO: Got endpoints: latency-svc-x6sq4 [750.434675ms]
Aug  4 08:52:22.333: INFO: Created: latency-svc-8jwp6
Aug  4 08:52:22.373: INFO: Got endpoints: latency-svc-tx4nj [751.244524ms]
Aug  4 08:52:22.383: INFO: Created: latency-svc-kfkw9
Aug  4 08:52:22.423: INFO: Got endpoints: latency-svc-mjkrk [749.903364ms]
Aug  4 08:52:22.472: INFO: Got endpoints: latency-svc-6mmhf [750.085227ms]
Aug  4 08:52:22.522: INFO: Got endpoints: latency-svc-ffl68 [750.51321ms]
Aug  4 08:52:22.572: INFO: Got endpoints: latency-svc-kq2kg [748.884894ms]
Aug  4 08:52:22.622: INFO: Got endpoints: latency-svc-2qwwp [750.18415ms]
Aug  4 08:52:22.672: INFO: Got endpoints: latency-svc-wwv4p [749.71881ms]
Aug  4 08:52:22.723: INFO: Got endpoints: latency-svc-g8jbw [750.476472ms]
Aug  4 08:52:22.771: INFO: Got endpoints: latency-svc-7wxxq [749.744343ms]
Aug  4 08:52:22.823: INFO: Got endpoints: latency-svc-q92c8 [750.969478ms]
Aug  4 08:52:22.873: INFO: Got endpoints: latency-svc-qjh5w [750.908502ms]
Aug  4 08:52:22.922: INFO: Got endpoints: latency-svc-w2m4d [750.299154ms]
Aug  4 08:52:22.972: INFO: Got endpoints: latency-svc-bxkjr [750.20137ms]
Aug  4 08:52:23.023: INFO: Got endpoints: latency-svc-v9wmn [749.754971ms]
Aug  4 08:52:23.072: INFO: Got endpoints: latency-svc-8jwp6 [749.84648ms]
Aug  4 08:52:23.122: INFO: Got endpoints: latency-svc-kfkw9 [749.21219ms]
Aug  4 08:52:23.122: INFO: Latencies: [14.467328ms 19.484404ms 25.079208ms 29.93568ms 35.523982ms 41.251333ms 47.04845ms 52.932225ms 58.733669ms 63.527917ms 69.252256ms 74.696211ms 81.183368ms 81.321658ms 81.386994ms 81.567721ms 81.603362ms 81.967569ms 82.836381ms 82.919845ms 83.238167ms 83.239856ms 83.314284ms 83.794861ms 83.930628ms 84.023211ms 84.047112ms 84.351876ms 84.601009ms 85.570842ms 86.879797ms 90.690433ms 92.641759ms 134.573822ms 179.677132ms 223.913711ms 268.688075ms 313.199097ms 357.18505ms 403.433853ms 447.031911ms 492.202027ms 536.668021ms 581.355256ms 625.061089ms 669.555183ms 714.102162ms 748.331381ms 748.659063ms 748.671419ms 748.743567ms 748.760465ms 748.780602ms 748.811803ms 748.867859ms 748.884894ms 748.910288ms 748.914436ms 748.926909ms 748.95679ms 748.967903ms 749.006692ms 749.008126ms 749.01792ms 749.062405ms 749.07531ms 749.087143ms 749.102473ms 749.161512ms 749.202899ms 749.21219ms 749.216261ms 749.220426ms 749.396126ms 749.425723ms 749.432219ms 749.438418ms 749.472931ms 749.473955ms 749.490378ms 749.493083ms 749.506958ms 749.526104ms 749.544523ms 749.548268ms 749.558604ms 749.566399ms 749.571462ms 749.583382ms 749.587805ms 749.597284ms 749.597819ms 749.631868ms 749.637194ms 749.644474ms 749.661047ms 749.663998ms 749.713087ms 749.71881ms 749.728334ms 749.741718ms 749.744343ms 749.745814ms 749.747757ms 749.754971ms 749.782619ms 749.789886ms 749.795147ms 749.808943ms 749.809299ms 749.816948ms 749.820135ms 749.824427ms 749.84648ms 749.847867ms 749.855015ms 749.87439ms 749.890611ms 749.903364ms 749.930289ms 749.940635ms 749.946626ms 749.947721ms 749.951218ms 749.95614ms 749.976412ms 749.978539ms 749.982929ms 749.994835ms 750.003169ms 750.012981ms 750.015705ms 750.065349ms 750.071162ms 750.081096ms 750.085227ms 750.106287ms 750.11999ms 750.121538ms 750.143311ms 750.168842ms 750.18415ms 750.194279ms 750.201014ms 750.201165ms 750.20137ms 750.226274ms 750.299154ms 750.309496ms 750.313251ms 750.329781ms 750.341208ms 750.357109ms 750.357182ms 750.35858ms 750.366787ms 750.366928ms 750.375487ms 750.415883ms 750.433573ms 750.434675ms 750.437697ms 750.476472ms 750.51321ms 750.539762ms 750.561339ms 750.562481ms 750.58258ms 750.602096ms 750.604437ms 750.651305ms 750.663958ms 750.671762ms 750.682419ms 750.708988ms 750.725293ms 750.746973ms 750.760504ms 750.763535ms 750.841995ms 750.854925ms 750.873591ms 750.882804ms 750.894336ms 750.908502ms 750.917229ms 750.964869ms 750.969478ms 750.989267ms 751.068557ms 751.077138ms 751.100572ms 751.151232ms 751.168663ms 751.186174ms 751.199719ms 751.244524ms 751.294303ms 751.344018ms 751.758784ms]
Aug  4 08:52:23.122: INFO: 50 %ile: 749.741718ms
Aug  4 08:52:23.122: INFO: 90 %ile: 750.854925ms
Aug  4 08:52:23.122: INFO: 99 %ile: 751.344018ms
Aug  4 08:52:23.122: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Aug  4 08:52:23.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-2997" for this suite.

• [SLOW TEST:10.866 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":39,"skipped":691,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:23.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:52:23.281: INFO: created pod pod-service-account-defaultsa
Aug  4 08:52:23.281: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug  4 08:52:23.288: INFO: created pod pod-service-account-mountsa
Aug  4 08:52:23.288: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug  4 08:52:23.292: INFO: created pod pod-service-account-nomountsa
Aug  4 08:52:23.292: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug  4 08:52:23.298: INFO: created pod pod-service-account-defaultsa-mountspec
Aug  4 08:52:23.298: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug  4 08:52:23.304: INFO: created pod pod-service-account-mountsa-mountspec
Aug  4 08:52:23.304: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug  4 08:52:23.308: INFO: created pod pod-service-account-nomountsa-mountspec
Aug  4 08:52:23.308: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug  4 08:52:23.314: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug  4 08:52:23.314: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug  4 08:52:23.319: INFO: created pod pod-service-account-mountsa-nomountspec
Aug  4 08:52:23.319: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug  4 08:52:23.324: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug  4 08:52:23.324: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 08:52:23.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3130" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":40,"skipped":708,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:23.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1205
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug  4 08:52:23.473: INFO: Waiting up to 5m0s for pod "pod-93340976-c9a3-4eac-8b4c-329125eb651f" in namespace "emptydir-1205" to be "Succeeded or Failed"
Aug  4 08:52:23.477: INFO: Pod "pod-93340976-c9a3-4eac-8b4c-329125eb651f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.528596ms
Aug  4 08:52:25.484: INFO: Pod "pod-93340976-c9a3-4eac-8b4c-329125eb651f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010449215s
Aug  4 08:52:27.492: INFO: Pod "pod-93340976-c9a3-4eac-8b4c-329125eb651f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018425209s
STEP: Saw pod success
Aug  4 08:52:27.492: INFO: Pod "pod-93340976-c9a3-4eac-8b4c-329125eb651f" satisfied condition "Succeeded or Failed"
Aug  4 08:52:27.497: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-93340976-c9a3-4eac-8b4c-329125eb651f container test-container: <nil>
STEP: delete the pod
Aug  4 08:52:27.523: INFO: Waiting for pod pod-93340976-c9a3-4eac-8b4c-329125eb651f to disappear
Aug  4 08:52:27.526: INFO: Pod pod-93340976-c9a3-4eac-8b4c-329125eb651f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 08:52:27.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1205" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":41,"skipped":728,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:27.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  4 08:52:27.676: INFO: Waiting up to 5m0s for pod "downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b" in namespace "downward-api-1075" to be "Succeeded or Failed"
Aug  4 08:52:27.680: INFO: Pod "downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.472014ms
Aug  4 08:52:29.687: INFO: Pod "downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011175044s
Aug  4 08:52:31.693: INFO: Pod "downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016929532s
STEP: Saw pod success
Aug  4 08:52:31.693: INFO: Pod "downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b" satisfied condition "Succeeded or Failed"
Aug  4 08:52:31.697: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b container dapi-container: <nil>
STEP: delete the pod
Aug  4 08:52:31.723: INFO: Waiting for pod downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b to disappear
Aug  4 08:52:31.727: INFO: Pod downward-api-326a10da-3bc0-4cd0-ad1a-bee98bd0938b no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  4 08:52:31.727: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1075" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":42,"skipped":742,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:31.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-ff26faaf-4a70-4d5b-9d65-63614b2a996a
STEP: Creating a pod to test consume configMaps
Aug  4 08:52:31.879: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23" in namespace "projected-6417" to be "Succeeded or Failed"
Aug  4 08:52:31.883: INFO: Pod "pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23": Phase="Pending", Reason="", readiness=false. Elapsed: 3.499928ms
Aug  4 08:52:33.888: INFO: Pod "pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00858649s
Aug  4 08:52:35.895: INFO: Pod "pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015353417s
STEP: Saw pod success
Aug  4 08:52:35.895: INFO: Pod "pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23" satisfied condition "Succeeded or Failed"
Aug  4 08:52:35.898: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug  4 08:52:35.919: INFO: Waiting for pod pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23 to disappear
Aug  4 08:52:35.922: INFO: Pod pod-projected-configmaps-c1f9b894-d76b-4293-859e-65840d790c23 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 08:52:35.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6417" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":43,"skipped":764,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:35.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-6976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  4 08:52:36.087: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:52:38.095: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  4 08:52:38.109: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:52:40.116: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug  4 08:52:40.141: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug  4 08:52:40.145: INFO: Pod pod-with-poststart-exec-hook still exists
Aug  4 08:52:42.145: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug  4 08:52:42.153: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  4 08:52:42.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-6976" for this suite.

• [SLOW TEST:6.230 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":44,"skipped":777,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:42.167: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4806
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 08:52:53.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4806" for this suite.

• [SLOW TEST:11.188 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":45,"skipped":790,"failed":0}
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:53.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:52:53.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5237" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":46,"skipped":790,"failed":0}
SSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:53.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5745
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Aug  4 08:52:53.635: INFO: Waiting up to 5m0s for pod "var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb" in namespace "var-expansion-5745" to be "Succeeded or Failed"
Aug  4 08:52:53.638: INFO: Pod "var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.638539ms
Aug  4 08:52:55.645: INFO: Pod "var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010077353s
Aug  4 08:52:57.652: INFO: Pod "var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017078238s
STEP: Saw pod success
Aug  4 08:52:57.652: INFO: Pod "var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb" satisfied condition "Succeeded or Failed"
Aug  4 08:52:57.655: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb container dapi-container: <nil>
STEP: delete the pod
Aug  4 08:52:57.677: INFO: Waiting for pod var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb to disappear
Aug  4 08:52:57.680: INFO: Pod var-expansion-6e756f3c-e4e4-41d1-875d-3a92d31328bb no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 08:52:57.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5745" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":47,"skipped":796,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:52:57.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8768
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-8768
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8768 to expose endpoints map[]
Aug  4 08:52:57.842: INFO: successfully validated that service multi-endpoint-test in namespace services-8768 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-8768
Aug  4 08:52:57.854: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:52:59.862: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8768 to expose endpoints map[pod1:[100]]
Aug  4 08:52:59.879: INFO: successfully validated that service multi-endpoint-test in namespace services-8768 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-8768
Aug  4 08:52:59.890: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:53:01.897: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8768 to expose endpoints map[pod1:[100] pod2:[101]]
Aug  4 08:53:01.919: INFO: successfully validated that service multi-endpoint-test in namespace services-8768 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug  4 08:53:01.919: INFO: Creating new exec pod
Aug  4 08:53:04.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8768 exec execpodptqvz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug  4 08:53:05.042: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug  4 08:53:05.042: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:53:05.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8768 exec execpodptqvz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.173.153 80'
Aug  4 08:53:05.137: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.173.153 80\nConnection to 172.16.173.153 80 port [tcp/http] succeeded!\n"
Aug  4 08:53:05.137: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:53:05.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8768 exec execpodptqvz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug  4 08:53:05.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug  4 08:53:05.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 08:53:05.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8768 exec execpodptqvz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.173.153 81'
Aug  4 08:53:05.326: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.173.153 81\nConnection to 172.16.173.153 81 port [tcp/*] succeeded!\n"
Aug  4 08:53:05.326: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-8768
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8768 to expose endpoints map[pod2:[101]]
Aug  4 08:53:05.353: INFO: successfully validated that service multi-endpoint-test in namespace services-8768 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-8768
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8768 to expose endpoints map[]
Aug  4 08:53:05.374: INFO: successfully validated that service multi-endpoint-test in namespace services-8768 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 08:53:05.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8768" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.709 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":48,"skipped":800,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:53:05.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-2342
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug  4 08:53:05.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2342" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":49,"skipped":816,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:53:05.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-9405
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Aug  4 08:53:05.765: INFO: Waiting up to 5m0s for pod "client-containers-a93d5fea-dfba-4c23-a168-14a457facb25" in namespace "containers-9405" to be "Succeeded or Failed"
Aug  4 08:53:05.768: INFO: Pod "client-containers-a93d5fea-dfba-4c23-a168-14a457facb25": Phase="Pending", Reason="", readiness=false. Elapsed: 3.390987ms
Aug  4 08:53:07.775: INFO: Pod "client-containers-a93d5fea-dfba-4c23-a168-14a457facb25": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010479801s
Aug  4 08:53:09.782: INFO: Pod "client-containers-a93d5fea-dfba-4c23-a168-14a457facb25": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017682574s
STEP: Saw pod success
Aug  4 08:53:09.782: INFO: Pod "client-containers-a93d5fea-dfba-4c23-a168-14a457facb25" satisfied condition "Succeeded or Failed"
Aug  4 08:53:09.786: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod client-containers-a93d5fea-dfba-4c23-a168-14a457facb25 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:53:09.807: INFO: Waiting for pod client-containers-a93d5fea-dfba-4c23-a168-14a457facb25 to disappear
Aug  4 08:53:09.810: INFO: Pod client-containers-a93d5fea-dfba-4c23-a168-14a457facb25 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  4 08:53:09.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-9405" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":50,"skipped":832,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:53:09.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-2544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:53:09.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Creating first CR 
Aug  4 08:53:12.502: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:12Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:12Z]] name:name1 resourceVersion:4810900 uid:35f093ef-9121-45cb-8db8-2eee014390e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug  4 08:53:22.513: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:22Z]] name:name2 resourceVersion:4811056 uid:feb1939c-3508-440a-b0f9-669d9b69d83e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug  4 08:53:32.525: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:32Z]] name:name1 resourceVersion:4811204 uid:35f093ef-9121-45cb-8db8-2eee014390e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug  4 08:53:42.534: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:42Z]] name:name2 resourceVersion:4811361 uid:feb1939c-3508-440a-b0f9-669d9b69d83e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug  4 08:53:52.550: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:32Z]] name:name1 resourceVersion:4811511 uid:35f093ef-9121-45cb-8db8-2eee014390e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug  4 08:54:02.561: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-04T08:53:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-04T08:53:42Z]] name:name2 resourceVersion:4811657 uid:feb1939c-3508-440a-b0f9-669d9b69d83e] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:54:13.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-2544" for this suite.

• [SLOW TEST:63.270 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":51,"skipped":906,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:13.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4682
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-c63d2694-b9d4-4b6c-ad0f-e0b0e3036c79
STEP: Creating a pod to test consume configMaps
Aug  4 08:54:13.237: INFO: Waiting up to 5m0s for pod "pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9" in namespace "configmap-4682" to be "Succeeded or Failed"
Aug  4 08:54:13.240: INFO: Pod "pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.412108ms
Aug  4 08:54:15.247: INFO: Pod "pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010399469s
Aug  4 08:54:17.254: INFO: Pod "pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017057404s
STEP: Saw pod success
Aug  4 08:54:17.254: INFO: Pod "pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9" satisfied condition "Succeeded or Failed"
Aug  4 08:54:17.259: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:54:17.276: INFO: Waiting for pod pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9 to disappear
Aug  4 08:54:17.280: INFO: Pod pod-configmaps-18e4027d-ddc0-48da-a4c6-5243ee8870f9 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 08:54:17.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4682" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":52,"skipped":918,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:17.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:54:17.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-3915 version'
Aug  4 08:54:17.456: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Aug  4 08:54:17.456: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:30:46Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24+\", GitVersion:\"v1.24.3-aliyun.1\", GitCommit:\"9ad7939edb5ce0fc8c33a8b60e586372a34de4a8\", GitTreeState:\"clean\", BuildDate:\"2022-08-02T07:53:36Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:54:17.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3915" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":53,"skipped":924,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:17.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-467
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  4 08:54:17.639: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:54:17.639: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:54:18.649: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug  4 08:54:18.649: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 08:54:19.654: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 08:54:19.654: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug  4 08:54:19.678: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 08:54:19.678: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 08:54:20.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 08:54:20.691: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-467, will wait for the garbage collector to delete the pods
Aug  4 08:54:20.761: INFO: Deleting DaemonSet.extensions daemon-set took: 7.74618ms
Aug  4 08:54:20.861: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.126083ms
Aug  4 08:54:23.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 08:54:23.369: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 08:54:23.373: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4812074"},"items":null}

Aug  4 08:54:23.378: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4812074"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 08:54:23.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-467" for this suite.

• [SLOW TEST:5.948 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":54,"skipped":946,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:23.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-57
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:54:23.569: INFO: The status of Pod busybox-scheduling-2206eaf0-64e2-414c-9dae-f19db8c4f74d is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:54:25.575: INFO: The status of Pod busybox-scheduling-2206eaf0-64e2-414c-9dae-f19db8c4f74d is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  4 08:54:25.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-57" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":55,"skipped":986,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:25.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-d9f6bc74-7a9d-498f-bd71-2f5efb1e4c8f
STEP: Creating configMap with name cm-test-opt-upd-263169ed-77d0-4e40-9a27-e3ae412c8972
STEP: Creating the pod
Aug  4 08:54:25.756: INFO: The status of Pod pod-configmaps-44bf2530-a232-4607-b328-9464068e257d is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:54:27.765: INFO: The status of Pod pod-configmaps-44bf2530-a232-4607-b328-9464068e257d is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-d9f6bc74-7a9d-498f-bd71-2f5efb1e4c8f
STEP: Updating configmap cm-test-opt-upd-263169ed-77d0-4e40-9a27-e3ae412c8972
STEP: Creating configMap with name cm-test-opt-create-b04a8fd1-affb-4c07-b619-5168fe220a82
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 08:54:29.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8563" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":56,"skipped":1090,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:54:29.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 08:54:32.023: INFO: DNS probes using dns-test-ea42451e-8f51-4a0a-865c-fb766ebb6618 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 08:54:34.071: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:34.077: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:34.077: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:54:39.083: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:39.088: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:39.088: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:54:44.083: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:44.088: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:44.088: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:54:49.083: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:49.087: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:49.087: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:54:54.083: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:54.088: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:54.088: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:54:59.083: INFO: File wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:59.087: INFO: File jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local from pod  dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  4 08:54:59.087: INFO: Lookups using dns-8544/dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 failed for: [wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local]

Aug  4 08:55:04.087: INFO: DNS probes using dns-test-6db804ec-50f3-44d1-935c-cc723af85d77 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8544.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8544.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 08:55:06.160: INFO: DNS probes using dns-test-b9181bee-d27c-4736-bb3d-97c3ce69f2fc succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 08:55:06.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8544" for this suite.

• [SLOW TEST:36.343 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":57,"skipped":1092,"failed":0}
SSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:06.200: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2209
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-47a4dbee-1fcc-44bf-ab4c-9afa68e16e93
STEP: Creating a pod to test consume secrets
Aug  4 08:55:06.337: INFO: Waiting up to 5m0s for pod "pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2" in namespace "secrets-2209" to be "Succeeded or Failed"
Aug  4 08:55:06.342: INFO: Pod "pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.986366ms
Aug  4 08:55:08.349: INFO: Pod "pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2": Phase="Running", Reason="", readiness=false. Elapsed: 2.012356449s
Aug  4 08:55:10.358: INFO: Pod "pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02047868s
STEP: Saw pod success
Aug  4 08:55:10.358: INFO: Pod "pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2" satisfied condition "Succeeded or Failed"
Aug  4 08:55:10.361: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2 container secret-env-test: <nil>
STEP: delete the pod
Aug  4 08:55:10.383: INFO: Waiting for pod pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2 to disappear
Aug  4 08:55:10.386: INFO: Pod pod-secrets-b89b8c60-e019-4936-94a3-6e486578e8f2 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  4 08:55:10.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2209" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":58,"skipped":1099,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:10.397: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9851
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-7b8cb884-8f7d-4ccc-b729-9fb9dc5cfb40
STEP: Creating a pod to test consume configMaps
Aug  4 08:55:10.537: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819" in namespace "projected-9851" to be "Succeeded or Failed"
Aug  4 08:55:10.542: INFO: Pod "pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819": Phase="Pending", Reason="", readiness=false. Elapsed: 4.830061ms
Aug  4 08:55:12.551: INFO: Pod "pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013245997s
Aug  4 08:55:14.556: INFO: Pod "pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018466488s
STEP: Saw pod success
Aug  4 08:55:14.556: INFO: Pod "pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819" satisfied condition "Succeeded or Failed"
Aug  4 08:55:14.561: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 08:55:14.586: INFO: Waiting for pod pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819 to disappear
Aug  4 08:55:14.589: INFO: Pod pod-projected-configmaps-7c1966b1-f1c0-41b6-8037-9bd5ff79e819 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 08:55:14.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9851" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":59,"skipped":1117,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:14.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-868
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-700583fd-f8ca-42f9-8a35-163cd471ec1a-7238
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  4 08:55:14.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-868" for this suite.
STEP: Destroying namespace "nspatchtest-700583fd-f8ca-42f9-8a35-163cd471ec1a-7238" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":60,"skipped":1159,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:14.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6297
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-690d4fc3-a82b-4516-84e0-aa56e6b3c4ee
STEP: Creating secret with name secret-projected-all-test-volume-0b2b2c49-6669-4f31-81b7-0955b134fc9f
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug  4 08:55:15.021: INFO: Waiting up to 5m0s for pod "projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6" in namespace "projected-6297" to be "Succeeded or Failed"
Aug  4 08:55:15.024: INFO: Pod "projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.372048ms
Aug  4 08:55:17.031: INFO: Pod "projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010306164s
Aug  4 08:55:19.037: INFO: Pod "projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015875477s
STEP: Saw pod success
Aug  4 08:55:19.037: INFO: Pod "projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6" satisfied condition "Succeeded or Failed"
Aug  4 08:55:19.041: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug  4 08:55:19.063: INFO: Waiting for pod projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6 to disappear
Aug  4 08:55:19.066: INFO: Pod projected-volume-f50e0b53-ae05-4e4d-974d-a1ea64fe15f6 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Aug  4 08:55:19.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6297" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1168,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:19.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8556
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Aug  4 08:55:19.218: INFO: The status of Pod pod-hostip-173ded20-99d4-497c-916e-78a1ada9b3c7 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:55:21.224: INFO: The status of Pod pod-hostip-173ded20-99d4-497c-916e-78a1ada9b3c7 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:55:23.227: INFO: The status of Pod pod-hostip-173ded20-99d4-497c-916e-78a1ada9b3c7 is Running (Ready = true)
Aug  4 08:55:23.234: INFO: Pod pod-hostip-173ded20-99d4-497c-916e-78a1ada9b3c7 has hostIP: 192.168.0.125
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 08:55:23.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8556" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1225,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:23.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-7961
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8578
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-3936
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  4 08:55:29.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-7961" for this suite.
STEP: Destroying namespace "nsdeletetest-8578" for this suite.
Aug  4 08:55:29.664: INFO: Namespace nsdeletetest-8578 was already deleted
STEP: Destroying namespace "nsdeletetest-3936" for this suite.

• [SLOW TEST:6.424 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":63,"skipped":1245,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:29.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:55:29.808: INFO: The status of Pod server-envvars-8c3794a1-b062-4bb2-8b52-dd1fad6e5a0c is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:55:31.816: INFO: The status of Pod server-envvars-8c3794a1-b062-4bb2-8b52-dd1fad6e5a0c is Running (Ready = true)
Aug  4 08:55:31.836: INFO: Waiting up to 5m0s for pod "client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250" in namespace "pods-2115" to be "Succeeded or Failed"
Aug  4 08:55:31.840: INFO: Pod "client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250": Phase="Pending", Reason="", readiness=false. Elapsed: 4.735738ms
Aug  4 08:55:33.847: INFO: Pod "client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011072477s
Aug  4 08:55:35.856: INFO: Pod "client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020350904s
STEP: Saw pod success
Aug  4 08:55:35.856: INFO: Pod "client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250" satisfied condition "Succeeded or Failed"
Aug  4 08:55:35.860: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250 container env3cont: <nil>
STEP: delete the pod
Aug  4 08:55:35.881: INFO: Waiting for pod client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250 to disappear
Aug  4 08:55:35.884: INFO: Pod client-envvars-5e0b1b4b-4509-49c1-8c39-6cc8b0d32250 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 08:55:35.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2115" for this suite.

• [SLOW TEST:6.225 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":64,"skipped":1247,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:55:35.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2017.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2017.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 169.133.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.133.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.133.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.133.169_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2017.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2017.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2017.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2017.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2017.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 169.133.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.133.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.133.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.133.169_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 08:55:38.074: INFO: Unable to read wheezy_udp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.079: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.083: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.089: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.113: INFO: Unable to read jessie_udp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.119: INFO: Unable to read jessie_tcp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.123: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.127: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:38.148: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@dns-test-service.dns-2017.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_udp@dns-test-service.dns-2017.svc.cluster.local jessie_tcp@dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:55:43.167: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:43.171: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:43.201: INFO: Unable to read jessie_tcp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:43.205: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:43.211: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:43.231: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:55:48.165: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:48.171: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:48.201: INFO: Unable to read jessie_tcp@dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:48.206: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:48.210: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:48.231: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:55:53.165: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:53.169: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:53.203: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:53.209: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:53.228: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:55:58.168: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:58.173: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:58.207: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:58.212: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:55:58.232: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:56:03.168: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:56:03.172: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:56:03.207: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:56:03.212: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local from pod dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475: the server could not find the requested resource (get pods dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475)
Aug  4 08:56:03.232: INFO: Lookups using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2017.svc.cluster.local]

Aug  4 08:56:08.232: INFO: DNS probes using dns-2017/dns-test-91ea44a4-80cf-47d7-a69a-9c62a4049475 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 08:56:08.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2017" for this suite.

• [SLOW TEST:32.397 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":65,"skipped":1267,"failed":0}
SS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:08.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5404
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug  4 08:56:08.427: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813958 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:08.428: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813958 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug  4 08:56:08.436: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813959 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:08.436: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813959 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug  4 08:56:08.446: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813960 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:08.446: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813960 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug  4 08:56:08.452: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813961 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:08.452: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5404  7b93b38a-86e9-4a6a-be91-f9c4699f72bb 4813961 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug  4 08:56:08.457: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5404  cb69141f-3af4-431f-9f56-cfcbd604ece4 4813962 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:08.457: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5404  cb69141f-3af4-431f-9f56-cfcbd604ece4 4813962 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug  4 08:56:18.473: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5404  cb69141f-3af4-431f-9f56-cfcbd604ece4 4814118 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 08:56:18.473: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5404  cb69141f-3af4-431f-9f56-cfcbd604ece4 4814118 0 2022-08-04 08:56:08 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-04 08:56:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  4 08:56:28.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5404" for this suite.

• [SLOW TEST:20.202 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":66,"skipped":1269,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:28.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2142
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-a21e2545-4edd-43f8-9790-5f8c3eb96841
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 08:56:30.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2142" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1314,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:30.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6581
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 08:56:31.092: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 08:56:34.120: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:56:34.126: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6945-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:56:37.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6581" for this suite.
STEP: Destroying namespace "webhook-6581-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.584 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":68,"skipped":1362,"failed":0}
SS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:37.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-4673
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug  4 08:56:37.418: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:56:39.424: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.0.123 on the node which pod1 resides and expect scheduled
Aug  4 08:56:39.435: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:56:41.440: INFO: The status of Pod pod2 is Running (Ready = false)
Aug  4 08:56:43.445: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.0.123 but use UDP protocol on the node which pod2 resides
Aug  4 08:56:43.454: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:56:45.461: INFO: The status of Pod pod3 is Running (Ready = true)
Aug  4 08:56:45.471: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:56:47.479: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug  4 08:56:47.483: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.0.123 http://127.0.0.1:54323/hostname] Namespace:hostport-4673 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:56:47.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:56:47.483: INFO: ExecWithOptions: Clientset creation
Aug  4 08:56:47.483: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/hostport-4673/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.0.123+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.123, port: 54323
Aug  4 08:56:47.541: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.0.123:54323/hostname] Namespace:hostport-4673 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:56:47.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:56:47.542: INFO: ExecWithOptions: Clientset creation
Aug  4 08:56:47.542: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/hostport-4673/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.0.123%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.123, port: 54323 UDP
Aug  4 08:56:47.590: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 192.168.0.123 54323] Namespace:hostport-4673 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:56:47.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:56:47.591: INFO: ExecWithOptions: Clientset creation
Aug  4 08:56:47.591: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/hostport-4673/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+192.168.0.123+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Aug  4 08:56:52.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-4673" for this suite.

• [SLOW TEST:15.390 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":69,"skipped":1364,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:52.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Aug  4 08:56:52.797: INFO: created test-pod-1
Aug  4 08:56:52.802: INFO: created test-pod-2
Aug  4 08:56:52.808: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Aug  4 08:56:52.808: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-5281' to be running and ready
Aug  4 08:56:52.819: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  4 08:56:52.819: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  4 08:56:52.819: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  4 08:56:52.819: INFO: 0 / 3 pods in namespace 'pods-5281' are running and ready (0 seconds elapsed)
Aug  4 08:56:52.819: INFO: expected 0 pod replicas in namespace 'pods-5281', 0 are Running and Ready.
Aug  4 08:56:52.819: INFO: POD         NODE                       PHASE    GRACE  CONDITIONS
Aug  4 08:56:52.819: INFO: test-pod-1  cn-hongkong.192.168.0.124  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 08:56:52 +0000 UTC  }]
Aug  4 08:56:52.819: INFO: test-pod-2  cn-hongkong.192.168.0.121  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 08:56:52 +0000 UTC  }]
Aug  4 08:56:52.819: INFO: test-pod-3  cn-hongkong.192.168.0.121  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 08:56:52 +0000 UTC  }]
Aug  4 08:56:52.819: INFO: 
Aug  4 08:56:54.835: INFO: 3 / 3 pods in namespace 'pods-5281' are running and ready (2 seconds elapsed)
Aug  4 08:56:54.835: INFO: expected 0 pod replicas in namespace 'pods-5281', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Aug  4 08:56:54.862: INFO: Pod quantity 3 is different from expected quantity 0
Aug  4 08:56:55.868: INFO: Pod quantity 3 is different from expected quantity 0
Aug  4 08:56:56.868: INFO: Pod quantity 1 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 08:56:57.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5281" for this suite.

• [SLOW TEST:5.216 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":70,"skipped":1372,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:57.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-1487
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:56:58.530: INFO: Checking APIGroup: apiregistration.k8s.io
Aug  4 08:56:58.531: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug  4 08:56:58.531: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug  4 08:56:58.531: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug  4 08:56:58.531: INFO: Checking APIGroup: apps
Aug  4 08:56:58.533: INFO: PreferredVersion.GroupVersion: apps/v1
Aug  4 08:56:58.533: INFO: Versions found [{apps/v1 v1}]
Aug  4 08:56:58.533: INFO: apps/v1 matches apps/v1
Aug  4 08:56:58.533: INFO: Checking APIGroup: events.k8s.io
Aug  4 08:56:58.534: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug  4 08:56:58.534: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.534: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug  4 08:56:58.534: INFO: Checking APIGroup: authentication.k8s.io
Aug  4 08:56:58.535: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug  4 08:56:58.535: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug  4 08:56:58.535: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug  4 08:56:58.535: INFO: Checking APIGroup: authorization.k8s.io
Aug  4 08:56:58.537: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug  4 08:56:58.537: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug  4 08:56:58.537: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug  4 08:56:58.537: INFO: Checking APIGroup: autoscaling
Aug  4 08:56:58.539: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug  4 08:56:58.539: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug  4 08:56:58.539: INFO: autoscaling/v2 matches autoscaling/v2
Aug  4 08:56:58.539: INFO: Checking APIGroup: batch
Aug  4 08:56:58.540: INFO: PreferredVersion.GroupVersion: batch/v1
Aug  4 08:56:58.540: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug  4 08:56:58.540: INFO: batch/v1 matches batch/v1
Aug  4 08:56:58.540: INFO: Checking APIGroup: certificates.k8s.io
Aug  4 08:56:58.542: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug  4 08:56:58.542: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug  4 08:56:58.542: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug  4 08:56:58.542: INFO: Checking APIGroup: networking.k8s.io
Aug  4 08:56:58.543: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug  4 08:56:58.543: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug  4 08:56:58.543: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug  4 08:56:58.543: INFO: Checking APIGroup: policy
Aug  4 08:56:58.545: INFO: PreferredVersion.GroupVersion: policy/v1
Aug  4 08:56:58.545: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug  4 08:56:58.545: INFO: policy/v1 matches policy/v1
Aug  4 08:56:58.545: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug  4 08:56:58.546: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug  4 08:56:58.546: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug  4 08:56:58.546: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug  4 08:56:58.546: INFO: Checking APIGroup: storage.k8s.io
Aug  4 08:56:58.548: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug  4 08:56:58.548: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.548: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug  4 08:56:58.548: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug  4 08:56:58.549: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug  4 08:56:58.549: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug  4 08:56:58.549: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug  4 08:56:58.549: INFO: Checking APIGroup: apiextensions.k8s.io
Aug  4 08:56:58.551: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug  4 08:56:58.551: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug  4 08:56:58.551: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug  4 08:56:58.551: INFO: Checking APIGroup: scheduling.k8s.io
Aug  4 08:56:58.552: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug  4 08:56:58.552: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug  4 08:56:58.552: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug  4 08:56:58.552: INFO: Checking APIGroup: coordination.k8s.io
Aug  4 08:56:58.554: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug  4 08:56:58.554: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug  4 08:56:58.554: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug  4 08:56:58.554: INFO: Checking APIGroup: node.k8s.io
Aug  4 08:56:58.555: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug  4 08:56:58.555: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.555: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug  4 08:56:58.555: INFO: Checking APIGroup: discovery.k8s.io
Aug  4 08:56:58.557: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug  4 08:56:58.557: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.557: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug  4 08:56:58.557: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug  4 08:56:58.558: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug  4 08:56:58.558: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.558: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug  4 08:56:58.558: INFO: Checking APIGroup: snapshot.storage.k8s.io
Aug  4 08:56:58.560: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
Aug  4 08:56:58.560: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.560: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
Aug  4 08:56:58.560: INFO: Checking APIGroup: storage.alibabacloud.com
Aug  4 08:56:58.561: INFO: PreferredVersion.GroupVersion: storage.alibabacloud.com/v1beta1
Aug  4 08:56:58.561: INFO: Versions found [{storage.alibabacloud.com/v1beta1 v1beta1} {storage.alibabacloud.com/v1alpha1 v1alpha1}]
Aug  4 08:56:58.561: INFO: storage.alibabacloud.com/v1beta1 matches storage.alibabacloud.com/v1beta1
Aug  4 08:56:58.561: INFO: Checking APIGroup: alert.alibabacloud.com
Aug  4 08:56:58.563: INFO: PreferredVersion.GroupVersion: alert.alibabacloud.com/v1beta1
Aug  4 08:56:58.563: INFO: Versions found [{alert.alibabacloud.com/v1beta1 v1beta1}]
Aug  4 08:56:58.563: INFO: alert.alibabacloud.com/v1beta1 matches alert.alibabacloud.com/v1beta1
Aug  4 08:56:58.563: INFO: Checking APIGroup: metrics.k8s.io
Aug  4 08:56:58.564: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug  4 08:56:58.564: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug  4 08:56:58.564: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Aug  4 08:56:58.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-1487" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":71,"skipped":1376,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:56:58.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3545
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  4 08:56:58.718: INFO: The status of Pod labelsupdateab13518d-023c-4202-a6f7-5df11465e849 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:57:00.726: INFO: The status of Pod labelsupdateab13518d-023c-4202-a6f7-5df11465e849 is Running (Ready = true)
Aug  4 08:57:01.251: INFO: Successfully updated pod "labelsupdateab13518d-023c-4202-a6f7-5df11465e849"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 08:57:03.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3545" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":72,"skipped":1394,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:03.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Aug  4 08:57:03.408: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-310 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:57:03.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-310" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":73,"skipped":1418,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:03.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3244
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3244
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-3244
STEP: Waiting until pod test-pod will start running in namespace statefulset-3244
STEP: Creating statefulset with conflicting port in namespace statefulset-3244
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3244
Aug  4 08:57:05.642: INFO: Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 8383c546-3798-4f79-9c40-56dfb06cfaf9, status phase: Pending. Waiting for statefulset controller to delete.
Aug  4 08:57:05.653: INFO: Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 8383c546-3798-4f79-9c40-56dfb06cfaf9, status phase: Failed. Waiting for statefulset controller to delete.
Aug  4 08:57:05.660: INFO: Observed stateful pod in namespace: statefulset-3244, name: ss-0, uid: 8383c546-3798-4f79-9c40-56dfb06cfaf9, status phase: Failed. Waiting for statefulset controller to delete.
Aug  4 08:57:05.665: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3244
STEP: Removing pod with conflicting port in namespace statefulset-3244
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3244 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 08:57:07.686: INFO: Deleting all statefulset in ns statefulset-3244
Aug  4 08:57:07.691: INFO: Scaling statefulset ss to 0
Aug  4 08:57:17.714: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 08:57:17.719: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 08:57:17.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3244" for this suite.

• [SLOW TEST:14.288 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":74,"skipped":1433,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:17.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 08:57:17.892: INFO: Waiting up to 5m0s for pod "downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865" in namespace "downward-api-2937" to be "Succeeded or Failed"
Aug  4 08:57:17.896: INFO: Pod "downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865": Phase="Pending", Reason="", readiness=false. Elapsed: 3.559864ms
Aug  4 08:57:19.903: INFO: Pod "downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010357383s
Aug  4 08:57:21.909: INFO: Pod "downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016509448s
STEP: Saw pod success
Aug  4 08:57:21.909: INFO: Pod "downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865" satisfied condition "Succeeded or Failed"
Aug  4 08:57:21.914: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865 container client-container: <nil>
STEP: delete the pod
Aug  4 08:57:21.938: INFO: Waiting for pod downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865 to disappear
Aug  4 08:57:21.941: INFO: Pod downwardapi-volume-96fcfb27-3884-4c8b-877a-50623f427865 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 08:57:21.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2937" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":75,"skipped":1451,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:21.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug  4 08:57:22.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:24.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 08:57:32.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-345" for this suite.

• [SLOW TEST:10.590 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":76,"skipped":1467,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:32.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-105
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  4 08:57:32.671: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  4 08:57:32.716: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:57:34.723: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:57:36.722: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:57:38.722: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:57:40.727: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:57:42.724: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 08:57:44.724: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  4 08:57:44.732: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug  4 08:57:44.739: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug  4 08:57:44.746: INFO: The status of Pod netserver-3 is Running (Ready = true)
Aug  4 08:57:44.753: INFO: The status of Pod netserver-4 is Running (Ready = true)
STEP: Creating test pods
Aug  4 08:57:46.789: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
Aug  4 08:57:46.789: INFO: Going to poll 10.115.0.221 on port 8083 at least 0 times, with a maximum of 55 tries before failing
Aug  4 08:57:46.792: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.115.0.221:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-105 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:57:46.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:46.792: INFO: ExecWithOptions: Clientset creation
Aug  4 08:57:46.793: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-105/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.115.0.221%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 08:57:46.863: INFO: Found all 1 expected endpoints: [netserver-0]
Aug  4 08:57:46.863: INFO: Going to poll 10.115.0.11 on port 8083 at least 0 times, with a maximum of 55 tries before failing
Aug  4 08:57:46.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.115.0.11:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-105 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:57:46.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:46.866: INFO: ExecWithOptions: Clientset creation
Aug  4 08:57:46.867: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-105/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.115.0.11%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 08:57:46.913: INFO: Found all 1 expected endpoints: [netserver-1]
Aug  4 08:57:46.913: INFO: Going to poll 10.115.0.155 on port 8083 at least 0 times, with a maximum of 55 tries before failing
Aug  4 08:57:46.917: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.115.0.155:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-105 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:57:46.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:46.917: INFO: ExecWithOptions: Clientset creation
Aug  4 08:57:46.917: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-105/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.115.0.155%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 08:57:46.974: INFO: Found all 1 expected endpoints: [netserver-2]
Aug  4 08:57:46.974: INFO: Going to poll 10.115.1.32 on port 8083 at least 0 times, with a maximum of 55 tries before failing
Aug  4 08:57:46.977: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.115.1.32:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-105 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:57:46.977: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:46.977: INFO: ExecWithOptions: Clientset creation
Aug  4 08:57:46.977: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-105/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.115.1.32%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 08:57:47.022: INFO: Found all 1 expected endpoints: [netserver-3]
Aug  4 08:57:47.022: INFO: Going to poll 10.115.0.85 on port 8083 at least 0 times, with a maximum of 55 tries before failing
Aug  4 08:57:47.026: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.115.0.85:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-105 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:57:47.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:57:47.026: INFO: ExecWithOptions: Clientset creation
Aug  4 08:57:47.026: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-105/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.115.0.85%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 08:57:47.069: INFO: Found all 1 expected endpoints: [netserver-4]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  4 08:57:47.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-105" for this suite.

• [SLOW TEST:14.536 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":77,"skipped":1476,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:57:47.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-757
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-757
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-757
Aug  4 08:57:47.235: INFO: Found 0 stateful pods, waiting for 1
Aug  4 08:57:57.241: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug  4 08:57:57.262: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug  4 08:57:57.274: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug  4 08:57:57.275: INFO: Observed &StatefulSet event: ADDED
Aug  4 08:57:57.275: INFO: Found Statefulset ss in namespace statefulset-757 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  4 08:57:57.275: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug  4 08:57:57.275: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  4 08:57:57.280: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug  4 08:57:57.282: INFO: Observed &StatefulSet event: ADDED
Aug  4 08:57:57.282: INFO: Observed Statefulset ss in namespace statefulset-757 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  4 08:57:57.282: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 08:57:57.282: INFO: Deleting all statefulset in ns statefulset-757
Aug  4 08:57:57.286: INFO: Scaling statefulset ss to 0
Aug  4 08:58:07.309: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 08:58:07.314: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 08:58:07.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-757" for this suite.

• [SLOW TEST:20.259 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":78,"skipped":1489,"failed":0}
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:07.340: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1134
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Aug  4 08:58:07.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug  4 08:58:07.516: INFO: stderr: ""
Aug  4 08:58:07.516: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Aug  4 08:58:07.516: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug  4 08:58:07.516: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-1134" to be "running and ready, or succeeded"
Aug  4 08:58:07.520: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.101889ms
Aug  4 08:58:09.527: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.011225753s
Aug  4 08:58:09.527: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug  4 08:58:09.527: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug  4 08:58:09.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator'
Aug  4 08:58:09.587: INFO: stderr: ""
Aug  4 08:58:09.587: INFO: stdout: "I0804 08:58:08.037636       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/lnqf 567\nI0804 08:58:08.237691       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/lh7v 452\nI0804 08:58:08.438174       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/5t28 207\nI0804 08:58:08.638442       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/npz 323\nI0804 08:58:08.838592       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/pzl 259\nI0804 08:58:09.037810       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/2cqq 467\nI0804 08:58:09.238082       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/zhmn 410\nI0804 08:58:09.438174       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/svw 401\n"
STEP: limiting log lines
Aug  4 08:58:09.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator --tail=1'
Aug  4 08:58:09.632: INFO: stderr: ""
Aug  4 08:58:09.632: INFO: stdout: "I0804 08:58:09.438174       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/svw 401\n"
Aug  4 08:58:09.632: INFO: got output "I0804 08:58:09.438174       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/svw 401\n"
STEP: limiting log bytes
Aug  4 08:58:09.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator --limit-bytes=1'
Aug  4 08:58:09.680: INFO: stderr: ""
Aug  4 08:58:09.680: INFO: stdout: "I"
Aug  4 08:58:09.680: INFO: got output "I"
STEP: exposing timestamps
Aug  4 08:58:09.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator --tail=1 --timestamps'
Aug  4 08:58:09.726: INFO: stderr: ""
Aug  4 08:58:09.726: INFO: stdout: "2022-08-04T16:58:09.638481990+08:00 I0804 08:58:09.638447       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/w59g 224\n"
Aug  4 08:58:09.726: INFO: got output "2022-08-04T16:58:09.638481990+08:00 I0804 08:58:09.638447       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/w59g 224\n"
STEP: restricting to a time range
Aug  4 08:58:12.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator --since=1s'
Aug  4 08:58:12.280: INFO: stderr: ""
Aug  4 08:58:12.280: INFO: stdout: "I0804 08:58:11.437660       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/c5l9 284\nI0804 08:58:11.637933       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pph 325\nI0804 08:58:11.838174       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/k4lt 410\nI0804 08:58:12.038446       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/5dz 448\nI0804 08:58:12.237662       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/925k 589\n"
Aug  4 08:58:12.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 logs logs-generator logs-generator --since=24h'
Aug  4 08:58:12.324: INFO: stderr: ""
Aug  4 08:58:12.324: INFO: stdout: "I0804 08:58:08.037636       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/lnqf 567\nI0804 08:58:08.237691       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/lh7v 452\nI0804 08:58:08.438174       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/5t28 207\nI0804 08:58:08.638442       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/npz 323\nI0804 08:58:08.838592       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/pzl 259\nI0804 08:58:09.037810       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/2cqq 467\nI0804 08:58:09.238082       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/zhmn 410\nI0804 08:58:09.438174       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/svw 401\nI0804 08:58:09.638447       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/w59g 224\nI0804 08:58:09.837662       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/7tz5 401\nI0804 08:58:10.037934       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/qhvc 358\nI0804 08:58:10.238180       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/56gn 337\nI0804 08:58:10.438445       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/j4tm 221\nI0804 08:58:10.637659       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/sbsh 217\nI0804 08:58:10.837934       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/r26q 366\nI0804 08:58:11.038174       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/5gc 596\nI0804 08:58:11.238447       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/4vw 468\nI0804 08:58:11.437660       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/c5l9 284\nI0804 08:58:11.637933       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/pph 325\nI0804 08:58:11.838174       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/k4lt 410\nI0804 08:58:12.038446       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/5dz 448\nI0804 08:58:12.237662       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/925k 589\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Aug  4 08:58:12.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-1134 delete pod logs-generator'
Aug  4 08:58:12.864: INFO: stderr: ""
Aug  4 08:58:12.864: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 08:58:12.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1134" for this suite.

• [SLOW TEST:5.536 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":79,"skipped":1489,"failed":0}
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:12.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8481
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:58:13.017: INFO: Found 0 stateful pods, waiting for 1
Aug  4 08:58:23.029: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug  4 08:58:23.049: INFO: Found 1 stateful pods, waiting for 2
Aug  4 08:58:33.064: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 08:58:33.064: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 08:58:33.088: INFO: Deleting all statefulset in ns statefulset-8481
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 08:58:33.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8481" for this suite.

• [SLOW TEST:20.236 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":80,"skipped":1495,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:33.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-4707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug  4 08:58:33.251: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:58:35.258: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug  4 08:58:35.271: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug  4 08:58:37.277: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug  4 08:58:37.281: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.282: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.282: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  4 08:58:37.350: INFO: Exec stderr: ""
Aug  4 08:58:37.350: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.350: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.350: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.350: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  4 08:58:37.400: INFO: Exec stderr: ""
Aug  4 08:58:37.400: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.401: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.401: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  4 08:58:37.449: INFO: Exec stderr: ""
Aug  4 08:58:37.449: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.449: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.449: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  4 08:58:37.494: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug  4 08:58:37.494: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.494: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.494: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug  4 08:58:37.542: INFO: Exec stderr: ""
Aug  4 08:58:37.542: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.543: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.543: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug  4 08:58:37.586: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug  4 08:58:37.587: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.587: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.587: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  4 08:58:37.653: INFO: Exec stderr: ""
Aug  4 08:58:37.653: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.653: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.653: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  4 08:58:37.694: INFO: Exec stderr: ""
Aug  4 08:58:37.695: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.695: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.695: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  4 08:58:37.744: INFO: Exec stderr: ""
Aug  4 08:58:37.744: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4707 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 08:58:37.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 08:58:37.744: INFO: ExecWithOptions: Clientset creation
Aug  4 08:58:37.744: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4707/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  4 08:58:37.798: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Aug  4 08:58:37.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-4707" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1508,"failed":0}
SSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:37.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-1136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug  4 08:58:37.953: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug  4 08:58:37.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-1136" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":82,"skipped":1512,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:38.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-1535
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-1535
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-1535
STEP: Deleting pre-stop pod
Aug  4 08:58:47.192: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Aug  4 08:58:47.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-1535" for this suite.

• [SLOW TEST:9.213 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":83,"skipped":1551,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:58:47.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2246
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-9k6p
STEP: Creating a pod to test atomic-volume-subpath
Aug  4 08:58:47.359: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-9k6p" in namespace "subpath-2246" to be "Succeeded or Failed"
Aug  4 08:58:47.362: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Pending", Reason="", readiness=false. Elapsed: 3.311597ms
Aug  4 08:58:49.369: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 2.010191577s
Aug  4 08:58:51.377: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 4.01824444s
Aug  4 08:58:53.385: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 6.026597398s
Aug  4 08:58:55.393: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 8.033831589s
Aug  4 08:58:57.398: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 10.039759842s
Aug  4 08:58:59.405: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 12.046061553s
Aug  4 08:59:01.413: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 14.054458425s
Aug  4 08:59:03.421: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 16.062320577s
Aug  4 08:59:05.429: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 18.070321576s
Aug  4 08:59:07.436: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=true. Elapsed: 20.077482597s
Aug  4 08:59:09.442: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Running", Reason="", readiness=false. Elapsed: 22.083775671s
Aug  4 08:59:11.450: INFO: Pod "pod-subpath-test-secret-9k6p": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.091606675s
STEP: Saw pod success
Aug  4 08:59:11.450: INFO: Pod "pod-subpath-test-secret-9k6p" satisfied condition "Succeeded or Failed"
Aug  4 08:59:11.454: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-subpath-test-secret-9k6p container test-container-subpath-secret-9k6p: <nil>
STEP: delete the pod
Aug  4 08:59:11.478: INFO: Waiting for pod pod-subpath-test-secret-9k6p to disappear
Aug  4 08:59:11.482: INFO: Pod pod-subpath-test-secret-9k6p no longer exists
STEP: Deleting pod pod-subpath-test-secret-9k6p
Aug  4 08:59:11.482: INFO: Deleting pod "pod-subpath-test-secret-9k6p" in namespace "subpath-2246"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  4 08:59:11.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2246" for this suite.

• [SLOW TEST:24.279 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":84,"skipped":1595,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:59:11.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-3154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 08:59:11.623: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug  4 08:59:13.664: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  4 08:59:14.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3154" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":85,"skipped":1597,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 08:59:14.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-257214fb-f5c3-4fad-9830-d7f0552da924 in namespace container-probe-1423
Aug  4 08:59:16.833: INFO: Started pod busybox-257214fb-f5c3-4fad-9830-d7f0552da924 in namespace container-probe-1423
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 08:59:16.836: INFO: Initial restart count of pod busybox-257214fb-f5c3-4fad-9830-d7f0552da924 is 0
Aug  4 09:00:07.019: INFO: Restart count of pod container-probe-1423/busybox-257214fb-f5c3-4fad-9830-d7f0552da924 is now 1 (50.183001323s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:00:07.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1423" for this suite.

• [SLOW TEST:52.359 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":86,"skipped":1620,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:00:07.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:00:07.183: INFO: The status of Pod busybox-host-aliases7fa35e3d-4899-471a-aba3-cdb15f52fc7f is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:00:09.187: INFO: The status of Pod busybox-host-aliases7fa35e3d-4899-471a-aba3-cdb15f52fc7f is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  4 09:00:09.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1429" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":87,"skipped":1636,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:00:09.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5793
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5793
Aug  4 09:00:09.359: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:00:11.368: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug  4 09:00:11.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug  4 09:00:11.469: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug  4 09:00:11.469: INFO: stdout: "ipvs"
Aug  4 09:00:11.469: INFO: proxyMode: ipvs
Aug  4 09:00:11.480: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug  4 09:00:11.483: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-5793
STEP: creating replication controller affinity-nodeport-timeout in namespace services-5793
I0804 09:00:11.504779      20 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-5793, replica count: 3
I0804 09:00:14.556221      20 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:00:14.572: INFO: Creating new exec pod
Aug  4 09:00:17.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug  4 09:00:17.694: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug  4 09:00:17.694: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:00:17.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.54.119 80'
Aug  4 09:00:17.792: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.54.119 80\nConnection to 172.16.54.119 80 port [tcp/http] succeeded!\n"
Aug  4 09:00:17.792: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:00:17.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.125 30421'
Aug  4 09:00:17.874: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.125 30421\nConnection to 192.168.0.125 30421 port [tcp/*] succeeded!\n"
Aug  4 09:00:17.874: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:00:17.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.121 30421'
Aug  4 09:00:17.964: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.121 30421\nConnection to 192.168.0.121 30421 port [tcp/*] succeeded!\n"
Aug  4 09:00:17.964: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:00:17.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.121:30421/ ; done'
Aug  4 09:00:18.098: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n"
Aug  4 09:00:18.098: INFO: stdout: "\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9\naffinity-nodeport-timeout-zfgh9"
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Received response from host: affinity-nodeport-timeout-zfgh9
Aug  4 09:00:18.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://192.168.0.121:30421/'
Aug  4 09:00:18.187: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n"
Aug  4 09:00:18.187: INFO: stdout: "affinity-nodeport-timeout-zfgh9"
Aug  4 09:02:28.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-5793 exec execpod-affinitypvxr8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://192.168.0.121:30421/'
Aug  4 09:02:28.302: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://192.168.0.121:30421/\n"
Aug  4 09:02:28.302: INFO: stdout: "affinity-nodeport-timeout-jwcqc"
Aug  4 09:02:28.302: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-5793, will wait for the garbage collector to delete the pods
Aug  4 09:02:28.381: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 7.32063ms
Aug  4 09:02:28.482: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.768336ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:02:30.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5793" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:141.303 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":88,"skipped":1694,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:02:30.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug  4 09:02:30.657: INFO: Waiting up to 5m0s for pod "pod-51fb102d-6e88-4459-bbde-cf32b5aa821d" in namespace "emptydir-1009" to be "Succeeded or Failed"
Aug  4 09:02:30.660: INFO: Pod "pod-51fb102d-6e88-4459-bbde-cf32b5aa821d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.497503ms
Aug  4 09:02:32.667: INFO: Pod "pod-51fb102d-6e88-4459-bbde-cf32b5aa821d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010085701s
Aug  4 09:02:34.675: INFO: Pod "pod-51fb102d-6e88-4459-bbde-cf32b5aa821d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018649132s
STEP: Saw pod success
Aug  4 09:02:34.675: INFO: Pod "pod-51fb102d-6e88-4459-bbde-cf32b5aa821d" satisfied condition "Succeeded or Failed"
Aug  4 09:02:34.679: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-51fb102d-6e88-4459-bbde-cf32b5aa821d container test-container: <nil>
STEP: delete the pod
Aug  4 09:02:34.708: INFO: Waiting for pod pod-51fb102d-6e88-4459-bbde-cf32b5aa821d to disappear
Aug  4 09:02:34.713: INFO: Pod pod-51fb102d-6e88-4459-bbde-cf32b5aa821d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 09:02:34.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1009" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1712,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:02:34.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1036
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:02:35.282: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:02:38.305: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:02:50.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1036" for this suite.
STEP: Destroying namespace "webhook-1036-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.752 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":90,"skipped":1714,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:02:50.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4554
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4554
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-4554
I0804 09:02:50.622492      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4554, replica count: 2
Aug  4 09:02:53.674: INFO: Creating new exec pod
I0804 09:02:53.674440      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:02:56.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-4554 exec execpod8nhtf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  4 09:02:56.809: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  4 09:02:56.809: INFO: stdout: "externalname-service-gdvfm"
Aug  4 09:02:56.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-4554 exec execpod8nhtf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.142.45 80'
Aug  4 09:02:56.904: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.142.45 80\nConnection to 172.16.142.45 80 port [tcp/http] succeeded!\n"
Aug  4 09:02:56.904: INFO: stdout: "externalname-service-xpm49"
Aug  4 09:02:56.904: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:02:56.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4554" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.460 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":91,"skipped":1751,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:02:56.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  4 09:04:01.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4899" for this suite.

• [SLOW TEST:64.168 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":92,"skipped":1792,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:04:01.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-4920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  4 09:04:03.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4920" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":93,"skipped":1808,"failed":0}

------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:04:03.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6127
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Aug  4 09:04:03.403: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug  4 09:04:03.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:03.783: INFO: stderr: ""
Aug  4 09:04:03.783: INFO: stdout: "service/agnhost-replica created\n"
Aug  4 09:04:03.784: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug  4 09:04:03.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:04.117: INFO: stderr: ""
Aug  4 09:04:04.117: INFO: stdout: "service/agnhost-primary created\n"
Aug  4 09:04:04.117: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug  4 09:04:04.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:04.234: INFO: stderr: ""
Aug  4 09:04:04.234: INFO: stdout: "service/frontend created\n"
Aug  4 09:04:04.235: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug  4 09:04:04.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:04.343: INFO: stderr: ""
Aug  4 09:04:04.343: INFO: stdout: "deployment.apps/frontend created\n"
Aug  4 09:04:04.343: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug  4 09:04:04.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:04.446: INFO: stderr: ""
Aug  4 09:04:04.447: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug  4 09:04:04.447: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug  4 09:04:04.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 create -f -'
Aug  4 09:04:04.547: INFO: stderr: ""
Aug  4 09:04:04.547: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug  4 09:04:04.547: INFO: Waiting for all frontend pods to be Running.
Aug  4 09:04:09.599: INFO: Waiting for frontend to serve content.
Aug  4 09:04:09.609: INFO: Trying to add a new entry to the guestbook.
Aug  4 09:04:09.619: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Aug  4 09:04:09.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.687: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.687: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug  4 09:04:09.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.747: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.747: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug  4 09:04:09.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.806: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.806: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug  4 09:04:09.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.852: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.852: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug  4 09:04:09.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.898: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.898: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug  4 09:04:09.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6127 delete --grace-period=0 --force -f -'
Aug  4 09:04:09.945: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:04:09.945: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:04:09.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6127" for this suite.

• [SLOW TEST:6.680 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":94,"skipped":1808,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:04:09.956: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-9789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  4 09:04:13.117: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  4 09:04:13.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-9789" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":95,"skipped":1826,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:04:13.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4357
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:04:13.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  4 09:04:15.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-4357 --namespace=crd-publish-openapi-4357 create -f -'
Aug  4 09:04:15.813: INFO: stderr: ""
Aug  4 09:04:15.813: INFO: stdout: "e2e-test-crd-publish-openapi-4360-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug  4 09:04:15.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-4357 --namespace=crd-publish-openapi-4357 delete e2e-test-crd-publish-openapi-4360-crds test-cr'
Aug  4 09:04:15.860: INFO: stderr: ""
Aug  4 09:04:15.860: INFO: stdout: "e2e-test-crd-publish-openapi-4360-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug  4 09:04:15.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-4357 --namespace=crd-publish-openapi-4357 apply -f -'
Aug  4 09:04:16.189: INFO: stderr: ""
Aug  4 09:04:16.189: INFO: stdout: "e2e-test-crd-publish-openapi-4360-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug  4 09:04:16.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-4357 --namespace=crd-publish-openapi-4357 delete e2e-test-crd-publish-openapi-4360-crds test-cr'
Aug  4 09:04:16.237: INFO: stderr: ""
Aug  4 09:04:16.237: INFO: stdout: "e2e-test-crd-publish-openapi-4360-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug  4 09:04:16.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-4357 explain e2e-test-crd-publish-openapi-4360-crds'
Aug  4 09:04:16.335: INFO: stderr: ""
Aug  4 09:04:16.335: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4360-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:04:19.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4357" for this suite.

• [SLOW TEST:6.235 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":96,"skipped":1845,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:04:19.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-4258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  4 09:04:19.518: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 09:05:19.558: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:19.562: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-9315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug  4 09:05:21.726: INFO: found a healthy node: cn-hongkong.192.168.0.121
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:05:33.801: INFO: pods created so far: [1 1 1]
Aug  4 09:05:33.801: INFO: length of pods created so far: 3
Aug  4 09:05:35.816: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Aug  4 09:05:42.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-9315" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:05:42.871: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-4258" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:83.559 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":97,"skipped":1882,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:42.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-8191
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug  4 09:05:43.081: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8191  f8477852-de13-448e-9f41-ff6ae12876cd 4823762 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:43.081: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8191  f8477852-de13-448e-9f41-ff6ae12876cd 4823763 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug  4 09:05:43.097: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8191  f8477852-de13-448e-9f41-ff6ae12876cd 4823764 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:43.097: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8191  f8477852-de13-448e-9f41-ff6ae12876cd 4823765 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  4 09:05:43.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-8191" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":98,"skipped":1886,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:43.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-8167
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug  4 09:05:43.264: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8167  c238aaa9-92b5-4fe2-b554-1a249fe7f691 4823774 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:43.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8167  c238aaa9-92b5-4fe2-b554-1a249fe7f691 4823775 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  4 09:05:43.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-8167" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":99,"skipped":1942,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:43.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6632
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug  4 09:05:43.427: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823784 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:43.427: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823785 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:43.427: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823786 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug  4 09:05:53.462: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823977 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:53.462: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823978 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  4 09:05:53.462: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6632  037008cf-6a63-478a-b371-1e70de08908c 4823979 0 2022-08-04 09:05:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-04 09:05:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  4 09:05:53.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6632" for this suite.

• [SLOW TEST:10.195 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":100,"skipped":1947,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:53.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-3310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Aug  4 09:05:53.601: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Aug  4 09:05:53.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-3310" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":101,"skipped":1961,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:53.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  4 09:05:56.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9008" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":102,"skipped":1973,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:56.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 09:05:56.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9449" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":103,"skipped":2003,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:05:56.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9582
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9582
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-9582
STEP: creating replication controller externalsvc in namespace services-9582
I0804 09:05:56.955553      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9582, replica count: 2
I0804 09:06:00.007153      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug  4 09:06:00.028: INFO: Creating new exec pod
Aug  4 09:06:02.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-9582 exec execpodrfgsx -- /bin/sh -x -c nslookup clusterip-service.services-9582.svc.cluster.local'
Aug  4 09:06:02.174: INFO: stderr: "+ nslookup clusterip-service.services-9582.svc.cluster.local\n"
Aug  4 09:06:02.174: INFO: stdout: "Server:\t\t172.16.0.10\nAddress:\t172.16.0.10#53\n\nclusterip-service.services-9582.svc.cluster.local\tcanonical name = externalsvc.services-9582.svc.cluster.local.\nName:\texternalsvc.services-9582.svc.cluster.local\nAddress: 172.16.11.254\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-9582, will wait for the garbage collector to delete the pods
Aug  4 09:06:02.236: INFO: Deleting ReplicationController externalsvc took: 7.399613ms
Aug  4 09:06:02.336: INFO: Terminating ReplicationController externalsvc pods took: 100.378516ms
Aug  4 09:06:04.257: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:06:04.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9582" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.479 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":104,"skipped":2016,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:06:04.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-5993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug  4 09:06:06.452: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  4 09:06:08.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-5993" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":105,"skipped":2033,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:06:08.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:07:08.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2290" for this suite.

• [SLOW TEST:60.151 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":106,"skipped":2036,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:07:08.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8039
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  4 09:07:10.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8039" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":107,"skipped":2080,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:07:10.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4918
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4918
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug  4 09:07:10.971: INFO: Found 0 stateful pods, waiting for 3
Aug  4 09:07:20.980: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 09:07:20.980: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 09:07:20.980: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 09:07:20.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-4918 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:07:21.098: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:07:21.098: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:07:21.098: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug  4 09:07:31.145: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug  4 09:07:41.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-4918 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 09:07:41.278: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 09:07:41.278: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 09:07:41.278: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 09:08:01.311: INFO: Waiting for StatefulSet statefulset-4918/ss2 to complete update
STEP: Rolling back to a previous revision
Aug  4 09:08:11.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-4918 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:08:11.426: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:08:11.426: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:08:11.426: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 09:08:21.471: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug  4 09:08:31.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-4918 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 09:08:31.614: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 09:08:31.614: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 09:08:31.614: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 09:08:41.644: INFO: Deleting all statefulset in ns statefulset-4918
Aug  4 09:08:41.647: INFO: Scaling statefulset ss2 to 0
Aug  4 09:08:51.676: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 09:08:51.681: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 09:08:51.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4918" for this suite.

• [SLOW TEST:100.882 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":108,"skipped":2097,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:08:51.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1333
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:08:51.843: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a" in namespace "downward-api-1333" to be "Succeeded or Failed"
Aug  4 09:08:51.847: INFO: Pod "downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.613213ms
Aug  4 09:08:53.852: INFO: Pod "downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009210221s
Aug  4 09:08:55.859: INFO: Pod "downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016218336s
STEP: Saw pod success
Aug  4 09:08:55.860: INFO: Pod "downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a" satisfied condition "Succeeded or Failed"
Aug  4 09:08:55.865: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a container client-container: <nil>
STEP: delete the pod
Aug  4 09:08:55.893: INFO: Waiting for pod downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a to disappear
Aug  4 09:08:55.896: INFO: Pod downwardapi-volume-ddddfeb7-bf1b-4295-bda4-6420ff87bb5a no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 09:08:55.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1333" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":109,"skipped":2108,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:08:55.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4172
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug  4 09:08:56.049: INFO: Waiting up to 5m0s for pod "pod-67e428a5-73d5-476f-99a3-8068cad5c281" in namespace "emptydir-4172" to be "Succeeded or Failed"
Aug  4 09:08:56.053: INFO: Pod "pod-67e428a5-73d5-476f-99a3-8068cad5c281": Phase="Pending", Reason="", readiness=false. Elapsed: 4.092611ms
Aug  4 09:08:58.061: INFO: Pod "pod-67e428a5-73d5-476f-99a3-8068cad5c281": Phase="Running", Reason="", readiness=false. Elapsed: 2.011849634s
Aug  4 09:09:00.068: INFO: Pod "pod-67e428a5-73d5-476f-99a3-8068cad5c281": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019005266s
STEP: Saw pod success
Aug  4 09:09:00.068: INFO: Pod "pod-67e428a5-73d5-476f-99a3-8068cad5c281" satisfied condition "Succeeded or Failed"
Aug  4 09:09:00.072: INFO: Trying to get logs from node cn-hongkong.192.168.0.125 pod pod-67e428a5-73d5-476f-99a3-8068cad5c281 container test-container: <nil>
STEP: delete the pod
Aug  4 09:09:00.101: INFO: Waiting for pod pod-67e428a5-73d5-476f-99a3-8068cad5c281 to disappear
Aug  4 09:09:00.105: INFO: Pod pod-67e428a5-73d5-476f-99a3-8068cad5c281 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 09:09:00.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4172" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":110,"skipped":2117,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:00.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-5424
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  4 09:09:00.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-5424" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":111,"skipped":2130,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:00.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-4978
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug  4 09:09:00.402: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug  4 09:09:00.410: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug  4 09:09:00.410: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug  4 09:09:00.420: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug  4 09:09:00.420: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug  4 09:09:00.430: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug  4 09:09:00.430: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug  4 09:09:07.472: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Aug  4 09:09:07.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-4978" for this suite.

• [SLOW TEST:7.222 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":112,"skipped":2215,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:07.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3980
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:09:07.632: INFO: Waiting up to 5m0s for pod "downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4" in namespace "projected-3980" to be "Succeeded or Failed"
Aug  4 09:09:07.636: INFO: Pod "downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.760928ms
Aug  4 09:09:09.644: INFO: Pod "downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011987903s
Aug  4 09:09:11.651: INFO: Pod "downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019238842s
STEP: Saw pod success
Aug  4 09:09:11.651: INFO: Pod "downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4" satisfied condition "Succeeded or Failed"
Aug  4 09:09:11.655: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4 container client-container: <nil>
STEP: delete the pod
Aug  4 09:09:11.685: INFO: Waiting for pod downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4 to disappear
Aug  4 09:09:11.688: INFO: Pod downwardapi-volume-191bea97-ec0d-49eb-b4e0-6cee3ca6e6d4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:09:11.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3980" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":113,"skipped":2230,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:11.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug  4 09:09:11.835: INFO: Waiting up to 5m0s for pod "pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75" in namespace "emptydir-5447" to be "Succeeded or Failed"
Aug  4 09:09:11.840: INFO: Pod "pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75": Phase="Pending", Reason="", readiness=false. Elapsed: 5.019995ms
Aug  4 09:09:13.845: INFO: Pod "pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009929326s
Aug  4 09:09:15.853: INFO: Pod "pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017779791s
STEP: Saw pod success
Aug  4 09:09:15.853: INFO: Pod "pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75" satisfied condition "Succeeded or Failed"
Aug  4 09:09:15.860: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75 container test-container: <nil>
STEP: delete the pod
Aug  4 09:09:15.890: INFO: Waiting for pod pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75 to disappear
Aug  4 09:09:15.893: INFO: Pod pod-df2b3e7e-12bc-4d83-b355-3e2d29194b75 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 09:09:15.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5447" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":114,"skipped":2262,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:15.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:09:16.042: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b" in namespace "projected-2184" to be "Succeeded or Failed"
Aug  4 09:09:16.046: INFO: Pod "downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.486449ms
Aug  4 09:09:18.053: INFO: Pod "downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01036754s
Aug  4 09:09:20.060: INFO: Pod "downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018005518s
STEP: Saw pod success
Aug  4 09:09:20.060: INFO: Pod "downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b" satisfied condition "Succeeded or Failed"
Aug  4 09:09:20.064: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b container client-container: <nil>
STEP: delete the pod
Aug  4 09:09:20.083: INFO: Waiting for pod downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b to disappear
Aug  4 09:09:20.087: INFO: Pod downwardapi-volume-6f6b2136-3d7e-4213-9801-010cbe7c651b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:09:20.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2184" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":115,"skipped":2276,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:20.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5631
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 09:09:31.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5631" for this suite.

• [SLOW TEST:11.196 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":116,"skipped":2278,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:31.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4754
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug  4 09:09:33.449: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  4 09:09:39.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4754" for this suite.

• [SLOW TEST:8.292 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":117,"skipped":2292,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:39.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8254
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug  4 09:09:39.725: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:09:41.733: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug  4 09:09:42.757: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 09:09:43.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8254" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":118,"skipped":2295,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:43.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:09:43.952: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug  4 09:09:43.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:43.962: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug  4 09:09:43.983: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:43.983: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:09:44.989: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:44.989: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:09:45.989: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  4 09:09:45.989: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug  4 09:09:46.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  4 09:09:46.012: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug  4 09:09:47.020: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:47.020: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug  4 09:09:47.032: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:47.032: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:09:48.039: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:48.039: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:09:49.037: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:49.037: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:09:50.039: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  4 09:09:50.039: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9957, will wait for the garbage collector to delete the pods
Aug  4 09:09:50.108: INFO: Deleting DaemonSet.extensions daemon-set took: 6.886056ms
Aug  4 09:09:50.209: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.644508ms
Aug  4 09:09:52.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:09:52.416: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 09:09:52.420: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4828385"},"items":null}

Aug  4 09:09:52.423: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4828385"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:09:52.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9957" for this suite.

• [SLOW TEST:8.679 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":119,"skipped":2305,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:52.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:09:52.608: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20" in namespace "projected-7515" to be "Succeeded or Failed"
Aug  4 09:09:52.612: INFO: Pod "downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20": Phase="Pending", Reason="", readiness=false. Elapsed: 3.528879ms
Aug  4 09:09:54.618: INFO: Pod "downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009394799s
Aug  4 09:09:56.628: INFO: Pod "downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019192291s
STEP: Saw pod success
Aug  4 09:09:56.628: INFO: Pod "downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20" satisfied condition "Succeeded or Failed"
Aug  4 09:09:56.632: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20 container client-container: <nil>
STEP: delete the pod
Aug  4 09:09:56.655: INFO: Waiting for pod downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20 to disappear
Aug  4 09:09:56.658: INFO: Pod downwardapi-volume-a4ecf146-f1e1-49db-8cdc-f6f4fef80e20 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:09:56.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7515" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":120,"skipped":2306,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:09:56.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7292
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:09:56.797: INFO: Creating deployment "webserver-deployment"
Aug  4 09:09:56.802: INFO: Waiting for observed generation 1
Aug  4 09:09:58.811: INFO: Waiting for all required pods to come up
Aug  4 09:09:58.817: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug  4 09:09:58.817: INFO: Waiting for deployment "webserver-deployment" to complete
Aug  4 09:09:58.826: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug  4 09:09:58.836: INFO: Updating deployment webserver-deployment
Aug  4 09:09:58.836: INFO: Waiting for observed generation 2
Aug  4 09:10:00.848: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug  4 09:10:00.851: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug  4 09:10:00.856: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug  4 09:10:00.871: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug  4 09:10:00.871: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug  4 09:10:00.875: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug  4 09:10:00.885: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug  4 09:10:00.885: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug  4 09:10:00.896: INFO: Updating deployment webserver-deployment
Aug  4 09:10:00.896: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug  4 09:10:00.904: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug  4 09:10:00.908: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 09:10:00.918: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-7292  ac873da0-bd94-41f3-9561-cc29fca3f7a1 4828646 3 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002eb8d28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-08-04 09:09:58 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-04 09:10:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug  4 09:10:00.924: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-7292  123571ca-30b5-48d5-bc6d-20a3a106aa1d 4828643 3 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment ac873da0-bd94-41f3-9561-cc29fca3f7a1 0xc002eb9277 0xc002eb9278}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ac873da0-bd94-41f3-9561-cc29fca3f7a1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002eb9318 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:10:00.924: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug  4 09:10:00.924: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-7292  c6cd089a-7f56-46ca-99ba-49d43f41d6e7 4828642 3 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment ac873da0-bd94-41f3-9561-cc29fca3f7a1 0xc002eb9177 0xc002eb9178}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ac873da0-bd94-41f3-9561-cc29fca3f7a1\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002eb9208 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:10:00.932: INFO: Pod "webserver-deployment-55df494869-2xzrq" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2xzrq webserver-deployment-55df494869- deployment-7292  2dc6bf39-1e4b-48f7-9395-c07070b48411 4828558 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc002eb9817 0xc002eb9818}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cwndr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cwndr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.50,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b817d35839197d375c436eef6b2d271e5af5c7a5a7cf1f6459e0393e0fff2ecc,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.50,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.932: INFO: Pod "webserver-deployment-55df494869-8bkmw" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8bkmw webserver-deployment-55df494869- deployment-7292  fbcaf2ad-279e-4510-b95d-cf06141d07e8 4828527 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc002eb9a27 0xc002eb9a28}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.246\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l5h77,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l5h77,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.121,PodIP:10.115.0.246,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2fe26f1c3486aa2958ed81ebeebd0fc4dc7c4f831b706accd9e30e3b9775f6f6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.246,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-9flhj" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9flhj webserver-deployment-55df494869- deployment-7292  a3b8a253-d85f-47f3-a65c-0114fd59d08e 4828666 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc002eb9c27 0xc002eb9c28}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mz8tg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mz8tg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-blcq2" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-blcq2 webserver-deployment-55df494869- deployment-7292  dc545666-db52-42b2-93e2-336edc08744d 4828653 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc002eb9d97 0xc002eb9d98}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v77b2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v77b2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.122,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-cb7fm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-cb7fm webserver-deployment-55df494869- deployment-7292  296bdb22-327a-4976-b6f6-5ca728ce69b8 4828543 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc002eb9f07 0xc002eb9f08}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hzxqk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hzxqk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.125,PodIP:10.115.0.100,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://565af7f2083e521bcd6033ab12bef1a94a040730c3fe854c59e293944331a296,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.100,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-gqq6l" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-gqq6l webserver-deployment-55df494869- deployment-7292  46329124-5722-412f-b437-11a6cf2210f1 4828560 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff00f7 0xc003ff00f8}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nsfch,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nsfch,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.51,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://925319cdea916e405c0204ba8aced6e803ae73c18110e470c1a23787037f74f1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.51,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-hdkfx" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hdkfx webserver-deployment-55df494869- deployment-7292  14461b03-f182-4dae-a370-7efb0b871ada 4828669 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff02e7 0xc003ff02e8}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bwxz8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bwxz8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-hjrp2" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hjrp2 webserver-deployment-55df494869- deployment-7292  f2dd5b5c-0f7c-4840-ab7b-c315b03fd969 4828668 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0457 0xc003ff0458}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rhg9h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rhg9h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.122,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-hlbtx" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hlbtx webserver-deployment-55df494869- deployment-7292  857c0bb6-2f71-4d97-9269-7c818b9a0793 4828654 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff05c7 0xc003ff05c8}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rbcqt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rbcqt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.933: INFO: Pod "webserver-deployment-55df494869-sbd4z" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sbd4z webserver-deployment-55df494869- deployment-7292  03cba259-7c0e-4190-8722-a2c192c038cd 4828518 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0747 0xc003ff0748}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.14\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v55rn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v55rn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.122,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.122,PodIP:10.115.0.14,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://82346773274fbd0edd4afdae4d84c1e71a8567edae998330f269d4231f1d6b79,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.14,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-55df494869-sqg99" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sqg99 webserver-deployment-55df494869- deployment-7292  28640e14-5159-44fd-a078-83b42c0c5e8e 4828532 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0947 0xc003ff0948}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.168\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hxf56,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hxf56,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.123,PodIP:10.115.0.168,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://a29634eadf8084a6a5b2a531de829e35afa6201d68d51ec0abb5d84c3926721f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.168,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-55df494869-svtfs" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-svtfs webserver-deployment-55df494869- deployment-7292  56a4df38-29d5-4411-91dd-d8d7deffe246 4828529 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0b37 0xc003ff0b38}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.247\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5w5s8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5w5s8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.121,PodIP:10.115.0.247,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://55edb392e23094111dcf2d58b160d6e2dc4176fd78b2f25fdae2af31fff522b1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.247,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-55df494869-tcjn8" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-tcjn8 webserver-deployment-55df494869- deployment-7292  9aea9a5a-9e7b-4a38-91ef-983ad331eae4 4828667 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0d27 0xc003ff0d28}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wbvt4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wbvt4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-55df494869-xtxvk" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-xtxvk webserver-deployment-55df494869- deployment-7292  32b0d57a-6f4d-431b-b110-832b7fd7a263 4828541 0 2022-08-04 09:09:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff0e97 0xc003ff0e98}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fd7wg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fd7wg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.125,PodIP:10.115.0.99,StartTime:2022-08-04 09:09:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:09:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://3fa29ed3457ff1be906323441a95bd5dcd5238d05b1f6dbecafc00e2222a385d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-55df494869-z4tn9" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-z4tn9 webserver-deployment-55df494869- deployment-7292  4215dbb6-31c6-4034-9783-08fb4657c702 4828649 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c6cd089a-7f56-46ca-99ba-49d43f41d6e7 0xc003ff1087 0xc003ff1088}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6cd089a-7f56-46ca-99ba-49d43f41d6e7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h65vx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h65vx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-57ccb67bb8-6r4cv" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-6r4cv webserver-deployment-57ccb67bb8- deployment-7292  29997c25-c854-4ede-bd0c-58903ec07411 4828596 0 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1207 0xc003ff1208}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zrs8c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zrs8c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.121,PodIP:,StartTime:2022-08-04 09:09:58 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.934: INFO: Pod "webserver-deployment-57ccb67bb8-9m9gj" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-9m9gj webserver-deployment-57ccb67bb8- deployment-7292  f71a12d5-f210-4ea7-939b-f8f71ac6da04 4828650 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff13f7 0xc003ff13f8}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rqkj6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rqkj6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-hvncj" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-hvncj webserver-deployment-57ccb67bb8- deployment-7292  2ba29111-a20c-403b-b518-d0c5003a57fe 4828599 0 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1577 0xc003ff1578}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dmms8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dmms8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:,StartTime:2022-08-04 09:09:58 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-k967c" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-k967c webserver-deployment-57ccb67bb8- deployment-7292  a5b46791-474f-4002-a22d-e39f45687fb5 4828671 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1767 0xc003ff1768}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9lvf9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9lvf9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-n2v5l" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-n2v5l webserver-deployment-57ccb67bb8- deployment-7292  aea847b0-26a1-4713-b887-f1170b274e0e 4828597 0 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff18e7 0xc003ff18e8}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tctd9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tctd9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.125,PodIP:,StartTime:2022-08-04 09:09:58 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-nwkt7" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-nwkt7 webserver-deployment-57ccb67bb8- deployment-7292  98d7f84a-45ae-4049-831a-efe777f88de0 4828613 0 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1ad7 0xc003ff1ad8}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-swkkx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-swkkx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.122,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.122,PodIP:,StartTime:2022-08-04 09:09:58 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-p2klx" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-p2klx webserver-deployment-57ccb67bb8- deployment-7292  229200fc-cd35-4358-9749-cbb041914e02 4828661 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1cc7 0xc003ff1cc8}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tvmv7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tvmv7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-qrsct" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-qrsct webserver-deployment-57ccb67bb8- deployment-7292  3a535b34-afaa-43f5-baad-a3074fe6976e 4828608 0 2022-08-04 09:09:58 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc003ff1e47 0xc003ff1e48}] []  [{kube-controller-manager Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:09:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tgr7c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tgr7c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:09:58 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.123,PodIP:,StartTime:2022-08-04 09:09:58 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-rrkgk" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-rrkgk webserver-deployment-57ccb67bb8- deployment-7292  457acc14-f9f6-464c-874e-705bb1b09553 4828670 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc00007a577 0xc00007a578}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-74gv8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-74gv8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-rv4vz" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-rv4vz webserver-deployment-57ccb67bb8- deployment-7292  a36f709f-ab27-44b1-b3ef-b0c4ae763b6d 4828665 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc0007ebe27 0xc0007ebe28}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7rm2p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7rm2p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.935: INFO: Pod "webserver-deployment-57ccb67bb8-v55qf" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-v55qf webserver-deployment-57ccb67bb8- deployment-7292  dc132117-34b9-4164-9195-b9e3609a7696 4828663 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc0003b0150 0xc0003b0151}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cf8g9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cf8g9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:10:00.936: INFO: Pod "webserver-deployment-57ccb67bb8-xsz82" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-xsz82 webserver-deployment-57ccb67bb8- deployment-7292  544de1aa-8795-48ca-bf71-ac5b54794346 4828658 0 2022-08-04 09:10:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 123571ca-30b5-48d5-bc6d-20a3a106aa1d 0xc0003b08b0 0xc0003b08b1}] []  [{kube-controller-manager Update v1 2022-08-04 09:10:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"123571ca-30b5-48d5-bc6d-20a3a106aa1d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8tnns,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8tnns,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:10:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 09:10:00.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7292" for this suite.
•{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":121,"skipped":2342,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:00.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-9a11dff5-f89e-4970-a2cf-ae89f0ad42a4
STEP: Creating a pod to test consume configMaps
Aug  4 09:10:01.095: INFO: Waiting up to 5m0s for pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9" in namespace "configmap-8101" to be "Succeeded or Failed"
Aug  4 09:10:01.098: INFO: Pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.504284ms
Aug  4 09:10:03.106: INFO: Pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011613384s
Aug  4 09:10:05.115: INFO: Pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020119878s
Aug  4 09:10:07.124: INFO: Pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.029226773s
STEP: Saw pod success
Aug  4 09:10:07.124: INFO: Pod "pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9" satisfied condition "Succeeded or Failed"
Aug  4 09:10:07.128: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9 container configmap-volume-test: <nil>
STEP: delete the pod
Aug  4 09:10:07.149: INFO: Waiting for pod pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9 to disappear
Aug  4 09:10:07.153: INFO: Pod pod-configmaps-ecb2f1ca-945d-4a94-9a1d-83d61009afa9 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 09:10:07.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8101" for this suite.

• [SLOW TEST:6.216 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":122,"skipped":2345,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:07.167: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:10:07.318: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"7a02345a-43c4-4481-8ce9-4fd4a3a44465", Controller:(*bool)(0xc0035a1fba), BlockOwnerDeletion:(*bool)(0xc0035a1fbb)}}
Aug  4 09:10:07.322: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"8b5ca296-811c-4708-a828-51538aaa7185", Controller:(*bool)(0xc0024b8222), BlockOwnerDeletion:(*bool)(0xc0024b8223)}}
Aug  4 09:10:07.331: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"6b71d4c8-9dc4-440a-aae8-b20179b36000", Controller:(*bool)(0xc004105eb2), BlockOwnerDeletion:(*bool)(0xc004105eb3)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 09:10:12.346: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5629" for this suite.

• [SLOW TEST:5.194 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":123,"skipped":2369,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:12.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6150
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-d89895f1-76b4-48c7-b148-ce55268dd742
STEP: Creating secret with name s-test-opt-upd-f237f693-d357-4fa1-8ee0-4496cb2c4408
STEP: Creating the pod
Aug  4 09:10:12.512: INFO: The status of Pod pod-secrets-c82ebbf6-4d32-48b8-a28a-28a3cb34bc68 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:10:14.518: INFO: The status of Pod pod-secrets-c82ebbf6-4d32-48b8-a28a-28a3cb34bc68 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-d89895f1-76b4-48c7-b148-ce55268dd742
STEP: Updating secret s-test-opt-upd-f237f693-d357-4fa1-8ee0-4496cb2c4408
STEP: Creating secret with name s-test-opt-create-0091820d-1948-4ab3-aaa0-19e8948cd687
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:10:16.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6150" for this suite.
•{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":124,"skipped":2377,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:16.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug  4 09:10:16.750: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug  4 09:10:21.762: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug  4 09:10:21.767: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 09:10:21.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7501" for this suite.

• [SLOW TEST:5.183 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":125,"skipped":2384,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:21.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:10:21.934: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658" in namespace "projected-3929" to be "Succeeded or Failed"
Aug  4 09:10:21.939: INFO: Pod "downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658": Phase="Pending", Reason="", readiness=false. Elapsed: 4.764105ms
Aug  4 09:10:23.946: INFO: Pod "downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011628617s
Aug  4 09:10:25.953: INFO: Pod "downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019281917s
STEP: Saw pod success
Aug  4 09:10:25.953: INFO: Pod "downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658" satisfied condition "Succeeded or Failed"
Aug  4 09:10:25.958: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658 container client-container: <nil>
STEP: delete the pod
Aug  4 09:10:25.976: INFO: Waiting for pod downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658 to disappear
Aug  4 09:10:25.980: INFO: Pod downwardapi-volume-eaf7453d-e5cc-4bf6-a0e6-abca7168f658 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:10:25.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3929" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":126,"skipped":2403,"failed":0}
SS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:25.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Aug  4 09:10:26.125: INFO: created test-event-1
Aug  4 09:10:26.131: INFO: created test-event-2
Aug  4 09:10:26.136: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug  4 09:10:26.139: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug  4 09:10:26.166: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug  4 09:10:26.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3306" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":127,"skipped":2405,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:26.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6476
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-6476/configmap-test-cf22b315-cf38-4d8f-99d6-372bc33f0e0c
STEP: Creating a pod to test consume configMaps
Aug  4 09:10:26.326: INFO: Waiting up to 5m0s for pod "pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4" in namespace "configmap-6476" to be "Succeeded or Failed"
Aug  4 09:10:26.329: INFO: Pod "pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.495539ms
Aug  4 09:10:28.336: INFO: Pod "pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010244927s
Aug  4 09:10:30.344: INFO: Pod "pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018622247s
STEP: Saw pod success
Aug  4 09:10:30.344: INFO: Pod "pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4" satisfied condition "Succeeded or Failed"
Aug  4 09:10:30.349: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4 container env-test: <nil>
STEP: delete the pod
Aug  4 09:10:30.367: INFO: Waiting for pod pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4 to disappear
Aug  4 09:10:30.370: INFO: Pod pod-configmaps-d375a1ce-2052-4d63-964b-9e17fe7a06e4 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 09:10:30.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6476" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":128,"skipped":2435,"failed":0}
SSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:30.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1171
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-e2c033ba-1251-426e-937e-2da637fbd5b6
STEP: Creating a pod to test consume configMaps
Aug  4 09:10:30.528: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097" in namespace "projected-1171" to be "Succeeded or Failed"
Aug  4 09:10:30.532: INFO: Pod "pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097": Phase="Pending", Reason="", readiness=false. Elapsed: 3.391494ms
Aug  4 09:10:32.538: INFO: Pod "pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010203221s
Aug  4 09:10:34.546: INFO: Pod "pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017842208s
STEP: Saw pod success
Aug  4 09:10:34.546: INFO: Pod "pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097" satisfied condition "Succeeded or Failed"
Aug  4 09:10:34.550: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 09:10:34.572: INFO: Waiting for pod pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097 to disappear
Aug  4 09:10:34.575: INFO: Pod pod-projected-configmaps-b12779d7-1aeb-4129-9301-d76984e63097 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 09:10:34.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1171" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":129,"skipped":2438,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:34.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6728
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-60618475-f09e-46e1-a8ec-04dccd2db280
STEP: Creating a pod to test consume configMaps
Aug  4 09:10:34.731: INFO: Waiting up to 5m0s for pod "pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab" in namespace "configmap-6728" to be "Succeeded or Failed"
Aug  4 09:10:34.736: INFO: Pod "pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab": Phase="Pending", Reason="", readiness=false. Elapsed: 4.886335ms
Aug  4 09:10:36.744: INFO: Pod "pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012634419s
Aug  4 09:10:38.748: INFO: Pod "pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017116025s
STEP: Saw pod success
Aug  4 09:10:38.748: INFO: Pod "pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab" satisfied condition "Succeeded or Failed"
Aug  4 09:10:38.752: INFO: Trying to get logs from node cn-hongkong.192.168.0.123 pod pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab container agnhost-container: <nil>
STEP: delete the pod
Aug  4 09:10:38.774: INFO: Waiting for pod pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab to disappear
Aug  4 09:10:38.777: INFO: Pod pod-configmaps-4e6c9307-430d-4874-896c-468572e401ab no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 09:10:38.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6728" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":130,"skipped":2441,"failed":0}
SSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:38.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  4 09:10:38.925: INFO: Waiting up to 5m0s for pod "downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd" in namespace "downward-api-8184" to be "Succeeded or Failed"
Aug  4 09:10:38.929: INFO: Pod "downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.691544ms
Aug  4 09:10:40.936: INFO: Pod "downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011095712s
Aug  4 09:10:42.945: INFO: Pod "downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020600186s
STEP: Saw pod success
Aug  4 09:10:42.945: INFO: Pod "downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd" satisfied condition "Succeeded or Failed"
Aug  4 09:10:42.949: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd container dapi-container: <nil>
STEP: delete the pod
Aug  4 09:10:42.970: INFO: Waiting for pod downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd to disappear
Aug  4 09:10:42.975: INFO: Pod downward-api-50991c95-5cd1-4f23-b771-ac37acd1c7cd no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  4 09:10:42.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8184" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":131,"skipped":2447,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:42.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug  4 09:10:53.456: INFO: 74 pods remaining
Aug  4 09:10:53.456: INFO: 74 pods has nil DeletionTimestamp
Aug  4 09:10:53.456: INFO: 
STEP: Gathering metrics
Aug  4 09:10:58.473: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0804 09:10:58.473564      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  4 09:10:58.473: INFO: Deleting pod "simpletest-rc-to-be-deleted-2j7pq" in namespace "gc-1106"
Aug  4 09:10:58.486: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tfdg" in namespace "gc-1106"
Aug  4 09:10:58.496: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vg2f" in namespace "gc-1106"
Aug  4 09:10:58.508: INFO: Deleting pod "simpletest-rc-to-be-deleted-474kt" in namespace "gc-1106"
Aug  4 09:10:58.518: INFO: Deleting pod "simpletest-rc-to-be-deleted-47f2p" in namespace "gc-1106"
Aug  4 09:10:58.528: INFO: Deleting pod "simpletest-rc-to-be-deleted-47fp9" in namespace "gc-1106"
Aug  4 09:10:58.538: INFO: Deleting pod "simpletest-rc-to-be-deleted-4lw2c" in namespace "gc-1106"
Aug  4 09:10:58.550: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m9hs" in namespace "gc-1106"
Aug  4 09:10:58.559: INFO: Deleting pod "simpletest-rc-to-be-deleted-4nkrb" in namespace "gc-1106"
Aug  4 09:10:58.569: INFO: Deleting pod "simpletest-rc-to-be-deleted-55wss" in namespace "gc-1106"
Aug  4 09:10:58.582: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bc2n" in namespace "gc-1106"
Aug  4 09:10:58.592: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cvnl" in namespace "gc-1106"
Aug  4 09:10:58.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lv22" in namespace "gc-1106"
Aug  4 09:10:58.614: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nzbf" in namespace "gc-1106"
Aug  4 09:10:58.624: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dkb7" in namespace "gc-1106"
Aug  4 09:10:58.634: INFO: Deleting pod "simpletest-rc-to-be-deleted-7g25l" in namespace "gc-1106"
Aug  4 09:10:58.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k9lm" in namespace "gc-1106"
Aug  4 09:10:58.659: INFO: Deleting pod "simpletest-rc-to-be-deleted-824ps" in namespace "gc-1106"
Aug  4 09:10:58.668: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d7gj" in namespace "gc-1106"
Aug  4 09:10:58.678: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jwc6" in namespace "gc-1106"
Aug  4 09:10:58.688: INFO: Deleting pod "simpletest-rc-to-be-deleted-b76tv" in namespace "gc-1106"
Aug  4 09:10:58.700: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjwx6" in namespace "gc-1106"
Aug  4 09:10:58.711: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpg2w" in namespace "gc-1106"
Aug  4 09:10:58.723: INFO: Deleting pod "simpletest-rc-to-be-deleted-brskx" in namespace "gc-1106"
Aug  4 09:10:58.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-bs2k9" in namespace "gc-1106"
Aug  4 09:10:58.747: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwvqt" in namespace "gc-1106"
Aug  4 09:10:58.759: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4796" in namespace "gc-1106"
Aug  4 09:10:58.769: INFO: Deleting pod "simpletest-rc-to-be-deleted-cj7pv" in namespace "gc-1106"
Aug  4 09:10:58.781: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwnxt" in namespace "gc-1106"
Aug  4 09:10:58.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5r6k" in namespace "gc-1106"
Aug  4 09:10:58.801: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7cgw" in namespace "gc-1106"
Aug  4 09:10:58.810: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9968" in namespace "gc-1106"
Aug  4 09:10:58.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-dfcnj" in namespace "gc-1106"
Aug  4 09:10:58.837: INFO: Deleting pod "simpletest-rc-to-be-deleted-dn56k" in namespace "gc-1106"
Aug  4 09:10:58.846: INFO: Deleting pod "simpletest-rc-to-be-deleted-drk66" in namespace "gc-1106"
Aug  4 09:10:58.857: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2gm2" in namespace "gc-1106"
Aug  4 09:10:58.868: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdgzm" in namespace "gc-1106"
Aug  4 09:10:58.878: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhv82" in namespace "gc-1106"
Aug  4 09:10:58.888: INFO: Deleting pod "simpletest-rc-to-be-deleted-fq2cn" in namespace "gc-1106"
Aug  4 09:10:58.897: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbhqp" in namespace "gc-1106"
Aug  4 09:10:58.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc77x" in namespace "gc-1106"
Aug  4 09:10:58.917: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc7kg" in namespace "gc-1106"
Aug  4 09:10:58.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfvww" in namespace "gc-1106"
Aug  4 09:10:58.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggxbl" in namespace "gc-1106"
Aug  4 09:10:58.947: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjd9p" in namespace "gc-1106"
Aug  4 09:10:58.957: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjfww" in namespace "gc-1106"
Aug  4 09:10:58.970: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs52r" in namespace "gc-1106"
Aug  4 09:10:58.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxcs6" in namespace "gc-1106"
Aug  4 09:10:58.991: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfvmd" in namespace "gc-1106"
Aug  4 09:10:59.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-jg74x" in namespace "gc-1106"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 09:10:59.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1106" for this suite.

• [SLOW TEST:16.033 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":132,"skipped":2469,"failed":0}
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:59.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-5587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 09:10:59.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-5587" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":133,"skipped":2469,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:10:59.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4234
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  4 09:10:59.298: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  4 09:10:59.308: INFO: Waiting for terminating namespaces to be deleted...
Aug  4 09:10:59.313: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.121 before test
Aug  4 09:10:59.324: INFO: coredns-59b9d8db85-hn4p6 from kube-system started at 2022-08-04 08:09:22 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.324: INFO: 	Container coredns ready: true, restart count 0
Aug  4 09:10:59.324: INFO: csi-plugin-p5np9 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:10:59.324: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:10:59.324: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.324: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.324: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.324: INFO: kube-flannel-ds-jwn5s from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.324: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:10:59.324: INFO: kube-proxy-worker-655dh from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.324: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:10:59.324: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.324: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.324: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:10:59.325: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.122 before test
Aug  4 09:10:59.334: INFO: alicloud-monitor-controller-5845594db4-45z4s from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.334: INFO: 	Container alicloud-monitor-controller ready: true, restart count 0
Aug  4 09:10:59.334: INFO: coredns-59b9d8db85-47n9g from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.334: INFO: 	Container coredns ready: true, restart count 0
Aug  4 09:10:59.334: INFO: csi-plugin-pdfn5 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (4 container statuses recorded)
Aug  4 09:10:59.334: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.334: INFO: csi-provisioner-67f645cbd4-rs7qd from kube-system started at 2022-08-04 08:09:14 +0000 UTC (8 container statuses recorded)
Aug  4 09:10:59.334: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 09:10:59.334: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 09:10:59.334: INFO: kube-flannel-ds-7dcg7 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.334: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:10:59.335: INFO: kube-proxy-worker-hbmcg from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.335: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:10:59.335: INFO: metrics-server-74cc8bb57-59pqk from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.335: INFO: 	Container metrics-server ready: true, restart count 0
Aug  4 09:10:59.335: INFO: storage-operator-56dcf896df-hgdkr from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.335: INFO: 	Container storage-operator ready: true, restart count 0
Aug  4 09:10:59.335: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-j4br8 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.335: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.335: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:10:59.335: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.123 before test
Aug  4 09:10:59.342: INFO: csi-plugin-m56dc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.342: INFO: kube-flannel-ds-zr96w from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:10:59.342: INFO: kube-proxy-worker-nb9fn from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:10:59.342: INFO: storage-auto-expander-ddb7844c-hdp2g from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container storage-auto-expander ready: true, restart count 0
Aug  4 09:10:59.342: INFO: storage-monitor-658c96866d-fvmv7 from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container storage-monitor ready: true, restart count 0
Aug  4 09:10:59.342: INFO: sonobuoy from sonobuoy started at 2022-08-04 08:45:38 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  4 09:10:59.342: INFO: sonobuoy-e2e-job-3d413db4faba4b79 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container e2e ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.342: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-pfxld from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.342: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:10:59.342: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.124 before test
Aug  4 09:10:59.351: INFO: rs-gz5mf from disruption-4754 started at 2022-08-04 09:09:39 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.351: INFO: 	Container donothing ready: false, restart count 0
Aug  4 09:10:59.351: INFO: csi-plugin-llrh8 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:10:59.352: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.352: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.352: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.352: INFO: kube-flannel-ds-wgv48 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:10:59.352: INFO: kube-proxy-worker-49jgc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:10:59.352: INFO: storage-cnfs-6ddd5d8756-jcn6l from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container storage-cnfs ready: true, restart count 0
Aug  4 09:10:59.352: INFO: storage-snapshot-manager-554445c9bd-vf4vs from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container storage-snapshot-manager ready: true, restart count 0
Aug  4 09:10:59.352: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-524bb from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.352: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.352: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:10:59.352: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.125 before test
Aug  4 09:10:59.357: INFO: csi-plugin-qbskg from kube-system started at 2022-08-04 08:09:00 +0000 UTC (4 container statuses recorded)
Aug  4 09:10:59.357: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:10:59.357: INFO: csi-provisioner-67f645cbd4-hm54w from kube-system started at 2022-08-04 08:09:18 +0000 UTC (8 container statuses recorded)
Aug  4 09:10:59.357: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 09:10:59.357: INFO: kube-flannel-ds-psjwx from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.357: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:10:59.357: INFO: kube-proxy-worker-9jvd9 from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 09:10:59.357: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:10:59.357: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-l7h89 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:10:59.357: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:10:59.357: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-4fc5d200-f655-4ec9-9a1d-2fd90380b505 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.0.124 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-4fc5d200-f655-4ec9-9a1d-2fd90380b505 off the node cn-hongkong.192.168.0.124
STEP: verifying the node doesn't have the label kubernetes.io/e2e-4fc5d200-f655-4ec9-9a1d-2fd90380b505
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:16:05.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4234" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:306.303 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":134,"skipped":2494,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:16:05.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3624
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:16:05.608: INFO: Waiting up to 5m0s for pod "downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1" in namespace "projected-3624" to be "Succeeded or Failed"
Aug  4 09:16:05.611: INFO: Pod "downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.495977ms
Aug  4 09:16:07.619: INFO: Pod "downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011359402s
Aug  4 09:16:09.625: INFO: Pod "downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017395174s
STEP: Saw pod success
Aug  4 09:16:09.625: INFO: Pod "downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1" satisfied condition "Succeeded or Failed"
Aug  4 09:16:09.629: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1 container client-container: <nil>
STEP: delete the pod
Aug  4 09:16:09.660: INFO: Waiting for pod downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1 to disappear
Aug  4 09:16:09.663: INFO: Pod downwardapi-volume-36be73e9-a3d4-44cf-94e9-88f769bce2c1 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:16:09.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3624" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":135,"skipped":2497,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:16:09.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-e29ae9c5-a1ff-4e61-b76b-f82a032460ba in namespace container-probe-3925
Aug  4 09:16:11.827: INFO: Started pod liveness-e29ae9c5-a1ff-4e61-b76b-f82a032460ba in namespace container-probe-3925
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 09:16:11.831: INFO: Initial restart count of pod liveness-e29ae9c5-a1ff-4e61-b76b-f82a032460ba is 0
Aug  4 09:16:31.909: INFO: Restart count of pod container-probe-3925/liveness-e29ae9c5-a1ff-4e61-b76b-f82a032460ba is now 1 (20.078289395s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:16:31.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3925" for this suite.

• [SLOW TEST:22.257 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":136,"skipped":2508,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:16:31.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8783
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  4 09:16:32.107: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:16:32.107: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 09:16:33.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 09:16:33.122: INFO: Node cn-hongkong.192.168.0.124 is running 0 daemon pod, expected 1
Aug  4 09:16:34.118: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 09:16:34.118: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug  4 09:16:34.146: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 09:16:34.146: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:16:35.161: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 09:16:35.161: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:16:36.160: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 09:16:36.160: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:16:37.158: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 09:16:37.158: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8783, will wait for the garbage collector to delete the pods
Aug  4 09:16:37.223: INFO: Deleting DaemonSet.extensions daemon-set took: 6.236674ms
Aug  4 09:16:37.323: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.274159ms
Aug  4 09:16:40.130: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:16:40.130: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 09:16:40.134: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4835986"},"items":null}

Aug  4 09:16:40.139: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4835987"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:16:40.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8783" for this suite.

• [SLOW TEST:8.245 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":137,"skipped":2516,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:16:40.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:16:40.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9168" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":138,"skipped":2534,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:16:40.350: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3881
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Aug  4 09:18:41.012: INFO: Successfully updated pod "var-expansion-934f1296-2f52-44ff-a66a-57eba56ee81e"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug  4 09:18:43.025: INFO: Deleting pod "var-expansion-934f1296-2f52-44ff-a66a-57eba56ee81e" in namespace "var-expansion-3881"
Aug  4 09:18:43.034: INFO: Wait up to 5m0s for pod "var-expansion-934f1296-2f52-44ff-a66a-57eba56ee81e" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 09:19:15.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3881" for this suite.

• [SLOW TEST:154.707 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":139,"skipped":2564,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:19:15.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:19:15.447: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:19:18.476: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:19:18.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9935" for this suite.
STEP: Destroying namespace "webhook-9935-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":140,"skipped":2567,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:19:18.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug  4 09:19:18.739: INFO: Waiting up to 5m0s for pod "pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954" in namespace "emptydir-474" to be "Succeeded or Failed"
Aug  4 09:19:18.743: INFO: Pod "pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954": Phase="Pending", Reason="", readiness=false. Elapsed: 3.579585ms
Aug  4 09:19:20.750: INFO: Pod "pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011321167s
Aug  4 09:19:22.757: INFO: Pod "pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018239485s
STEP: Saw pod success
Aug  4 09:19:22.757: INFO: Pod "pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954" satisfied condition "Succeeded or Failed"
Aug  4 09:19:22.761: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954 container test-container: <nil>
STEP: delete the pod
Aug  4 09:19:22.788: INFO: Waiting for pod pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954 to disappear
Aug  4 09:19:22.792: INFO: Pod pod-0dd27cf3-1a50-46ae-a743-fa5d15e9c954 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 09:19:22.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-474" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":141,"skipped":2593,"failed":0}
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:19:22.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-9160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  4 09:19:49.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-9160" for this suite.

• [SLOW TEST:26.439 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":142,"skipped":2597,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:19:49.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9076
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:19:49.390: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  4 09:19:54.396: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug  4 09:19:54.405: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug  4 09:19:54.414: INFO: observed ReplicaSet test-rs in namespace replicaset-9076 with ReadyReplicas 1, AvailableReplicas 1
Aug  4 09:19:54.434: INFO: observed ReplicaSet test-rs in namespace replicaset-9076 with ReadyReplicas 1, AvailableReplicas 1
Aug  4 09:19:54.445: INFO: observed ReplicaSet test-rs in namespace replicaset-9076 with ReadyReplicas 1, AvailableReplicas 1
Aug  4 09:19:54.451: INFO: observed ReplicaSet test-rs in namespace replicaset-9076 with ReadyReplicas 1, AvailableReplicas 1
Aug  4 09:19:55.311: INFO: observed ReplicaSet test-rs in namespace replicaset-9076 with ReadyReplicas 2, AvailableReplicas 2
Aug  4 09:19:55.725: INFO: observed Replicaset test-rs in namespace replicaset-9076 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 09:19:55.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9076" for this suite.

• [SLOW TEST:6.492 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":143,"skipped":2612,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:19:55.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 in namespace container-probe-410
Aug  4 09:19:57.884: INFO: Started pod liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 in namespace container-probe-410
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 09:19:57.888: INFO: Initial restart count of pod liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is 0
Aug  4 09:20:17.961: INFO: Restart count of pod container-probe-410/liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is now 1 (20.073748774s elapsed)
Aug  4 09:20:38.030: INFO: Restart count of pod container-probe-410/liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is now 2 (40.14280767s elapsed)
Aug  4 09:20:58.099: INFO: Restart count of pod container-probe-410/liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is now 3 (1m0.211009726s elapsed)
Aug  4 09:21:18.168: INFO: Restart count of pod container-probe-410/liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is now 4 (1m20.280005163s elapsed)
Aug  4 09:22:20.397: INFO: Restart count of pod container-probe-410/liveness-fc2cb790-2b73-4790-bde4-5b4fed58c5c0 is now 5 (2m22.509356152s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:22:20.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-410" for this suite.

• [SLOW TEST:144.681 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2625,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:22:20.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2270
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:22:21.018: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:22:24.046: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:22:24.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2270" for this suite.
STEP: Destroying namespace "webhook-2270-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":145,"skipped":2628,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:22:24.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  4 09:22:24.260: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 09:23:24.294: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug  4 09:23:24.320: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug  4 09:23:24.325: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug  4 09:23:24.339: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug  4 09:23:24.344: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug  4 09:23:24.357: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug  4 09:23:24.363: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Aug  4 09:23:24.375: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Aug  4 09:23:24.380: INFO: Created pod: pod3-1-sched-preemption-medium-priority
Aug  4 09:23:24.394: INFO: Created pod: pod4-0-sched-preemption-medium-priority
Aug  4 09:23:24.399: INFO: Created pod: pod4-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:23:40.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3698" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:76.481 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":146,"skipped":2671,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:23:40.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-9458-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  4 09:23:40.740: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9458" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":147,"skipped":2683,"failed":0}
SS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:23:40.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-9903
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Aug  4 09:23:40.885: INFO: created test-podtemplate-1
Aug  4 09:23:40.889: INFO: created test-podtemplate-2
Aug  4 09:23:40.893: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug  4 09:23:40.898: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug  4 09:23:40.916: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  4 09:23:40.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-9903" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":148,"skipped":2685,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:23:40.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6041
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug  4 09:23:41.063: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 09:23:44.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6041" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2724,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:23:45.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:23:45.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 create -f -'
Aug  4 09:23:45.491: INFO: stderr: ""
Aug  4 09:23:45.491: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug  4 09:23:45.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 create -f -'
Aug  4 09:23:45.897: INFO: stderr: ""
Aug  4 09:23:45.897: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  4 09:23:46.903: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 09:23:46.903: INFO: Found 1 / 1
Aug  4 09:23:46.903: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug  4 09:23:46.907: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 09:23:46.907: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  4 09:23:46.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 describe pod agnhost-primary-zl5kh'
Aug  4 09:23:46.956: INFO: stderr: ""
Aug  4 09:23:46.956: INFO: stdout: "Name:         agnhost-primary-zl5kh\nNamespace:    kubectl-2460\nPriority:     0\nNode:         cn-hongkong.192.168.0.125/192.168.0.125\nStart Time:   Thu, 04 Aug 2022 09:23:45 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: ack.privileged\nStatus:       Running\nIP:           10.115.0.69\nIPs:\n  IP:           10.115.0.69\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://2fde2a954ef8605a2d6705f718362ab90b5bff10fb41746c5c36941219e37ea8\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 04 Aug 2022 09:23:46 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5jgd9 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-5jgd9:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2460/agnhost-primary-zl5kh to cn-hongkong.192.168.0.125\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
Aug  4 09:23:46.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 describe rc agnhost-primary'
Aug  4 09:23:47.011: INFO: stderr: ""
Aug  4 09:23:47.011: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2460\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-zl5kh\n"
Aug  4 09:23:47.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 describe service agnhost-primary'
Aug  4 09:23:47.058: INFO: stderr: ""
Aug  4 09:23:47.058: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2460\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                172.16.227.223\nIPs:               172.16.227.223\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.115.0.69:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug  4 09:23:47.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 describe node cn-hongkong.192.168.0.121'
Aug  4 09:23:47.133: INFO: stderr: ""
Aug  4 09:23:47.133: INFO: stdout: "Name:               cn-hongkong.192.168.0.121\nRoles:              <none>\nLabels:             ack.aliyun.com=c0f9b4fd61e0a4e3facafe2b82ed8513c\n                    alibabacloud.com/nodepool-id=np52a3e3c0391a4016839c5e6e9259a581\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=ecs.hfr6.2xlarge\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=cn-hongkong\n                    failure-domain.beta.kubernetes.io/zone=cn-hongkong-c\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=cn-hongkong.192.168.0.121\n                    kubernetes.io/os=linux\n                    node.csi.alibabacloud.com/disktype.cloud_efficiency=available\n                    node.csi.alibabacloud.com/disktype.cloud_essd=available\n                    node.csi.alibabacloud.com/disktype.cloud_ssd=available\n                    node.kubernetes.io/instance-type=ecs.hfr6.2xlarge\n                    topology.diskplugin.csi.alibabacloud.com/zone=cn-hongkong-c\n                    topology.kubernetes.io/region=cn-hongkong\n                    topology.kubernetes.io/zone=cn-hongkong-c\nAnnotations:        csi.volume.kubernetes.io/nodeid:\n                      {\"diskplugin.csi.alibabacloud.com\":\"i-j6c68u9xv8eqw4kddejo\",\"nasplugin.csi.alibabacloud.com\":\"i-j6c68u9xv8eqw4kddejo\",\"ossplugin.csi.aliba...\n                    flannel.alpha.coreos.com/backend-data: null\n                    flannel.alpha.coreos.com/backend-type: \n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.0.121\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 04 Aug 2022 08:09:11 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  cn-hongkong.192.168.0.121\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 04 Aug 2022 09:23:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  DiskPressure         False   Thu, 04 Aug 2022 09:23:30 +0000   Thu, 04 Aug 2022 08:09:11 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  MemoryPressure       False   Thu, 04 Aug 2022 09:23:30 +0000   Thu, 04 Aug 2022 08:09:11 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  PIDPressure          False   Thu, 04 Aug 2022 09:23:30 +0000   Thu, 04 Aug 2022 08:09:11 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 04 Aug 2022 09:23:30 +0000   Thu, 04 Aug 2022 08:09:22 +0000   KubeletReady                 kubelet is posting ready status\n  NetworkUnavailable   False   Thu, 04 Aug 2022 08:09:12 +0000   Thu, 04 Aug 2022 08:09:12 +0000   RouteCreated                 RouteController created a route\nAddresses:\n  InternalIP:  192.168.0.121\n  Hostname:    cn-hongkong.192.168.0.121\nCapacity:\n  cpu:                    8\n  ephemeral-storage:      123722704Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 64612592Ki\n  pods:                   64\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    7800m\n  ephemeral-storage:      114022843818\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 58710256Ki\n  pods:                   64\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 20220525094409074471930597229408\n  System UUID:                b6d45da5-b2a7-4ca3-8b64-c07e23706ffe\n  Boot ID:                    304dc483-4947-4843-9bfe-2f2849919515\n  Kernel Version:             4.19.91-26.al7.x86_64\n  OS Image:                   Alibaba Cloud Linux (Aliyun Linux) 2.1903 LTS (Hunting Beagle)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.10\n  Kubelet Version:            v1.24.3-aliyun.1\n  Kube-Proxy Version:         v1.24.3-aliyun.1\nPodCIDR:                      10.115.0.192/26\nPodCIDRs:                     10.115.0.192/26\nProviderID:                   cn-hongkong.i-j6c68u9xv8eqw4kddejo\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-59b9d8db85-hn4p6                                   100m (1%)     0 (0%)      100Mi (0%)       2Gi (3%)       76m\n  kube-system                 csi-plugin-p5np9                                           130m (1%)     2 (25%)     176Mi (0%)       4Gi (7%)       74m\n  kube-system                 kube-flannel-ds-jwn5s                                      100m (1%)     100m (1%)   100Mi (0%)       256Mi (0%)     74m\n  kube-system                 kube-proxy-worker-655dh                                    100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         74m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst    0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    430m (5%)   2100m (26%)\n  memory                 476Mi (0%)  6400Mi (11%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  example.com/fakecpu    0           0\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
Aug  4 09:23:47.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2460 describe namespace kubectl-2460'
Aug  4 09:23:47.178: INFO: stderr: ""
Aug  4 09:23:47.178: INFO: stdout: "Name:         kubectl-2460\nLabels:       e2e-framework=kubectl\n              e2e-run=381bec00-5724-4857-bfb3-fb184ac9d497\n              kubernetes.io/metadata.name=kubectl-2460\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:23:47.178: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2460" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":150,"skipped":2727,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:23:47.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-9023
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Aug  4 09:23:47.316: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 09:24:47.343: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:24:47.347: INFO: Starting informer...
STEP: Starting pods...
Aug  4 09:24:47.568: INFO: Pod1 is running on cn-hongkong.192.168.0.124. Tainting Node
Aug  4 09:24:49.793: INFO: Pod2 is running on cn-hongkong.192.168.0.124. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug  4 09:24:55.076: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug  4 09:25:15.098: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:25:15.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-9023" for this suite.

• [SLOW TEST:87.937 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":151,"skipped":2753,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:15.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7334
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  4 09:25:25.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7334" for this suite.

• [SLOW TEST:10.152 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":152,"skipped":2766,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:25.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8953
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:25:25.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  4 09:25:27.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-8953 --namespace=crd-publish-openapi-8953 create -f -'
Aug  4 09:25:27.885: INFO: stderr: ""
Aug  4 09:25:27.885: INFO: stdout: "e2e-test-crd-publish-openapi-5279-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug  4 09:25:27.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-8953 --namespace=crd-publish-openapi-8953 delete e2e-test-crd-publish-openapi-5279-crds test-cr'
Aug  4 09:25:27.954: INFO: stderr: ""
Aug  4 09:25:27.954: INFO: stdout: "e2e-test-crd-publish-openapi-5279-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug  4 09:25:27.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-8953 --namespace=crd-publish-openapi-8953 apply -f -'
Aug  4 09:25:28.345: INFO: stderr: ""
Aug  4 09:25:28.345: INFO: stdout: "e2e-test-crd-publish-openapi-5279-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug  4 09:25:28.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-8953 --namespace=crd-publish-openapi-8953 delete e2e-test-crd-publish-openapi-5279-crds test-cr'
Aug  4 09:25:28.392: INFO: stderr: ""
Aug  4 09:25:28.392: INFO: stdout: "e2e-test-crd-publish-openapi-5279-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug  4 09:25:28.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-8953 explain e2e-test-crd-publish-openapi-5279-crds'
Aug  4 09:25:28.487: INFO: stderr: ""
Aug  4 09:25:28.487: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5279-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:25:30.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8953" for this suite.

• [SLOW TEST:5.256 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":153,"skipped":2794,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:30.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  4 09:25:30.670: INFO: Waiting up to 5m0s for pod "downward-api-9c147870-6805-4786-bad4-3871ae632ff8" in namespace "downward-api-8596" to be "Succeeded or Failed"
Aug  4 09:25:30.674: INFO: Pod "downward-api-9c147870-6805-4786-bad4-3871ae632ff8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108763ms
Aug  4 09:25:32.682: INFO: Pod "downward-api-9c147870-6805-4786-bad4-3871ae632ff8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012323863s
Aug  4 09:25:34.690: INFO: Pod "downward-api-9c147870-6805-4786-bad4-3871ae632ff8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020314186s
STEP: Saw pod success
Aug  4 09:25:34.690: INFO: Pod "downward-api-9c147870-6805-4786-bad4-3871ae632ff8" satisfied condition "Succeeded or Failed"
Aug  4 09:25:34.694: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downward-api-9c147870-6805-4786-bad4-3871ae632ff8 container dapi-container: <nil>
STEP: delete the pod
Aug  4 09:25:34.718: INFO: Waiting for pod downward-api-9c147870-6805-4786-bad4-3871ae632ff8 to disappear
Aug  4 09:25:34.722: INFO: Pod downward-api-9c147870-6805-4786-bad4-3871ae632ff8 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  4 09:25:34.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8596" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":154,"skipped":2815,"failed":0}
SSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:34.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-4883ebdb-68ff-4923-a9a6-0f4354be7bba
STEP: Creating a pod to test consume secrets
Aug  4 09:25:34.875: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5" in namespace "projected-1054" to be "Succeeded or Failed"
Aug  4 09:25:34.878: INFO: Pod "pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.855744ms
Aug  4 09:25:36.884: INFO: Pod "pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008738627s
Aug  4 09:25:38.891: INFO: Pod "pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016005059s
STEP: Saw pod success
Aug  4 09:25:38.891: INFO: Pod "pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5" satisfied condition "Succeeded or Failed"
Aug  4 09:25:38.895: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:25:38.914: INFO: Waiting for pod pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5 to disappear
Aug  4 09:25:38.918: INFO: Pod pod-projected-secrets-d4c88300-9c47-4904-a112-b5d84834a0b5 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 09:25:38.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1054" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":2819,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:38.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4181
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:39.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-6556
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-4181
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Aug  4 09:25:45.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-6556" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  4 09:25:45.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4181" for this suite.

• [SLOW TEST:6.355 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":156,"skipped":2900,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:45.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-768bd31a-c993-4799-a4b9-aa5a1506b716
STEP: Creating a pod to test consume secrets
Aug  4 09:25:45.425: INFO: Waiting up to 5m0s for pod "pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883" in namespace "secrets-7354" to be "Succeeded or Failed"
Aug  4 09:25:45.428: INFO: Pod "pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883": Phase="Pending", Reason="", readiness=false. Elapsed: 3.445784ms
Aug  4 09:25:47.434: INFO: Pod "pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009019287s
Aug  4 09:25:49.442: INFO: Pod "pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017727203s
STEP: Saw pod success
Aug  4 09:25:49.442: INFO: Pod "pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883" satisfied condition "Succeeded or Failed"
Aug  4 09:25:49.446: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:25:49.468: INFO: Waiting for pod pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883 to disappear
Aug  4 09:25:49.471: INFO: Pod pod-secrets-12fc8fc7-7478-4cdb-843c-87fe44b5b883 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:25:49.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7354" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":157,"skipped":2907,"failed":0}
SSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:49.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-9789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Aug  4 09:25:51.647: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9789 pod-service-account-04f5c569-989e-40ac-b82b-2cdccd044119 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug  4 09:25:51.755: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9789 pod-service-account-04f5c569-989e-40ac-b82b-2cdccd044119 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug  4 09:25:51.839: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9789 pod-service-account-04f5c569-989e-40ac-b82b-2cdccd044119 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Aug  4 09:25:51.933: INFO: Got root ca configmap in namespace "svcaccounts-9789"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 09:25:51.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-9789" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":158,"skipped":2912,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:25:51.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug  4 09:25:52.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug  4 09:26:00.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 09:26:02.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:26:11.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8930" for this suite.

• [SLOW TEST:19.363 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":159,"skipped":2917,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:11.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8246
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8246
STEP: creating service affinity-nodeport in namespace services-8246
STEP: creating replication controller affinity-nodeport in namespace services-8246
I0804 09:26:11.457117      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8246, replica count: 3
I0804 09:26:14.508179      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:26:14.525: INFO: Creating new exec pod
Aug  4 09:26:17.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8246 exec execpod-affinityr2ml5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug  4 09:26:17.653: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug  4 09:26:17.653: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:26:17.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8246 exec execpod-affinityr2ml5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.33.85 80'
Aug  4 09:26:17.737: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.33.85 80\nConnection to 172.16.33.85 80 port [tcp/http] succeeded!\n"
Aug  4 09:26:17.737: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:26:17.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8246 exec execpod-affinityr2ml5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.125 31478'
Aug  4 09:26:17.826: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.125 31478\nConnection to 192.168.0.125 31478 port [tcp/*] succeeded!\n"
Aug  4 09:26:17.826: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:26:17.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8246 exec execpod-affinityr2ml5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.124 31478'
Aug  4 09:26:17.908: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.124 31478\nConnection to 192.168.0.124 31478 port [tcp/*] succeeded!\n"
Aug  4 09:26:17.908: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:26:17.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8246 exec execpod-affinityr2ml5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.121:31478/ ; done'
Aug  4 09:26:18.055: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:31478/\n"
Aug  4 09:26:18.055: INFO: stdout: "\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb\naffinity-nodeport-d7svb"
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Received response from host: affinity-nodeport-d7svb
Aug  4 09:26:18.055: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-8246, will wait for the garbage collector to delete the pods
Aug  4 09:26:18.129: INFO: Deleting ReplicationController affinity-nodeport took: 6.721401ms
Aug  4 09:26:18.229: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.635025ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:26:20.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8246" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.967 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":160,"skipped":2924,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:20.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3067
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:26:20.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  4 09:26:20.418: INFO: The status of Pod pod-logs-websocket-726c0fe3-dd72-47e7-aab0-dc4f1b75e77d is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:26:22.422: INFO: The status of Pod pod-logs-websocket-726c0fe3-dd72-47e7-aab0-dc4f1b75e77d is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 09:26:22.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3067" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":161,"skipped":2978,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:22.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1093
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-318afc92-ec3f-484e-b38a-47b6511db770
STEP: Creating a pod to test consume secrets
Aug  4 09:26:22.588: INFO: Waiting up to 5m0s for pod "pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840" in namespace "secrets-1093" to be "Succeeded or Failed"
Aug  4 09:26:22.592: INFO: Pod "pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840": Phase="Pending", Reason="", readiness=false. Elapsed: 3.89248ms
Aug  4 09:26:24.599: INFO: Pod "pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011239619s
Aug  4 09:26:26.608: INFO: Pod "pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020399277s
STEP: Saw pod success
Aug  4 09:26:26.608: INFO: Pod "pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840" satisfied condition "Succeeded or Failed"
Aug  4 09:26:26.612: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:26:26.633: INFO: Waiting for pod pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840 to disappear
Aug  4 09:26:26.637: INFO: Pod pod-secrets-ff4fad7a-0db1-47ae-aef1-fe8e3b4d7840 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:26:26.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1093" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":3000,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:26.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-3485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug  4 09:26:26.784: INFO: Pod name pod-release: Found 0 pods out of 1
Aug  4 09:26:31.794: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  4 09:26:32.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3485" for this suite.

• [SLOW TEST:6.179 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":163,"skipped":3002,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:32.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-611
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  4 09:26:32.965: INFO: The status of Pod pod-update-44dec4bd-d7f4-4d65-a178-4039315773ec is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:26:34.972: INFO: The status of Pod pod-update-44dec4bd-d7f4-4d65-a178-4039315773ec is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug  4 09:26:35.492: INFO: Successfully updated pod "pod-update-44dec4bd-d7f4-4d65-a178-4039315773ec"
STEP: verifying the updated pod is in kubernetes
Aug  4 09:26:35.498: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 09:26:35.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-611" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":3015,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:26:35.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-9754
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug  4 09:26:35.975: INFO: Pod name wrapped-volume-race-05b6916b-504a-42c1-9b9a-1b4da315dd75: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-05b6916b-504a-42c1-9b9a-1b4da315dd75 in namespace emptydir-wrapper-9754, will wait for the garbage collector to delete the pods
Aug  4 09:26:50.105: INFO: Deleting ReplicationController wrapped-volume-race-05b6916b-504a-42c1-9b9a-1b4da315dd75 took: 8.894174ms
Aug  4 09:26:50.205: INFO: Terminating ReplicationController wrapped-volume-race-05b6916b-504a-42c1-9b9a-1b4da315dd75 pods took: 100.395ms
STEP: Creating RC which spawns configmap-volume pods
Aug  4 09:26:53.427: INFO: Pod name wrapped-volume-race-f7a5a142-3539-4fe0-b95b-c828b54f65d3: Found 0 pods out of 5
Aug  4 09:26:58.439: INFO: Pod name wrapped-volume-race-f7a5a142-3539-4fe0-b95b-c828b54f65d3: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f7a5a142-3539-4fe0-b95b-c828b54f65d3 in namespace emptydir-wrapper-9754, will wait for the garbage collector to delete the pods
Aug  4 09:27:08.538: INFO: Deleting ReplicationController wrapped-volume-race-f7a5a142-3539-4fe0-b95b-c828b54f65d3 took: 6.853638ms
Aug  4 09:27:08.639: INFO: Terminating ReplicationController wrapped-volume-race-f7a5a142-3539-4fe0-b95b-c828b54f65d3 pods took: 100.788511ms
STEP: Creating RC which spawns configmap-volume pods
Aug  4 09:27:11.766: INFO: Pod name wrapped-volume-race-36271928-3452-41d9-92d1-fc2fc0b21f17: Found 0 pods out of 5
Aug  4 09:27:16.781: INFO: Pod name wrapped-volume-race-36271928-3452-41d9-92d1-fc2fc0b21f17: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-36271928-3452-41d9-92d1-fc2fc0b21f17 in namespace emptydir-wrapper-9754, will wait for the garbage collector to delete the pods
Aug  4 09:27:26.875: INFO: Deleting ReplicationController wrapped-volume-race-36271928-3452-41d9-92d1-fc2fc0b21f17 took: 8.201163ms
Aug  4 09:27:26.975: INFO: Terminating ReplicationController wrapped-volume-race-36271928-3452-41d9-92d1-fc2fc0b21f17 pods took: 100.971244ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug  4 09:27:29.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-9754" for this suite.

• [SLOW TEST:54.486 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":165,"skipped":3021,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:27:29.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6510
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:27:30.131: INFO: Waiting up to 5m0s for pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6" in namespace "security-context-test-6510" to be "Succeeded or Failed"
Aug  4 09:27:30.134: INFO: Pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.147367ms
Aug  4 09:27:32.143: INFO: Pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6": Phase="Running", Reason="", readiness=true. Elapsed: 2.012571174s
Aug  4 09:27:34.152: INFO: Pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6": Phase="Running", Reason="", readiness=false. Elapsed: 4.021729965s
Aug  4 09:27:36.157: INFO: Pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.026126518s
Aug  4 09:27:36.157: INFO: Pod "busybox-user-65534-8e94d0e4-d99b-40ce-aef6-5c3d7167f1a6" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 09:27:36.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6510" for this suite.

• [SLOW TEST:6.171 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:52
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":3031,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:27:36.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-5810da63-561b-4b5a-86a1-e06c7983d5f4 in namespace container-probe-7296
Aug  4 09:27:38.312: INFO: Started pod test-webserver-5810da63-561b-4b5a-86a1-e06c7983d5f4 in namespace container-probe-7296
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 09:27:38.315: INFO: Initial restart count of pod test-webserver-5810da63-561b-4b5a-86a1-e06c7983d5f4 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:31:39.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7296" for this suite.

• [SLOW TEST:243.076 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":167,"skipped":3039,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:31:39.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9118
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:31:39.377: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  4 09:31:39.389: INFO: The status of Pod pod-exec-websocket-3fadf083-ff28-45cb-89af-8c7b4f2fc11d is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:31:41.398: INFO: The status of Pod pod-exec-websocket-3fadf083-ff28-45cb-89af-8c7b4f2fc11d is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 09:31:41.461: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9118" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":168,"skipped":3041,"failed":0}
SSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:31:41.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1149
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-6192c966-16c9-4337-83e2-eb5f2bdc2039
STEP: Creating a pod to test consume secrets
Aug  4 09:31:41.613: INFO: Waiting up to 5m0s for pod "pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58" in namespace "secrets-1149" to be "Succeeded or Failed"
Aug  4 09:31:41.617: INFO: Pod "pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58": Phase="Pending", Reason="", readiness=false. Elapsed: 3.663033ms
Aug  4 09:31:43.622: INFO: Pod "pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008981607s
Aug  4 09:31:45.631: INFO: Pod "pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018147367s
STEP: Saw pod success
Aug  4 09:31:45.631: INFO: Pod "pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58" satisfied condition "Succeeded or Failed"
Aug  4 09:31:45.638: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:31:45.662: INFO: Waiting for pod pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58 to disappear
Aug  4 09:31:45.665: INFO: Pod pod-secrets-225ce354-36f4-4000-8559-adcd1b8fbe58 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:31:45.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1149" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":169,"skipped":3044,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:31:45.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  4 09:31:45.825: INFO: The status of Pod annotationupdatedbc65cec-63ef-43cf-9d25-df689a826af3 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:31:47.833: INFO: The status of Pod annotationupdatedbc65cec-63ef-43cf-9d25-df689a826af3 is Running (Ready = true)
Aug  4 09:31:48.358: INFO: Successfully updated pod "annotationupdatedbc65cec-63ef-43cf-9d25-df689a826af3"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 09:31:50.374: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2425" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":170,"skipped":3057,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:31:50.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3554
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  4 09:37:00.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3554" for this suite.

• [SLOW TEST:310.177 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":171,"skipped":3073,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:37:00.568: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-4952
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  4 09:37:00.715: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  4 09:37:00.720: INFO: starting watch
STEP: patching
STEP: updating
Aug  4 09:37:00.733: INFO: waiting for watch events with expected annotations
Aug  4 09:37:00.734: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Aug  4 09:37:00.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-4952" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":172,"skipped":3109,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:37:00.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9291
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-70e5208f-58d6-46a7-9214-c5dc605f4a13
STEP: Creating a pod to test consume secrets
Aug  4 09:37:00.932: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b" in namespace "projected-9291" to be "Succeeded or Failed"
Aug  4 09:37:00.935: INFO: Pod "pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.833943ms
Aug  4 09:37:02.943: INFO: Pod "pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011485606s
Aug  4 09:37:04.951: INFO: Pod "pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018725717s
STEP: Saw pod success
Aug  4 09:37:04.951: INFO: Pod "pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b" satisfied condition "Succeeded or Failed"
Aug  4 09:37:04.955: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:37:04.981: INFO: Waiting for pod pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b to disappear
Aug  4 09:37:04.984: INFO: Pod pod-projected-secrets-b72412e8-9b4e-4b40-ab3c-098a57c76f4b no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 09:37:04.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9291" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":173,"skipped":3117,"failed":0}
SSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:37:04.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1628
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  4 09:42:05.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1628" for this suite.

• [SLOW TEST:300.170 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":174,"skipped":3121,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:42:05.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9252
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:42:05.301: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-e25113f6-759d-44ee-88bf-643a915933f6" in namespace "security-context-test-9252" to be "Succeeded or Failed"
Aug  4 09:42:05.304: INFO: Pod "alpine-nnp-false-e25113f6-759d-44ee-88bf-643a915933f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.852494ms
Aug  4 09:42:07.312: INFO: Pod "alpine-nnp-false-e25113f6-759d-44ee-88bf-643a915933f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011029585s
Aug  4 09:42:09.317: INFO: Pod "alpine-nnp-false-e25113f6-759d-44ee-88bf-643a915933f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015346319s
Aug  4 09:42:09.317: INFO: Pod "alpine-nnp-false-e25113f6-759d-44ee-88bf-643a915933f6" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 09:42:09.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9252" for this suite.
•{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":175,"skipped":3143,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:42:09.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8555
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-20eb3aa5-4ab5-483b-be8d-13cbc56aa90a
STEP: Creating a pod to test consume configMaps
Aug  4 09:42:09.485: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963" in namespace "projected-8555" to be "Succeeded or Failed"
Aug  4 09:42:09.488: INFO: Pod "pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963": Phase="Pending", Reason="", readiness=false. Elapsed: 2.841086ms
Aug  4 09:42:11.496: INFO: Pod "pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01088697s
Aug  4 09:42:13.504: INFO: Pod "pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018213507s
STEP: Saw pod success
Aug  4 09:42:13.504: INFO: Pod "pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963" satisfied condition "Succeeded or Failed"
Aug  4 09:42:13.508: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 09:42:13.526: INFO: Waiting for pod pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963 to disappear
Aug  4 09:42:13.529: INFO: Pod pod-projected-configmaps-f9087ef0-76ba-451e-92e3-1f26a1f19963 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 09:42:13.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8555" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3150,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:42:13.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-765
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  4 09:42:13.677: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 09:43:13.712: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug  4 09:43:13.735: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug  4 09:43:13.741: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug  4 09:43:13.753: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug  4 09:43:13.758: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug  4 09:43:13.770: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug  4 09:43:13.775: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Aug  4 09:43:13.788: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Aug  4 09:43:13.793: INFO: Created pod: pod3-1-sched-preemption-medium-priority
Aug  4 09:43:13.805: INFO: Created pod: pod4-0-sched-preemption-medium-priority
Aug  4 09:43:13.809: INFO: Created pod: pod4-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:43:21.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-765" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:68.463 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":177,"skipped":3184,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:43:22.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8768
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug  4 09:43:22.148: INFO: Waiting up to 5m0s for pod "pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7" in namespace "emptydir-8768" to be "Succeeded or Failed"
Aug  4 09:43:22.152: INFO: Pod "pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.999714ms
Aug  4 09:43:24.160: INFO: Pod "pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011965849s
Aug  4 09:43:26.165: INFO: Pod "pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016844327s
STEP: Saw pod success
Aug  4 09:43:26.165: INFO: Pod "pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7" satisfied condition "Succeeded or Failed"
Aug  4 09:43:26.169: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7 container test-container: <nil>
STEP: delete the pod
Aug  4 09:43:26.186: INFO: Waiting for pod pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7 to disappear
Aug  4 09:43:26.189: INFO: Pod pod-2b9fea7c-f63a-4290-9d75-cfabd9de63b7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 09:43:26.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8768" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":178,"skipped":3214,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:43:26.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7599
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:43:26.349: INFO: Waiting up to 5m0s for pod "downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442" in namespace "downward-api-7599" to be "Succeeded or Failed"
Aug  4 09:43:26.353: INFO: Pod "downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442": Phase="Pending", Reason="", readiness=false. Elapsed: 3.795027ms
Aug  4 09:43:28.361: INFO: Pod "downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011889639s
Aug  4 09:43:30.368: INFO: Pod "downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019471928s
STEP: Saw pod success
Aug  4 09:43:30.368: INFO: Pod "downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442" satisfied condition "Succeeded or Failed"
Aug  4 09:43:30.372: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442 container client-container: <nil>
STEP: delete the pod
Aug  4 09:43:30.389: INFO: Waiting for pod downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442 to disappear
Aug  4 09:43:30.394: INFO: Pod downwardapi-volume-697e26a4-5f0c-49c5-a8a9-251590fa4442 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 09:43:30.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7599" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3221,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:43:30.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7122
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Aug  4 09:43:30.540: INFO: Waiting up to 5m0s for pod "var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e" in namespace "var-expansion-7122" to be "Succeeded or Failed"
Aug  4 09:43:30.543: INFO: Pod "var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.874694ms
Aug  4 09:43:32.549: INFO: Pod "var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009129544s
Aug  4 09:43:34.555: INFO: Pod "var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014612418s
STEP: Saw pod success
Aug  4 09:43:34.555: INFO: Pod "var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e" satisfied condition "Succeeded or Failed"
Aug  4 09:43:34.558: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e container dapi-container: <nil>
STEP: delete the pod
Aug  4 09:43:34.578: INFO: Waiting for pod var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e to disappear
Aug  4 09:43:34.581: INFO: Pod var-expansion-54cd63d5-8f2c-48d1-8a26-d1cd878fcd7e no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 09:43:34.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7122" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3280,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:43:34.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-816
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-816
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-816
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-816
Aug  4 09:43:34.734: INFO: Found 0 stateful pods, waiting for 1
Aug  4 09:43:44.743: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug  4 09:43:44.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:43:44.865: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:43:44.865: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:43:44.865: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 09:43:44.870: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug  4 09:43:54.880: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 09:43:54.880: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 09:43:54.897: INFO: POD   NODE                       PHASE    GRACE  CONDITIONS
Aug  4 09:43:54.897: INFO: ss-0  cn-hongkong.192.168.0.124  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:34 +0000 UTC  }]
Aug  4 09:43:54.897: INFO: 
Aug  4 09:43:54.897: INFO: StatefulSet ss has not reached scale 3, at 1
Aug  4 09:43:55.903: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995002201s
Aug  4 09:43:56.909: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990057879s
Aug  4 09:43:57.916: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983001195s
Aug  4 09:43:58.922: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976000966s
Aug  4 09:43:59.928: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969995827s
Aug  4 09:44:00.934: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.963997161s
Aug  4 09:44:01.941: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.957830824s
Aug  4 09:44:02.948: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.950730602s
Aug  4 09:44:03.955: INFO: Verifying statefulset ss doesn't scale past 3 for another 943.888473ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-816
Aug  4 09:44:04.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 09:44:05.058: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 09:44:05.058: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 09:44:05.058: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 09:44:05.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 09:44:05.160: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug  4 09:44:05.160: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 09:44:05.160: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 09:44:05.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 09:44:05.267: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug  4 09:44:05.267: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 09:44:05.267: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 09:44:05.272: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 09:44:05.272: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 09:44:05.272: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug  4 09:44:05.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:44:05.366: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:44:05.366: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:44:05.366: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 09:44:05.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:44:05.460: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:44:05.460: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:44:05.460: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 09:44:05.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-816 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 09:44:05.551: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 09:44:05.551: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 09:44:05.551: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 09:44:05.551: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 09:44:05.556: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug  4 09:44:15.572: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 09:44:15.572: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 09:44:15.572: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 09:44:15.585: INFO: POD   NODE                       PHASE    GRACE  CONDITIONS
Aug  4 09:44:15.585: INFO: ss-0  cn-hongkong.192.168.0.124  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:34 +0000 UTC  }]
Aug  4 09:44:15.585: INFO: ss-1  cn-hongkong.192.168.0.125  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:54 +0000 UTC  }]
Aug  4 09:44:15.585: INFO: ss-2  cn-hongkong.192.168.0.121  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:44:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 09:43:54 +0000 UTC  }]
Aug  4 09:44:15.585: INFO: 
Aug  4 09:44:15.585: INFO: StatefulSet ss has not reached scale 0, at 3
Aug  4 09:44:16.592: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.995507952s
Aug  4 09:44:17.597: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.988509115s
Aug  4 09:44:18.604: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983157179s
Aug  4 09:44:19.609: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.977507933s
Aug  4 09:44:20.615: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.971513544s
Aug  4 09:44:21.622: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.965507127s
Aug  4 09:44:22.627: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.958451396s
Aug  4 09:44:23.633: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.953265596s
Aug  4 09:44:24.639: INFO: Verifying statefulset ss doesn't scale past 0 for another 947.568165ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-816
Aug  4 09:44:25.647: INFO: Scaling statefulset ss to 0
Aug  4 09:44:25.659: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 09:44:25.663: INFO: Deleting all statefulset in ns statefulset-816
Aug  4 09:44:25.666: INFO: Scaling statefulset ss to 0
Aug  4 09:44:25.677: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 09:44:25.681: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 09:44:25.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-816" for this suite.

• [SLOW TEST:51.109 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":181,"skipped":3298,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:25.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:44:26.059: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:44:29.086: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:44:29.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5290" for this suite.
STEP: Destroying namespace "webhook-5290-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":182,"skipped":3312,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:29.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  4 09:44:31.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7012" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":183,"skipped":3324,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:31.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1448
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Aug  4 09:44:31.603: INFO: Creating simple deployment test-deployment-lsxk4
Aug  4 09:44:31.615: INFO: new replicaset for deployment "test-deployment-lsxk4" is yet to be created
STEP: Getting /status
Aug  4 09:44:33.636: INFO: Deployment test-deployment-lsxk4 has Conditions: [{Available True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lsxk4-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Aug  4 09:44:33.645: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 44, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 44, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 44, 32, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 44, 31, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-lsxk4-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug  4 09:44:33.646: INFO: Observed &Deployment event: ADDED
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lsxk4-688c4d6789"}
Aug  4 09:44:33.646: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lsxk4-688c4d6789"}
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  4 09:44:33.646: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lsxk4-688c4d6789" is progressing.}
Aug  4 09:44:33.646: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lsxk4-688c4d6789" has successfully progressed.}
Aug  4 09:44:33.646: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  4 09:44:33.646: INFO: Observed Deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lsxk4-688c4d6789" has successfully progressed.}
Aug  4 09:44:33.646: INFO: Found Deployment test-deployment-lsxk4 in namespace deployment-1448 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  4 09:44:33.646: INFO: Deployment test-deployment-lsxk4 has an updated status
STEP: patching the Statefulset Status
Aug  4 09:44:33.646: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  4 09:44:33.652: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug  4 09:44:33.654: INFO: Observed &Deployment event: ADDED
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lsxk4-688c4d6789"}
Aug  4 09:44:33.654: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lsxk4-688c4d6789"}
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  4 09:44:33.654: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:31 +0000 UTC 2022-08-04 09:44:31 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lsxk4-688c4d6789" is progressing.}
Aug  4 09:44:33.654: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lsxk4-688c4d6789" has successfully progressed.}
Aug  4 09:44:33.654: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:32 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-04 09:44:32 +0000 UTC 2022-08-04 09:44:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lsxk4-688c4d6789" has successfully progressed.}
Aug  4 09:44:33.654: INFO: Observed deployment test-deployment-lsxk4 in namespace deployment-1448 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  4 09:44:33.654: INFO: Observed &Deployment event: MODIFIED
Aug  4 09:44:33.654: INFO: Found deployment test-deployment-lsxk4 in namespace deployment-1448 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug  4 09:44:33.654: INFO: Deployment test-deployment-lsxk4 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 09:44:33.657: INFO: Deployment "test-deployment-lsxk4":
&Deployment{ObjectMeta:{test-deployment-lsxk4  deployment-1448  c1f5f8f3-7b6e-4083-b76a-182c9bc1e2b0 4875240 1 2022-08-04 09:44:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-04 09:44:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:44:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2022-08-04 09:44:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00348b708 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  4 09:44:33.662: INFO: New ReplicaSet "test-deployment-lsxk4-688c4d6789" of Deployment "test-deployment-lsxk4":
&ReplicaSet{ObjectMeta:{test-deployment-lsxk4-688c4d6789  deployment-1448  6d3ac766-161a-4755-9670-1739802b66c2 4875210 1 2022-08-04 09:44:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-lsxk4 c1f5f8f3-7b6e-4083-b76a-182c9bc1e2b0 0xc003fd4a57 0xc003fd4a58}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:44:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c1f5f8f3-7b6e-4083-b76a-182c9bc1e2b0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:44:32 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fd4b08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:44:33.665: INFO: Pod "test-deployment-lsxk4-688c4d6789-x8c88" is available:
&Pod{ObjectMeta:{test-deployment-lsxk4-688c4d6789-x8c88 test-deployment-lsxk4-688c4d6789- deployment-1448  c3eda2aa-7e13-4069-9744-477ab49bfe36 4875208 0 2022-08-04 09:44:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-lsxk4-688c4d6789 6d3ac766-161a-4755-9670-1739802b66c2 0xc004307a77 0xc004307a78}] []  [{kube-controller-manager Update v1 2022-08-04 09:44:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d3ac766-161a-4755-9670-1739802b66c2\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:44:32 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qv9w6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qv9w6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:44:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:44:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:44:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:44:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.2,StartTime:2022-08-04 09:44:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:44:32 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://3875d4bc9d4bf44066e2369dfa3541e70fe542502e36d564eedcb98ba38a4368,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.2,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 09:44:33.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1448" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":184,"skipped":3363,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:33.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:44:35.822: INFO: Deleting pod "var-expansion-ca408438-d362-4d2d-b3f4-406ef4133d5d" in namespace "var-expansion-8395"
Aug  4 09:44:35.831: INFO: Wait up to 5m0s for pod "var-expansion-ca408438-d362-4d2d-b3f4-406ef4133d5d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 09:44:37.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8395" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":185,"skipped":3383,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:37.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-59b525cf-f22d-4fc0-ae42-2f04e7f6bf8f
STEP: Creating a pod to test consume secrets
Aug  4 09:44:37.995: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32" in namespace "projected-3534" to be "Succeeded or Failed"
Aug  4 09:44:37.999: INFO: Pod "pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32": Phase="Pending", Reason="", readiness=false. Elapsed: 3.918128ms
Aug  4 09:44:40.005: INFO: Pod "pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01008909s
Aug  4 09:44:42.012: INFO: Pod "pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017250372s
STEP: Saw pod success
Aug  4 09:44:42.012: INFO: Pod "pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32" satisfied condition "Succeeded or Failed"
Aug  4 09:44:42.016: INFO: Trying to get logs from node cn-hongkong.192.168.0.125 pod pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:44:42.045: INFO: Waiting for pod pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32 to disappear
Aug  4 09:44:42.049: INFO: Pod pod-projected-secrets-9940bb4a-7153-4ff5-84c0-e643ffff9a32 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 09:44:42.049: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3534" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":186,"skipped":3392,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:44:42.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1275
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  4 09:46:00.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1275" for this suite.

• [SLOW TEST:78.170 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":187,"skipped":3401,"failed":0}
SSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:46:00.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-53cfbedd-64c8-4d67-88e6-cc16246efafd in namespace container-probe-3153
Aug  4 09:46:02.373: INFO: Started pod liveness-53cfbedd-64c8-4d67-88e6-cc16246efafd in namespace container-probe-3153
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 09:46:02.376: INFO: Initial restart count of pod liveness-53cfbedd-64c8-4d67-88e6-cc16246efafd is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:50:03.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3153" for this suite.

• [SLOW TEST:243.075 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":188,"skipped":3408,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:03.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:50:03.459: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug  4 09:50:03.471: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:50:03.471: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 09:50:04.483: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  4 09:50:04.483: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 09:50:05.482: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 09:50:05.482: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug  4 09:50:05.517: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:05.517: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:05.517: INFO: Wrong image for pod: daemon-set-9hlqm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:05.517: INFO: Wrong image for pod: daemon-set-g4qgh. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:05.517: INFO: Wrong image for pod: daemon-set-xl5j9. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:06.529: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:06.529: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:06.529: INFO: Wrong image for pod: daemon-set-9hlqm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:06.529: INFO: Wrong image for pod: daemon-set-xl5j9. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:07.531: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:07.531: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:07.531: INFO: Wrong image for pod: daemon-set-9hlqm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:07.531: INFO: Wrong image for pod: daemon-set-xl5j9. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:08.529: INFO: Pod daemon-set-48jld is not available
Aug  4 09:50:08.529: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:08.529: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:08.529: INFO: Wrong image for pod: daemon-set-9hlqm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:08.529: INFO: Wrong image for pod: daemon-set-xl5j9. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:09.528: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:09.528: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:09.528: INFO: Wrong image for pod: daemon-set-9hlqm. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:09.528: INFO: Pod daemon-set-l9n6m is not available
Aug  4 09:50:10.529: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:10.529: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:11.537: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:11.537: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:12.530: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:12.530: INFO: Wrong image for pod: daemon-set-8bd4h. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:13.528: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:14.530: INFO: Wrong image for pod: daemon-set-4n9gg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  4 09:50:15.531: INFO: Pod daemon-set-crtrf is not available
STEP: Check that daemon pods are still running on every node of the cluster.
Aug  4 09:50:15.545: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Aug  4 09:50:15.545: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:50:16.557: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 09:50:16.557: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2997, will wait for the garbage collector to delete the pods
Aug  4 09:50:16.637: INFO: Deleting DaemonSet.extensions daemon-set took: 7.783749ms
Aug  4 09:50:16.737: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.407208ms
Aug  4 09:50:18.845: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:50:18.845: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 09:50:18.849: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4882854"},"items":null}

Aug  4 09:50:18.852: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4882854"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:50:18.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2997" for this suite.

• [SLOW TEST:15.581 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":189,"skipped":3434,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:18.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Aug  4 09:50:19.012: INFO: Creating e2e-svc-a-kcnsj
Aug  4 09:50:19.022: INFO: Creating e2e-svc-b-d457j
Aug  4 09:50:19.032: INFO: Creating e2e-svc-c-mj5gd
STEP: deleting service collection
Aug  4 09:50:19.091: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:50:19.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8698" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":190,"skipped":3499,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:19.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4812
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  4 09:50:19.243: INFO: The status of Pod pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:50:21.251: INFO: The status of Pod pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug  4 09:50:21.772: INFO: Successfully updated pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5"
Aug  4 09:50:21.772: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5" in namespace "pods-4812" to be "terminated due to deadline exceeded"
Aug  4 09:50:21.775: INFO: Pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5": Phase="Running", Reason="", readiness=true. Elapsed: 3.013654ms
Aug  4 09:50:23.783: INFO: Pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5": Phase="Running", Reason="", readiness=true. Elapsed: 2.011128442s
Aug  4 09:50:25.790: INFO: Pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5": Phase="Running", Reason="", readiness=false. Elapsed: 4.018394199s
Aug  4 09:50:27.799: INFO: Pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.027009142s
Aug  4 09:50:27.799: INFO: Pod "pod-update-activedeadlineseconds-31adbad6-625c-427a-bffa-8ac0703ce5a5" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 09:50:27.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4812" for this suite.

• [SLOW TEST:8.707 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":191,"skipped":3508,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:27.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5626
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:50:27.939: INFO: Creating ReplicaSet my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa
Aug  4 09:50:27.947: INFO: Pod name my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa: Found 0 pods out of 1
Aug  4 09:50:32.960: INFO: Pod name my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa: Found 1 pods out of 1
Aug  4 09:50:32.960: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa" is running
Aug  4 09:50:32.964: INFO: Pod "my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa-fdh4v" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 09:50:27 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 09:50:28 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 09:50:28 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 09:50:27 +0000 UTC Reason: Message:}])
Aug  4 09:50:32.964: INFO: Trying to dial the pod
Aug  4 09:50:37.984: INFO: Controller my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa: Got expected result from replica 1 [my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa-fdh4v]: "my-hostname-basic-4ffe3dac-287b-49e1-8d5f-17c13345c6fa-fdh4v", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 09:50:37.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5626" for this suite.

• [SLOW TEST:10.183 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":192,"skipped":3520,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:37.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-1749
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-1749
STEP: creating replication controller externalsvc in namespace services-1749
I0804 09:50:38.156125      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1749, replica count: 2
I0804 09:50:41.207234      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug  4 09:50:41.235: INFO: Creating new exec pod
Aug  4 09:50:43.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-1749 exec execpod7p6qz -- /bin/sh -x -c nslookup nodeport-service.services-1749.svc.cluster.local'
Aug  4 09:50:43.361: INFO: stderr: "+ nslookup nodeport-service.services-1749.svc.cluster.local\n"
Aug  4 09:50:43.361: INFO: stdout: "Server:\t\t172.16.0.10\nAddress:\t172.16.0.10#53\n\nnodeport-service.services-1749.svc.cluster.local\tcanonical name = externalsvc.services-1749.svc.cluster.local.\nName:\texternalsvc.services-1749.svc.cluster.local\nAddress: 172.16.72.228\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-1749, will wait for the garbage collector to delete the pods
Aug  4 09:50:43.422: INFO: Deleting ReplicationController externalsvc took: 7.687108ms
Aug  4 09:50:43.523: INFO: Terminating ReplicationController externalsvc pods took: 100.664128ms
Aug  4 09:50:45.642: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:50:45.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1749" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.669 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":193,"skipped":3537,"failed":0}
SS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:45.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-691
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Aug  4 09:50:45.808: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug  4 09:50:47.823: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug  4 09:50:49.840: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Aug  4 09:50:51.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-691" for this suite.

• [SLOW TEST:6.196 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":194,"skipped":3539,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:50:51.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4052
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  4 09:50:51.986: INFO: PodSpec: initContainers in spec.initContainers
Aug  4 09:51:35.939: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-070d1496-54fc-4d18-80b6-23a643796e31", GenerateName:"", Namespace:"init-container-4052", SelfLink:"", UID:"0837b946-9c48-4f69-bdbf-487963b22001", ResourceVersion:"4884539", Generation:0, CreationTimestamp:time.Date(2022, time.August, 4, 9, 50, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"986934764"}, Annotations:map[string]string{"kubernetes.io/psp":"ack.privileged"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 4, 9, 50, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042dd980), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042dd9b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-xv4kl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00414dbc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xv4kl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xv4kl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xv4kl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002952118), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cn-hongkong.192.168.0.124", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0031622a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002952190)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0029521b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0029521b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0029521bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc002c2ee50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.0.124", PodIP:"10.115.1.11", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.115.1.11"}}, StartTime:time.Date(2022, time.August, 4, 9, 50, 52, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc0042dd9f8), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003162380)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://a4e88ad3c20f934564a19c0e1dd3585f6201f88c5513e33e742ef34bb9d46f1b", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414dc40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414dc20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00295223f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 09:51:35.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4052" for this suite.

• [SLOW TEST:44.096 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":195,"skipped":3554,"failed":0}
SSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:51:35.956: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1085
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:51:38.100: INFO: Deleting pod "var-expansion-9ba08969-3cfa-4d03-b819-f712b46f7775" in namespace "var-expansion-1085"
Aug  4 09:51:38.108: INFO: Wait up to 5m0s for pod "var-expansion-9ba08969-3cfa-4d03-b819-f712b46f7775" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 09:51:40.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1085" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":196,"skipped":3561,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:51:40.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-153
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-153 to expose endpoints map[]
Aug  4 09:51:40.272: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug  4 09:51:41.283: INFO: successfully validated that service endpoint-test2 in namespace services-153 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-153
Aug  4 09:51:41.296: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:51:43.305: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-153 to expose endpoints map[pod1:[80]]
Aug  4 09:51:43.319: INFO: successfully validated that service endpoint-test2 in namespace services-153 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug  4 09:51:43.319: INFO: Creating new exec pod
Aug  4 09:51:46.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:51:48.439: INFO: rc: 1
Aug  4 09:51:48.439: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 endpoint-test2 80
nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  4 09:51:49.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:51:51.542: INFO: rc: 1
Aug  4 09:51:51.542: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 endpoint-test2 80
nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  4 09:51:52.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:51:54.540: INFO: rc: 1
Aug  4 09:51:54.540: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 endpoint-test2 80
nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  4 09:51:55.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:51:55.537: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  4 09:51:55.537: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:51:55.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.220.242 80'
Aug  4 09:51:55.630: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.220.242 80\nConnection to 172.16.220.242 80 port [tcp/http] succeeded!\n"
Aug  4 09:51:55.630: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-153
Aug  4 09:51:55.640: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:51:57.647: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-153 to expose endpoints map[pod1:[80] pod2:[80]]
Aug  4 09:51:57.666: INFO: successfully validated that service endpoint-test2 in namespace services-153 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug  4 09:51:58.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:52:00.768: INFO: rc: 1
Aug  4 09:52:00.768: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 endpoint-test2 80
nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  4 09:52:01.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:52:01.871: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  4 09:52:01.871: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:52:01.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.220.242 80'
Aug  4 09:52:03.965: INFO: rc: 1
Aug  4 09:52:03.965: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.220.242 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 172.16.220.242 80
nc: connect to 172.16.220.242 port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  4 09:52:04.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.220.242 80'
Aug  4 09:52:05.070: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.220.242 80\nConnection to 172.16.220.242 80 port [tcp/http] succeeded!\n"
Aug  4 09:52:05.070: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-153
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-153 to expose endpoints map[pod2:[80]]
Aug  4 09:52:05.097: INFO: successfully validated that service endpoint-test2 in namespace services-153 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug  4 09:52:06.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  4 09:52:07.201: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  4 09:52:07.201: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:52:07.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-153 exec execpodtbt97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.220.242 80'
Aug  4 09:52:07.305: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.220.242 80\nConnection to 172.16.220.242 80 port [tcp/http] succeeded!\n"
Aug  4 09:52:07.305: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-153
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-153 to expose endpoints map[]
Aug  4 09:52:07.327: INFO: successfully validated that service endpoint-test2 in namespace services-153 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:52:07.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-153" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:27.226 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":197,"skipped":3567,"failed":0}
SS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:52:07.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-1874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-6fjr8 in namespace proxy-1874
I0804 09:52:07.495270      20 runners.go:193] Created replication controller with name: proxy-service-6fjr8, namespace: proxy-1874, replica count: 1
I0804 09:52:08.545439      20 runners.go:193] proxy-service-6fjr8 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0804 09:52:09.546214      20 runners.go:193] proxy-service-6fjr8 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0804 09:52:10.547213      20 runners.go:193] proxy-service-6fjr8 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:52:10.552: INFO: setup took 3.072104842s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug  4 09:52:10.557: INFO: (0) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 4.71303ms)
Aug  4 09:52:10.557: INFO: (0) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 4.675831ms)
Aug  4 09:52:10.557: INFO: (0) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 4.796466ms)
Aug  4 09:52:10.557: INFO: (0) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 4.903782ms)
Aug  4 09:52:10.558: INFO: (0) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.707407ms)
Aug  4 09:52:10.558: INFO: (0) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.727294ms)
Aug  4 09:52:10.559: INFO: (0) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.37053ms)
Aug  4 09:52:10.559: INFO: (0) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 6.715414ms)
Aug  4 09:52:10.560: INFO: (0) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 7.05019ms)
Aug  4 09:52:10.560: INFO: (0) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.624383ms)
Aug  4 09:52:10.560: INFO: (0) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 7.866674ms)
Aug  4 09:52:10.560: INFO: (0) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 7.936159ms)
Aug  4 09:52:10.560: INFO: (0) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 7.897128ms)
Aug  4 09:52:10.561: INFO: (0) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.557308ms)
Aug  4 09:52:10.561: INFO: (0) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.637774ms)
Aug  4 09:52:10.562: INFO: (0) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 9.908817ms)
Aug  4 09:52:10.566: INFO: (1) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.700719ms)
Aug  4 09:52:10.566: INFO: (1) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.818793ms)
Aug  4 09:52:10.566: INFO: (1) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.914495ms)
Aug  4 09:52:10.566: INFO: (1) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 3.859455ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.175001ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.248954ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.288658ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 5.43095ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.569811ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.547826ms)
Aug  4 09:52:10.568: INFO: (1) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.813256ms)
Aug  4 09:52:10.569: INFO: (1) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.734198ms)
Aug  4 09:52:10.570: INFO: (1) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.063033ms)
Aug  4 09:52:10.570: INFO: (1) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 7.143825ms)
Aug  4 09:52:10.570: INFO: (1) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 7.298068ms)
Aug  4 09:52:10.571: INFO: (1) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 8.229233ms)
Aug  4 09:52:10.575: INFO: (2) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.753088ms)
Aug  4 09:52:10.575: INFO: (2) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.697862ms)
Aug  4 09:52:10.575: INFO: (2) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.840307ms)
Aug  4 09:52:10.575: INFO: (2) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.861569ms)
Aug  4 09:52:10.575: INFO: (2) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 4.085047ms)
Aug  4 09:52:10.576: INFO: (2) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.302971ms)
Aug  4 09:52:10.576: INFO: (2) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.273155ms)
Aug  4 09:52:10.576: INFO: (2) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.434634ms)
Aug  4 09:52:10.576: INFO: (2) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.474718ms)
Aug  4 09:52:10.577: INFO: (2) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 5.649849ms)
Aug  4 09:52:10.577: INFO: (2) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.861121ms)
Aug  4 09:52:10.578: INFO: (2) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 6.700871ms)
Aug  4 09:52:10.578: INFO: (2) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.937517ms)
Aug  4 09:52:10.578: INFO: (2) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.982624ms)
Aug  4 09:52:10.579: INFO: (2) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 8.356216ms)
Aug  4 09:52:10.579: INFO: (2) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.481544ms)
Aug  4 09:52:10.583: INFO: (3) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.510325ms)
Aug  4 09:52:10.583: INFO: (3) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.723461ms)
Aug  4 09:52:10.583: INFO: (3) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.675251ms)
Aug  4 09:52:10.583: INFO: (3) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.722732ms)
Aug  4 09:52:10.584: INFO: (3) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 4.687765ms)
Aug  4 09:52:10.584: INFO: (3) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.052445ms)
Aug  4 09:52:10.585: INFO: (3) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.143409ms)
Aug  4 09:52:10.585: INFO: (3) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.269218ms)
Aug  4 09:52:10.585: INFO: (3) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.542164ms)
Aug  4 09:52:10.585: INFO: (3) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.616367ms)
Aug  4 09:52:10.585: INFO: (3) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.607012ms)
Aug  4 09:52:10.586: INFO: (3) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.660371ms)
Aug  4 09:52:10.586: INFO: (3) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.862009ms)
Aug  4 09:52:10.586: INFO: (3) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 6.892387ms)
Aug  4 09:52:10.588: INFO: (3) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.352915ms)
Aug  4 09:52:10.588: INFO: (3) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 8.346357ms)
Aug  4 09:52:10.592: INFO: (4) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.960431ms)
Aug  4 09:52:10.592: INFO: (4) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.902475ms)
Aug  4 09:52:10.592: INFO: (4) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.895148ms)
Aug  4 09:52:10.592: INFO: (4) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.913035ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.168983ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.285824ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.276322ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.421605ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.408077ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.569294ms)
Aug  4 09:52:10.593: INFO: (4) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 5.557986ms)
Aug  4 09:52:10.595: INFO: (4) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.765299ms)
Aug  4 09:52:10.595: INFO: (4) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.931133ms)
Aug  4 09:52:10.595: INFO: (4) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 6.998517ms)
Aug  4 09:52:10.595: INFO: (4) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 7.077438ms)
Aug  4 09:52:10.596: INFO: (4) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 8.311032ms)
Aug  4 09:52:10.600: INFO: (5) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.898728ms)
Aug  4 09:52:10.600: INFO: (5) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 3.892305ms)
Aug  4 09:52:10.600: INFO: (5) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.972529ms)
Aug  4 09:52:10.600: INFO: (5) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 4.046775ms)
Aug  4 09:52:10.602: INFO: (5) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 5.543711ms)
Aug  4 09:52:10.602: INFO: (5) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.67267ms)
Aug  4 09:52:10.602: INFO: (5) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.774076ms)
Aug  4 09:52:10.602: INFO: (5) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.798912ms)
Aug  4 09:52:10.602: INFO: (5) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 6.167878ms)
Aug  4 09:52:10.603: INFO: (5) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 6.26203ms)
Aug  4 09:52:10.603: INFO: (5) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 6.234251ms)
Aug  4 09:52:10.603: INFO: (5) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 6.222878ms)
Aug  4 09:52:10.604: INFO: (5) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.347764ms)
Aug  4 09:52:10.604: INFO: (5) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 7.406863ms)
Aug  4 09:52:10.605: INFO: (5) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.867148ms)
Aug  4 09:52:10.605: INFO: (5) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 9.025328ms)
Aug  4 09:52:10.609: INFO: (6) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.652698ms)
Aug  4 09:52:10.609: INFO: (6) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.659114ms)
Aug  4 09:52:10.609: INFO: (6) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.814311ms)
Aug  4 09:52:10.609: INFO: (6) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.784617ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.378784ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 5.454243ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.370627ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.433108ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.609396ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.586459ms)
Aug  4 09:52:10.611: INFO: (6) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.600935ms)
Aug  4 09:52:10.612: INFO: (6) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 6.807532ms)
Aug  4 09:52:10.612: INFO: (6) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.754484ms)
Aug  4 09:52:10.612: INFO: (6) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.926051ms)
Aug  4 09:52:10.614: INFO: (6) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.331576ms)
Aug  4 09:52:10.614: INFO: (6) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.374205ms)
Aug  4 09:52:10.617: INFO: (7) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 2.98983ms)
Aug  4 09:52:10.618: INFO: (7) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.715615ms)
Aug  4 09:52:10.618: INFO: (7) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.728495ms)
Aug  4 09:52:10.618: INFO: (7) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.797424ms)
Aug  4 09:52:10.618: INFO: (7) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.690789ms)
Aug  4 09:52:10.618: INFO: (7) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 4.005084ms)
Aug  4 09:52:10.619: INFO: (7) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.330096ms)
Aug  4 09:52:10.619: INFO: (7) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.415093ms)
Aug  4 09:52:10.619: INFO: (7) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.384358ms)
Aug  4 09:52:10.619: INFO: (7) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.441165ms)
Aug  4 09:52:10.621: INFO: (7) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 6.976976ms)
Aug  4 09:52:10.621: INFO: (7) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 7.00381ms)
Aug  4 09:52:10.621: INFO: (7) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.976762ms)
Aug  4 09:52:10.622: INFO: (7) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.791613ms)
Aug  4 09:52:10.622: INFO: (7) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 8.284743ms)
Aug  4 09:52:10.622: INFO: (7) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 8.449904ms)
Aug  4 09:52:10.626: INFO: (8) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.215835ms)
Aug  4 09:52:10.626: INFO: (8) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.560016ms)
Aug  4 09:52:10.626: INFO: (8) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.778794ms)
Aug  4 09:52:10.626: INFO: (8) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.932728ms)
Aug  4 09:52:10.627: INFO: (8) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 4.081122ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.281292ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.346197ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 5.630594ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.568991ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.694757ms)
Aug  4 09:52:10.628: INFO: (8) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.737433ms)
Aug  4 09:52:10.629: INFO: (8) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 6.707626ms)
Aug  4 09:52:10.630: INFO: (8) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.287431ms)
Aug  4 09:52:10.630: INFO: (8) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 7.986291ms)
Aug  4 09:52:10.631: INFO: (8) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.39528ms)
Aug  4 09:52:10.632: INFO: (8) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 9.715437ms)
Aug  4 09:52:10.635: INFO: (9) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.018173ms)
Aug  4 09:52:10.636: INFO: (9) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.595205ms)
Aug  4 09:52:10.636: INFO: (9) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.791591ms)
Aug  4 09:52:10.636: INFO: (9) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.78849ms)
Aug  4 09:52:10.637: INFO: (9) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 4.338268ms)
Aug  4 09:52:10.637: INFO: (9) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.16288ms)
Aug  4 09:52:10.638: INFO: (9) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.191437ms)
Aug  4 09:52:10.638: INFO: (9) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.324387ms)
Aug  4 09:52:10.638: INFO: (9) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.541013ms)
Aug  4 09:52:10.638: INFO: (9) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.6859ms)
Aug  4 09:52:10.638: INFO: (9) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.861396ms)
Aug  4 09:52:10.639: INFO: (9) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.890044ms)
Aug  4 09:52:10.640: INFO: (9) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 7.232ms)
Aug  4 09:52:10.640: INFO: (9) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.340454ms)
Aug  4 09:52:10.641: INFO: (9) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.576874ms)
Aug  4 09:52:10.641: INFO: (9) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 8.89839ms)
Aug  4 09:52:10.645: INFO: (10) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.988327ms)
Aug  4 09:52:10.646: INFO: (10) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 4.171494ms)
Aug  4 09:52:10.646: INFO: (10) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 4.230237ms)
Aug  4 09:52:10.646: INFO: (10) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 4.907443ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.405039ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.449603ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.507606ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.544868ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 5.680115ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.668222ms)
Aug  4 09:52:10.647: INFO: (10) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.997086ms)
Aug  4 09:52:10.648: INFO: (10) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.922732ms)
Aug  4 09:52:10.648: INFO: (10) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 7.081362ms)
Aug  4 09:52:10.648: INFO: (10) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 7.08665ms)
Aug  4 09:52:10.649: INFO: (10) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.263959ms)
Aug  4 09:52:10.650: INFO: (10) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 8.315738ms)
Aug  4 09:52:10.653: INFO: (11) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.567625ms)
Aug  4 09:52:10.654: INFO: (11) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.964352ms)
Aug  4 09:52:10.654: INFO: (11) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.984714ms)
Aug  4 09:52:10.654: INFO: (11) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 4.079093ms)
Aug  4 09:52:10.654: INFO: (11) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 4.032463ms)
Aug  4 09:52:10.655: INFO: (11) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.206425ms)
Aug  4 09:52:10.655: INFO: (11) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.201863ms)
Aug  4 09:52:10.655: INFO: (11) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.39944ms)
Aug  4 09:52:10.655: INFO: (11) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.5714ms)
Aug  4 09:52:10.655: INFO: (11) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.546623ms)
Aug  4 09:52:10.656: INFO: (11) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 5.74522ms)
Aug  4 09:52:10.657: INFO: (11) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 6.787775ms)
Aug  4 09:52:10.657: INFO: (11) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 7.112492ms)
Aug  4 09:52:10.658: INFO: (11) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 7.81809ms)
Aug  4 09:52:10.658: INFO: (11) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 8.268643ms)
Aug  4 09:52:10.659: INFO: (11) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 9.244543ms)
Aug  4 09:52:10.663: INFO: (12) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.572298ms)
Aug  4 09:52:10.663: INFO: (12) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.707738ms)
Aug  4 09:52:10.663: INFO: (12) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.816251ms)
Aug  4 09:52:10.663: INFO: (12) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.849132ms)
Aug  4 09:52:10.664: INFO: (12) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 4.735909ms)
Aug  4 09:52:10.664: INFO: (12) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.234791ms)
Aug  4 09:52:10.664: INFO: (12) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.247279ms)
Aug  4 09:52:10.665: INFO: (12) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.323862ms)
Aug  4 09:52:10.665: INFO: (12) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.664789ms)
Aug  4 09:52:10.665: INFO: (12) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.678597ms)
Aug  4 09:52:10.665: INFO: (12) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.708859ms)
Aug  4 09:52:10.666: INFO: (12) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.874312ms)
Aug  4 09:52:10.666: INFO: (12) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.971745ms)
Aug  4 09:52:10.666: INFO: (12) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 6.945221ms)
Aug  4 09:52:10.667: INFO: (12) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 8.19104ms)
Aug  4 09:52:10.668: INFO: (12) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.346888ms)
Aug  4 09:52:10.671: INFO: (13) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.010391ms)
Aug  4 09:52:10.671: INFO: (13) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.666096ms)
Aug  4 09:52:10.671: INFO: (13) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.775902ms)
Aug  4 09:52:10.671: INFO: (13) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.776232ms)
Aug  4 09:52:10.672: INFO: (13) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.874775ms)
Aug  4 09:52:10.672: INFO: (13) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 4.062658ms)
Aug  4 09:52:10.673: INFO: (13) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.21353ms)
Aug  4 09:52:10.673: INFO: (13) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.370933ms)
Aug  4 09:52:10.673: INFO: (13) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.50216ms)
Aug  4 09:52:10.673: INFO: (13) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.466579ms)
Aug  4 09:52:10.674: INFO: (13) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 6.818587ms)
Aug  4 09:52:10.675: INFO: (13) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.849392ms)
Aug  4 09:52:10.675: INFO: (13) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 6.965616ms)
Aug  4 09:52:10.675: INFO: (13) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 7.690777ms)
Aug  4 09:52:10.676: INFO: (13) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.377097ms)
Aug  4 09:52:10.676: INFO: (13) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 8.375332ms)
Aug  4 09:52:10.680: INFO: (14) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.520262ms)
Aug  4 09:52:10.680: INFO: (14) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.846674ms)
Aug  4 09:52:10.680: INFO: (14) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 3.86676ms)
Aug  4 09:52:10.680: INFO: (14) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.877942ms)
Aug  4 09:52:10.680: INFO: (14) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 4.093927ms)
Aug  4 09:52:10.681: INFO: (14) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.139056ms)
Aug  4 09:52:10.681: INFO: (14) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.204615ms)
Aug  4 09:52:10.682: INFO: (14) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.468858ms)
Aug  4 09:52:10.682: INFO: (14) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.572371ms)
Aug  4 09:52:10.682: INFO: (14) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 5.585298ms)
Aug  4 09:52:10.682: INFO: (14) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.588102ms)
Aug  4 09:52:10.683: INFO: (14) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.779127ms)
Aug  4 09:52:10.683: INFO: (14) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 7.279901ms)
Aug  4 09:52:10.684: INFO: (14) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.1794ms)
Aug  4 09:52:10.685: INFO: (14) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 8.733721ms)
Aug  4 09:52:10.686: INFO: (14) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 9.414437ms)
Aug  4 09:52:10.689: INFO: (15) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.131656ms)
Aug  4 09:52:10.689: INFO: (15) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.497729ms)
Aug  4 09:52:10.689: INFO: (15) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.794385ms)
Aug  4 09:52:10.689: INFO: (15) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.829297ms)
Aug  4 09:52:10.690: INFO: (15) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 4.123573ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.109806ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.122585ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.254477ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.444ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.583647ms)
Aug  4 09:52:10.691: INFO: (15) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.584154ms)
Aug  4 09:52:10.692: INFO: (15) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.771055ms)
Aug  4 09:52:10.693: INFO: (15) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 7.069164ms)
Aug  4 09:52:10.693: INFO: (15) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 7.203111ms)
Aug  4 09:52:10.694: INFO: (15) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.452826ms)
Aug  4 09:52:10.694: INFO: (15) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.746701ms)
Aug  4 09:52:10.697: INFO: (16) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 2.954066ms)
Aug  4 09:52:10.698: INFO: (16) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.536314ms)
Aug  4 09:52:10.698: INFO: (16) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 3.829134ms)
Aug  4 09:52:10.698: INFO: (16) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.854265ms)
Aug  4 09:52:10.698: INFO: (16) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.803179ms)
Aug  4 09:52:10.698: INFO: (16) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 4.057862ms)
Aug  4 09:52:10.700: INFO: (16) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.107793ms)
Aug  4 09:52:10.700: INFO: (16) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.14189ms)
Aug  4 09:52:10.700: INFO: (16) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.398588ms)
Aug  4 09:52:10.700: INFO: (16) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.447943ms)
Aug  4 09:52:10.700: INFO: (16) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 5.820561ms)
Aug  4 09:52:10.701: INFO: (16) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 6.665799ms)
Aug  4 09:52:10.701: INFO: (16) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 6.890703ms)
Aug  4 09:52:10.702: INFO: (16) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 7.110896ms)
Aug  4 09:52:10.703: INFO: (16) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 8.254408ms)
Aug  4 09:52:10.703: INFO: (16) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 8.392213ms)
Aug  4 09:52:10.707: INFO: (17) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 3.596284ms)
Aug  4 09:52:10.707: INFO: (17) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.851048ms)
Aug  4 09:52:10.707: INFO: (17) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.858264ms)
Aug  4 09:52:10.707: INFO: (17) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.84813ms)
Aug  4 09:52:10.707: INFO: (17) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 4.003003ms)
Aug  4 09:52:10.708: INFO: (17) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 5.248433ms)
Aug  4 09:52:10.708: INFO: (17) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.229235ms)
Aug  4 09:52:10.708: INFO: (17) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.565101ms)
Aug  4 09:52:10.709: INFO: (17) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 5.696688ms)
Aug  4 09:52:10.709: INFO: (17) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.743837ms)
Aug  4 09:52:10.709: INFO: (17) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.828412ms)
Aug  4 09:52:10.710: INFO: (17) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.853582ms)
Aug  4 09:52:10.710: INFO: (17) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 7.356888ms)
Aug  4 09:52:10.711: INFO: (17) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 7.825501ms)
Aug  4 09:52:10.711: INFO: (17) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.403913ms)
Aug  4 09:52:10.712: INFO: (17) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 9.471777ms)
Aug  4 09:52:10.715: INFO: (18) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 2.97675ms)
Aug  4 09:52:10.716: INFO: (18) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.48044ms)
Aug  4 09:52:10.716: INFO: (18) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 3.657729ms)
Aug  4 09:52:10.716: INFO: (18) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 3.785143ms)
Aug  4 09:52:10.717: INFO: (18) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 4.093291ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.272024ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.269297ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.293331ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.450102ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 5.588864ms)
Aug  4 09:52:10.718: INFO: (18) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 5.72592ms)
Aug  4 09:52:10.719: INFO: (18) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 6.842833ms)
Aug  4 09:52:10.719: INFO: (18) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.916995ms)
Aug  4 09:52:10.720: INFO: (18) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 7.477966ms)
Aug  4 09:52:10.721: INFO: (18) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 8.419984ms)
Aug  4 09:52:10.721: INFO: (18) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.945233ms)
Aug  4 09:52:10.724: INFO: (19) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:460/proxy/: tls baz (200; 2.962178ms)
Aug  4 09:52:10.725: INFO: (19) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 3.614808ms)
Aug  4 09:52:10.725: INFO: (19) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr/proxy/rewriteme">test</a> (200; 3.752449ms)
Aug  4 09:52:10.725: INFO: (19) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">... (200; 3.733548ms)
Aug  4 09:52:10.725: INFO: (19) /api/v1/namespaces/proxy-1874/pods/http:proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 3.732338ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:462/proxy/: tls qux (200; 5.370909ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/https:proxy-service-6fjr8-hlfhr:443/proxy/tlsrewritem... (200; 5.398301ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:162/proxy/: bar (200; 5.558286ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:1080/proxy/rewriteme">test<... (200; 5.820432ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/pods/proxy-service-6fjr8-hlfhr:160/proxy/: foo (200; 5.791728ms)
Aug  4 09:52:10.727: INFO: (19) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname1/proxy/: foo (200; 5.836892ms)
Aug  4 09:52:10.728: INFO: (19) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname2/proxy/: tls qux (200; 6.91257ms)
Aug  4 09:52:10.729: INFO: (19) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname2/proxy/: bar (200; 7.099531ms)
Aug  4 09:52:10.729: INFO: (19) /api/v1/namespaces/proxy-1874/services/http:proxy-service-6fjr8:portname2/proxy/: bar (200; 7.368195ms)
Aug  4 09:52:10.730: INFO: (19) /api/v1/namespaces/proxy-1874/services/https:proxy-service-6fjr8:tlsportname1/proxy/: tls baz (200; 8.485955ms)
Aug  4 09:52:10.730: INFO: (19) /api/v1/namespaces/proxy-1874/services/proxy-service-6fjr8:portname1/proxy/: foo (200; 8.509289ms)
STEP: deleting ReplicationController proxy-service-6fjr8 in namespace proxy-1874, will wait for the garbage collector to delete the pods
Aug  4 09:52:10.792: INFO: Deleting ReplicationController proxy-service-6fjr8 took: 6.836288ms
Aug  4 09:52:10.892: INFO: Terminating ReplicationController proxy-service-6fjr8 pods took: 100.61644ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  4 09:52:13.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-1874" for this suite.

• [SLOW TEST:5.754 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":198,"skipped":3569,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:52:13.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:52:13.540: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:52:16.567: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:52:16.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3380-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:52:19.674: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9082" for this suite.
STEP: Destroying namespace "webhook-9082-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.615 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":199,"skipped":3609,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:52:19.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8187
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug  4 09:52:19.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 create -f -'
Aug  4 09:52:20.497: INFO: stderr: ""
Aug  4 09:52:20.497: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  4 09:52:20.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:20.541: INFO: stderr: ""
Aug  4 09:52:20.541: INFO: stdout: "update-demo-nautilus-6lll7 update-demo-nautilus-phbtj "
Aug  4 09:52:20.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-6lll7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:20.577: INFO: stderr: ""
Aug  4 09:52:20.577: INFO: stdout: ""
Aug  4 09:52:20.577: INFO: update-demo-nautilus-6lll7 is created but not running
Aug  4 09:52:25.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:25.626: INFO: stderr: ""
Aug  4 09:52:25.626: INFO: stdout: "update-demo-nautilus-6lll7 update-demo-nautilus-phbtj "
Aug  4 09:52:25.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-6lll7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:25.667: INFO: stderr: ""
Aug  4 09:52:25.667: INFO: stdout: "true"
Aug  4 09:52:25.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-6lll7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:25.704: INFO: stderr: ""
Aug  4 09:52:25.704: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:25.704: INFO: validating pod update-demo-nautilus-6lll7
Aug  4 09:52:25.709: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:25.709: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:25.709: INFO: update-demo-nautilus-6lll7 is verified up and running
Aug  4 09:52:25.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:25.752: INFO: stderr: ""
Aug  4 09:52:25.752: INFO: stdout: ""
Aug  4 09:52:25.752: INFO: update-demo-nautilus-phbtj is created but not running
Aug  4 09:52:30.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:30.794: INFO: stderr: ""
Aug  4 09:52:30.794: INFO: stdout: "update-demo-nautilus-6lll7 update-demo-nautilus-phbtj "
Aug  4 09:52:30.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-6lll7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:30.832: INFO: stderr: ""
Aug  4 09:52:30.832: INFO: stdout: "true"
Aug  4 09:52:30.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-6lll7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:30.870: INFO: stderr: ""
Aug  4 09:52:30.870: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:30.870: INFO: validating pod update-demo-nautilus-6lll7
Aug  4 09:52:30.874: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:30.874: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:30.874: INFO: update-demo-nautilus-6lll7 is verified up and running
Aug  4 09:52:30.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:30.911: INFO: stderr: ""
Aug  4 09:52:30.911: INFO: stdout: "true"
Aug  4 09:52:30.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:30.946: INFO: stderr: ""
Aug  4 09:52:30.946: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:30.946: INFO: validating pod update-demo-nautilus-phbtj
Aug  4 09:52:46.573: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:46.573: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:46.573: INFO: update-demo-nautilus-phbtj is verified up and running
STEP: scaling down the replication controller
Aug  4 09:52:46.574: INFO: scanned /root for discovery docs: <nil>
Aug  4 09:52:46.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug  4 09:52:47.637: INFO: stderr: ""
Aug  4 09:52:47.637: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  4 09:52:47.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:47.677: INFO: stderr: ""
Aug  4 09:52:47.677: INFO: stdout: "update-demo-nautilus-phbtj "
Aug  4 09:52:47.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:47.721: INFO: stderr: ""
Aug  4 09:52:47.721: INFO: stdout: "true"
Aug  4 09:52:47.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:47.759: INFO: stderr: ""
Aug  4 09:52:47.759: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:47.759: INFO: validating pod update-demo-nautilus-phbtj
Aug  4 09:52:47.764: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:47.764: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:47.764: INFO: update-demo-nautilus-phbtj is verified up and running
STEP: scaling up the replication controller
Aug  4 09:52:47.764: INFO: scanned /root for discovery docs: <nil>
Aug  4 09:52:47.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug  4 09:52:48.821: INFO: stderr: ""
Aug  4 09:52:48.821: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  4 09:52:48.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:48.863: INFO: stderr: ""
Aug  4 09:52:48.863: INFO: stdout: "update-demo-nautilus-phbtj update-demo-nautilus-xlhsm "
Aug  4 09:52:48.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:48.900: INFO: stderr: ""
Aug  4 09:52:48.900: INFO: stdout: "true"
Aug  4 09:52:48.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:48.935: INFO: stderr: ""
Aug  4 09:52:48.935: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:48.935: INFO: validating pod update-demo-nautilus-phbtj
Aug  4 09:52:48.940: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:48.940: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:48.940: INFO: update-demo-nautilus-phbtj is verified up and running
Aug  4 09:52:48.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-xlhsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:48.977: INFO: stderr: ""
Aug  4 09:52:48.977: INFO: stdout: ""
Aug  4 09:52:48.977: INFO: update-demo-nautilus-xlhsm is created but not running
Aug  4 09:52:53.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:52:54.022: INFO: stderr: ""
Aug  4 09:52:54.022: INFO: stdout: "update-demo-nautilus-phbtj update-demo-nautilus-xlhsm "
Aug  4 09:52:54.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:54.062: INFO: stderr: ""
Aug  4 09:52:54.062: INFO: stdout: "true"
Aug  4 09:52:54.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-phbtj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:54.100: INFO: stderr: ""
Aug  4 09:52:54.100: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:54.100: INFO: validating pod update-demo-nautilus-phbtj
Aug  4 09:52:54.104: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:52:54.104: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:52:54.104: INFO: update-demo-nautilus-phbtj is verified up and running
Aug  4 09:52:54.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-xlhsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:52:54.141: INFO: stderr: ""
Aug  4 09:52:54.141: INFO: stdout: "true"
Aug  4 09:52:54.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods update-demo-nautilus-xlhsm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:52:54.181: INFO: stderr: ""
Aug  4 09:52:54.181: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:52:54.181: INFO: validating pod update-demo-nautilus-xlhsm
Aug  4 09:53:09.613: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:53:09.613: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:53:09.613: INFO: update-demo-nautilus-xlhsm is verified up and running
STEP: using delete to clean up resources
Aug  4 09:53:09.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 delete --grace-period=0 --force -f -'
Aug  4 09:53:09.659: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:53:09.659: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug  4 09:53:09.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get rc,svc -l name=update-demo --no-headers'
Aug  4 09:53:09.704: INFO: stderr: "No resources found in kubectl-8187 namespace.\n"
Aug  4 09:53:09.704: INFO: stdout: ""
Aug  4 09:53:09.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-8187 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  4 09:53:09.745: INFO: stderr: ""
Aug  4 09:53:09.745: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:53:09.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8187" for this suite.

• [SLOW TEST:50.030 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":200,"skipped":3625,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:53:09.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-631
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug  4 09:53:09.882: INFO: namespace kubectl-631
Aug  4 09:53:09.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-631 create -f -'
Aug  4 09:53:10.387: INFO: stderr: ""
Aug  4 09:53:10.387: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  4 09:53:11.395: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 09:53:11.395: INFO: Found 1 / 1
Aug  4 09:53:11.395: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug  4 09:53:11.399: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  4 09:53:11.399: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  4 09:53:11.399: INFO: wait on agnhost-primary startup in kubectl-631 
Aug  4 09:53:11.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-631 logs agnhost-primary-rxgn4 agnhost-primary'
Aug  4 09:53:11.454: INFO: stderr: ""
Aug  4 09:53:11.454: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug  4 09:53:11.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-631 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug  4 09:53:11.508: INFO: stderr: ""
Aug  4 09:53:11.508: INFO: stdout: "service/rm2 exposed\n"
Aug  4 09:53:11.512: INFO: Service rm2 in namespace kubectl-631 found.
STEP: exposing service
Aug  4 09:53:13.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-631 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug  4 09:53:13.577: INFO: stderr: ""
Aug  4 09:53:13.577: INFO: stdout: "service/rm3 exposed\n"
Aug  4 09:53:13.582: INFO: Service rm3 in namespace kubectl-631 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:53:15.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-631" for this suite.

• [SLOW TEST:5.849 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":201,"skipped":3640,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:53:15.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4963
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:53:15.738: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug  4 09:53:20.745: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  4 09:53:20.745: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug  4 09:53:22.754: INFO: Creating deployment "test-rollover-deployment"
Aug  4 09:53:22.764: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug  4 09:53:24.776: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug  4 09:53:24.783: INFO: Ensure that both replica sets have 1 created replica
Aug  4 09:53:24.790: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug  4 09:53:24.800: INFO: Updating deployment test-rollover-deployment
Aug  4 09:53:24.800: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug  4 09:53:26.810: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug  4 09:53:26.819: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug  4 09:53:26.827: INFO: all replica sets need to contain the pod-template-hash label
Aug  4 09:53:26.827: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:53:28.836: INFO: all replica sets need to contain the pod-template-hash label
Aug  4 09:53:28.837: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:53:30.839: INFO: all replica sets need to contain the pod-template-hash label
Aug  4 09:53:30.839: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:53:32.838: INFO: all replica sets need to contain the pod-template-hash label
Aug  4 09:53:32.838: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:53:34.837: INFO: all replica sets need to contain the pod-template-hash label
Aug  4 09:53:34.837: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:53:36.841: INFO: 
Aug  4 09:53:36.841: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 09:53:36.851: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-4963  e28f0d80-b7fd-45da-956a-d23157302f9f 4887722 2 2022-08-04 09:53:22 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-04 09:53:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003edf068 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-04 09:53:22 +0000 UTC,LastTransitionTime:2022-08-04 09:53:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-08-04 09:53:36 +0000 UTC,LastTransitionTime:2022-08-04 09:53:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  4 09:53:36.855: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-4963  c031fcc8-d4aa-4d7c-af61-5a2afdc46c0c 4887715 2 2022-08-04 09:53:24 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment e28f0d80-b7fd-45da-956a-d23157302f9f 0xc0040ba6e7 0xc0040ba6e8}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:53:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e28f0d80-b7fd-45da-956a-d23157302f9f\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:36 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0040ba798 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:53:36.855: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug  4 09:53:36.855: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-4963  56a090b1-9da1-43c0-999c-9af2c03a82d7 4887721 2 2022-08-04 09:53:15 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment e28f0d80-b7fd-45da-956a-d23157302f9f 0xc0040ba5b7 0xc0040ba5b8}] []  [{e2e.test Update apps/v1 2022-08-04 09:53:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e28f0d80-b7fd-45da-956a-d23157302f9f\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:36 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0040ba678 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:53:36.855: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-4963  dfc64b27-2a74-477a-8e3c-27269df1d6fc 4887504 2 2022-08-04 09:53:22 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment e28f0d80-b7fd-45da-956a-d23157302f9f 0xc0040ba800 0xc0040ba801}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:53:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e28f0d80-b7fd-45da-956a-d23157302f9f\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0040ba8a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:53:36.858: INFO: Pod "test-rollover-deployment-779c67f4f8-zk2xm" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-zk2xm test-rollover-deployment-779c67f4f8- deployment-4963  e8beaa67-b7be-43b6-9fec-0a27f3797df5 4887532 0 2022-08-04 09:53:24 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 c031fcc8-d4aa-4d7c-af61-5a2afdc46c0c 0xc0040bae07 0xc0040bae08}] []  [{kube-controller-manager Update v1 2022-08-04 09:53:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c031fcc8-d4aa-4d7c-af61-5a2afdc46c0c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:53:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9xxnr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9xxnr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.21,StartTime:2022-08-04 09:53:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:53:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://5da2f5ee6eed647ffb33141aeb4d25461be4f38ada20e9d8d5a293cb11942361,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 09:53:36.859: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4963" for this suite.

• [SLOW TEST:21.264 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":202,"skipped":3649,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:53:36.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-970
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  4 09:53:37.012: INFO: The status of Pod annotationupdatebc947b63-fce3-4b94-b764-8ff36978bd36 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:53:39.016: INFO: The status of Pod annotationupdatebc947b63-fce3-4b94-b764-8ff36978bd36 is Running (Ready = true)
Aug  4 09:53:39.540: INFO: Successfully updated pod "annotationupdatebc947b63-fce3-4b94-b764-8ff36978bd36"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 09:53:41.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-970" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3675,"failed":0}

------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:53:41.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:53:41.697: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug  4 09:53:41.705: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  4 09:53:46.713: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  4 09:53:46.713: INFO: Creating deployment "test-rolling-update-deployment"
Aug  4 09:53:46.718: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug  4 09:53:46.725: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug  4 09:53:48.740: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug  4 09:53:48.743: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 09:53:48.754: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-1957  df6ed3a5-e635-4ba7-8dbe-040a4db09def 4888010 1 2022-08-04 09:53:46 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-04 09:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00407caa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-04 09:53:46 +0000 UTC,LastTransitionTime:2022-08-04 09:53:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-08-04 09:53:48 +0000 UTC,LastTransitionTime:2022-08-04 09:53:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  4 09:53:48.758: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-1957  0ff38c77-c454-41c3-ba07-57c7ee03f365 4888001 1 2022-08-04 09:53:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment df6ed3a5-e635-4ba7-8dbe-040a4db09def 0xc00407cf87 0xc00407cf88}] []  [{kube-controller-manager Update apps/v1 2022-08-04 09:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"df6ed3a5-e635-4ba7-8dbe-040a4db09def\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00407d038 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:53:48.758: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug  4 09:53:48.758: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-1957  041fe45b-b2b6-44a4-b61a-13717a516127 4888009 2 2022-08-04 09:53:41 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment df6ed3a5-e635-4ba7-8dbe-040a4db09def 0xc00407ce57 0xc00407ce58}] []  [{e2e.test Update apps/v1 2022-08-04 09:53:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"df6ed3a5-e635-4ba7-8dbe-040a4db09def\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:53:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00407cf18 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:53:48.761: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-dpbgs" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-dpbgs test-rolling-update-deployment-67c8f74c6c- deployment-1957  cc34bc83-a4d8-4673-8b11-1ce27cb7acf7 4887999 0 2022-08-04 09:53:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c 0ff38c77-c454-41c3-ba07-57c7ee03f365 0xc003bbc7f7 0xc003bbc7f8}] []  [{kube-controller-manager Update v1 2022-08-04 09:53:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0ff38c77-c454-41c3-ba07-57c7ee03f365\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:53:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tzk5v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tzk5v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:53:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.24,StartTime:2022-08-04 09:53:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:53:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://96e04e7b7e2ee6b2db8ff88c76385ad294bc04943e2adae470598d5e605af4ef,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.24,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 09:53:48.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1957" for this suite.

• [SLOW TEST:7.205 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":204,"skipped":3675,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:53:48.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-4072
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-5490
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-3972
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:54:02.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-4072" for this suite.
STEP: Destroying namespace "nsdeletetest-5490" for this suite.
Aug  4 09:54:02.197: INFO: Namespace nsdeletetest-5490 was already deleted
STEP: Destroying namespace "nsdeletetest-3972" for this suite.

• [SLOW TEST:13.428 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":205,"skipped":3741,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:02.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1696
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug  4 09:54:08.371: INFO: 80 pods remaining
Aug  4 09:54:08.371: INFO: 80 pods has nil DeletionTimestamp
Aug  4 09:54:08.371: INFO: 
Aug  4 09:54:09.370: INFO: 71 pods remaining
Aug  4 09:54:09.370: INFO: 70 pods has nil DeletionTimestamp
Aug  4 09:54:09.370: INFO: 
Aug  4 09:54:10.366: INFO: 60 pods remaining
Aug  4 09:54:10.366: INFO: 60 pods has nil DeletionTimestamp
Aug  4 09:54:10.366: INFO: 
Aug  4 09:54:11.367: INFO: 40 pods remaining
Aug  4 09:54:11.367: INFO: 40 pods has nil DeletionTimestamp
Aug  4 09:54:11.367: INFO: 
Aug  4 09:54:12.366: INFO: 31 pods remaining
Aug  4 09:54:12.366: INFO: 30 pods has nil DeletionTimestamp
Aug  4 09:54:12.366: INFO: 
Aug  4 09:54:13.365: INFO: 20 pods remaining
Aug  4 09:54:13.365: INFO: 20 pods has nil DeletionTimestamp
Aug  4 09:54:13.365: INFO: 
STEP: Gathering metrics
Aug  4 09:54:14.373: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0804 09:54:14.373926      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 09:54:14.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1696" for this suite.

• [SLOW TEST:12.182 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":206,"skipped":3788,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:14.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  4 09:54:26.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-674" for this suite.

• [SLOW TEST:12.156 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":207,"skipped":3811,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:26.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9152
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Aug  4 09:54:36.713: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0804 09:54:36.713958      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 09:54:36.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9152" for this suite.

• [SLOW TEST:10.184 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":208,"skipped":3817,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:36.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-723
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 09:54:36.861: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f" in namespace "downward-api-723" to be "Succeeded or Failed"
Aug  4 09:54:36.864: INFO: Pod "downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.577826ms
Aug  4 09:54:38.873: INFO: Pod "downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01227485s
Aug  4 09:54:40.879: INFO: Pod "downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018650533s
STEP: Saw pod success
Aug  4 09:54:40.879: INFO: Pod "downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f" satisfied condition "Succeeded or Failed"
Aug  4 09:54:40.883: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f container client-container: <nil>
STEP: delete the pod
Aug  4 09:54:40.902: INFO: Waiting for pod downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f to disappear
Aug  4 09:54:40.905: INFO: Pod downwardapi-volume-f4da77ed-a053-463d-aa84-544c8f1c252f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 09:54:40.905: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-723" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":209,"skipped":3837,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:40.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8225
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:54:41.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8225" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":210,"skipped":3856,"failed":0}
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:41.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-6612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  4 09:54:45.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6612" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":211,"skipped":3859,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:45.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Aug  4 09:54:45.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 create -f -'
Aug  4 09:54:45.975: INFO: stderr: ""
Aug  4 09:54:45.975: INFO: stdout: "pod/pause created\n"
Aug  4 09:54:45.975: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug  4 09:54:45.975: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-2313" to be "running and ready"
Aug  4 09:54:45.979: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 3.628826ms
Aug  4 09:54:47.989: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.014044839s
Aug  4 09:54:47.989: INFO: Pod "pause" satisfied condition "running and ready"
Aug  4 09:54:47.989: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Aug  4 09:54:47.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 label pods pause testing-label=testing-label-value'
Aug  4 09:54:48.046: INFO: stderr: ""
Aug  4 09:54:48.046: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug  4 09:54:48.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 get pod pause -L testing-label'
Aug  4 09:54:48.083: INFO: stderr: ""
Aug  4 09:54:48.083: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug  4 09:54:48.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 label pods pause testing-label-'
Aug  4 09:54:48.127: INFO: stderr: ""
Aug  4 09:54:48.127: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug  4 09:54:48.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 get pod pause -L testing-label'
Aug  4 09:54:48.164: INFO: stderr: ""
Aug  4 09:54:48.164: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Aug  4 09:54:48.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 delete --grace-period=0 --force -f -'
Aug  4 09:54:48.210: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:54:48.210: INFO: stdout: "pod \"pause\" force deleted\n"
Aug  4 09:54:48.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 get rc,svc -l name=pause --no-headers'
Aug  4 09:54:48.250: INFO: stderr: "No resources found in kubectl-2313 namespace.\n"
Aug  4 09:54:48.250: INFO: stdout: ""
Aug  4 09:54:48.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2313 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  4 09:54:48.289: INFO: stderr: ""
Aug  4 09:54:48.289: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:54:48.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2313" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":212,"skipped":3871,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:48.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-9787
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  4 09:54:48.432: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  4 09:54:48.442: INFO: Waiting for terminating namespaces to be deleted...
Aug  4 09:54:48.446: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.121 before test
Aug  4 09:54:48.453: INFO: coredns-59b9d8db85-hn4p6 from kube-system started at 2022-08-04 08:09:22 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container coredns ready: true, restart count 0
Aug  4 09:54:48.453: INFO: csi-plugin-p5np9 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:54:48.453: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.453: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.453: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.453: INFO: kube-flannel-ds-jwn5s from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:54:48.453: INFO: kube-proxy-worker-655dh from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:54:48.453: INFO: storage-snapshot-manager-554445c9bd-fvptn from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container storage-snapshot-manager ready: true, restart count 0
Aug  4 09:54:48.453: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.453: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.453: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:54:48.453: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.122 before test
Aug  4 09:54:48.461: INFO: alicloud-monitor-controller-5845594db4-45z4s from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container alicloud-monitor-controller ready: true, restart count 0
Aug  4 09:54:48.461: INFO: coredns-59b9d8db85-47n9g from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container coredns ready: true, restart count 0
Aug  4 09:54:48.461: INFO: csi-plugin-pdfn5 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (4 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.461: INFO: csi-provisioner-67f645cbd4-rs7qd from kube-system started at 2022-08-04 08:09:14 +0000 UTC (8 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 09:54:48.461: INFO: kube-flannel-ds-7dcg7 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:54:48.461: INFO: kube-proxy-worker-hbmcg from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:54:48.461: INFO: metrics-server-74cc8bb57-59pqk from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container metrics-server ready: true, restart count 0
Aug  4 09:54:48.461: INFO: storage-operator-56dcf896df-hgdkr from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container storage-operator ready: true, restart count 0
Aug  4 09:54:48.461: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-j4br8 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.461: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:54:48.461: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.123 before test
Aug  4 09:54:48.472: INFO: csi-plugin-m56dc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.472: INFO: kube-flannel-ds-zr96w from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:54:48.472: INFO: kube-proxy-worker-nb9fn from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:54:48.472: INFO: storage-auto-expander-ddb7844c-hdp2g from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container storage-auto-expander ready: true, restart count 0
Aug  4 09:54:48.472: INFO: storage-monitor-658c96866d-fvmv7 from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container storage-monitor ready: true, restart count 0
Aug  4 09:54:48.472: INFO: sonobuoy from sonobuoy started at 2022-08-04 08:45:38 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  4 09:54:48.472: INFO: sonobuoy-e2e-job-3d413db4faba4b79 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container e2e ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.472: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-pfxld from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.472: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:54:48.472: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.124 before test
Aug  4 09:54:48.478: INFO: csi-plugin-llrh8 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 09:54:48.478: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:54:48.478: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.478: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.478: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.478: INFO: kube-flannel-ds-wgv48 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.478: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:54:48.478: INFO: kube-proxy-worker-49jgc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.478: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:54:48.478: INFO: bin-false14531d9a-a26d-4037-a61b-0d8625ff0332 from kubelet-test-6612 started at 2022-08-04 09:54:41 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.478: INFO: 	Container bin-false14531d9a-a26d-4037-a61b-0d8625ff0332 ready: false, restart count 0
Aug  4 09:54:48.478: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-524bb from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.478: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.478: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 09:54:48.478: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.125 before test
Aug  4 09:54:48.484: INFO: csi-plugin-qbskg from kube-system started at 2022-08-04 08:09:00 +0000 UTC (4 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 09:54:48.484: INFO: csi-provisioner-67f645cbd4-hm54w from kube-system started at 2022-08-04 08:09:18 +0000 UTC (8 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 09:54:48.484: INFO: kube-flannel-ds-psjwx from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 09:54:48.484: INFO: kube-proxy-worker-9jvd9 from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 09:54:48.484: INFO: storage-cnfs-6ddd5d8756-g5fhv from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container storage-cnfs ready: true, restart count 0
Aug  4 09:54:48.484: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-l7h89 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 09:54:48.484: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 09:54:48.484: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-acfc9fdb-a423-47fa-adda-ddd0a6212270 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-acfc9fdb-a423-47fa-adda-ddd0a6212270 off the node cn-hongkong.192.168.0.124
STEP: verifying the node doesn't have the label kubernetes.io/e2e-acfc9fdb-a423-47fa-adda-ddd0a6212270
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:54:52.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-9787" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":213,"skipped":3889,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:54:52.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8031
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8031
STEP: creating service affinity-clusterip-transition in namespace services-8031
STEP: creating replication controller affinity-clusterip-transition in namespace services-8031
I0804 09:54:52.718791      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8031, replica count: 3
I0804 09:54:55.769889      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:54:55.779: INFO: Creating new exec pod
Aug  4 09:54:58.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8031 exec execpod-affinityrdh8t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug  4 09:54:58.907: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug  4 09:54:58.907: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:54:58.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8031 exec execpod-affinityrdh8t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.106.20 80'
Aug  4 09:54:58.999: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.106.20 80\nConnection to 172.16.106.20 80 port [tcp/http] succeeded!\n"
Aug  4 09:54:58.999: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:54:59.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8031 exec execpod-affinityrdh8t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.16.106.20:80/ ; done'
Aug  4 09:54:59.147: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n"
Aug  4 09:54:59.147: INFO: stdout: "\naffinity-clusterip-transition-7kbp5\naffinity-clusterip-transition-p2s6w\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-7kbp5\naffinity-clusterip-transition-p2s6w\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-7kbp5\naffinity-clusterip-transition-p2s6w\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-7kbp5\naffinity-clusterip-transition-p2s6w\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-7kbp5\naffinity-clusterip-transition-p2s6w\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-7kbp5"
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-p2s6w
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-p2s6w
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-p2s6w
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-p2s6w
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-p2s6w
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.147: INFO: Received response from host: affinity-clusterip-transition-7kbp5
Aug  4 09:54:59.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8031 exec execpod-affinityrdh8t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.16.106.20:80/ ; done'
Aug  4 09:54:59.284: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.16.106.20:80/\n"
Aug  4 09:54:59.284: INFO: stdout: "\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9\naffinity-clusterip-transition-8tjl9"
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Received response from host: affinity-clusterip-transition-8tjl9
Aug  4 09:54:59.284: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8031, will wait for the garbage collector to delete the pods
Aug  4 09:54:59.354: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.8154ms
Aug  4 09:54:59.455: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.358458ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:55:01.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8031" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.817 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":214,"skipped":3903,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:01.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2138
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:55:01.523: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug  4 09:55:06.530: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  4 09:55:06.530: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 09:55:06.551: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-2138  2d10f3d8-f92e-46d6-89fc-46b769478e35 4890557 1 2022-08-04 09:55:06 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-08-04 09:55:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00384ee58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Aug  4 09:55:06.554: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
Aug  4 09:55:06.554: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Aug  4 09:55:06.554: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-2138  feb66638-f8fd-4ba1-8e64-ec6e5aada5a9 4890558 1 2022-08-04 09:55:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 2d10f3d8-f92e-46d6-89fc-46b769478e35 0xc00384f18f 0xc00384f1a0}] []  [{e2e.test Update apps/v1 2022-08-04 09:55:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 09:55:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2022-08-04 09:55:06 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"2d10f3d8-f92e-46d6-89fc-46b769478e35\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00384f258 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  4 09:55:06.558: INFO: Pod "test-cleanup-controller-c2hxg" is available:
&Pod{ObjectMeta:{test-cleanup-controller-c2hxg test-cleanup-controller- deployment-2138  1658d615-bbbd-4446-b830-d0ae72c41375 4890470 0 2022-08-04 09:55:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-cleanup-controller feb66638-f8fd-4ba1-8e64-ec6e5aada5a9 0xc00384f577 0xc00384f578}] []  [{kube-controller-manager Update v1 2022-08-04 09:55:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"feb66638-f8fd-4ba1-8e64-ec6e5aada5a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 09:55:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-k7vfq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-k7vfq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:55:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:55:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:55:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 09:55:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.59,StartTime:2022-08-04 09:55:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 09:55:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://16151d7f5c985b56b56f05114999b587e8a1a62558c5137c4e9dc339fe51c498,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.59,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 09:55:06.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2138" for this suite.

• [SLOW TEST:5.182 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":215,"skipped":3910,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:06.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8029
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-1e22e160-c353-4f8f-bf83-83ebf5c3a6d3
STEP: Creating a pod to test consume secrets
Aug  4 09:55:06.713: INFO: Waiting up to 5m0s for pod "pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f" in namespace "secrets-8029" to be "Succeeded or Failed"
Aug  4 09:55:06.716: INFO: Pod "pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.58899ms
Aug  4 09:55:08.726: INFO: Pod "pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013029803s
Aug  4 09:55:10.732: INFO: Pod "pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019210276s
STEP: Saw pod success
Aug  4 09:55:10.732: INFO: Pod "pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f" satisfied condition "Succeeded or Failed"
Aug  4 09:55:10.737: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 09:55:10.755: INFO: Waiting for pod pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f to disappear
Aug  4 09:55:10.758: INFO: Pod pod-secrets-a2a2b87e-2054-4534-b16a-53e1b173b13f no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 09:55:10.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8029" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":216,"skipped":3925,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:10.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3387
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:55:11.684: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:55:14.712: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:55:14.752: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3387" for this suite.
STEP: Destroying namespace "webhook-3387-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":217,"skipped":3960,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:14.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:55:14.946: INFO: The status of Pod busybox-readonly-fsf3d82efa-4b95-45f5-ba35-9d51b91bf332 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:55:16.954: INFO: The status of Pod busybox-readonly-fsf3d82efa-4b95-45f5-ba35-9d51b91bf332 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  4 09:55:16.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1447" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":218,"skipped":4012,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:16.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8854
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  4 09:55:17.148: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:55:17.148: INFO: Node cn-hongkong.192.168.0.121 is running 0 daemon pod, expected 1
Aug  4 09:55:18.159: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug  4 09:55:18.159: INFO: Node cn-hongkong.192.168.0.122 is running 0 daemon pod, expected 1
Aug  4 09:55:19.159: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
Aug  4 09:55:19.159: INFO: Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
STEP: Getting /status
Aug  4 09:55:19.167: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug  4 09:55:19.177: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: ADDED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.179: INFO: Found daemon set daemon-set in namespace daemonsets-8854 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  4 09:55:19.179: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: ADDED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Observed daemon set daemon-set in namespace daemonsets-8854 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  4 09:55:19.186: INFO: Observed &DaemonSet event: MODIFIED
Aug  4 09:55:19.186: INFO: Found daemon set daemon-set in namespace daemonsets-8854 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug  4 09:55:19.186: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8854, will wait for the garbage collector to delete the pods
Aug  4 09:55:19.253: INFO: Deleting DaemonSet.extensions daemon-set took: 6.959357ms
Aug  4 09:55:19.353: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.645161ms
Aug  4 09:55:21.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  4 09:55:21.361: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  4 09:55:21.364: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4891012"},"items":null}

Aug  4 09:55:21.367: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4891012"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:55:21.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8854" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":219,"skipped":4022,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:21.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9746
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:55:21.678: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 09:55:23.694: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:55:25.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:55:27.701: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:55:29.699: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 55, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:55:32.715: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:55:32.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9746" for this suite.
STEP: Destroying namespace "webhook-9746-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:11.432 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":220,"skipped":4026,"failed":0}
SSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:32.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4400
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 09:55:32.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4400" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":221,"skipped":4029,"failed":0}
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:32.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3193
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  4 09:55:33.144: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:55:35.153: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  4 09:55:35.167: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:55:37.175: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug  4 09:55:37.187: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug  4 09:55:37.190: INFO: Pod pod-with-prestop-exec-hook still exists
Aug  4 09:55:39.191: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug  4 09:55:39.198: INFO: Pod pod-with-prestop-exec-hook still exists
Aug  4 09:55:41.191: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug  4 09:55:41.196: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  4 09:55:41.219: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3193" for this suite.

• [SLOW TEST:8.231 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":222,"skipped":4031,"failed":0}
SSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:55:41.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Aug  4 09:55:41.355: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 09:56:41.384: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:56:41.387: INFO: Starting informer...
STEP: Starting pod...
Aug  4 09:56:41.602: INFO: Pod is running on cn-hongkong.192.168.0.124. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug  4 09:56:41.615: INFO: Pod wasn't evicted. Proceeding
Aug  4 09:56:41.615: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug  4 09:57:56.629: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Aug  4 09:57:56.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-339" for this suite.

• [SLOW TEST:135.413 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":223,"skipped":4034,"failed":0}
S
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:57:56.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6260
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-kdjz
STEP: Creating a pod to test atomic-volume-subpath
Aug  4 09:57:56.788: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-kdjz" in namespace "subpath-6260" to be "Succeeded or Failed"
Aug  4 09:57:56.791: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Pending", Reason="", readiness=false. Elapsed: 3.780498ms
Aug  4 09:57:58.801: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 2.012971506s
Aug  4 09:58:00.807: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 4.019182085s
Aug  4 09:58:02.815: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 6.027258894s
Aug  4 09:58:04.823: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 8.035570137s
Aug  4 09:58:06.830: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 10.042531176s
Aug  4 09:58:08.839: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 12.051134463s
Aug  4 09:58:10.847: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 14.059187734s
Aug  4 09:58:12.855: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 16.066939009s
Aug  4 09:58:14.860: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 18.072746165s
Aug  4 09:58:16.868: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=true. Elapsed: 20.080071218s
Aug  4 09:58:18.877: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Running", Reason="", readiness=false. Elapsed: 22.089060928s
Aug  4 09:58:20.883: INFO: Pod "pod-subpath-test-configmap-kdjz": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.095021368s
STEP: Saw pod success
Aug  4 09:58:20.883: INFO: Pod "pod-subpath-test-configmap-kdjz" satisfied condition "Succeeded or Failed"
Aug  4 09:58:20.887: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-subpath-test-configmap-kdjz container test-container-subpath-configmap-kdjz: <nil>
STEP: delete the pod
Aug  4 09:58:20.915: INFO: Waiting for pod pod-subpath-test-configmap-kdjz to disappear
Aug  4 09:58:20.918: INFO: Pod pod-subpath-test-configmap-kdjz no longer exists
STEP: Deleting pod pod-subpath-test-configmap-kdjz
Aug  4 09:58:20.918: INFO: Deleting pod "pod-subpath-test-configmap-kdjz" in namespace "subpath-6260"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  4 09:58:20.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6260" for this suite.

• [SLOW TEST:24.289 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":224,"skipped":4035,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:20.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-176
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-81173a9c-612c-45e2-9952-a40a17f49ade
STEP: Creating the pod
Aug  4 09:58:21.079: INFO: The status of Pod pod-projected-configmaps-0146cfe3-3660-437e-93f8-6b9e2d663763 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:58:23.088: INFO: The status of Pod pod-projected-configmaps-0146cfe3-3660-437e-93f8-6b9e2d663763 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-81173a9c-612c-45e2-9952-a40a17f49ade
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 09:58:27.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-176" for this suite.

• [SLOW TEST:6.208 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4049,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:27.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  4 09:58:27.289: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  4 09:58:27.295: INFO: starting watch
STEP: patching
STEP: updating
Aug  4 09:58:27.309: INFO: waiting for watch events with expected annotations
Aug  4 09:58:27.309: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  4 09:58:27.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4321" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":226,"skipped":4060,"failed":0}

------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:27.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5455
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug  4 09:58:27.486: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5455  ed749aa2-0a93-4e56-a215-ed33c1b6f56d 4894028 0 2022-08-04 09:58:27 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:ack.privileged] [] []  [{e2e.test Update v1 2022-08-04 09:58:27 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8t9pm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8t9pm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 09:58:27.490: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:58:29.498: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug  4 09:58:29.498: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5455 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 09:58:29.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 09:58:29.499: INFO: ExecWithOptions: Clientset creation
Aug  4 09:58:29.499: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/dns-5455/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Aug  4 09:58:29.568: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5455 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 09:58:29.568: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 09:58:29.569: INFO: ExecWithOptions: Clientset creation
Aug  4 09:58:29.569: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/dns-5455/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 09:58:29.626: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 09:58:29.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5455" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":227,"skipped":4060,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:29.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2744
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  4 09:58:29.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2744 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug  4 09:58:29.816: INFO: stderr: ""
Aug  4 09:58:29.816: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Aug  4 09:58:29.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-2744 delete pods e2e-test-httpd-pod'
Aug  4 09:58:31.558: INFO: stderr: ""
Aug  4 09:58:31.558: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:58:31.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2744" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":228,"skipped":4070,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:31.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8000
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8000
STEP: creating service affinity-nodeport-transition in namespace services-8000
STEP: creating replication controller affinity-nodeport-transition in namespace services-8000
I0804 09:58:31.716639      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-8000, replica count: 3
I0804 09:58:34.768151      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 09:58:34.786: INFO: Creating new exec pod
Aug  4 09:58:37.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug  4 09:58:37.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug  4 09:58:37.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:58:37.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.93.7 80'
Aug  4 09:58:38.000: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.93.7 80\nConnection to 172.16.93.7 80 port [tcp/http] succeeded!\n"
Aug  4 09:58:38.000: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:58:38.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.125 30102'
Aug  4 09:58:38.085: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.125 30102\nConnection to 192.168.0.125 30102 port [tcp/*] succeeded!\n"
Aug  4 09:58:38.085: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:58:38.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.123 30102'
Aug  4 09:58:38.169: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.123 30102\nConnection to 192.168.0.123 30102 port [tcp/*] succeeded!\n"
Aug  4 09:58:38.169: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  4 09:58:38.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.121:30102/ ; done'
Aug  4 09:58:38.329: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n"
Aug  4 09:58:38.329: INFO: stdout: "\naffinity-nodeport-transition-kxk99\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-jkvr5\naffinity-nodeport-transition-kxk99\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-jkvr5\naffinity-nodeport-transition-kxk99\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-jkvr5\naffinity-nodeport-transition-kxk99\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-jkvr5\naffinity-nodeport-transition-kxk99\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-jkvr5\naffinity-nodeport-transition-kxk99"
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-jkvr5
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-jkvr5
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-jkvr5
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-jkvr5
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-jkvr5
Aug  4 09:58:38.329: INFO: Received response from host: affinity-nodeport-transition-kxk99
Aug  4 09:58:38.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-8000 exec execpod-affinityxshjc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.121:30102/ ; done'
Aug  4 09:58:38.482: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.121:30102/\n"
Aug  4 09:58:38.482: INFO: stdout: "\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz\naffinity-nodeport-transition-r6crz"
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Received response from host: affinity-nodeport-transition-r6crz
Aug  4 09:58:38.482: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8000, will wait for the garbage collector to delete the pods
Aug  4 09:58:38.553: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.382031ms
Aug  4 09:58:38.654: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.089192ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 09:58:40.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8000" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.119 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":229,"skipped":4085,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:58:40.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug  4 09:58:40.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 create -f -'
Aug  4 09:58:40.917: INFO: stderr: ""
Aug  4 09:58:40.917: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  4 09:58:40.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:58:40.958: INFO: stderr: ""
Aug  4 09:58:40.958: INFO: stdout: "update-demo-nautilus-vz8cp update-demo-nautilus-zzd4m "
Aug  4 09:58:40.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods update-demo-nautilus-vz8cp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:58:40.999: INFO: stderr: ""
Aug  4 09:58:40.999: INFO: stdout: ""
Aug  4 09:58:40.999: INFO: update-demo-nautilus-vz8cp is created but not running
Aug  4 09:58:46.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  4 09:58:46.047: INFO: stderr: ""
Aug  4 09:58:46.047: INFO: stdout: "update-demo-nautilus-vz8cp update-demo-nautilus-zzd4m "
Aug  4 09:58:46.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods update-demo-nautilus-vz8cp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:58:46.086: INFO: stderr: ""
Aug  4 09:58:46.086: INFO: stdout: "true"
Aug  4 09:58:46.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods update-demo-nautilus-vz8cp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:58:46.126: INFO: stderr: ""
Aug  4 09:58:46.126: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:58:46.126: INFO: validating pod update-demo-nautilus-vz8cp
Aug  4 09:58:46.130: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:58:46.130: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:58:46.130: INFO: update-demo-nautilus-vz8cp is verified up and running
Aug  4 09:58:46.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods update-demo-nautilus-zzd4m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  4 09:58:46.168: INFO: stderr: ""
Aug  4 09:58:46.168: INFO: stdout: "true"
Aug  4 09:58:46.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods update-demo-nautilus-zzd4m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  4 09:58:46.205: INFO: stderr: ""
Aug  4 09:58:46.205: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  4 09:58:46.205: INFO: validating pod update-demo-nautilus-zzd4m
Aug  4 09:59:01.357: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  4 09:59:01.357: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  4 09:59:01.357: INFO: update-demo-nautilus-zzd4m is verified up and running
STEP: using delete to clean up resources
Aug  4 09:59:01.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 delete --grace-period=0 --force -f -'
Aug  4 09:59:01.410: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  4 09:59:01.410: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug  4 09:59:01.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get rc,svc -l name=update-demo --no-headers'
Aug  4 09:59:01.458: INFO: stderr: "No resources found in kubectl-6674 namespace.\n"
Aug  4 09:59:01.458: INFO: stdout: ""
Aug  4 09:59:01.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-6674 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  4 09:59:01.501: INFO: stderr: ""
Aug  4 09:59:01.501: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:59:01.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6674" for this suite.

• [SLOW TEST:20.822 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":230,"skipped":4100,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:01.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-3026
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Aug  4 09:59:01.652: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  4 09:59:01.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-3026" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":231,"skipped":4148,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:01.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4639
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:59:01.802: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:59:03.807: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:05.812: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:07.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:09.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:11.809: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:13.812: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:15.811: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:17.811: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:19.808: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:21.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:23.812: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:25.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:27.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:29.809: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:31.810: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = false)
Aug  4 09:59:33.809: INFO: The status of Pod test-webserver-8ef338a9-71b5-48f6-b810-39092e4d1b99 is Running (Ready = true)
Aug  4 09:59:33.812: INFO: Container started at 2022-08-04 09:59:02 +0000 UTC, pod became ready at 2022-08-04 09:59:32 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 09:59:33.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4639" for this suite.

• [SLOW TEST:32.159 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4152,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:33.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  4 09:59:36.985: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  4 09:59:37.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5976" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":233,"skipped":4160,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:37.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug  4 09:59:37.150: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  4 09:59:42.156: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  4 09:59:42.177: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5789" for this suite.

• [SLOW TEST:5.177 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":234,"skipped":4194,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:42.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4308
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 09:59:42.655: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 09:59:44.671: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:59:46.676: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:59:48.678: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 09:59:50.678: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 9, 59, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 09:59:53.692: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 09:59:53.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4308" for this suite.
STEP: Destroying namespace "webhook-4308-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:11.718 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":235,"skipped":4199,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:53.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6003
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 09:59:54.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6003" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":236,"skipped":4206,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:54.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Aug  4 09:59:54.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-9562 cluster-info'
Aug  4 09:59:54.247: INFO: stderr: ""
Aug  4 09:59:54.247: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://172.16.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 09:59:54.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9562" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":237,"skipped":4220,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:54.261: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 09:59:54.390: INFO: Got root ca configmap in namespace "svcaccounts-6359"
Aug  4 09:59:54.396: INFO: Deleted root ca configmap in namespace "svcaccounts-6359"
STEP: waiting for a new root ca configmap created
Aug  4 09:59:54.900: INFO: Recreated root ca configmap in namespace "svcaccounts-6359"
Aug  4 09:59:54.904: INFO: Updated root ca configmap in namespace "svcaccounts-6359"
STEP: waiting for the root ca configmap reconciled
Aug  4 09:59:55.410: INFO: Reconciled root ca configmap in namespace "svcaccounts-6359"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 09:59:55.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6359" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":238,"skipped":4247,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 09:59:55.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  4 09:59:55.557: INFO: The status of Pod labelsupdateb5bb2332-5789-4f27-b2a9-3f44efea5e1e is Pending, waiting for it to be Running (with Ready = true)
Aug  4 09:59:57.565: INFO: The status of Pod labelsupdateb5bb2332-5789-4f27-b2a9-3f44efea5e1e is Running (Ready = true)
Aug  4 09:59:58.091: INFO: Successfully updated pod "labelsupdateb5bb2332-5789-4f27-b2a9-3f44efea5e1e"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 10:00:00.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-343" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4253,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:00.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-b16d2851-92ea-4e07-95b6-354397c78a96
STEP: Creating a pod to test consume configMaps
Aug  4 10:00:00.262: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6" in namespace "projected-3747" to be "Succeeded or Failed"
Aug  4 10:00:00.266: INFO: Pod "pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.488351ms
Aug  4 10:00:02.271: INFO: Pod "pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00839402s
Aug  4 10:00:04.281: INFO: Pod "pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0182999s
STEP: Saw pod success
Aug  4 10:00:04.281: INFO: Pod "pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6" satisfied condition "Succeeded or Failed"
Aug  4 10:00:04.285: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:00:04.302: INFO: Waiting for pod pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6 to disappear
Aug  4 10:00:04.306: INFO: Pod pod-projected-configmaps-56aee463-65d3-4270-9e09-4d84149e2df6 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 10:00:04.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3747" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":240,"skipped":4270,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:04.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2426
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  4 10:00:04.457: INFO: Waiting up to 5m0s for pod "downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1" in namespace "downward-api-2426" to be "Succeeded or Failed"
Aug  4 10:00:04.460: INFO: Pod "downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.041165ms
Aug  4 10:00:06.468: INFO: Pod "downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011566895s
Aug  4 10:00:08.475: INFO: Pod "downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01831569s
STEP: Saw pod success
Aug  4 10:00:08.475: INFO: Pod "downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1" satisfied condition "Succeeded or Failed"
Aug  4 10:00:08.479: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1 container dapi-container: <nil>
STEP: delete the pod
Aug  4 10:00:08.499: INFO: Waiting for pod downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1 to disappear
Aug  4 10:00:08.502: INFO: Pod downward-api-de04e6de-55ed-4c26-8d18-754dbe625da1 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  4 10:00:08.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2426" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":241,"skipped":4291,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:08.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-6053
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  4 10:00:08.639: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 10:00:12.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-6053" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":242,"skipped":4302,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:12.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3932
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:00:12.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:00:15.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3932" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":243,"skipped":4334,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:15.977: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6069
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 10:00:23.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6069" for this suite.

• [SLOW TEST:7.160 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":244,"skipped":4337,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:23.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 10:00:51.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-923" for this suite.

• [SLOW TEST:28.196 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":245,"skipped":4368,"failed":0}
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:51.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-1380
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  4 10:00:51.458: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  4 10:00:51.468: INFO: Waiting for terminating namespaces to be deleted...
Aug  4 10:00:51.471: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.121 before test
Aug  4 10:00:51.478: INFO: coredns-59b9d8db85-hn4p6 from kube-system started at 2022-08-04 08:09:22 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container coredns ready: true, restart count 0
Aug  4 10:00:51.478: INFO: csi-plugin-p5np9 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:00:51.478: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.478: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.478: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.478: INFO: kube-flannel-ds-jwn5s from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:00:51.478: INFO: kube-proxy-worker-655dh from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:00:51.478: INFO: storage-snapshot-manager-554445c9bd-fvptn from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container storage-snapshot-manager ready: true, restart count 0
Aug  4 10:00:51.478: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.478: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.478: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:00:51.478: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.122 before test
Aug  4 10:00:51.486: INFO: alicloud-monitor-controller-5845594db4-45z4s from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container alicloud-monitor-controller ready: true, restart count 0
Aug  4 10:00:51.486: INFO: coredns-59b9d8db85-47n9g from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container coredns ready: true, restart count 0
Aug  4 10:00:51.486: INFO: csi-plugin-pdfn5 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (4 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.486: INFO: csi-provisioner-67f645cbd4-rs7qd from kube-system started at 2022-08-04 08:09:14 +0000 UTC (8 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 10:00:51.486: INFO: kube-flannel-ds-7dcg7 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:00:51.486: INFO: kube-proxy-worker-hbmcg from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:00:51.486: INFO: metrics-server-74cc8bb57-59pqk from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container metrics-server ready: true, restart count 0
Aug  4 10:00:51.486: INFO: storage-operator-56dcf896df-hgdkr from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container storage-operator ready: true, restart count 0
Aug  4 10:00:51.486: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-j4br8 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.486: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:00:51.486: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.123 before test
Aug  4 10:00:51.496: INFO: csi-plugin-m56dc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.496: INFO: kube-flannel-ds-zr96w from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:00:51.496: INFO: kube-proxy-worker-nb9fn from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:00:51.496: INFO: storage-auto-expander-ddb7844c-hdp2g from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container storage-auto-expander ready: true, restart count 0
Aug  4 10:00:51.496: INFO: storage-monitor-658c96866d-fvmv7 from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container storage-monitor ready: true, restart count 0
Aug  4 10:00:51.496: INFO: sonobuoy from sonobuoy started at 2022-08-04 08:45:38 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  4 10:00:51.496: INFO: sonobuoy-e2e-job-3d413db4faba4b79 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container e2e ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.496: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-pfxld from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.496: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:00:51.496: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.124 before test
Aug  4 10:00:51.503: INFO: csi-plugin-llrh8 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:00:51.503: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:00:51.503: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.503: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.503: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.503: INFO: kube-flannel-ds-wgv48 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.503: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:00:51.503: INFO: kube-proxy-worker-49jgc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.503: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:00:51.503: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-524bb from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.503: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.503: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:00:51.503: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.125 before test
Aug  4 10:00:51.509: INFO: csi-plugin-qbskg from kube-system started at 2022-08-04 08:09:00 +0000 UTC (4 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:00:51.509: INFO: csi-provisioner-67f645cbd4-hm54w from kube-system started at 2022-08-04 08:09:18 +0000 UTC (8 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 10:00:51.509: INFO: kube-flannel-ds-psjwx from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:00:51.509: INFO: kube-proxy-worker-9jvd9 from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:00:51.509: INFO: storage-cnfs-6ddd5d8756-g5fhv from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container storage-cnfs ready: true, restart count 0
Aug  4 10:00:51.509: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-l7h89 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:00:51.509: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:00:51.509: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.17081c0096749af7], Reason = [FailedScheduling], Message = [0/5 nodes are available: 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  4 10:00:52.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-1380" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":246,"skipped":4378,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:00:52.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-7859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7859.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 10:01:06.717: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.722: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.725: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.729: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.733: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.736: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.739: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.743: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:06.743: INFO: Lookups using dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local]

Aug  4 10:01:11.751: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.754: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.759: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.763: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.766: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.770: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.774: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.778: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:11.778: INFO: Lookups using dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local]

Aug  4 10:01:16.750: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.754: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.758: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.762: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.766: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.770: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.773: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.778: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:16.778: INFO: Lookups using dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local]

Aug  4 10:01:21.750: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.754: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.758: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.761: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.765: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.769: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.772: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.776: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local from pod dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f: the server could not find the requested resource (get pods dns-test-14ebace4-b381-4579-b71f-c900a909386f)
Aug  4 10:01:21.776: INFO: Lookups using dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7859.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7859.svc.cluster.local jessie_udp@dns-test-service-2.dns-7859.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7859.svc.cluster.local]

Aug  4 10:01:26.780: INFO: DNS probes using dns-7859/dns-test-14ebace4-b381-4579-b71f-c900a909386f succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 10:01:26.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7859" for this suite.

• [SLOW TEST:34.266 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":247,"skipped":4391,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:01:26.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:01:27.404: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:01:30.430: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:01:30.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5320" for this suite.
STEP: Destroying namespace "webhook-5320-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":248,"skipped":4420,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:01:30.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9916
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:01:30.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  4 10:01:32.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-9916 --namespace=crd-publish-openapi-9916 create -f -'
Aug  4 10:01:33.120: INFO: stderr: ""
Aug  4 10:01:33.121: INFO: stdout: "e2e-test-crd-publish-openapi-5218-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug  4 10:01:33.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-9916 --namespace=crd-publish-openapi-9916 delete e2e-test-crd-publish-openapi-5218-crds test-cr'
Aug  4 10:01:33.193: INFO: stderr: ""
Aug  4 10:01:33.193: INFO: stdout: "e2e-test-crd-publish-openapi-5218-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug  4 10:01:33.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-9916 --namespace=crd-publish-openapi-9916 apply -f -'
Aug  4 10:01:33.584: INFO: stderr: ""
Aug  4 10:01:33.584: INFO: stdout: "e2e-test-crd-publish-openapi-5218-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug  4 10:01:33.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-9916 --namespace=crd-publish-openapi-9916 delete e2e-test-crd-publish-openapi-5218-crds test-cr'
Aug  4 10:01:33.630: INFO: stderr: ""
Aug  4 10:01:33.630: INFO: stdout: "e2e-test-crd-publish-openapi-5218-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug  4 10:01:33.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-9916 explain e2e-test-crd-publish-openapi-5218-crds'
Aug  4 10:01:33.728: INFO: stderr: ""
Aug  4 10:01:33.728: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5218-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:01:35.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9916" for this suite.

• [SLOW TEST:5.230 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":249,"skipped":4425,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:01:35.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-3185
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3185.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3185.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3185.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3185.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 10:01:37.928: INFO: DNS probes using dns-3185/dns-test-e34e213c-01de-4293-a17f-8edfb3176459 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 10:01:37.952: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3185" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":250,"skipped":4436,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:01:37.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8138
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-b92f1596-921c-4c6f-9a38-9e323ac03dfc in namespace container-probe-8138
Aug  4 10:01:40.106: INFO: Started pod busybox-b92f1596-921c-4c6f-9a38-9e323ac03dfc in namespace container-probe-8138
STEP: checking the pod's current state and verifying that restartCount is present
Aug  4 10:01:40.110: INFO: Initial restart count of pod busybox-b92f1596-921c-4c6f-9a38-9e323ac03dfc is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  4 10:05:40.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8138" for this suite.

• [SLOW TEST:243.042 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4475,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:05:41.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7182
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-7182
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-7182
I0804 10:05:41.160329      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7182, replica count: 2
I0804 10:05:44.210944      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  4 10:05:44.210: INFO: Creating new exec pod
Aug  4 10:05:47.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7182 exec execpodt9gmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  4 10:05:47.356: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  4 10:05:47.356: INFO: stdout: "externalname-service-h27n9"
Aug  4 10:05:47.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7182 exec execpodt9gmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.16.6.132 80'
Aug  4 10:05:47.434: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.16.6.132 80\nConnection to 172.16.6.132 80 port [tcp/http] succeeded!\n"
Aug  4 10:05:47.434: INFO: stdout: "externalname-service-vbr9v"
Aug  4 10:05:47.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7182 exec execpodt9gmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.122 30480'
Aug  4 10:05:47.523: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.122 30480\nConnection to 192.168.0.122 30480 port [tcp/*] succeeded!\n"
Aug  4 10:05:47.523: INFO: stdout: "externalname-service-h27n9"
Aug  4 10:05:47.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=services-7182 exec execpodt9gmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.0.124 30480'
Aug  4 10:05:47.608: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.0.124 30480\nConnection to 192.168.0.124 30480 port [tcp/*] succeeded!\n"
Aug  4 10:05:47.608: INFO: stdout: "externalname-service-h27n9"
Aug  4 10:05:47.608: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 10:05:47.633: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7182" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.641 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":252,"skipped":4518,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:05:47.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8989
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  4 10:05:47.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8989" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4543,"failed":0}

------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:05:47.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4582
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-a7dccda6-4013-4a61-9b3b-e4f72c590558
STEP: Creating a pod to test consume secrets
Aug  4 10:05:47.941: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea" in namespace "projected-4582" to be "Succeeded or Failed"
Aug  4 10:05:47.945: INFO: Pod "pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea": Phase="Pending", Reason="", readiness=false. Elapsed: 3.975767ms
Aug  4 10:05:49.952: INFO: Pod "pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010146451s
Aug  4 10:05:51.957: INFO: Pod "pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01567733s
STEP: Saw pod success
Aug  4 10:05:51.957: INFO: Pod "pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea" satisfied condition "Succeeded or Failed"
Aug  4 10:05:51.961: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  4 10:05:51.987: INFO: Waiting for pod pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea to disappear
Aug  4 10:05:51.992: INFO: Pod pod-projected-secrets-746c23f0-d47b-4485-beb5-4616744d63ea no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 10:05:51.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4582" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":254,"skipped":4543,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:05:52.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-3552
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-3552
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  4 10:05:52.131: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  4 10:05:52.170: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:05:54.179: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:05:56.179: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:05:58.175: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:06:00.177: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:06:02.178: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:06:04.178: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  4 10:06:04.185: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug  4 10:06:04.191: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug  4 10:06:04.199: INFO: The status of Pod netserver-3 is Running (Ready = true)
Aug  4 10:06:04.205: INFO: The status of Pod netserver-4 is Running (Ready = true)
STEP: Creating test pods
Aug  4 10:06:06.242: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
Aug  4 10:06:06.242: INFO: Going to poll 10.115.0.254 on port 8081 at least 0 times, with a maximum of 55 tries before failing
Aug  4 10:06:06.245: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.115.0.254 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3552 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:06:06.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:06:06.245: INFO: ExecWithOptions: Clientset creation
Aug  4 10:06:06.245: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3552/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.115.0.254+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 10:06:07.310: INFO: Found all 1 expected endpoints: [netserver-0]
Aug  4 10:06:07.310: INFO: Going to poll 10.115.0.9 on port 8081 at least 0 times, with a maximum of 55 tries before failing
Aug  4 10:06:07.314: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.115.0.9 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3552 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:06:07.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:06:07.314: INFO: ExecWithOptions: Clientset creation
Aug  4 10:06:07.314: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3552/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.115.0.9+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 10:06:08.381: INFO: Found all 1 expected endpoints: [netserver-1]
Aug  4 10:06:08.381: INFO: Going to poll 10.115.0.181 on port 8081 at least 0 times, with a maximum of 55 tries before failing
Aug  4 10:06:08.388: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.115.0.181 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3552 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:06:08.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:06:08.389: INFO: ExecWithOptions: Clientset creation
Aug  4 10:06:08.389: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3552/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.115.0.181+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 10:06:09.448: INFO: Found all 1 expected endpoints: [netserver-2]
Aug  4 10:06:09.448: INFO: Going to poll 10.115.1.29 on port 8081 at least 0 times, with a maximum of 55 tries before failing
Aug  4 10:06:09.454: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.115.1.29 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3552 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:06:09.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:06:09.454: INFO: ExecWithOptions: Clientset creation
Aug  4 10:06:09.454: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3552/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.115.1.29+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 10:06:10.520: INFO: Found all 1 expected endpoints: [netserver-3]
Aug  4 10:06:10.520: INFO: Going to poll 10.115.0.107 on port 8081 at least 0 times, with a maximum of 55 tries before failing
Aug  4 10:06:10.527: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.115.0.107 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3552 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:06:10.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:06:10.527: INFO: ExecWithOptions: Clientset creation
Aug  4 10:06:10.527: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3552/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.115.0.107+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  4 10:06:11.586: INFO: Found all 1 expected endpoints: [netserver-4]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  4 10:06:11.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-3552" for this suite.

• [SLOW TEST:19.594 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":255,"skipped":4574,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:06:11.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:06:11.863: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:06:14.888: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:06:14.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:06:18.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-674" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.509 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":256,"skipped":4581,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:06:18.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-7615
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug  4 10:06:18.240: INFO: Waiting up to 5m0s for pod "security-context-99c23f01-1d52-428d-8106-2059bfcb00c3" in namespace "security-context-7615" to be "Succeeded or Failed"
Aug  4 10:06:18.243: INFO: Pod "security-context-99c23f01-1d52-428d-8106-2059bfcb00c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.818423ms
Aug  4 10:06:20.251: INFO: Pod "security-context-99c23f01-1d52-428d-8106-2059bfcb00c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011625553s
Aug  4 10:06:22.260: INFO: Pod "security-context-99c23f01-1d52-428d-8106-2059bfcb00c3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019708596s
STEP: Saw pod success
Aug  4 10:06:22.260: INFO: Pod "security-context-99c23f01-1d52-428d-8106-2059bfcb00c3" satisfied condition "Succeeded or Failed"
Aug  4 10:06:22.263: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod security-context-99c23f01-1d52-428d-8106-2059bfcb00c3 container test-container: <nil>
STEP: delete the pod
Aug  4 10:06:22.281: INFO: Waiting for pod security-context-99c23f01-1d52-428d-8106-2059bfcb00c3 to disappear
Aug  4 10:06:22.285: INFO: Pod security-context-99c23f01-1d52-428d-8106-2059bfcb00c3 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 10:06:22.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-7615" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":257,"skipped":4590,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:06:22.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-vd96
STEP: Creating a pod to test atomic-volume-subpath
Aug  4 10:06:22.440: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-vd96" in namespace "subpath-5891" to be "Succeeded or Failed"
Aug  4 10:06:22.444: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Pending", Reason="", readiness=false. Elapsed: 3.703007ms
Aug  4 10:06:24.453: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 2.012686676s
Aug  4 10:06:26.461: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 4.021086885s
Aug  4 10:06:28.469: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 6.029314277s
Aug  4 10:06:30.476: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 8.036225859s
Aug  4 10:06:32.484: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 10.043988846s
Aug  4 10:06:34.492: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 12.051485983s
Aug  4 10:06:36.500: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 14.060131209s
Aug  4 10:06:38.509: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 16.068797808s
Aug  4 10:06:40.533: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 18.093358961s
Aug  4 10:06:42.541: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=true. Elapsed: 20.101378344s
Aug  4 10:06:44.549: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Running", Reason="", readiness=false. Elapsed: 22.109280069s
Aug  4 10:06:46.554: INFO: Pod "pod-subpath-test-projected-vd96": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.114115075s
STEP: Saw pod success
Aug  4 10:06:46.554: INFO: Pod "pod-subpath-test-projected-vd96" satisfied condition "Succeeded or Failed"
Aug  4 10:06:46.557: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-subpath-test-projected-vd96 container test-container-subpath-projected-vd96: <nil>
STEP: delete the pod
Aug  4 10:06:46.577: INFO: Waiting for pod pod-subpath-test-projected-vd96 to disappear
Aug  4 10:06:46.580: INFO: Pod pod-subpath-test-projected-vd96 no longer exists
STEP: Deleting pod pod-subpath-test-projected-vd96
Aug  4 10:06:46.580: INFO: Deleting pod "pod-subpath-test-projected-vd96" in namespace "subpath-5891"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  4 10:06:46.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5891" for this suite.

• [SLOW TEST:24.299 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":258,"skipped":4605,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:06:46.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2943
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:06:46.721: INFO: Creating deployment "test-recreate-deployment"
Aug  4 10:06:46.725: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug  4 10:06:46.732: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Aug  4 10:06:48.742: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug  4 10:06:48.745: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug  4 10:06:48.755: INFO: Updating deployment test-recreate-deployment
Aug  4 10:06:48.755: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 10:06:48.814: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-2943  02315fe4-87ca-491e-9a67-491daf0b4bd3 4902486 2 2022-08-04 10:06:46 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0029998f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-04 10:06:48 +0000 UTC,LastTransitionTime:2022-08-04 10:06:48 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-08-04 10:06:48 +0000 UTC,LastTransitionTime:2022-08-04 10:06:46 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug  4 10:06:48.819: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-2943  bf6d711b-c592-441e-a521-906c61590b76 4902483 1 2022-08-04 10:06:48 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 02315fe4-87ca-491e-9a67-491daf0b4bd3 0xc0035823c0 0xc0035823c1}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"02315fe4-87ca-491e-9a67-491daf0b4bd3\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003582458 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 10:06:48.819: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug  4 10:06:48.819: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-2943  a9e5bfc0-7e26-4c85-b266-cdfec173b2eb 4902477 2 2022-08-04 10:06:46 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 02315fe4-87ca-491e-9a67-491daf0b4bd3 0xc0035822a7 0xc0035822a8}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:06:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"02315fe4-87ca-491e-9a67-491daf0b4bd3\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003582358 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  4 10:06:48.824: INFO: Pod "test-recreate-deployment-cd8586fc7-s4k4m" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-s4k4m test-recreate-deployment-cd8586fc7- deployment-2943  01e25c70-8b98-4695-a1c4-b022c3ac6107 4902485 0 2022-08-04 10:06:48 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 bf6d711b-c592-441e-a521-906c61590b76 0xc0035828d0 0xc0035828d1}] []  [{kube-controller-manager Update v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bf6d711b-c592-441e-a521-906c61590b76\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:06:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xfsz9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xfsz9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:06:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:06:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:06:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:06:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:,StartTime:2022-08-04 10:06:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 10:06:48.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2943" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":259,"skipped":4618,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:06:48.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1756
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug  4 10:07:09.071: INFO: EndpointSlice for Service endpointslice-1756/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  4 10:07:19.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1756" for this suite.

• [SLOW TEST:30.266 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":260,"skipped":4627,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:07:19.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6635
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Aug  4 10:07:59.288: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0804 10:07:59.288061      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  4 10:07:59.288: INFO: Deleting pod "simpletest.rc-24hrp" in namespace "gc-6635"
Aug  4 10:07:59.298: INFO: Deleting pod "simpletest.rc-2lnfb" in namespace "gc-6635"
Aug  4 10:07:59.309: INFO: Deleting pod "simpletest.rc-2p7js" in namespace "gc-6635"
Aug  4 10:07:59.318: INFO: Deleting pod "simpletest.rc-2rwbl" in namespace "gc-6635"
Aug  4 10:07:59.328: INFO: Deleting pod "simpletest.rc-2rzxh" in namespace "gc-6635"
Aug  4 10:07:59.338: INFO: Deleting pod "simpletest.rc-2v64b" in namespace "gc-6635"
Aug  4 10:07:59.347: INFO: Deleting pod "simpletest.rc-2vsxl" in namespace "gc-6635"
Aug  4 10:07:59.359: INFO: Deleting pod "simpletest.rc-2xlgv" in namespace "gc-6635"
Aug  4 10:07:59.368: INFO: Deleting pod "simpletest.rc-459sm" in namespace "gc-6635"
Aug  4 10:07:59.377: INFO: Deleting pod "simpletest.rc-4b4vq" in namespace "gc-6635"
Aug  4 10:07:59.387: INFO: Deleting pod "simpletest.rc-5bkr8" in namespace "gc-6635"
Aug  4 10:07:59.395: INFO: Deleting pod "simpletest.rc-5gvwg" in namespace "gc-6635"
Aug  4 10:07:59.407: INFO: Deleting pod "simpletest.rc-5lv8f" in namespace "gc-6635"
Aug  4 10:07:59.416: INFO: Deleting pod "simpletest.rc-5nssz" in namespace "gc-6635"
Aug  4 10:07:59.425: INFO: Deleting pod "simpletest.rc-6gg5n" in namespace "gc-6635"
Aug  4 10:07:59.435: INFO: Deleting pod "simpletest.rc-6zhjp" in namespace "gc-6635"
Aug  4 10:07:59.445: INFO: Deleting pod "simpletest.rc-75mvc" in namespace "gc-6635"
Aug  4 10:07:59.455: INFO: Deleting pod "simpletest.rc-7wlrj" in namespace "gc-6635"
Aug  4 10:07:59.464: INFO: Deleting pod "simpletest.rc-8nr77" in namespace "gc-6635"
Aug  4 10:07:59.475: INFO: Deleting pod "simpletest.rc-8tqf6" in namespace "gc-6635"
Aug  4 10:07:59.485: INFO: Deleting pod "simpletest.rc-8xwnp" in namespace "gc-6635"
Aug  4 10:07:59.501: INFO: Deleting pod "simpletest.rc-9dw5w" in namespace "gc-6635"
Aug  4 10:07:59.513: INFO: Deleting pod "simpletest.rc-9q85x" in namespace "gc-6635"
Aug  4 10:07:59.523: INFO: Deleting pod "simpletest.rc-9rxcd" in namespace "gc-6635"
Aug  4 10:07:59.533: INFO: Deleting pod "simpletest.rc-9s6vc" in namespace "gc-6635"
Aug  4 10:07:59.543: INFO: Deleting pod "simpletest.rc-b2l8g" in namespace "gc-6635"
Aug  4 10:07:59.554: INFO: Deleting pod "simpletest.rc-bghwf" in namespace "gc-6635"
Aug  4 10:07:59.562: INFO: Deleting pod "simpletest.rc-c259t" in namespace "gc-6635"
Aug  4 10:07:59.574: INFO: Deleting pod "simpletest.rc-c5phj" in namespace "gc-6635"
Aug  4 10:07:59.584: INFO: Deleting pod "simpletest.rc-c86sc" in namespace "gc-6635"
Aug  4 10:07:59.595: INFO: Deleting pod "simpletest.rc-cfnx7" in namespace "gc-6635"
Aug  4 10:07:59.607: INFO: Deleting pod "simpletest.rc-clfrn" in namespace "gc-6635"
Aug  4 10:07:59.618: INFO: Deleting pod "simpletest.rc-cnmhd" in namespace "gc-6635"
Aug  4 10:07:59.629: INFO: Deleting pod "simpletest.rc-cnw4x" in namespace "gc-6635"
Aug  4 10:07:59.638: INFO: Deleting pod "simpletest.rc-crpdr" in namespace "gc-6635"
Aug  4 10:07:59.651: INFO: Deleting pod "simpletest.rc-d9gx9" in namespace "gc-6635"
Aug  4 10:07:59.660: INFO: Deleting pod "simpletest.rc-dcpt2" in namespace "gc-6635"
Aug  4 10:07:59.671: INFO: Deleting pod "simpletest.rc-dftzg" in namespace "gc-6635"
Aug  4 10:07:59.683: INFO: Deleting pod "simpletest.rc-djw72" in namespace "gc-6635"
Aug  4 10:07:59.693: INFO: Deleting pod "simpletest.rc-dmz2j" in namespace "gc-6635"
Aug  4 10:07:59.705: INFO: Deleting pod "simpletest.rc-dqt62" in namespace "gc-6635"
Aug  4 10:07:59.716: INFO: Deleting pod "simpletest.rc-dr7pd" in namespace "gc-6635"
Aug  4 10:07:59.725: INFO: Deleting pod "simpletest.rc-dsqnq" in namespace "gc-6635"
Aug  4 10:07:59.736: INFO: Deleting pod "simpletest.rc-dvfp8" in namespace "gc-6635"
Aug  4 10:07:59.745: INFO: Deleting pod "simpletest.rc-f5kz5" in namespace "gc-6635"
Aug  4 10:07:59.754: INFO: Deleting pod "simpletest.rc-fhhwj" in namespace "gc-6635"
Aug  4 10:07:59.764: INFO: Deleting pod "simpletest.rc-fsmn2" in namespace "gc-6635"
Aug  4 10:07:59.773: INFO: Deleting pod "simpletest.rc-ft552" in namespace "gc-6635"
Aug  4 10:07:59.783: INFO: Deleting pod "simpletest.rc-h4wkf" in namespace "gc-6635"
Aug  4 10:07:59.792: INFO: Deleting pod "simpletest.rc-j4jzl" in namespace "gc-6635"
Aug  4 10:07:59.804: INFO: Deleting pod "simpletest.rc-j8b95" in namespace "gc-6635"
Aug  4 10:07:59.813: INFO: Deleting pod "simpletest.rc-jptrg" in namespace "gc-6635"
Aug  4 10:07:59.825: INFO: Deleting pod "simpletest.rc-jpw7w" in namespace "gc-6635"
Aug  4 10:07:59.835: INFO: Deleting pod "simpletest.rc-kfpm6" in namespace "gc-6635"
Aug  4 10:07:59.859: INFO: Deleting pod "simpletest.rc-kltjj" in namespace "gc-6635"
Aug  4 10:07:59.877: INFO: Deleting pod "simpletest.rc-kqq2c" in namespace "gc-6635"
Aug  4 10:07:59.886: INFO: Deleting pod "simpletest.rc-kwdt6" in namespace "gc-6635"
Aug  4 10:07:59.896: INFO: Deleting pod "simpletest.rc-kxf5s" in namespace "gc-6635"
Aug  4 10:07:59.909: INFO: Deleting pod "simpletest.rc-l6n97" in namespace "gc-6635"
Aug  4 10:07:59.918: INFO: Deleting pod "simpletest.rc-l7cw8" in namespace "gc-6635"
Aug  4 10:07:59.928: INFO: Deleting pod "simpletest.rc-l9vzf" in namespace "gc-6635"
Aug  4 10:07:59.938: INFO: Deleting pod "simpletest.rc-ldmj9" in namespace "gc-6635"
Aug  4 10:07:59.977: INFO: Deleting pod "simpletest.rc-lfxrv" in namespace "gc-6635"
Aug  4 10:08:00.026: INFO: Deleting pod "simpletest.rc-lfzfq" in namespace "gc-6635"
Aug  4 10:08:00.076: INFO: Deleting pod "simpletest.rc-lg479" in namespace "gc-6635"
Aug  4 10:08:00.126: INFO: Deleting pod "simpletest.rc-n62xw" in namespace "gc-6635"
Aug  4 10:08:00.176: INFO: Deleting pod "simpletest.rc-ndmfw" in namespace "gc-6635"
Aug  4 10:08:00.229: INFO: Deleting pod "simpletest.rc-nv2s2" in namespace "gc-6635"
Aug  4 10:08:00.278: INFO: Deleting pod "simpletest.rc-pfmqc" in namespace "gc-6635"
Aug  4 10:08:00.325: INFO: Deleting pod "simpletest.rc-prqtc" in namespace "gc-6635"
Aug  4 10:08:00.376: INFO: Deleting pod "simpletest.rc-q4465" in namespace "gc-6635"
Aug  4 10:08:00.426: INFO: Deleting pod "simpletest.rc-q6kdb" in namespace "gc-6635"
Aug  4 10:08:00.476: INFO: Deleting pod "simpletest.rc-q7jl7" in namespace "gc-6635"
Aug  4 10:08:00.528: INFO: Deleting pod "simpletest.rc-q7mlj" in namespace "gc-6635"
Aug  4 10:08:00.577: INFO: Deleting pod "simpletest.rc-qb675" in namespace "gc-6635"
Aug  4 10:08:00.629: INFO: Deleting pod "simpletest.rc-qghkn" in namespace "gc-6635"
Aug  4 10:08:00.675: INFO: Deleting pod "simpletest.rc-qqw4s" in namespace "gc-6635"
Aug  4 10:08:00.726: INFO: Deleting pod "simpletest.rc-r49qq" in namespace "gc-6635"
Aug  4 10:08:00.776: INFO: Deleting pod "simpletest.rc-rbljj" in namespace "gc-6635"
Aug  4 10:08:00.829: INFO: Deleting pod "simpletest.rc-s48c5" in namespace "gc-6635"
Aug  4 10:08:00.876: INFO: Deleting pod "simpletest.rc-sbkjk" in namespace "gc-6635"
Aug  4 10:08:00.930: INFO: Deleting pod "simpletest.rc-sxg9m" in namespace "gc-6635"
Aug  4 10:08:00.976: INFO: Deleting pod "simpletest.rc-t2rpk" in namespace "gc-6635"
Aug  4 10:08:01.030: INFO: Deleting pod "simpletest.rc-vfpm4" in namespace "gc-6635"
Aug  4 10:08:01.078: INFO: Deleting pod "simpletest.rc-vfzzl" in namespace "gc-6635"
Aug  4 10:08:01.129: INFO: Deleting pod "simpletest.rc-vkrgh" in namespace "gc-6635"
Aug  4 10:08:01.176: INFO: Deleting pod "simpletest.rc-vlcwz" in namespace "gc-6635"
Aug  4 10:08:01.226: INFO: Deleting pod "simpletest.rc-vvbfz" in namespace "gc-6635"
Aug  4 10:08:01.276: INFO: Deleting pod "simpletest.rc-x45m4" in namespace "gc-6635"
Aug  4 10:08:01.326: INFO: Deleting pod "simpletest.rc-xqchb" in namespace "gc-6635"
Aug  4 10:08:01.377: INFO: Deleting pod "simpletest.rc-xsdrt" in namespace "gc-6635"
Aug  4 10:08:01.426: INFO: Deleting pod "simpletest.rc-z2rxt" in namespace "gc-6635"
Aug  4 10:08:01.475: INFO: Deleting pod "simpletest.rc-z5g28" in namespace "gc-6635"
Aug  4 10:08:01.529: INFO: Deleting pod "simpletest.rc-z9kv8" in namespace "gc-6635"
Aug  4 10:08:01.577: INFO: Deleting pod "simpletest.rc-zc69q" in namespace "gc-6635"
Aug  4 10:08:01.629: INFO: Deleting pod "simpletest.rc-zfrvc" in namespace "gc-6635"
Aug  4 10:08:01.677: INFO: Deleting pod "simpletest.rc-zhcsm" in namespace "gc-6635"
Aug  4 10:08:01.729: INFO: Deleting pod "simpletest.rc-zhsgr" in namespace "gc-6635"
Aug  4 10:08:01.776: INFO: Deleting pod "simpletest.rc-zqnnx" in namespace "gc-6635"
Aug  4 10:08:01.829: INFO: Deleting pod "simpletest.rc-zszjv" in namespace "gc-6635"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 10:08:01.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6635" for this suite.

• [SLOW TEST:42.873 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":261,"skipped":4649,"failed":0}
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:08:01.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7736
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-7736
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7736
Aug  4 10:08:02.117: INFO: Found 0 stateful pods, waiting for 1
Aug  4 10:08:12.125: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Aug  4 10:08:22.126: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug  4 10:08:22.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 10:08:22.227: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 10:08:22.227: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 10:08:22.227: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 10:08:22.231: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug  4 10:08:32.241: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 10:08:32.241: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 10:08:32.261: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999985s
Aug  4 10:08:33.267: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994678354s
Aug  4 10:08:34.274: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.988334106s
Aug  4 10:08:35.282: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.981295743s
Aug  4 10:08:36.289: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.973680094s
Aug  4 10:08:37.295: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.967674198s
Aug  4 10:08:38.301: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.961678174s
Aug  4 10:08:39.310: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.954681588s
Aug  4 10:08:40.316: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.945680828s
Aug  4 10:08:41.322: INFO: Verifying statefulset ss doesn't scale past 1 for another 939.681467ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7736
Aug  4 10:08:42.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 10:08:42.433: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 10:08:42.433: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 10:08:42.433: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 10:08:42.438: INFO: Found 1 stateful pods, waiting for 3
Aug  4 10:08:52.448: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:08:52.448: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:08:52.448: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug  4 10:08:52.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 10:08:52.552: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 10:08:52.552: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 10:08:52.552: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 10:08:52.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 10:08:52.661: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 10:08:52.661: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 10:08:52.661: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 10:08:52.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  4 10:08:52.771: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  4 10:08:52.771: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  4 10:08:52.771: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  4 10:08:52.771: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 10:08:52.774: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug  4 10:09:02.791: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 10:09:02.791: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 10:09:02.791: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug  4 10:09:02.802: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999862s
Aug  4 10:09:03.810: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996202749s
Aug  4 10:09:04.818: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988190334s
Aug  4 10:09:05.825: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980192981s
Aug  4 10:09:06.830: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.974190561s
Aug  4 10:09:07.838: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968193819s
Aug  4 10:09:08.845: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.960479175s
Aug  4 10:09:09.850: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.952954346s
Aug  4 10:09:10.856: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.948132829s
Aug  4 10:09:11.862: INFO: Verifying statefulset ss doesn't scale past 3 for another 942.274444ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7736
Aug  4 10:09:12.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 10:09:12.952: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 10:09:12.952: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 10:09:12.952: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 10:09:12.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 10:09:13.050: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 10:09:13.050: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 10:09:13.050: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 10:09:13.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=statefulset-7736 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  4 10:09:13.148: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  4 10:09:13.148: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  4 10:09:13.148: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  4 10:09:13.148: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 10:09:23.174: INFO: Deleting all statefulset in ns statefulset-7736
Aug  4 10:09:23.177: INFO: Scaling statefulset ss to 0
Aug  4 10:09:23.192: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 10:09:23.195: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 10:09:23.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7736" for this suite.

• [SLOW TEST:81.250 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":262,"skipped":4652,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:23.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3334
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Aug  4 10:09:23.362: INFO: Found Service test-service-zmdhs in namespace services-3334 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug  4 10:09:23.362: INFO: Service test-service-zmdhs created
STEP: Getting /status
Aug  4 10:09:23.366: INFO: Service test-service-zmdhs has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug  4 10:09:23.371: INFO: observed Service test-service-zmdhs in namespace services-3334 with annotations: map[] & LoadBalancer: {[]}
Aug  4 10:09:23.371: INFO: Found Service test-service-zmdhs in namespace services-3334 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug  4 10:09:23.371: INFO: Service test-service-zmdhs has service status patched
STEP: updating the ServiceStatus
Aug  4 10:09:23.380: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug  4 10:09:23.381: INFO: Observed Service test-service-zmdhs in namespace services-3334 with annotations: map[] & Conditions: {[]}
Aug  4 10:09:23.381: INFO: Observed event: &Service{ObjectMeta:{test-service-zmdhs  services-3334  c9445497-640c-4d9e-ba03-8f882d8c4f60 4905717 0 2022-08-04 10:09:23 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-04 10:09:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-04 10:09:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:172.16.101.50,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[172.16.101.50],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug  4 10:09:23.381: INFO: Found Service test-service-zmdhs in namespace services-3334 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  4 10:09:23.381: INFO: Service test-service-zmdhs has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug  4 10:09:23.391: INFO: observed Service test-service-zmdhs in namespace services-3334 with labels: map[test-service-static:true]
Aug  4 10:09:23.391: INFO: observed Service test-service-zmdhs in namespace services-3334 with labels: map[test-service-static:true]
Aug  4 10:09:23.391: INFO: observed Service test-service-zmdhs in namespace services-3334 with labels: map[test-service-static:true]
Aug  4 10:09:23.391: INFO: Found Service test-service-zmdhs in namespace services-3334 with labels: map[test-service:patched test-service-static:true]
Aug  4 10:09:23.391: INFO: Service test-service-zmdhs patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug  4 10:09:23.407: INFO: Observed event: ADDED
Aug  4 10:09:23.407: INFO: Observed event: MODIFIED
Aug  4 10:09:23.407: INFO: Observed event: MODIFIED
Aug  4 10:09:23.407: INFO: Observed event: MODIFIED
Aug  4 10:09:23.407: INFO: Found Service test-service-zmdhs in namespace services-3334 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug  4 10:09:23.407: INFO: Service test-service-zmdhs deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  4 10:09:23.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3334" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":263,"skipped":4658,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:23.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:09:23.556: INFO: Waiting up to 5m0s for pod "downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb" in namespace "projected-7749" to be "Succeeded or Failed"
Aug  4 10:09:23.560: INFO: Pod "downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.101926ms
Aug  4 10:09:25.566: INFO: Pod "downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010530289s
Aug  4 10:09:27.574: INFO: Pod "downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017688191s
STEP: Saw pod success
Aug  4 10:09:27.574: INFO: Pod "downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb" satisfied condition "Succeeded or Failed"
Aug  4 10:09:27.578: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb container client-container: <nil>
STEP: delete the pod
Aug  4 10:09:27.599: INFO: Waiting for pod downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb to disappear
Aug  4 10:09:27.602: INFO: Pod downwardapi-volume-91a3c3c2-1029-4efd-bf26-8c1e7ee2fddb no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 10:09:27.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7749" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":4707,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:27.612: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3945
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Aug  4 10:09:27.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-3945 api-versions'
Aug  4 10:09:27.782: INFO: stderr: ""
Aug  4 10:09:27.782: INFO: stdout: "admissionregistration.k8s.io/v1\nalert.alibabacloud.com/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.alibabacloud.com/v1alpha1\nstorage.alibabacloud.com/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 10:09:27.783: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3945" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":265,"skipped":4729,"failed":0}
S
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:27.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-703
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-f905f1cf-1c2d-44c4-8234-44988ac1d519
STEP: Creating the pod
Aug  4 10:09:27.940: INFO: The status of Pod pod-configmaps-3a6e735d-92b2-46c0-bf8b-21a9a41fd581 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:09:29.947: INFO: The status of Pod pod-configmaps-3a6e735d-92b2-46c0-bf8b-21a9a41fd581 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-f905f1cf-1c2d-44c4-8234-44988ac1d519
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 10:09:33.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-703" for this suite.

• [SLOW TEST:6.210 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":266,"skipped":4730,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:34.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7020
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 10:09:47.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7020" for this suite.

• [SLOW TEST:13.218 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":267,"skipped":4745,"failed":0}
SSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:47.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5103
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-2db05779-402c-4546-b9cb-e78a089b1479
STEP: Creating a pod to test consume configMaps
Aug  4 10:09:47.364: INFO: Waiting up to 5m0s for pod "pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee" in namespace "configmap-5103" to be "Succeeded or Failed"
Aug  4 10:09:47.368: INFO: Pod "pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee": Phase="Pending", Reason="", readiness=false. Elapsed: 4.262508ms
Aug  4 10:09:49.374: INFO: Pod "pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010539372s
Aug  4 10:09:51.380: INFO: Pod "pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01628214s
STEP: Saw pod success
Aug  4 10:09:51.380: INFO: Pod "pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee" satisfied condition "Succeeded or Failed"
Aug  4 10:09:51.383: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:09:51.402: INFO: Waiting for pod pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee to disappear
Aug  4 10:09:51.405: INFO: Pod pod-configmaps-f130a18e-6f53-4f83-8a8a-61b268f22eee no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 10:09:51.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5103" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":268,"skipped":4749,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:51.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9531
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:09:51.553: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d" in namespace "projected-9531" to be "Succeeded or Failed"
Aug  4 10:09:51.556: INFO: Pod "downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.438266ms
Aug  4 10:09:53.565: INFO: Pod "downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012013653s
Aug  4 10:09:55.574: INFO: Pod "downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021250892s
STEP: Saw pod success
Aug  4 10:09:55.574: INFO: Pod "downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d" satisfied condition "Succeeded or Failed"
Aug  4 10:09:55.577: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d container client-container: <nil>
STEP: delete the pod
Aug  4 10:09:55.597: INFO: Waiting for pod downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d to disappear
Aug  4 10:09:55.600: INFO: Pod downwardapi-volume-5876f0e0-e071-4679-9d7a-f1853fc42a0d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 10:09:55.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9531" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":269,"skipped":4755,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:55.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-56c3d7c8-6ea0-4a8a-a560-0b02162319a7
STEP: Creating a pod to test consume secrets
Aug  4 10:09:55.754: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623" in namespace "projected-3859" to be "Succeeded or Failed"
Aug  4 10:09:55.757: INFO: Pod "pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623": Phase="Pending", Reason="", readiness=false. Elapsed: 3.557431ms
Aug  4 10:09:57.767: INFO: Pod "pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012954997s
Aug  4 10:09:59.773: INFO: Pod "pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019010053s
STEP: Saw pod success
Aug  4 10:09:59.773: INFO: Pod "pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623" satisfied condition "Succeeded or Failed"
Aug  4 10:09:59.776: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 10:09:59.794: INFO: Waiting for pod pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623 to disappear
Aug  4 10:09:59.798: INFO: Pod pod-projected-secrets-d85dc320-f3dc-4953-b61d-78e69e829623 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 10:09:59.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3859" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":270,"skipped":4765,"failed":0}
SSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:59.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-9066
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  4 10:09:59.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-9066" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":271,"skipped":4771,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:09:59.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Aug  4 10:10:00.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2562" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":272,"skipped":4779,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:00.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-7958
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:10:00.540: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:10:03.567: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:10:03.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:10:06.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-7958" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.599 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":273,"skipped":4819,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:06.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-5891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug  4 10:10:06.863: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug  4 10:10:06.883: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  4 10:10:06.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-5891" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":274,"skipped":4846,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:06.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-9782
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 10:10:11.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9782" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":275,"skipped":4878,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:11.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Aug  4 10:10:11.244: INFO: Waiting up to 5m0s for pod "client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6" in namespace "containers-469" to be "Succeeded or Failed"
Aug  4 10:10:11.248: INFO: Pod "client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.978962ms
Aug  4 10:10:13.254: INFO: Pod "client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010408947s
Aug  4 10:10:15.262: INFO: Pod "client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018909254s
STEP: Saw pod success
Aug  4 10:10:15.262: INFO: Pod "client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6" satisfied condition "Succeeded or Failed"
Aug  4 10:10:15.266: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:10:15.285: INFO: Waiting for pod client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6 to disappear
Aug  4 10:10:15.289: INFO: Pod client-containers-07ec888b-2858-4890-9cf6-e2f7e7cfa3a6 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  4 10:10:15.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-469" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":4892,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:15.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug  4 10:10:17.454: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4692 PodName:var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:10:17.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:10:17.455: INFO: ExecWithOptions: Clientset creation
Aug  4 10:10:17.455: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/var-expansion-4692/pods/var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Aug  4 10:10:17.525: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4692 PodName:var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:10:17.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:10:17.525: INFO: ExecWithOptions: Clientset creation
Aug  4 10:10:17.526: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/var-expansion-4692/pods/var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Aug  4 10:10:18.080: INFO: Successfully updated pod "var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug  4 10:10:18.084: INFO: Deleting pod "var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121" in namespace "var-expansion-4692"
Aug  4 10:10:18.091: INFO: Wait up to 5m0s for pod "var-expansion-bc1da2b1-33ef-4eed-844d-ef9688a60121" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 10:10:52.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4692" for this suite.

• [SLOW TEST:36.814 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":277,"skipped":4945,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:10:52.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-2602
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug  4 10:10:52.259: INFO: Found 0 stateful pods, waiting for 3
Aug  4 10:11:02.265: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:02.265: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:02.265: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug  4 10:11:02.296: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug  4 10:11:12.336: INFO: Updating stateful set ss2
Aug  4 10:11:12.342: INFO: Waiting for Pod statefulset-2602/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug  4 10:11:22.380: INFO: Found 1 stateful pods, waiting for 3
Aug  4 10:11:32.391: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:32.391: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:32.391: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=false
Aug  4 10:11:42.388: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:42.388: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  4 10:11:42.388: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug  4 10:11:42.415: INFO: Updating stateful set ss2
Aug  4 10:11:42.423: INFO: Waiting for Pod statefulset-2602/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug  4 10:11:52.455: INFO: Updating stateful set ss2
Aug  4 10:11:52.463: INFO: Waiting for StatefulSet statefulset-2602/ss2 to complete update
Aug  4 10:11:52.463: INFO: Waiting for Pod statefulset-2602/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 10:12:02.478: INFO: Deleting all statefulset in ns statefulset-2602
Aug  4 10:12:02.482: INFO: Scaling statefulset ss2 to 0
Aug  4 10:12:12.503: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 10:12:12.507: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 10:12:12.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2602" for this suite.

• [SLOW TEST:80.418 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":278,"skipped":4984,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:12.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug  4 10:12:12.670: INFO: Waiting up to 5m0s for pod "pod-1e57d535-4688-4acc-aefb-95168e671ab3" in namespace "emptydir-8489" to be "Succeeded or Failed"
Aug  4 10:12:12.674: INFO: Pod "pod-1e57d535-4688-4acc-aefb-95168e671ab3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.817266ms
Aug  4 10:12:14.680: INFO: Pod "pod-1e57d535-4688-4acc-aefb-95168e671ab3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009947565s
Aug  4 10:12:16.688: INFO: Pod "pod-1e57d535-4688-4acc-aefb-95168e671ab3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017814398s
STEP: Saw pod success
Aug  4 10:12:16.688: INFO: Pod "pod-1e57d535-4688-4acc-aefb-95168e671ab3" satisfied condition "Succeeded or Failed"
Aug  4 10:12:16.692: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-1e57d535-4688-4acc-aefb-95168e671ab3 container test-container: <nil>
STEP: delete the pod
Aug  4 10:12:16.717: INFO: Waiting for pod pod-1e57d535-4688-4acc-aefb-95168e671ab3 to disappear
Aug  4 10:12:16.720: INFO: Pod pod-1e57d535-4688-4acc-aefb-95168e671ab3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:12:16.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8489" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":279,"skipped":4992,"failed":0}
SSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:16.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-3993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  4 10:12:18.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-3993" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":280,"skipped":4996,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:18.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:12:19.486: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:12:22.507: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:12:22.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5508" for this suite.
STEP: Destroying namespace "webhook-5508-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":281,"skipped":5002,"failed":0}
SSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:22.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  4 10:12:22.729: INFO: Waiting up to 5m0s for pod "downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2" in namespace "downward-api-8434" to be "Succeeded or Failed"
Aug  4 10:12:22.733: INFO: Pod "downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.692199ms
Aug  4 10:12:24.742: INFO: Pod "downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012362161s
Aug  4 10:12:26.749: INFO: Pod "downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019675396s
STEP: Saw pod success
Aug  4 10:12:26.749: INFO: Pod "downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2" satisfied condition "Succeeded or Failed"
Aug  4 10:12:26.752: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2 container dapi-container: <nil>
STEP: delete the pod
Aug  4 10:12:26.773: INFO: Waiting for pod downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2 to disappear
Aug  4 10:12:26.776: INFO: Pod downward-api-dfe303f4-03ba-4dc5-a262-7363788ba5f2 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  4 10:12:26.776: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8434" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":282,"skipped":5006,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:26.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-3137
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-3137
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  4 10:12:26.913: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  4 10:12:26.955: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:12:28.963: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:12:30.960: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:12:32.966: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:12:34.964: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:12:36.962: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  4 10:12:38.962: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  4 10:12:38.970: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug  4 10:12:38.977: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:40.982: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:42.981: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:44.985: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:46.985: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:48.986: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:50.982: INFO: The status of Pod netserver-2 is Running (Ready = false)
Aug  4 10:12:52.985: INFO: The status of Pod netserver-2 is Running (Ready = true)
Aug  4 10:12:52.993: INFO: The status of Pod netserver-3 is Running (Ready = true)
Aug  4 10:12:53.000: INFO: The status of Pod netserver-4 is Running (Ready = true)
STEP: Creating test pods
Aug  4 10:12:55.025: INFO: Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
Aug  4 10:12:55.025: INFO: Breadth first check of 10.115.0.219 on host 192.168.0.121...
Aug  4 10:12:55.028: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.1.12:9080/dial?request=hostname&protocol=http&host=10.115.0.219&port=8083&tries=1'] Namespace:pod-network-test-3137 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:12:55.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:12:55.029: INFO: ExecWithOptions: Clientset creation
Aug  4 10:12:55.029: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3137/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.1.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.115.0.219%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 10:12:55.102: INFO: Waiting for responses: map[]
Aug  4 10:12:55.102: INFO: reached 10.115.0.219 after 0/1 tries
Aug  4 10:12:55.102: INFO: Breadth first check of 10.115.0.30 on host 192.168.0.122...
Aug  4 10:12:55.106: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.1.12:9080/dial?request=hostname&protocol=http&host=10.115.0.30&port=8083&tries=1'] Namespace:pod-network-test-3137 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:12:55.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:12:55.107: INFO: ExecWithOptions: Clientset creation
Aug  4 10:12:55.107: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3137/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.1.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.115.0.30%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 10:12:55.153: INFO: Waiting for responses: map[]
Aug  4 10:12:55.153: INFO: reached 10.115.0.30 after 0/1 tries
Aug  4 10:12:55.153: INFO: Breadth first check of 10.115.0.147 on host 192.168.0.123...
Aug  4 10:12:55.157: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.1.12:9080/dial?request=hostname&protocol=http&host=10.115.0.147&port=8083&tries=1'] Namespace:pod-network-test-3137 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:12:55.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:12:55.157: INFO: ExecWithOptions: Clientset creation
Aug  4 10:12:55.157: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3137/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.1.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.115.0.147%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 10:12:55.203: INFO: Waiting for responses: map[]
Aug  4 10:12:55.203: INFO: reached 10.115.0.147 after 0/1 tries
Aug  4 10:12:55.203: INFO: Breadth first check of 10.115.1.11 on host 192.168.0.124...
Aug  4 10:12:55.206: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.1.12:9080/dial?request=hostname&protocol=http&host=10.115.1.11&port=8083&tries=1'] Namespace:pod-network-test-3137 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:12:55.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:12:55.207: INFO: ExecWithOptions: Clientset creation
Aug  4 10:12:55.207: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3137/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.1.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.115.1.11%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 10:12:55.249: INFO: Waiting for responses: map[]
Aug  4 10:12:55.249: INFO: reached 10.115.1.11 after 0/1 tries
Aug  4 10:12:55.249: INFO: Breadth first check of 10.115.0.72 on host 192.168.0.125...
Aug  4 10:12:55.254: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.115.1.12:9080/dial?request=hostname&protocol=http&host=10.115.0.72&port=8083&tries=1'] Namespace:pod-network-test-3137 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  4 10:12:55.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:12:55.254: INFO: ExecWithOptions: Clientset creation
Aug  4 10:12:55.254: INFO: ExecWithOptions: execute(POST https://172.16.0.1:443/api/v1/namespaces/pod-network-test-3137/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.115.1.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.115.0.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  4 10:12:55.310: INFO: Waiting for responses: map[]
Aug  4 10:12:55.310: INFO: reached 10.115.0.72 after 0/1 tries
Aug  4 10:12:55.310: INFO: Going to retry 0 out of 5 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  4 10:12:55.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-3137" for this suite.

• [SLOW TEST:28.536 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5026,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:12:55.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:12:55.773: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 10:12:57.789: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:12:59.796: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:01.795: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:03.797: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 12, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:13:06.807: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:13:06.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8800-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:13:09.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3647" for this suite.
STEP: Destroying namespace "webhook-3647-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:14.708 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":284,"skipped":5048,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:10.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-3135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Aug  4 10:13:10.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Aug  4 10:13:10.415: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Aug  4 10:13:12.454: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:14.460: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:16.462: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:18.463: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:20.458: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:22.462: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:24.462: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 13, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:13:30.881: INFO: Waited 4.413688173s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug  4 10:13:30.926: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Aug  4 10:13:31.621: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-3135" for this suite.

• [SLOW TEST:21.694 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":285,"skipped":5077,"failed":0}
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:31.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8433.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8433.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8433.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8433.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 10:13:33.895: INFO: DNS probes using dns-8433/dns-test-ab242003-33ec-4ea2-93fb-9e4f749c8a3a succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 10:13:33.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8433" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":286,"skipped":5077,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:33.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-8576
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Aug  4 10:13:34.050: INFO: Major version: 1
STEP: Confirm minor version
Aug  4 10:13:34.050: INFO: cleanMinorVersion: 24
Aug  4 10:13:34.050: INFO: Minor version: 24+
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Aug  4 10:13:34.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-8576" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":287,"skipped":5119,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:34.061: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5607
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:13:34.195: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c" in namespace "downward-api-5607" to be "Succeeded or Failed"
Aug  4 10:13:34.199: INFO: Pod "downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.637192ms
Aug  4 10:13:36.208: INFO: Pod "downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c": Phase="Running", Reason="", readiness=false. Elapsed: 2.012283293s
Aug  4 10:13:38.217: INFO: Pod "downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02116521s
STEP: Saw pod success
Aug  4 10:13:38.217: INFO: Pod "downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c" satisfied condition "Succeeded or Failed"
Aug  4 10:13:38.220: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c container client-container: <nil>
STEP: delete the pod
Aug  4 10:13:38.242: INFO: Waiting for pod downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c to disappear
Aug  4 10:13:38.245: INFO: Pod downwardapi-volume-eb20b543-1071-4d95-a263-a941dd7a505c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 10:13:38.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5607" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5138,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:38.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug  4 10:13:38.392: INFO: Waiting up to 5m0s for pod "pod-39ed27ab-44dd-40fe-af6c-9df9565e2523" in namespace "emptydir-6843" to be "Succeeded or Failed"
Aug  4 10:13:38.395: INFO: Pod "pod-39ed27ab-44dd-40fe-af6c-9df9565e2523": Phase="Pending", Reason="", readiness=false. Elapsed: 3.585849ms
Aug  4 10:13:40.404: INFO: Pod "pod-39ed27ab-44dd-40fe-af6c-9df9565e2523": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012428602s
Aug  4 10:13:42.410: INFO: Pod "pod-39ed27ab-44dd-40fe-af6c-9df9565e2523": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018652487s
STEP: Saw pod success
Aug  4 10:13:42.410: INFO: Pod "pod-39ed27ab-44dd-40fe-af6c-9df9565e2523" satisfied condition "Succeeded or Failed"
Aug  4 10:13:42.413: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-39ed27ab-44dd-40fe-af6c-9df9565e2523 container test-container: <nil>
STEP: delete the pod
Aug  4 10:13:42.430: INFO: Waiting for pod pod-39ed27ab-44dd-40fe-af6c-9df9565e2523 to disappear
Aug  4 10:13:42.433: INFO: Pod pod-39ed27ab-44dd-40fe-af6c-9df9565e2523 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:13:42.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6843" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":289,"skipped":5157,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:42.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3597
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 10:13:58.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3597" for this suite.

• [SLOW TEST:16.257 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":290,"skipped":5219,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:13:58.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  4 10:13:58.850: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:14:00.858: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  4 10:14:00.872: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:14:02.880: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug  4 10:14:02.906: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug  4 10:14:02.909: INFO: Pod pod-with-poststart-http-hook still exists
Aug  4 10:14:04.910: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug  4 10:14:04.915: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  4 10:14:04.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4290" for this suite.

• [SLOW TEST:6.225 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5262,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:04.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-29f75dee-2f32-4171-944c-ac14c2c007ce
STEP: Creating a pod to test consume configMaps
Aug  4 10:14:05.068: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8" in namespace "projected-2521" to be "Succeeded or Failed"
Aug  4 10:14:05.071: INFO: Pod "pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.764129ms
Aug  4 10:14:07.079: INFO: Pod "pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01141099s
Aug  4 10:14:09.086: INFO: Pod "pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01851594s
STEP: Saw pod success
Aug  4 10:14:09.086: INFO: Pod "pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8" satisfied condition "Succeeded or Failed"
Aug  4 10:14:09.091: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8 container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:14:09.108: INFO: Waiting for pod pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8 to disappear
Aug  4 10:14:09.112: INFO: Pod pod-projected-configmaps-c56ad465-8779-4cdc-b489-3af66765f8a8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 10:14:09.112: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2521" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":292,"skipped":5264,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:09.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2730
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  4 10:14:25.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2730" for this suite.

• [SLOW TEST:16.190 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":293,"skipped":5345,"failed":0}
SS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:25.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Aug  4 10:14:25.453: INFO: Waiting up to 5m0s for pod "var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c" in namespace "var-expansion-7450" to be "Succeeded or Failed"
Aug  4 10:14:25.456: INFO: Pod "var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.470551ms
Aug  4 10:14:27.464: INFO: Pod "var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011674935s
Aug  4 10:14:29.474: INFO: Pod "var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020984952s
STEP: Saw pod success
Aug  4 10:14:29.474: INFO: Pod "var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c" satisfied condition "Succeeded or Failed"
Aug  4 10:14:29.477: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c container dapi-container: <nil>
STEP: delete the pod
Aug  4 10:14:29.499: INFO: Waiting for pod var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c to disappear
Aug  4 10:14:29.502: INFO: Pod var-expansion-ca005619-3fd6-41f8-a6e6-910841878d2c no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  4 10:14:29.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7450" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":294,"skipped":5347,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:29.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:14:29.649: INFO: Waiting up to 5m0s for pod "downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115" in namespace "projected-4927" to be "Succeeded or Failed"
Aug  4 10:14:29.653: INFO: Pod "downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115": Phase="Pending", Reason="", readiness=false. Elapsed: 3.586672ms
Aug  4 10:14:31.659: INFO: Pod "downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010092623s
Aug  4 10:14:33.664: INFO: Pod "downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015118555s
STEP: Saw pod success
Aug  4 10:14:33.664: INFO: Pod "downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115" satisfied condition "Succeeded or Failed"
Aug  4 10:14:33.668: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115 container client-container: <nil>
STEP: delete the pod
Aug  4 10:14:33.685: INFO: Waiting for pod downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115 to disappear
Aug  4 10:14:33.689: INFO: Pod downwardapi-volume-19f35cc4-1678-4639-af90-17e62b798115 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 10:14:33.689: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4927" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":295,"skipped":5418,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:33.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4795
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug  4 10:14:33.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:14:45.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4795" for this suite.

• [SLOW TEST:11.661 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":296,"skipped":5438,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:14:45.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9142
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-nr6z
STEP: Creating a pod to test atomic-volume-subpath
Aug  4 10:14:45.507: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-nr6z" in namespace "subpath-9142" to be "Succeeded or Failed"
Aug  4 10:14:45.510: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Pending", Reason="", readiness=false. Elapsed: 3.969725ms
Aug  4 10:14:47.517: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 2.010844478s
Aug  4 10:14:49.525: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 4.01831729s
Aug  4 10:14:51.531: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 6.024034139s
Aug  4 10:14:53.537: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 8.030962899s
Aug  4 10:14:55.546: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 10.039795105s
Aug  4 10:14:57.555: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 12.048081063s
Aug  4 10:14:59.563: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 14.056845834s
Aug  4 10:15:01.569: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 16.062734938s
Aug  4 10:15:03.575: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 18.068172248s
Aug  4 10:15:05.583: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=true. Elapsed: 20.076840087s
Aug  4 10:15:07.591: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Running", Reason="", readiness=false. Elapsed: 22.084078224s
Aug  4 10:15:09.600: INFO: Pod "pod-subpath-test-downwardapi-nr6z": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.09299517s
STEP: Saw pod success
Aug  4 10:15:09.600: INFO: Pod "pod-subpath-test-downwardapi-nr6z" satisfied condition "Succeeded or Failed"
Aug  4 10:15:09.603: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-subpath-test-downwardapi-nr6z container test-container-subpath-downwardapi-nr6z: <nil>
STEP: delete the pod
Aug  4 10:15:09.620: INFO: Waiting for pod pod-subpath-test-downwardapi-nr6z to disappear
Aug  4 10:15:09.624: INFO: Pod pod-subpath-test-downwardapi-nr6z no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-nr6z
Aug  4 10:15:09.624: INFO: Deleting pod "pod-subpath-test-downwardapi-nr6z" in namespace "subpath-9142"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  4 10:15:09.628: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9142" for this suite.

• [SLOW TEST:24.278 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":297,"skipped":5451,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:09.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-4820
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:15:09.788: INFO: The status of Pod pod-secrets-7cd49526-d96c-4555-996d-240a095100b9 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:15:11.794: INFO: The status of Pod pod-secrets-7cd49526-d96c-4555-996d-240a095100b9 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug  4 10:15:11.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-4820" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":298,"skipped":5457,"failed":0}

------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:11.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3261
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  4 10:15:11.962: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 10:15:16.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3261" for this suite.

• [SLOW TEST:5.062 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":299,"skipped":5457,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:16.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:15:17.031: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2" in namespace "downward-api-6450" to be "Succeeded or Failed"
Aug  4 10:15:17.035: INFO: Pod "downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.582433ms
Aug  4 10:15:19.043: INFO: Pod "downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012275843s
Aug  4 10:15:21.048: INFO: Pod "downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016626362s
STEP: Saw pod success
Aug  4 10:15:21.048: INFO: Pod "downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2" satisfied condition "Succeeded or Failed"
Aug  4 10:15:21.052: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2 container client-container: <nil>
STEP: delete the pod
Aug  4 10:15:21.068: INFO: Waiting for pod downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2 to disappear
Aug  4 10:15:21.071: INFO: Pod downwardapi-volume-f70196ab-4f21-43d3-82e7-34ab3fb338d2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 10:15:21.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6450" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5459,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:21.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-zp9t
STEP: Creating a pod to test atomic-volume-subpath
Aug  4 10:15:21.230: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-zp9t" in namespace "subpath-6215" to be "Succeeded or Failed"
Aug  4 10:15:21.234: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Pending", Reason="", readiness=false. Elapsed: 3.647617ms
Aug  4 10:15:23.238: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 2.008252997s
Aug  4 10:15:25.247: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 4.016853615s
Aug  4 10:15:27.255: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 6.024809886s
Aug  4 10:15:29.262: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 8.031923618s
Aug  4 10:15:31.268: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 10.037965351s
Aug  4 10:15:33.277: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 12.047065774s
Aug  4 10:15:35.284: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 14.053619731s
Aug  4 10:15:37.291: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 16.061365145s
Aug  4 10:15:39.300: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 18.070373351s
Aug  4 10:15:41.306: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=true. Elapsed: 20.076194511s
Aug  4 10:15:43.310: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Running", Reason="", readiness=false. Elapsed: 22.080370014s
Aug  4 10:15:45.319: INFO: Pod "pod-subpath-test-configmap-zp9t": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.089142689s
STEP: Saw pod success
Aug  4 10:15:45.319: INFO: Pod "pod-subpath-test-configmap-zp9t" satisfied condition "Succeeded or Failed"
Aug  4 10:15:45.323: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-subpath-test-configmap-zp9t container test-container-subpath-configmap-zp9t: <nil>
STEP: delete the pod
Aug  4 10:15:45.339: INFO: Waiting for pod pod-subpath-test-configmap-zp9t to disappear
Aug  4 10:15:45.343: INFO: Pod pod-subpath-test-configmap-zp9t no longer exists
STEP: Deleting pod pod-subpath-test-configmap-zp9t
Aug  4 10:15:45.343: INFO: Deleting pod "pod-subpath-test-configmap-zp9t" in namespace "subpath-6215"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  4 10:15:45.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6215" for this suite.

• [SLOW TEST:24.275 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":301,"skipped":5468,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:45.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5062
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  4 10:15:45.491: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  4 10:15:48.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5062" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":302,"skipped":5480,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:15:48.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-3590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-3590, will wait for the garbage collector to delete the pods
Aug  4 10:15:51.139: INFO: Deleting Job.batch foo took: 6.836757ms
Aug  4 10:15:51.240: INFO: Terminating Job.batch foo pods took: 100.946752ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  4 10:16:23.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-3590" for this suite.

• [SLOW TEST:34.317 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":303,"skipped":5494,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:23.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:16:23.393: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4" in namespace "projected-683" to be "Succeeded or Failed"
Aug  4 10:16:23.396: INFO: Pod "downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.884631ms
Aug  4 10:16:25.403: INFO: Pod "downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4": Phase="Running", Reason="", readiness=false. Elapsed: 2.010160761s
Aug  4 10:16:27.411: INFO: Pod "downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018203013s
STEP: Saw pod success
Aug  4 10:16:27.411: INFO: Pod "downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4" satisfied condition "Succeeded or Failed"
Aug  4 10:16:27.414: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4 container client-container: <nil>
STEP: delete the pod
Aug  4 10:16:27.433: INFO: Waiting for pod downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4 to disappear
Aug  4 10:16:27.436: INFO: Pod downwardapi-volume-f8bbcc08-2918-45c7-ab02-efbd2f6332e4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  4 10:16:27.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-683" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5500,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:27.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:16:27.973: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 10:16:29.989: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:16:32.000: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:16:33.998: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:16:35.997: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 16, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:16:39.008: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:16:49.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9751" for this suite.
STEP: Destroying namespace "webhook-9751-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:21.714 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":305,"skipped":5514,"failed":0}
SSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:49.162: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-5b9f2f25-09d8-4e8f-b467-1d736a04b3ae
STEP: Creating a pod to test consume secrets
Aug  4 10:16:49.302: INFO: Waiting up to 5m0s for pod "pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8" in namespace "secrets-9612" to be "Succeeded or Failed"
Aug  4 10:16:49.305: INFO: Pod "pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.891648ms
Aug  4 10:16:51.309: INFO: Pod "pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007214727s
Aug  4 10:16:53.315: INFO: Pod "pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012854965s
STEP: Saw pod success
Aug  4 10:16:53.315: INFO: Pod "pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8" satisfied condition "Succeeded or Failed"
Aug  4 10:16:53.319: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8 container secret-volume-test: <nil>
STEP: delete the pod
Aug  4 10:16:53.335: INFO: Waiting for pod pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8 to disappear
Aug  4 10:16:53.338: INFO: Pod pod-secrets-c5eb9978-abae-4b03-928b-3e968bcaf5f8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  4 10:16:53.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9612" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":306,"skipped":5520,"failed":0}

------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:53.350: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  4 10:16:53.493: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:16:55.501: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  4 10:16:55.515: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:16:57.524: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug  4 10:16:57.534: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug  4 10:16:57.538: INFO: Pod pod-with-prestop-http-hook still exists
Aug  4 10:16:59.539: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug  4 10:16:59.547: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  4 10:16:59.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-600" for this suite.

• [SLOW TEST:6.224 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5520,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:59.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-1879
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug  4 10:16:59.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-1879" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":308,"skipped":5562,"failed":0}
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:16:59.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6901
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  4 10:17:02.905: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  4 10:17:02.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6901" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5565,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:02.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug  4 10:17:03.078: INFO: observed Pod pod-test in namespace pods-1512 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug  4 10:17:03.083: INFO: observed Pod pod-test in namespace pods-1512 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC  }]
Aug  4 10:17:03.094: INFO: observed Pod pod-test in namespace pods-1512 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC  }]
Aug  4 10:17:04.016: INFO: Found Pod pod-test in namespace pods-1512 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:04 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:04 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-04 10:17:03 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug  4 10:17:04.053: INFO: observed event type MODIFIED
Aug  4 10:17:06.020: INFO: observed event type MODIFIED
Aug  4 10:17:07.022: INFO: observed event type MODIFIED
Aug  4 10:17:07.029: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  4 10:17:07.038: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1512" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":310,"skipped":5598,"failed":0}

------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:07.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:17:07.188: INFO: Waiting up to 5m0s for pod "downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777" in namespace "downward-api-6910" to be "Succeeded or Failed"
Aug  4 10:17:07.192: INFO: Pod "downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777": Phase="Pending", Reason="", readiness=false. Elapsed: 4.120955ms
Aug  4 10:17:09.201: INFO: Pod "downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013574825s
Aug  4 10:17:11.206: INFO: Pod "downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017874279s
STEP: Saw pod success
Aug  4 10:17:11.206: INFO: Pod "downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777" satisfied condition "Succeeded or Failed"
Aug  4 10:17:11.210: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777 container client-container: <nil>
STEP: delete the pod
Aug  4 10:17:11.229: INFO: Waiting for pod downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777 to disappear
Aug  4 10:17:11.232: INFO: Pod downwardapi-volume-74a4e319-e883-4290-82ab-f26cf61bb777 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 10:17:11.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6910" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":311,"skipped":5598,"failed":0}
S
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:11.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-7051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Aug  4 10:17:11.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-7051" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":312,"skipped":5599,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:11.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-53e2b2af-b2f0-48e7-9ccf-bc1393ff0ee3
STEP: Creating a pod to test consume secrets
Aug  4 10:17:11.577: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36" in namespace "projected-2015" to be "Succeeded or Failed"
Aug  4 10:17:11.581: INFO: Pod "pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36": Phase="Pending", Reason="", readiness=false. Elapsed: 3.662156ms
Aug  4 10:17:13.588: INFO: Pod "pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011232268s
Aug  4 10:17:15.597: INFO: Pod "pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019701998s
STEP: Saw pod success
Aug  4 10:17:15.597: INFO: Pod "pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36" satisfied condition "Succeeded or Failed"
Aug  4 10:17:15.600: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  4 10:17:15.622: INFO: Waiting for pod pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36 to disappear
Aug  4 10:17:15.625: INFO: Pod pod-projected-secrets-2a861902-7ecd-4839-bc18-ee0fdf731f36 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 10:17:15.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2015" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":313,"skipped":5663,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:15.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4949
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-1ea48496-d365-46ce-82c8-5ea1106154da
STEP: Creating a pod to test consume configMaps
Aug  4 10:17:15.782: INFO: Waiting up to 5m0s for pod "pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a" in namespace "configmap-4949" to be "Succeeded or Failed"
Aug  4 10:17:15.785: INFO: Pod "pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.640287ms
Aug  4 10:17:17.790: INFO: Pod "pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008593053s
Aug  4 10:17:19.798: INFO: Pod "pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016624169s
STEP: Saw pod success
Aug  4 10:17:19.798: INFO: Pod "pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a" satisfied condition "Succeeded or Failed"
Aug  4 10:17:19.802: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:17:19.825: INFO: Waiting for pod pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a to disappear
Aug  4 10:17:19.829: INFO: Pod pod-configmaps-da1666d7-1eac-4375-a5fd-88b4575c797a no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 10:17:19.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4949" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5688,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:19.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8399
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  4 10:17:26.036: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8399" for this suite.

• [SLOW TEST:6.206 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":315,"skipped":5720,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:26.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-8154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug  4 10:17:26.180: INFO: Waiting up to 5m0s for pod "security-context-604817ab-1f1c-4346-a28c-ddf809fe707d" in namespace "security-context-8154" to be "Succeeded or Failed"
Aug  4 10:17:26.184: INFO: Pod "security-context-604817ab-1f1c-4346-a28c-ddf809fe707d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.049363ms
Aug  4 10:17:28.191: INFO: Pod "security-context-604817ab-1f1c-4346-a28c-ddf809fe707d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011051142s
Aug  4 10:17:30.198: INFO: Pod "security-context-604817ab-1f1c-4346-a28c-ddf809fe707d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017847051s
STEP: Saw pod success
Aug  4 10:17:30.198: INFO: Pod "security-context-604817ab-1f1c-4346-a28c-ddf809fe707d" satisfied condition "Succeeded or Failed"
Aug  4 10:17:30.202: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod security-context-604817ab-1f1c-4346-a28c-ddf809fe707d container test-container: <nil>
STEP: delete the pod
Aug  4 10:17:30.221: INFO: Waiting for pod security-context-604817ab-1f1c-4346-a28c-ddf809fe707d to disappear
Aug  4 10:17:30.225: INFO: Pod security-context-604817ab-1f1c-4346-a28c-ddf809fe707d no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  4 10:17:30.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-8154" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":316,"skipped":5758,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:30.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4657
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-7186e8c8-393f-4082-871b-be012f48144e
STEP: Creating configMap with name cm-test-opt-upd-6b57b448-90f0-4aed-b38f-b1b0632bce63
STEP: Creating the pod
Aug  4 10:17:30.389: INFO: The status of Pod pod-projected-configmaps-2eb3a103-5c21-49e4-98e5-95e8399ca5fc is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:17:32.395: INFO: The status of Pod pod-projected-configmaps-2eb3a103-5c21-49e4-98e5-95e8399ca5fc is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-7186e8c8-393f-4082-871b-be012f48144e
STEP: Updating configmap cm-test-opt-upd-6b57b448-90f0-4aed-b38f-b1b0632bce63
STEP: Creating configMap with name cm-test-opt-create-10b34444-d032-4eb6-b435-04707506c012
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 10:17:36.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4657" for this suite.

• [SLOW TEST:6.252 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":317,"skipped":5789,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:36.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:17:36.615: INFO: Creating simple deployment test-new-deployment
Aug  4 10:17:36.627: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 10:17:38.671: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-3997  7deee750-e43f-4985-addd-13941b39e31f 4917256 3 2022-08-04 10:17:36 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-04 10:17:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:17:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e2b0b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-04 10:17:37 +0000 UTC,LastTransitionTime:2022-08-04 10:17:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-08-04 10:17:37 +0000 UTC,LastTransitionTime:2022-08-04 10:17:36 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  4 10:17:38.674: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-3997  7c02a99c-ceec-4a37-b7a2-f3298e37a55b 4917259 3 2022-08-04 10:17:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 7deee750-e43f-4985-addd-13941b39e31f 0xc003d7f9d7 0xc003d7f9d8}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:17:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7deee750-e43f-4985-addd-13941b39e31f\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:17:37 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d7fa68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  4 10:17:38.678: INFO: Pod "test-new-deployment-55df494869-9c76h" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-9c76h test-new-deployment-55df494869- deployment-3997  73cb83ec-4c38-4bf2-a48b-56a653563b34 4917225 0 2022-08-04 10:17:36 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-new-deployment-55df494869 7c02a99c-ceec-4a37-b7a2-f3298e37a55b 0xc003d7fe77 0xc003d7fe78}] []  [{kube-controller-manager Update v1 2022-08-04 10:17:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7c02a99c-ceec-4a37-b7a2-f3298e37a55b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:17:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.150\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d68mj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d68mj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:17:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:17:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:17:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:17:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.123,PodIP:10.115.0.150,StartTime:2022-08-04 10:17:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:17:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://30beaaf59b319ddf0b22f5323fed1f45dbc267c685dda7e57008179d5386226a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.150,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  4 10:17:38.678: INFO: Pod "test-new-deployment-55df494869-qjkng" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-qjkng test-new-deployment-55df494869- deployment-3997  bdad1993-4f31-465f-a94b-15fb0402b359 4917260 0 2022-08-04 10:17:38 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-new-deployment-55df494869 7c02a99c-ceec-4a37-b7a2-f3298e37a55b 0xc003ea0077 0xc003ea0078}] []  [{kube-controller-manager Update v1 2022-08-04 10:17:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7c02a99c-ceec-4a37-b7a2-f3298e37a55b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xfbws,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xfbws,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.125,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:17:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 10:17:38.678: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3997" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":318,"skipped":5814,"failed":0}

------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:38.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-1709
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  4 10:17:38.839: INFO: starting watch
STEP: patching
STEP: updating
Aug  4 10:17:38.850: INFO: waiting for watch events with expected annotations
Aug  4 10:17:38.850: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Aug  4 10:17:38.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-1709" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":319,"skipped":5814,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:38.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-8491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Aug  4 10:17:39.042: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Aug  4 10:17:39.067: INFO: waiting for watch events with expected annotations in namespace
Aug  4 10:17:39.067: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Aug  4 10:17:39.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-8491" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":320,"skipped":5824,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:39.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:17:39.243: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3" in namespace "downward-api-925" to be "Succeeded or Failed"
Aug  4 10:17:39.246: INFO: Pod "downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.010513ms
Aug  4 10:17:41.250: INFO: Pod "downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007202101s
Aug  4 10:17:43.258: INFO: Pod "downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014657785s
STEP: Saw pod success
Aug  4 10:17:43.258: INFO: Pod "downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3" satisfied condition "Succeeded or Failed"
Aug  4 10:17:43.261: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3 container client-container: <nil>
STEP: delete the pod
Aug  4 10:17:43.279: INFO: Waiting for pod downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3 to disappear
Aug  4 10:17:43.283: INFO: Pod downwardapi-volume-f6477eeb-f381-4a6e-ba86-51902e3951f3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 10:17:43.283: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-925" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":5873,"failed":0}
S
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:17:43.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:17:43.431: INFO: created pod
Aug  4 10:17:43.431: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-1944" to be "Succeeded or Failed"
Aug  4 10:17:43.435: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.940771ms
Aug  4 10:17:45.443: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012252523s
Aug  4 10:17:47.450: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019230325s
STEP: Saw pod success
Aug  4 10:17:47.450: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug  4 10:18:17.454: INFO: polling logs
Aug  4 10:18:17.460: INFO: Pod logs: 
I0804 10:17:43.947449       1 log.go:195] OK: Got token
I0804 10:17:43.947470       1 log.go:195] validating with in-cluster discovery
I0804 10:17:43.947693       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0804 10:17:43.947712       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1944:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659608863, NotBefore:1659608263, IssuedAt:1659608263, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1944", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"48ef39cc-b893-422c-bfa6-96dfb198b93a"}}}
I0804 10:17:43.956178       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0804 10:17:43.962118       1 log.go:195] OK: Validated signature on JWT
I0804 10:17:43.962167       1 log.go:195] OK: Got valid claims from token!
I0804 10:17:43.962182       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1944:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659608863, NotBefore:1659608263, IssuedAt:1659608263, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1944", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"48ef39cc-b893-422c-bfa6-96dfb198b93a"}}}

Aug  4 10:18:17.460: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  4 10:18:17.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1944" for this suite.

• [SLOW TEST:34.191 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":322,"skipped":5874,"failed":0}
S
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:18:17.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-e14a79f8-e8e0-4f5f-ba86-cde85492b256
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 10:18:17.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1154" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":323,"skipped":5875,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:18:17.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
W0804 10:18:18.807038      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  4 10:18:18.807: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 10:18:18.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5878" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":324,"skipped":5888,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:18:18.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1394
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:18:19.325: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 10:18:21.336: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:18:23.343: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:18:25.344: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:18:27.341: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 18, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:18:30.358: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug  4 10:18:30.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:18:30.387: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1394" for this suite.
STEP: Destroying namespace "webhook-1394-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:11.619 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":325,"skipped":5935,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:18:30.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-9783
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:18:30.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:18:31.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-9783" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":326,"skipped":6005,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:18:31.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3948
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  4 10:18:31.244: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  4 10:19:31.277: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:31.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:19:31.420: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug  4 10:19:31.423: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Aug  4 10:19:31.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-923" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  4 10:19:31.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3948" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.426 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":327,"skipped":6032,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:31.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6107
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101
Aug  4 10:19:31.670: INFO: Pod name my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101: Found 0 pods out of 1
Aug  4 10:19:36.679: INFO: Pod name my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101: Found 1 pods out of 1
Aug  4 10:19:36.679: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101" are running
Aug  4 10:19:36.682: INFO: Pod "my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101-6j268" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 10:19:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 10:19:33 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 10:19:33 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-04 10:19:31 +0000 UTC Reason: Message:}])
Aug  4 10:19:36.682: INFO: Trying to dial the pod
Aug  4 10:19:41.696: INFO: Controller my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101: Got expected result from replica 1 [my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101-6j268]: "my-hostname-basic-11eef100-19c7-4c24-b497-398372f6f101-6j268", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  4 10:19:41.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6107" for this suite.

• [SLOW TEST:10.174 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":328,"skipped":6039,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:41.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug  4 10:19:41.845: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:19:43.853: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  4 10:19:44.871: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7910" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":329,"skipped":6041,"failed":0}
SSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:44.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug  4 10:19:47.038: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  4 10:19:49.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-751" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":330,"skipped":6048,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:49.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-7938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:19:49.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:19:50.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-7938" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":331,"skipped":6072,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:50.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6376
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  4 10:19:50.381: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c" in namespace "downward-api-6376" to be "Succeeded or Failed"
Aug  4 10:19:50.385: INFO: Pod "downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.348973ms
Aug  4 10:19:52.392: INFO: Pod "downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011003688s
Aug  4 10:19:54.399: INFO: Pod "downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017765718s
STEP: Saw pod success
Aug  4 10:19:54.399: INFO: Pod "downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c" satisfied condition "Succeeded or Failed"
Aug  4 10:19:54.403: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c container client-container: <nil>
STEP: delete the pod
Aug  4 10:19:54.427: INFO: Waiting for pod downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c to disappear
Aug  4 10:19:54.430: INFO: Pod downwardapi-volume-dd17f19b-cdc5-4c18-bd6d-155d6a97c20c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  4 10:19:54.430: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6376" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":332,"skipped":6124,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:54.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug  4 10:19:54.574: INFO: Waiting up to 5m0s for pod "pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd" in namespace "emptydir-1028" to be "Succeeded or Failed"
Aug  4 10:19:54.577: INFO: Pod "pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.421433ms
Aug  4 10:19:56.587: INFO: Pod "pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012463355s
Aug  4 10:19:58.594: INFO: Pod "pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019950865s
STEP: Saw pod success
Aug  4 10:19:58.594: INFO: Pod "pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd" satisfied condition "Succeeded or Failed"
Aug  4 10:19:58.598: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd container test-container: <nil>
STEP: delete the pod
Aug  4 10:19:58.614: INFO: Waiting for pod pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd to disappear
Aug  4 10:19:58.618: INFO: Pod pod-f76712ed-ffbc-4c44-a6d3-4f639d077afd no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:19:58.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1028" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":333,"skipped":6157,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:19:58.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug  4 10:19:58.774: INFO: Waiting up to 5m0s for pod "pod-9f9af338-c956-4591-9531-ca9f4362de6f" in namespace "emptydir-5909" to be "Succeeded or Failed"
Aug  4 10:19:58.778: INFO: Pod "pod-9f9af338-c956-4591-9531-ca9f4362de6f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.542239ms
Aug  4 10:20:00.786: INFO: Pod "pod-9f9af338-c956-4591-9531-ca9f4362de6f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011834089s
Aug  4 10:20:02.792: INFO: Pod "pod-9f9af338-c956-4591-9531-ca9f4362de6f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01758127s
STEP: Saw pod success
Aug  4 10:20:02.792: INFO: Pod "pod-9f9af338-c956-4591-9531-ca9f4362de6f" satisfied condition "Succeeded or Failed"
Aug  4 10:20:02.795: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-9f9af338-c956-4591-9531-ca9f4362de6f container test-container: <nil>
STEP: delete the pod
Aug  4 10:20:02.813: INFO: Waiting for pod pod-9f9af338-c956-4591-9531-ca9f4362de6f to disappear
Aug  4 10:20:02.819: INFO: Pod pod-9f9af338-c956-4591-9531-ca9f4362de6f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:20:02.819: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5909" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":334,"skipped":6160,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:20:02.830: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2535
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Aug  4 10:20:02.972: INFO: Waiting up to 5m0s for pod "pod-d9309a4d-87f1-485c-87dc-e13bdf865948" in namespace "emptydir-2535" to be "Succeeded or Failed"
Aug  4 10:20:02.975: INFO: Pod "pod-d9309a4d-87f1-485c-87dc-e13bdf865948": Phase="Pending", Reason="", readiness=false. Elapsed: 3.042368ms
Aug  4 10:20:04.983: INFO: Pod "pod-d9309a4d-87f1-485c-87dc-e13bdf865948": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011598765s
Aug  4 10:20:06.990: INFO: Pod "pod-d9309a4d-87f1-485c-87dc-e13bdf865948": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01869948s
STEP: Saw pod success
Aug  4 10:20:06.990: INFO: Pod "pod-d9309a4d-87f1-485c-87dc-e13bdf865948" satisfied condition "Succeeded or Failed"
Aug  4 10:20:06.994: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-d9309a4d-87f1-485c-87dc-e13bdf865948 container test-container: <nil>
STEP: delete the pod
Aug  4 10:20:07.015: INFO: Waiting for pod pod-d9309a4d-87f1-485c-87dc-e13bdf865948 to disappear
Aug  4 10:20:07.018: INFO: Pod pod-d9309a4d-87f1-485c-87dc-e13bdf865948 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:20:07.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2535" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":335,"skipped":6166,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:20:07.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2756
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug  4 10:20:07.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
Aug  4 10:20:09.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:20:17.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2756" for this suite.

• [SLOW TEST:10.633 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":336,"skipped":6168,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:20:17.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug  4 10:20:17.803: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.803: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.810: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.810: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.823: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.823: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.836: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:17.836: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  4 10:20:18.424: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug  4 10:20:18.424: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug  4 10:20:19.289: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug  4 10:20:19.303: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 0
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.304: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.310: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.310: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.321: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.321: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:19.327: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:19.327: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:19.337: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:19.337: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:20.295: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:20.295: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:20.313: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
STEP: listing Deployments
Aug  4 10:20:20.322: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug  4 10:20:20.332: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug  4 10:20:20.337: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:20.340: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:20.352: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:20.363: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:20.368: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:20.911: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:21.297: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:21.318: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:21.324: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  4 10:20:21.909: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 1
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 3
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 2
Aug  4 10:20:21.943: INFO: observed Deployment test-deployment in namespace deployment-1367 with ReadyReplicas 3
STEP: deleting the Deployment
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
Aug  4 10:20:21.953: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  4 10:20:21.956: INFO: Log out all the ReplicaSets if there is no deployment created
Aug  4 10:20:21.960: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-1367  786b2528-8491-452d-ac58-3d97f6536d86 4921109 3 2022-08-04 10:20:17 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 79a86a32-0939-4e24-8560-d9019b16f50a 0xc0059b4a47 0xc0059b4a48}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:20:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79a86a32-0939-4e24-8560-d9019b16f50a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0059b4ad0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug  4 10:20:21.964: INFO: pod: "test-deployment-6b48c869b6-c27sc":
&Pod{ObjectMeta:{test-deployment-6b48c869b6-c27sc test-deployment-6b48c869b6- deployment-1367  361e1644-1629-46a1-a63b-0fe0f9c6ce2a 4921071 0 2022-08-04 10:20:17 +0000 UTC 2022-08-04 10:20:20 +0000 UTC 0xc0059b4f50 map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-6b48c869b6 786b2528-8491-452d-ac58-3d97f6536d86 0xc0059b4f97 0xc0059b4f98}] []  [{kube-controller-manager Update v1 2022-08-04 10:20:17 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"786b2528-8491-452d-ac58-3d97f6536d86\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:20:19 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.49\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-798n9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-798n9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:17 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:17 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.49,StartTime:2022-08-04 10:20:17 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:20:18 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://1a2e3e946b5c439312743cc26a439f453de6a3a01a84bd0de1b546d9f3415b35,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.49,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  4 10:20:21.965: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-1367  c3c6d865-1bfb-4553-8085-c3771094be35 4921181 2 2022-08-04 10:20:20 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 79a86a32-0939-4e24-8560-d9019b16f50a 0xc0059b4b37 0xc0059b4b38}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79a86a32-0939-4e24-8560-d9019b16f50a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:20:21 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0059b4bc0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug  4 10:20:21.968: INFO: pod: "test-deployment-74c6dd549b-67bfg":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-67bfg test-deployment-74c6dd549b- deployment-1367  cc9e1b5f-0a20-4d3a-9966-7af393329ce3 4921180 0 2022-08-04 10:20:21 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-74c6dd549b c3c6d865-1bfb-4553-8085-c3771094be35 0xc0059b5dc7 0xc0059b5dc8}] []  [{kube-controller-manager Update v1 2022-08-04 10:20:21 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c3c6d865-1bfb-4553-8085-c3771094be35\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:20:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.151\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-slxlv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-slxlv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.123,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.123,PodIP:10.115.0.151,StartTime:2022-08-04 10:20:21 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:20:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://0f751d4802bf4297d10970f8dd13eaf31beb2c8011633981e27b478a1ee02180,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.151,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  4 10:20:21.968: INFO: pod: "test-deployment-74c6dd549b-rk9p4":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-rk9p4 test-deployment-74c6dd549b- deployment-1367  3674ec8f-9a7f-4b74-be70-dd526bfb5ff0 4921154 0 2022-08-04 10:20:20 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-74c6dd549b c3c6d865-1bfb-4553-8085-c3771094be35 0xc005a5e017 0xc005a5e018}] []  [{kube-controller-manager Update v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c3c6d865-1bfb-4553-8085-c3771094be35\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:20:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2nxpg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2nxpg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.51,StartTime:2022-08-04 10:20:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:20:20 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://8648bfba7d7a79f57105d4d0a2bae2ef26fc95194816b0108e00bf1b51df6c02,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.51,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  4 10:20:21.968: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-1367  caa4908e-2fbc-4a64-ac85-036989fdba46 4921186 4 2022-08-04 10:20:19 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 79a86a32-0939-4e24-8560-d9019b16f50a 0xc0059b4c27 0xc0059b4c28}] []  [{kube-controller-manager Update apps/v1 2022-08-04 10:20:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"79a86a32-0939-4e24-8560-d9019b16f50a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-04 10:20:21 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0059b4cb0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug  4 10:20:21.974: INFO: pod: "test-deployment-84b949bdfc-hjksd":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-hjksd test-deployment-84b949bdfc- deployment-1367  47767c0a-ae32-47b1-a44d-c2837bfb3d30 4921184 0 2022-08-04 10:20:20 +0000 UTC 2022-08-04 10:20:22 +0000 UTC 0xc005a5f508 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-84b949bdfc caa4908e-2fbc-4a64-ac85-036989fdba46 0xc005a5f557 0xc005a5f558}] []  [{kube-controller-manager Update v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"caa4908e-2fbc-4a64-ac85-036989fdba46\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.0.221\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m7685,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m7685,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.121,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.121,PodIP:10.115.0.221,StartTime:2022-08-04 10:20:20 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:20:20 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://aefa0909264b8d95731e24780ec6bc626f789ed29a331e159724f8cb8e4c0298,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.0.221,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  4 10:20:21.974: INFO: pod: "test-deployment-84b949bdfc-pc7cf":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-pc7cf test-deployment-84b949bdfc- deployment-1367  1f9be5e6-402c-4548-a055-97425065a59b 4921158 0 2022-08-04 10:20:19 +0000 UTC 2022-08-04 10:20:22 +0000 UTC 0xc005a5f738 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:ack.privileged] [{apps/v1 ReplicaSet test-deployment-84b949bdfc caa4908e-2fbc-4a64-ac85-036989fdba46 0xc005a5f777 0xc005a5f778}] []  [{kube-controller-manager Update v1 2022-08-04 10:20:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"caa4908e-2fbc-4a64-ac85-036989fdba46\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-04 10:20:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.115.1.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nvxt2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nvxt2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:cn-hongkong.192.168.0.124,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:20 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-04 10:20:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.124,PodIP:10.115.1.50,StartTime:2022-08-04 10:20:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-04 10:20:19 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://c09f1eb2ef918ade5afc91bbc434d84a8694a3c576415c6940329e76805897fd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.115.1.50,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  4 10:20:21.974: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1367" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":337,"skipped":6195,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:20:21.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8637
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8637 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8637;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8637 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8637;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8637.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8637.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8637.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8637.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8637.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8637.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8637.svc;check="$$(dig +notcp +noall +answer +search 211.204.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.204.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.204.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.204.211_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8637 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8637;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8637 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8637;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8637.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8637.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8637.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8637.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8637.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8637.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8637.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8637.svc;check="$$(dig +notcp +noall +answer +search 211.204.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.204.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.204.16.172.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/172.16.204.211_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  4 10:20:24.155: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.160: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.163: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.167: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.171: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.175: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.179: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.184: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.202: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.206: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.209: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.212: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.217: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.220: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.223: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.228: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:24.242: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_udp@_http._tcp.dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_udp@_http._tcp.dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:29.247: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.251: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.256: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.259: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.263: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.267: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.270: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.274: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.293: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.297: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.301: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.305: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.309: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.313: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.320: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:29.335: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_udp@_http._tcp.dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:34.246: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.251: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.255: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.259: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.263: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.268: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.275: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.294: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.299: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.302: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.306: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.310: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.321: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:34.336: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:39.247: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.251: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.255: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.258: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.263: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.266: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.274: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.291: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.296: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.299: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.303: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.306: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.310: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.317: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:39.333: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:44.247: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.252: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.256: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.259: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.263: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.267: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.275: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.293: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.298: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.302: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.305: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.309: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.313: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.320: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:44.335: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:49.247: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.251: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.255: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.259: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.262: INFO: Unable to read wheezy_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.267: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.274: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.293: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.296: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.300: INFO: Unable to read jessie_udp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.304: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637 from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.307: INFO: Unable to read jessie_udp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.311: INFO: Unable to read jessie_tcp@dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.318: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc from pod dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853: the server could not find the requested resource (get pods dns-test-344c970e-da1f-4d90-91d6-1938a53ea853)
Aug  4 10:20:49.333: INFO: Lookups using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8637 wheezy_tcp@dns-test-service.dns-8637 wheezy_udp@dns-test-service.dns-8637.svc wheezy_tcp@dns-test-service.dns-8637.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8637.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8637 jessie_tcp@dns-test-service.dns-8637 jessie_udp@dns-test-service.dns-8637.svc jessie_tcp@dns-test-service.dns-8637.svc jessie_tcp@_http._tcp.dns-test-service.dns-8637.svc]

Aug  4 10:20:54.334: INFO: DNS probes using dns-8637/dns-test-344c970e-da1f-4d90-91d6-1938a53ea853 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  4 10:20:54.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8637" for this suite.

• [SLOW TEST:32.401 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":338,"skipped":6213,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:20:54.389: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:20:54.892: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:20:57.918: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:20:57.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:21:01.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2977" for this suite.
STEP: Destroying namespace "webhook-2977-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.694 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":339,"skipped":6253,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:01.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-4803
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:21:01.208: INFO: Creating pod...
Aug  4 10:21:03.226: INFO: Creating service...
Aug  4 10:21:03.237: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/DELETE
Aug  4 10:21:03.242: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  4 10:21:03.242: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/GET
Aug  4 10:21:03.246: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug  4 10:21:03.246: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/HEAD
Aug  4 10:21:03.250: INFO: http.Client request:HEAD | StatusCode:200
Aug  4 10:21:03.250: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/OPTIONS
Aug  4 10:21:03.254: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  4 10:21:03.254: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/PATCH
Aug  4 10:21:03.258: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  4 10:21:03.258: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/POST
Aug  4 10:21:03.261: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  4 10:21:03.261: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/pods/agnhost/proxy/some/path/with/PUT
Aug  4 10:21:03.265: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  4 10:21:03.265: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/DELETE
Aug  4 10:21:03.272: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  4 10:21:03.272: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/GET
Aug  4 10:21:03.277: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug  4 10:21:03.277: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/HEAD
Aug  4 10:21:03.283: INFO: http.Client request:HEAD | StatusCode:200
Aug  4 10:21:03.283: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/OPTIONS
Aug  4 10:21:03.289: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  4 10:21:03.289: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/PATCH
Aug  4 10:21:03.295: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  4 10:21:03.295: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/POST
Aug  4 10:21:03.301: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  4 10:21:03.301: INFO: Starting http.Client for https://172.16.0.1:443/api/v1/namespaces/proxy-4803/services/test-service/proxy/some/path/with/PUT
Aug  4 10:21:03.308: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  4 10:21:03.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-4803" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":340,"skipped":6265,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:03.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7929
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-7929
Aug  4 10:21:03.459: INFO: Found 0 stateful pods, waiting for 1
Aug  4 10:21:13.466: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  4 10:21:13.495: INFO: Deleting all statefulset in ns statefulset-7929
Aug  4 10:21:13.498: INFO: Scaling statefulset ss to 0
Aug  4 10:21:23.516: INFO: Waiting for statefulset status.replicas updated to 0
Aug  4 10:21:23.520: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  4 10:21:23.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7929" for this suite.

• [SLOW TEST:20.223 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":341,"skipped":6281,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:23.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-8623
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug  4 10:21:24.730: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0804 10:21:24.730491      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  4 10:21:24.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-8623" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":342,"skipped":6328,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:24.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  4 10:21:24.867: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  4 10:21:24.877: INFO: Waiting for terminating namespaces to be deleted...
Aug  4 10:21:24.881: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.121 before test
Aug  4 10:21:24.888: INFO: coredns-59b9d8db85-hn4p6 from kube-system started at 2022-08-04 08:09:22 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container coredns ready: true, restart count 0
Aug  4 10:21:24.888: INFO: csi-plugin-p5np9 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:21:24.888: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.888: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.888: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.888: INFO: kube-flannel-ds-jwn5s from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:21:24.888: INFO: kube-proxy-worker-655dh from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:21:24.888: INFO: storage-snapshot-manager-554445c9bd-fvptn from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container storage-snapshot-manager ready: true, restart count 0
Aug  4 10:21:24.888: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.888: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.888: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:21:24.888: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.122 before test
Aug  4 10:21:24.895: INFO: alicloud-monitor-controller-5845594db4-45z4s from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container alicloud-monitor-controller ready: true, restart count 0
Aug  4 10:21:24.895: INFO: coredns-59b9d8db85-47n9g from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container coredns ready: true, restart count 0
Aug  4 10:21:24.895: INFO: csi-plugin-pdfn5 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (4 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.895: INFO: csi-provisioner-67f645cbd4-rs7qd from kube-system started at 2022-08-04 08:09:14 +0000 UTC (8 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 10:21:24.895: INFO: kube-flannel-ds-7dcg7 from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:21:24.895: INFO: kube-proxy-worker-hbmcg from kube-system started at 2022-08-04 08:08:59 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:21:24.895: INFO: metrics-server-74cc8bb57-59pqk from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container metrics-server ready: true, restart count 0
Aug  4 10:21:24.895: INFO: storage-operator-56dcf896df-hgdkr from kube-system started at 2022-08-04 08:09:14 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container storage-operator ready: true, restart count 0
Aug  4 10:21:24.895: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-j4br8 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.895: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:21:24.895: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.123 before test
Aug  4 10:21:24.904: INFO: simpletest.deployment-66485d9c57-nn56k from gc-8623 started at 2022-08-04 10:21:23 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container nginx ready: false, restart count 0
Aug  4 10:21:24.904: INFO: csi-plugin-m56dc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.904: INFO: kube-flannel-ds-zr96w from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:21:24.904: INFO: kube-proxy-worker-nb9fn from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:21:24.904: INFO: storage-auto-expander-ddb7844c-hdp2g from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container storage-auto-expander ready: true, restart count 0
Aug  4 10:21:24.904: INFO: storage-monitor-658c96866d-fvmv7 from kube-system started at 2022-08-04 08:10:31 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container storage-monitor ready: true, restart count 0
Aug  4 10:21:24.904: INFO: sonobuoy from sonobuoy started at 2022-08-04 08:45:38 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  4 10:21:24.904: INFO: sonobuoy-e2e-job-3d413db4faba4b79 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container e2e ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.904: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-pfxld from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.904: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:21:24.904: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.124 before test
Aug  4 10:21:24.910: INFO: simpletest.deployment-66485d9c57-dnlxm from gc-8623 started at 2022-08-04 10:21:23 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.910: INFO: 	Container nginx ready: true, restart count 0
Aug  4 10:21:24.910: INFO: csi-plugin-llrh8 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (4 container statuses recorded)
Aug  4 10:21:24.910: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:21:24.910: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.910: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.910: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.910: INFO: kube-flannel-ds-wgv48 from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.910: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:21:24.910: INFO: kube-proxy-worker-49jgc from kube-system started at 2022-08-04 08:09:13 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.910: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:21:24.910: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-524bb from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.910: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.910: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  4 10:21:24.910: INFO: 
Logging pods the apiserver thinks is on node cn-hongkong.192.168.0.125 before test
Aug  4 10:21:24.916: INFO: csi-plugin-qbskg from kube-system started at 2022-08-04 08:09:00 +0000 UTC (4 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container csi-plugin ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container disk-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container nas-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container oss-driver-registrar ready: true, restart count 0
Aug  4 10:21:24.916: INFO: csi-provisioner-67f645cbd4-hm54w from kube-system started at 2022-08-04 08:09:18 +0000 UTC (8 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container csi-provisioner ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-csi-snapshotter ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-disk-attacher ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-disk-provisioner ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-disk-resizer ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-nas-provisioner ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-nas-resizer ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container external-snapshot-controller ready: true, restart count 0
Aug  4 10:21:24.916: INFO: kube-flannel-ds-psjwx from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container kube-flannel ready: true, restart count 0
Aug  4 10:21:24.916: INFO: kube-proxy-worker-9jvd9 from kube-system started at 2022-08-04 08:09:00 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container kube-proxy-worker ready: true, restart count 0
Aug  4 10:21:24.916: INFO: storage-cnfs-6ddd5d8756-g5fhv from kube-system started at 2022-08-04 09:24:49 +0000 UTC (1 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container storage-cnfs ready: true, restart count 0
Aug  4 10:21:24.916: INFO: sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-l7h89 from sonobuoy started at 2022-08-04 08:45:45 +0000 UTC (2 container statuses recorded)
Aug  4 10:21:24.916: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  4 10:21:24.916: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node cn-hongkong.192.168.0.121
STEP: verifying the node has the label node cn-hongkong.192.168.0.122
STEP: verifying the node has the label node cn-hongkong.192.168.0.123
STEP: verifying the node has the label node cn-hongkong.192.168.0.124
STEP: verifying the node has the label node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod simpletest.deployment-66485d9c57-dnlxm requesting resource cpu=0m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:24.995: INFO: Pod simpletest.deployment-66485d9c57-nn56k requesting resource cpu=0m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod alicloud-monitor-controller-5845594db4-45z4s requesting resource cpu=10m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod coredns-59b9d8db85-47n9g requesting resource cpu=100m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod coredns-59b9d8db85-hn4p6 requesting resource cpu=100m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:24.995: INFO: Pod csi-plugin-llrh8 requesting resource cpu=130m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:24.995: INFO: Pod csi-plugin-m56dc requesting resource cpu=130m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod csi-plugin-p5np9 requesting resource cpu=130m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:24.995: INFO: Pod csi-plugin-pdfn5 requesting resource cpu=130m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod csi-plugin-qbskg requesting resource cpu=130m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod csi-provisioner-67f645cbd4-hm54w requesting resource cpu=170m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod csi-provisioner-67f645cbd4-rs7qd requesting resource cpu=170m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod kube-flannel-ds-7dcg7 requesting resource cpu=100m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod kube-flannel-ds-jwn5s requesting resource cpu=100m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:24.995: INFO: Pod kube-flannel-ds-psjwx requesting resource cpu=100m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod kube-flannel-ds-wgv48 requesting resource cpu=100m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:24.995: INFO: Pod kube-flannel-ds-zr96w requesting resource cpu=100m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod kube-proxy-worker-49jgc requesting resource cpu=100m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:24.995: INFO: Pod kube-proxy-worker-655dh requesting resource cpu=100m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:24.995: INFO: Pod kube-proxy-worker-9jvd9 requesting resource cpu=100m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod kube-proxy-worker-hbmcg requesting resource cpu=100m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod kube-proxy-worker-nb9fn requesting resource cpu=100m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod metrics-server-74cc8bb57-59pqk requesting resource cpu=100m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod storage-auto-expander-ddb7844c-hdp2g requesting resource cpu=10m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod storage-cnfs-6ddd5d8756-g5fhv requesting resource cpu=10m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod storage-monitor-658c96866d-fvmv7 requesting resource cpu=10m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod storage-operator-56dcf896df-hgdkr requesting resource cpu=10m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod storage-snapshot-manager-554445c9bd-fvptn requesting resource cpu=100m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:24.995: INFO: Pod sonobuoy requesting resource cpu=0m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod sonobuoy-e2e-job-3d413db4faba4b79 requesting resource cpu=0m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-524bb requesting resource cpu=0m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:24.995: INFO: Pod sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-j4br8 requesting resource cpu=0m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:24.995: INFO: Pod sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-l7h89 requesting resource cpu=0m on Node cn-hongkong.192.168.0.125
Aug  4 10:21:24.995: INFO: Pod sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-pfxld requesting resource cpu=0m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:24.995: INFO: Pod sonobuoy-systemd-logs-daemon-set-c3bb745347964d06-zbrst requesting resource cpu=0m on Node cn-hongkong.192.168.0.121
STEP: Starting Pods to consume most of the cluster CPU.
Aug  4 10:21:24.995: INFO: Creating a pod which consumes cpu=5089m on Node cn-hongkong.192.168.0.121
Aug  4 10:21:25.003: INFO: Creating a pod which consumes cpu=4956m on Node cn-hongkong.192.168.0.122
Aug  4 10:21:25.008: INFO: Creating a pod which consumes cpu=5215m on Node cn-hongkong.192.168.0.123
Aug  4 10:21:25.014: INFO: Creating a pod which consumes cpu=5229m on Node cn-hongkong.192.168.0.124
Aug  4 10:21:25.018: INFO: Creating a pod which consumes cpu=5103m on Node cn-hongkong.192.168.0.125
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e.17081d1fc80c0d7f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5360/filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e to cn-hongkong.192.168.0.124]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e.17081d1fe0e9f716], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e.17081d1fe2747b80], Reason = [Created], Message = [Created container filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e.17081d1fe67f2962], Reason = [Started], Message = [Started container filler-pod-2b9bd107-7b43-4e1e-91f3-1ed669923f1e]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74.17081d1fc7622f1e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5360/filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74 to cn-hongkong.192.168.0.122]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74.17081d1fe0c617b6], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74.17081d1fe1ce69c2], Reason = [Created], Message = [Created container filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74.17081d1fe569b851], Reason = [Started], Message = [Started container filler-pod-665338d9-4b01-419a-93dd-d5178e7acd74]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868.17081d1fc7cf6155], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5360/filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868 to cn-hongkong.192.168.0.123]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868.17081d1fe0c8a9a8], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868.17081d1fe1e1ac10], Reason = [Created], Message = [Created container filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868.17081d1fe615449f], Reason = [Started], Message = [Started container filler-pod-6b2f6b18-0e9c-4c29-af96-078dbc405868]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6c927471-f9a9-422a-8af1-be35832d4414.17081d1fc8577b55], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5360/filler-pod-6c927471-f9a9-422a-8af1-be35832d4414 to cn-hongkong.192.168.0.125]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6c927471-f9a9-422a-8af1-be35832d4414.17081d1fe1773705], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6c927471-f9a9-422a-8af1-be35832d4414.17081d1fe29eb7e8], Reason = [Created], Message = [Created container filler-pod-6c927471-f9a9-422a-8af1-be35832d4414]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6c927471-f9a9-422a-8af1-be35832d4414.17081d1fe6a78916], Reason = [Started], Message = [Started container filler-pod-6c927471-f9a9-422a-8af1-be35832d4414]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149.17081d1fc71a55f9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5360/filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149 to cn-hongkong.192.168.0.121]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149.17081d1fe073f557], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149.17081d1fe1c0d1a6], Reason = [Created], Message = [Created container filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149.17081d1fe61a585d], Reason = [Started], Message = [Started container filler-pod-cdae3417-978d-43b5-8f66-2ee9949b2149]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.17081d20417f1a6f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 5 Insufficient cpu. preemption: 0/5 nodes are available: 5 No preemption victims found for incoming pod.]
STEP: removing the label node off the node cn-hongkong.192.168.0.125
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node cn-hongkong.192.168.0.121
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node cn-hongkong.192.168.0.122
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node cn-hongkong.192.168.0.123
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node cn-hongkong.192.168.0.124
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  4 10:21:28.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5360" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":343,"skipped":6346,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:28.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8139
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  4 10:21:30.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8139" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6380,"failed":0}
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:30.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug  4 10:21:30.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Aug  4 10:21:33.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 create -f -'
Aug  4 10:21:33.990: INFO: stderr: ""
Aug  4 10:21:33.990: INFO: stdout: "e2e-test-crd-publish-openapi-1959-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug  4 10:21:33.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 delete e2e-test-crd-publish-openapi-1959-crds test-foo'
Aug  4 10:21:34.034: INFO: stderr: ""
Aug  4 10:21:34.034: INFO: stdout: "e2e-test-crd-publish-openapi-1959-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug  4 10:21:34.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 apply -f -'
Aug  4 10:21:34.140: INFO: stderr: ""
Aug  4 10:21:34.140: INFO: stdout: "e2e-test-crd-publish-openapi-1959-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug  4 10:21:34.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 delete e2e-test-crd-publish-openapi-1959-crds test-foo'
Aug  4 10:21:34.188: INFO: stderr: ""
Aug  4 10:21:34.188: INFO: stdout: "e2e-test-crd-publish-openapi-1959-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Aug  4 10:21:34.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 create -f -'
Aug  4 10:21:34.510: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug  4 10:21:34.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 create -f -'
Aug  4 10:21:34.604: INFO: rc: 1
Aug  4 10:21:34.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 apply -f -'
Aug  4 10:21:34.702: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Aug  4 10:21:34.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 create -f -'
Aug  4 10:21:34.794: INFO: rc: 1
Aug  4 10:21:34.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 --namespace=crd-publish-openapi-7878 apply -f -'
Aug  4 10:21:34.888: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug  4 10:21:34.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 explain e2e-test-crd-publish-openapi-1959-crds'
Aug  4 10:21:34.987: INFO: stderr: ""
Aug  4 10:21:34.987: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1959-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug  4 10:21:34.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 explain e2e-test-crd-publish-openapi-1959-crds.metadata'
Aug  4 10:21:35.086: INFO: stderr: ""
Aug  4 10:21:35.086: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1959-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug  4 10:21:35.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 explain e2e-test-crd-publish-openapi-1959-crds.spec'
Aug  4 10:21:35.181: INFO: stderr: ""
Aug  4 10:21:35.182: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1959-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug  4 10:21:35.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 explain e2e-test-crd-publish-openapi-1959-crds.spec.bars'
Aug  4 10:21:35.280: INFO: stderr: ""
Aug  4 10:21:35.280: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1959-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug  4 10:21:35.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=crd-publish-openapi-7878 explain e2e-test-crd-publish-openapi-1959-crds.spec.bars2'
Aug  4 10:21:35.376: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:21:37.400: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7878" for this suite.

• [SLOW TEST:7.096 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":345,"skipped":6383,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:37.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7735
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Aug  4 10:21:37.545: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3602507234 --namespace=kubectl-7735 proxy --unix-socket=/tmp/kubectl-proxy-unix969678403/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  4 10:21:37.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7735" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":346,"skipped":6422,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:37.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  4 10:21:38.089: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  4 10:21:40.121: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:21:42.127: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:21:44.127: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:21:46.129: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  4 10:21:48.129: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 4, 10, 21, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  4 10:21:51.142: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:21:51.197: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-987" for this suite.
STEP: Destroying namespace "webhook-987-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.665 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":347,"skipped":6422,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:21:51.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5609
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-cdb755fc-e5e7-49aa-8bab-561170d1ef23
STEP: Creating secret with name s-test-opt-upd-bb276f06-44f6-4ea5-9a85-08669235fd0e
STEP: Creating the pod
Aug  4 10:21:51.402: INFO: The status of Pod pod-projected-secrets-efaee92c-ad95-4204-8d2d-aa7933ec0d05 is Pending, waiting for it to be Running (with Ready = true)
Aug  4 10:21:53.407: INFO: The status of Pod pod-projected-secrets-efaee92c-ad95-4204-8d2d-aa7933ec0d05 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-cdb755fc-e5e7-49aa-8bab-561170d1ef23
STEP: Updating secret s-test-opt-upd-bb276f06-44f6-4ea5-9a85-08669235fd0e
STEP: Creating secret with name s-test-opt-create-ad211341-cb68-4430-be9e-c6b02bc5c033
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  4 10:23:19.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5609" for this suite.

• [SLOW TEST:88.594 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6456,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:19.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-4085
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Aug  4 10:23:19.974: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-4085" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":349,"skipped":6483,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:19.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2834
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug  4 10:23:20.119: INFO: Waiting up to 5m0s for pod "pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06" in namespace "emptydir-2834" to be "Succeeded or Failed"
Aug  4 10:23:20.123: INFO: Pod "pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06": Phase="Pending", Reason="", readiness=false. Elapsed: 3.932085ms
Aug  4 10:23:22.128: INFO: Pod "pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00885367s
Aug  4 10:23:24.134: INFO: Pod "pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014447474s
STEP: Saw pod success
Aug  4 10:23:24.134: INFO: Pod "pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06" satisfied condition "Succeeded or Failed"
Aug  4 10:23:24.137: INFO: Trying to get logs from node cn-hongkong.192.168.0.125 pod pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06 container test-container: <nil>
STEP: delete the pod
Aug  4 10:23:24.165: INFO: Waiting for pod pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06 to disappear
Aug  4 10:23:24.168: INFO: Pod pod-9ba7c2f0-eeb6-47fb-8fea-e8464ff7cc06 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:23:24.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2834" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6492,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:24.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  4 10:23:28.348: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  4 10:23:28.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-923" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":351,"skipped":6532,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:28.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug  4 10:23:31.033: INFO: Successfully updated pod "adopt-release-gs6cc"
STEP: Checking that the Job readopts the Pod
Aug  4 10:23:31.033: INFO: Waiting up to 15m0s for pod "adopt-release-gs6cc" in namespace "job-7054" to be "adopted"
Aug  4 10:23:31.037: INFO: Pod "adopt-release-gs6cc": Phase="Running", Reason="", readiness=true. Elapsed: 4.023525ms
Aug  4 10:23:33.043: INFO: Pod "adopt-release-gs6cc": Phase="Running", Reason="", readiness=true. Elapsed: 2.010233334s
Aug  4 10:23:33.043: INFO: Pod "adopt-release-gs6cc" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug  4 10:23:33.556: INFO: Successfully updated pod "adopt-release-gs6cc"
STEP: Checking that the Job releases the Pod
Aug  4 10:23:33.556: INFO: Waiting up to 15m0s for pod "adopt-release-gs6cc" in namespace "job-7054" to be "released"
Aug  4 10:23:33.558: INFO: Pod "adopt-release-gs6cc": Phase="Running", Reason="", readiness=true. Elapsed: 2.820298ms
Aug  4 10:23:35.566: INFO: Pod "adopt-release-gs6cc": Phase="Running", Reason="", readiness=true. Elapsed: 2.01033856s
Aug  4 10:23:35.566: INFO: Pod "adopt-release-gs6cc" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  4 10:23:35.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7054" for this suite.

• [SLOW TEST:7.203 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":352,"skipped":6558,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:35.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-c7c8b6ac-e7fa-453a-86ce-d54f6f868412
STEP: Creating a pod to test consume configMaps
Aug  4 10:23:35.715: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba" in namespace "projected-1410" to be "Succeeded or Failed"
Aug  4 10:23:35.719: INFO: Pod "pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba": Phase="Pending", Reason="", readiness=false. Elapsed: 3.958046ms
Aug  4 10:23:37.726: INFO: Pod "pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011499586s
Aug  4 10:23:39.735: INFO: Pod "pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020236409s
STEP: Saw pod success
Aug  4 10:23:39.735: INFO: Pod "pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba" satisfied condition "Succeeded or Failed"
Aug  4 10:23:39.739: INFO: Trying to get logs from node cn-hongkong.192.168.0.124 pod pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:23:39.757: INFO: Waiting for pod pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba to disappear
Aug  4 10:23:39.760: INFO: Pod pod-projected-configmaps-d03c08aa-17bb-4e0f-98d0-e8d8a788c2ba no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  4 10:23:39.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1410" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":353,"skipped":6574,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:39.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7766
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug  4 10:23:39.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  4 10:23:54.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7766" for this suite.

• [SLOW TEST:14.806 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":354,"skipped":6576,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:54.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug  4 10:23:54.724: INFO: Waiting up to 5m0s for pod "pod-df61e004-8334-47c1-bed3-8517de9801f1" in namespace "emptydir-2598" to be "Succeeded or Failed"
Aug  4 10:23:54.728: INFO: Pod "pod-df61e004-8334-47c1-bed3-8517de9801f1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.467708ms
Aug  4 10:23:56.734: INFO: Pod "pod-df61e004-8334-47c1-bed3-8517de9801f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010236415s
Aug  4 10:23:58.740: INFO: Pod "pod-df61e004-8334-47c1-bed3-8517de9801f1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015463223s
STEP: Saw pod success
Aug  4 10:23:58.740: INFO: Pod "pod-df61e004-8334-47c1-bed3-8517de9801f1" satisfied condition "Succeeded or Failed"
Aug  4 10:23:58.743: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-df61e004-8334-47c1-bed3-8517de9801f1 container test-container: <nil>
STEP: delete the pod
Aug  4 10:23:58.775: INFO: Waiting for pod pod-df61e004-8334-47c1-bed3-8517de9801f1 to disappear
Aug  4 10:23:58.778: INFO: Pod pod-df61e004-8334-47c1-bed3-8517de9801f1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  4 10:23:58.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2598" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":355,"skipped":6581,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  4 10:23:58.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3602507234
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7573
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-648c40b6-0dee-48db-9d77-dc15c708df4f
STEP: Creating a pod to test consume configMaps
Aug  4 10:23:58.935: INFO: Waiting up to 5m0s for pod "pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f" in namespace "configmap-7573" to be "Succeeded or Failed"
Aug  4 10:23:58.938: INFO: Pod "pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.464227ms
Aug  4 10:24:00.945: INFO: Pod "pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01027133s
Aug  4 10:24:02.954: INFO: Pod "pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018834969s
STEP: Saw pod success
Aug  4 10:24:02.954: INFO: Pod "pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f" satisfied condition "Succeeded or Failed"
Aug  4 10:24:02.957: INFO: Trying to get logs from node cn-hongkong.192.168.0.121 pod pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f container agnhost-container: <nil>
STEP: delete the pod
Aug  4 10:24:02.981: INFO: Waiting for pod pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f to disappear
Aug  4 10:24:02.984: INFO: Pod pod-configmaps-b68942c7-49ce-45ae-bf25-2ed0d7a34f1f no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  4 10:24:02.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7573" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6594,"failed":0}
SSSSSSSSSSSSSSSSSSSSSAug  4 10:24:02.998: INFO: Running AfterSuite actions on all nodes
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug  4 10:24:02.998: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug  4 10:24:02.998: INFO: Running AfterSuite actions on node 1
Aug  4 10:24:02.998: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5863.279 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h37m44.622153352s
Test Suite Passed
