I0111 23:05:00.846250      19 e2e.go:129] Starting e2e run "88d88f57-65ea-42ab-a2fe-40f138fdf3e2" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1673478300 - Will randomize all specs
Will run 356 of 6973 specs

E0111 23:05:02.722151      19 progress.go:119] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
Jan 11 23:05:02.723: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:05:02.724: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jan 11 23:05:02.762: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jan 11 23:05:02.783: INFO: 15 / 15 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jan 11 23:05:02.783: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
Jan 11 23:05:02.783: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jan 11 23:05:02.787: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'azure-ip-masq-agent' (0 seconds elapsed)
Jan 11 23:05:02.787: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Jan 11 23:05:02.787: INFO: e2e test version: v1.24.8
Jan 11 23:05:02.798: INFO: kube-apiserver version: v1.24.8
Jan 11 23:05:02.798: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:05:02.802: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:05:02.802: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-pred
W0111 23:05:02.836018      19 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jan 11 23:05:02.836: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Jan 11 23:05:02.844: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0111 23:05:02.848800      19 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0111 23:05:02.871903      19 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jan 11 23:05:02.882: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 11 23:05:03.011: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 11 23:05:03.021: INFO: Waiting for terminating namespaces to be deleted...
Jan 11 23:05:03.024: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000000 before test
Jan 11 23:05:03.030: INFO: azure-ip-masq-agent-52p4t from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.030: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:05:03.030: INFO: kube-proxy-8chww from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.030: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:05:03.030: INFO: sonobuoy-e2e-job-4d0b931cd54444dd from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:05:03.030: INFO: 	Container e2e ready: false, restart count 0
Jan 11 23:05:03.031: INFO: 	Container sonobuoy-worker ready: false, restart count 0
Jan 11 23:05:03.031: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:05:03.031: INFO: 	Container sonobuoy-worker ready: false, restart count 0
Jan 11 23:05:03.031: INFO: 	Container systemd-logs ready: false, restart count 0
Jan 11 23:05:03.031: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000001 before test
Jan 11 23:05:03.036: INFO: azure-ip-masq-agent-t5whg from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.036: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:05:03.036: INFO: kube-proxy-8rhgx from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.037: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:05:03.037: INFO: sonobuoy from sonobuoy started at 2023-01-11 23:04:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.037: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 11 23:05:03.037: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-jfx64 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:05:03.037: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:05:03.037: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 11 23:05:03.037: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000002 before test
Jan 11 23:05:03.042: INFO: azure-ip-masq-agent-tp2qx from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.043: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:05:03.043: INFO: kube-proxy-g5hg6 from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.043: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:05:03.043: INFO: metrics-server-66dd6687d9-rldfm from kube-system started at 2023-01-11 22:59:21 +0000 UTC (1 container statuses recorded)
Jan 11 23:05:03.043: INFO: 	Container metrics-server ready: true, restart count 0
Jan 11 23:05:03.043: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-whj75 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:05:03.043: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:05:03.043: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.173963a672650b79], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/master: true}, 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:05:04.088: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6460" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":1,"skipped":34,"failed":0}
SS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:05:04.099: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
E0111 23:05:04.100441      19 progress.go:119] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5757
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:05:04.271: INFO: Create a RollingUpdate DaemonSet
Jan 11 23:05:04.275: INFO: Check that daemon pods launch on every node of the cluster
Jan 11 23:05:04.281: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:04.291: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:04.291: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:05.301: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:05.306: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:05.306: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:06.299: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:06.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:06.303: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:07.304: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:07.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:07.308: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:08.302: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:08.306: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:08.306: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:09.309: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:09.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:09.314: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:10.298: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:10.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 11 23:05:10.313: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:11.301: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:11.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:11.310: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:12.299: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:12.304: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 11 23:05:12.304: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Jan 11 23:05:12.304: INFO: Update the DaemonSet to trigger a rollout
Jan 11 23:05:12.314: INFO: Updating DaemonSet daemon-set
Jan 11 23:05:24.361: INFO: Roll back the DaemonSet before rollout is complete
Jan 11 23:05:24.368: INFO: Updating DaemonSet daemon-set
Jan 11 23:05:24.368: INFO: Make sure DaemonSet rollback is complete
Jan 11 23:05:24.371: INFO: Wrong image for pod: daemon-set-2tpgh. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Jan 11 23:05:24.371: INFO: Pod daemon-set-2tpgh is not available
Jan 11 23:05:24.378: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:25.389: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:26.397: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:27.384: INFO: Pod daemon-set-hkvn6 is not available
Jan 11 23:05:27.389: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5757, will wait for the garbage collector to delete the pods
Jan 11 23:05:27.463: INFO: Deleting DaemonSet.extensions daemon-set took: 5.082254ms
Jan 11 23:05:27.563: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.664387ms
Jan 11 23:05:31.568: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:31.568: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 11 23:05:31.574: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1525"},"items":null}

Jan 11 23:05:31.576: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1525"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:05:31.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5757" for this suite.

â€¢ [SLOW TEST:27.508 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":2,"skipped":36,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:05:31.608: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:05:31.782: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Jan 11 23:05:31.803: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:31.809: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:31.809: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:32.822: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:32.827: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:05:32.827: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:05:33.817: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:33.822: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 11 23:05:33.822: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Jan 11 23:05:33.858: INFO: Wrong image for pod: daemon-set-n868j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:33.858: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:33.858: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:33.876: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:34.886: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:34.886: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:34.891: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:35.883: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:35.883: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:35.888: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:36.887: INFO: Pod daemon-set-4q5m7 is not available
Jan 11 23:05:36.887: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:36.887: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:36.893: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:37.884: INFO: Pod daemon-set-4q5m7 is not available
Jan 11 23:05:37.884: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:37.884: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:37.889: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:38.885: INFO: Pod daemon-set-4q5m7 is not available
Jan 11 23:05:38.885: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:38.885: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:38.889: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:39.884: INFO: Pod daemon-set-4q5m7 is not available
Jan 11 23:05:39.884: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:39.884: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:39.888: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:40.883: INFO: Pod daemon-set-4q5m7 is not available
Jan 11 23:05:40.883: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:40.883: INFO: Wrong image for pod: daemon-set-w5mhw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:40.888: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:41.881: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:41.887: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:42.885: INFO: Pod daemon-set-6bz95 is not available
Jan 11 23:05:42.885: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:42.892: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:43.883: INFO: Pod daemon-set-6bz95 is not available
Jan 11 23:05:43.883: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:43.887: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:44.884: INFO: Pod daemon-set-6bz95 is not available
Jan 11 23:05:44.884: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:44.889: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:45.883: INFO: Pod daemon-set-6bz95 is not available
Jan 11 23:05:45.883: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:45.888: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:46.884: INFO: Pod daemon-set-6bz95 is not available
Jan 11 23:05:46.884: INFO: Wrong image for pod: daemon-set-sr6xv. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 11 23:05:46.889: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:47.892: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:48.886: INFO: Pod daemon-set-6lv2p is not available
Jan 11 23:05:48.891: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Jan 11 23:05:48.895: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:48.899: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:48.899: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:49.910: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:49.919: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:49.919: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:50.909: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:50.913: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:50.913: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:51.907: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:51.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:51.911: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:52.908: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:52.912: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:52.912: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:53.906: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:53.909: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:53.909: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:54.909: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:54.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:54.914: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:55.907: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:55.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:55.910: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:56.911: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:56.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:05:56.915: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:05:57.912: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:05:57.919: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 11 23:05:57.919: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1957, will wait for the garbage collector to delete the pods
Jan 11 23:05:58.004: INFO: Deleting DaemonSet.extensions daemon-set took: 6.343669ms
Jan 11 23:05:58.104: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.518708ms
Jan 11 23:06:03.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:06:03.313: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 11 23:06:03.316: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1738"},"items":null}

Jan 11 23:06:03.319: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1738"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:06:03.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1957" for this suite.

â€¢ [SLOW TEST:31.743 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":3,"skipped":81,"failed":0}
SS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:03.352: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3486
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:06:03.508: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 11 23:06:08.515: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Jan 11 23:06:08.527: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Jan 11 23:06:08.583: INFO: observed ReplicaSet test-rs in namespace replicaset-3486 with ReadyReplicas 1, AvailableReplicas 1
Jan 11 23:06:08.608: INFO: observed ReplicaSet test-rs in namespace replicaset-3486 with ReadyReplicas 1, AvailableReplicas 1
Jan 11 23:06:08.656: INFO: observed ReplicaSet test-rs in namespace replicaset-3486 with ReadyReplicas 1, AvailableReplicas 1
Jan 11 23:06:08.669: INFO: observed ReplicaSet test-rs in namespace replicaset-3486 with ReadyReplicas 1, AvailableReplicas 1
Jan 11 23:06:09.569: INFO: observed ReplicaSet test-rs in namespace replicaset-3486 with ReadyReplicas 2, AvailableReplicas 2
Jan 11 23:06:11.240: INFO: observed Replicaset test-rs in namespace replicaset-3486 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 11 23:06:11.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3486" for this suite.

â€¢ [SLOW TEST:7.911 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":4,"skipped":83,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:11.266: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2225
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-70aaadb1-fb3d-4f0e-a2e2-1fc5c9ebe558
STEP: Creating a pod to test consume configMaps
Jan 11 23:06:11.429: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427" in namespace "projected-2225" to be "Succeeded or Failed"
Jan 11 23:06:11.436: INFO: Pod "pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427": Phase="Pending", Reason="", readiness=false. Elapsed: 7.213681ms
Jan 11 23:06:13.450: INFO: Pod "pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020971552s
Jan 11 23:06:15.456: INFO: Pod "pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027425879s
STEP: Saw pod success
Jan 11 23:06:15.456: INFO: Pod "pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427" satisfied condition "Succeeded or Failed"
Jan 11 23:06:15.460: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:06:15.520: INFO: Waiting for pod pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427 to disappear
Jan 11 23:06:15.524: INFO: Pod pod-projected-configmaps-a9ba329a-40be-4a1f-bf05-7986abd33427 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:06:15.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2225" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":149,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:15.536: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9714
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-8b2fc04a-6635-4477-8ce0-0ec2d014a55f
STEP: Creating configMap with name cm-test-opt-upd-667ebcfc-9729-4a7b-a225-e5778f1ac529
STEP: Creating the pod
Jan 11 23:06:15.722: INFO: The status of Pod pod-projected-configmaps-5412ff16-cbc3-4b18-ba6e-5195f08c97f9 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:06:17.731: INFO: The status of Pod pod-projected-configmaps-5412ff16-cbc3-4b18-ba6e-5195f08c97f9 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-8b2fc04a-6635-4477-8ce0-0ec2d014a55f
STEP: Updating configmap cm-test-opt-upd-667ebcfc-9729-4a7b-a225-e5778f1ac529
STEP: Creating configMap with name cm-test-opt-create-9d5bdd56-f802-435f-96d8-6e5c00ffb650
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:06:21.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9714" for this suite.

â€¢ [SLOW TEST:6.321 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":6,"skipped":178,"failed":0}
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:21.858: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6385
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 11 23:06:28.118: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 11 23:06:28.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6385" for this suite.

â€¢ [SLOW TEST:6.287 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    on terminated container
    test/e2e/common/node/runtime.go:136
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":7,"skipped":181,"failed":0}
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:28.146: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2503
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-2503
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-2503
Jan 11 23:06:28.353: INFO: Found 0 stateful pods, waiting for 1
Jan 11 23:06:38.367: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 11 23:06:38.411: INFO: Deleting all statefulset in ns statefulset-2503
Jan 11 23:06:38.423: INFO: Scaling statefulset ss to 0
Jan 11 23:06:48.461: INFO: Waiting for statefulset status.replicas updated to 0
Jan 11 23:06:48.465: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 11 23:06:48.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2503" for this suite.

â€¢ [SLOW TEST:20.361 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":8,"skipped":185,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:48.508: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4299
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-18865923-0909-4184-9115-ffa32773cbc2
STEP: Creating secret with name secret-projected-all-test-volume-cfd3dddc-9c47-4c47-a03c-2df4702fe0b4
STEP: Creating a pod to test Check all projections for projected volume plugin
Jan 11 23:06:48.668: INFO: Waiting up to 5m0s for pod "projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c" in namespace "projected-4299" to be "Succeeded or Failed"
Jan 11 23:06:48.685: INFO: Pod "projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c": Phase="Pending", Reason="", readiness=false. Elapsed: 17.742353ms
Jan 11 23:06:50.691: INFO: Pod "projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023700088s
Jan 11 23:06:52.699: INFO: Pod "projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030938834s
STEP: Saw pod success
Jan 11 23:06:52.699: INFO: Pod "projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c" satisfied condition "Succeeded or Failed"
Jan 11 23:06:52.702: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c container projected-all-volume-test: <nil>
STEP: delete the pod
Jan 11 23:06:52.727: INFO: Waiting for pod projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c to disappear
Jan 11 23:06:52.730: INFO: Pod projected-volume-97b43612-f2e5-4c2b-80bd-8948fe0aca2c no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Jan 11 23:06:52.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4299" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":9,"skipped":206,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:52.739: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:06:52.889: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:06:59.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3417" for this suite.

â€¢ [SLOW TEST:6.433 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":10,"skipped":208,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:06:59.173: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-4633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Jan 11 23:06:59.337: INFO: Waiting up to 5m0s for pod "client-containers-8686bf28-7c9e-4895-9650-397b2becb410" in namespace "containers-4633" to be "Succeeded or Failed"
Jan 11 23:06:59.347: INFO: Pod "client-containers-8686bf28-7c9e-4895-9650-397b2becb410": Phase="Pending", Reason="", readiness=false. Elapsed: 10.696616ms
Jan 11 23:07:01.356: INFO: Pod "client-containers-8686bf28-7c9e-4895-9650-397b2becb410": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01945573s
Jan 11 23:07:03.367: INFO: Pod "client-containers-8686bf28-7c9e-4895-9650-397b2becb410": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029791919s
STEP: Saw pod success
Jan 11 23:07:03.367: INFO: Pod "client-containers-8686bf28-7c9e-4895-9650-397b2becb410" satisfied condition "Succeeded or Failed"
Jan 11 23:07:03.370: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod client-containers-8686bf28-7c9e-4895-9650-397b2becb410 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:07:03.395: INFO: Waiting for pod client-containers-8686bf28-7c9e-4895-9650-397b2becb410 to disappear
Jan 11 23:07:03.409: INFO: Pod client-containers-8686bf28-7c9e-4895-9650-397b2becb410 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 11 23:07:03.409: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-4633" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":219,"failed":0}
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:03.419: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3529
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:07:03.550: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:07:04.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3529" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":12,"skipped":223,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:04.598: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-1440
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 11 23:07:04.768: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 11 23:07:04.773: INFO: starting watch
STEP: patching
STEP: updating
Jan 11 23:07:04.786: INFO: waiting for watch events with expected annotations
Jan 11 23:07:04.786: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Jan 11 23:07:04.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-1440" for this suite.
â€¢{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":13,"skipped":275,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:04.857: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-2481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2481
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 11 23:07:04.989: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 11 23:07:05.045: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:07:07.063: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:07:09.055: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:07:11.054: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:07:13.056: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:07:15.053: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:07:17.055: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 11 23:07:17.062: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 11 23:07:19.075: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 11 23:07:21.069: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 11 23:07:23.070: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 11 23:07:25.073: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 11 23:07:27.072: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 11 23:07:27.077: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 11 23:07:29.108: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 11 23:07:29.109: INFO: Breadth first check of 10.240.0.35 on host 10.240.0.34...
Jan 11 23:07:29.111: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.91:9080/dial?request=hostname&protocol=http&host=10.240.0.35&port=8083&tries=1'] Namespace:pod-network-test-2481 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:07:29.111: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:07:29.112: INFO: ExecWithOptions: Clientset creation
Jan 11 23:07:29.113: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-2481/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.240.0.35%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 11 23:07:29.236: INFO: Waiting for responses: map[]
Jan 11 23:07:29.236: INFO: reached 10.240.0.35 after 0/1 tries
Jan 11 23:07:29.236: INFO: Breadth first check of 10.240.0.71 on host 10.240.0.63...
Jan 11 23:07:29.240: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.91:9080/dial?request=hostname&protocol=http&host=10.240.0.71&port=8083&tries=1'] Namespace:pod-network-test-2481 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:07:29.240: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:07:29.241: INFO: ExecWithOptions: Clientset creation
Jan 11 23:07:29.241: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-2481/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.240.0.71%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 11 23:07:29.358: INFO: Waiting for responses: map[]
Jan 11 23:07:29.358: INFO: reached 10.240.0.71 after 0/1 tries
Jan 11 23:07:29.358: INFO: Breadth first check of 10.240.0.99 on host 10.240.0.92...
Jan 11 23:07:29.363: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.91:9080/dial?request=hostname&protocol=http&host=10.240.0.99&port=8083&tries=1'] Namespace:pod-network-test-2481 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:07:29.363: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:07:29.364: INFO: ExecWithOptions: Clientset creation
Jan 11 23:07:29.364: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-2481/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.240.0.99%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 11 23:07:29.482: INFO: Waiting for responses: map[]
Jan 11 23:07:29.482: INFO: reached 10.240.0.99 after 0/1 tries
Jan 11 23:07:29.482: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 11 23:07:29.483: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2481" for this suite.

â€¢ [SLOW TEST:24.638 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":14,"skipped":290,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:29.495: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9377
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:07:29.664: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c" in namespace "downward-api-9377" to be "Succeeded or Failed"
Jan 11 23:07:29.673: INFO: Pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c": Phase="Pending", Reason="", readiness=false. Elapsed: 8.908068ms
Jan 11 23:07:31.682: INFO: Pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c": Phase="Running", Reason="", readiness=true. Elapsed: 2.017675341s
Jan 11 23:07:33.691: INFO: Pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c": Phase="Running", Reason="", readiness=false. Elapsed: 4.0263397s
Jan 11 23:07:35.697: INFO: Pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.032878978s
STEP: Saw pod success
Jan 11 23:07:35.697: INFO: Pod "downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c" satisfied condition "Succeeded or Failed"
Jan 11 23:07:35.701: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c container client-container: <nil>
STEP: delete the pod
Jan 11 23:07:35.745: INFO: Waiting for pod downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c to disappear
Jan 11 23:07:35.754: INFO: Pod downwardapi-volume-7fee05d1-5368-4593-8865-623e86e6e53c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:07:35.754: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9377" for this suite.

â€¢ [SLOW TEST:6.268 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":299,"failed":0}
SSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:35.764: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2835
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Jan 11 23:07:35.914: INFO: Waiting up to 5m0s for pod "var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f" in namespace "var-expansion-2835" to be "Succeeded or Failed"
Jan 11 23:07:35.923: INFO: Pod "var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.619091ms
Jan 11 23:07:37.931: INFO: Pod "var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01645797s
Jan 11 23:07:39.943: INFO: Pod "var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028355592s
STEP: Saw pod success
Jan 11 23:07:39.943: INFO: Pod "var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f" satisfied condition "Succeeded or Failed"
Jan 11 23:07:39.949: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f container dapi-container: <nil>
STEP: delete the pod
Jan 11 23:07:39.990: INFO: Waiting for pod var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f to disappear
Jan 11 23:07:39.993: INFO: Pod var-expansion-3d03ca59-6078-4a51-a099-3029058dfd7f no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 11 23:07:39.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2835" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":16,"skipped":302,"failed":0}
SSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:07:40.002: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:07:54.216: INFO: DNS probes using dns-test-8f507fcd-fcda-4a98-b05a-0b5c8ed5b721 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:08:04.289: INFO: DNS probes using dns-test-1a9f40ca-2797-481e-808a-12ca06d58a50 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8075.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8075.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:08:12.371: INFO: DNS probes using dns-test-53951c92-a4c7-4ec7-b1f4-5cf44883eab4 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 11 23:08:12.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8075" for this suite.

â€¢ [SLOW TEST:32.428 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":17,"skipped":307,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:12.434: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 11 23:08:12.569: INFO: namespace kubectl-8683
Jan 11 23:08:12.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8683 create -f -'
Jan 11 23:08:13.705: INFO: stderr: ""
Jan 11 23:08:13.705: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 11 23:08:14.713: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 11 23:08:14.713: INFO: Found 0 / 1
Jan 11 23:08:15.712: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 11 23:08:15.712: INFO: Found 1 / 1
Jan 11 23:08:15.712: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 11 23:08:15.715: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 11 23:08:15.715: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 11 23:08:15.715: INFO: wait on agnhost-primary startup in kubectl-8683 
Jan 11 23:08:15.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8683 logs agnhost-primary-vwpsb agnhost-primary'
Jan 11 23:08:15.804: INFO: stderr: ""
Jan 11 23:08:15.804: INFO: stdout: "Paused\n"
STEP: exposing RC
Jan 11 23:08:15.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8683 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jan 11 23:08:15.894: INFO: stderr: ""
Jan 11 23:08:15.894: INFO: stdout: "service/rm2 exposed\n"
Jan 11 23:08:15.900: INFO: Service rm2 in namespace kubectl-8683 found.
STEP: exposing service
Jan 11 23:08:17.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8683 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jan 11 23:08:18.011: INFO: stderr: ""
Jan 11 23:08:18.011: INFO: stdout: "service/rm3 exposed\n"
Jan 11 23:08:18.024: INFO: Service rm3 in namespace kubectl-8683 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:08:20.036: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8683" for this suite.

â€¢ [SLOW TEST:7.614 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":18,"skipped":374,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:20.048: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-9616
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:08:20.230: INFO: created pod pod-service-account-defaultsa
Jan 11 23:08:20.230: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jan 11 23:08:20.248: INFO: created pod pod-service-account-mountsa
Jan 11 23:08:20.248: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jan 11 23:08:20.265: INFO: created pod pod-service-account-nomountsa
Jan 11 23:08:20.265: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jan 11 23:08:20.293: INFO: created pod pod-service-account-defaultsa-mountspec
Jan 11 23:08:20.293: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jan 11 23:08:20.303: INFO: created pod pod-service-account-mountsa-mountspec
Jan 11 23:08:20.303: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jan 11 23:08:20.333: INFO: created pod pod-service-account-nomountsa-mountspec
Jan 11 23:08:20.333: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jan 11 23:08:20.344: INFO: created pod pod-service-account-defaultsa-nomountspec
Jan 11 23:08:20.344: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jan 11 23:08:20.366: INFO: created pod pod-service-account-mountsa-nomountspec
Jan 11 23:08:20.366: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jan 11 23:08:20.388: INFO: created pod pod-service-account-nomountsa-nomountspec
Jan 11 23:08:20.388: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 11 23:08:20.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-9616" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":19,"skipped":402,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:20.420: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-846
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 11 23:08:20.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 create -f -'
Jan 11 23:08:20.928: INFO: stderr: ""
Jan 11 23:08:20.928: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 11 23:08:20.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:21.044: INFO: stderr: ""
Jan 11 23:08:21.044: INFO: stdout: "update-demo-nautilus-b8dx4 update-demo-nautilus-jjx8q "
Jan 11 23:08:21.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-b8dx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:21.136: INFO: stderr: ""
Jan 11 23:08:21.136: INFO: stdout: ""
Jan 11 23:08:21.136: INFO: update-demo-nautilus-b8dx4 is created but not running
Jan 11 23:08:26.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:26.218: INFO: stderr: ""
Jan 11 23:08:26.218: INFO: stdout: "update-demo-nautilus-b8dx4 update-demo-nautilus-jjx8q "
Jan 11 23:08:26.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-b8dx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:26.310: INFO: stderr: ""
Jan 11 23:08:26.310: INFO: stdout: ""
Jan 11 23:08:26.310: INFO: update-demo-nautilus-b8dx4 is created but not running
Jan 11 23:08:31.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:31.389: INFO: stderr: ""
Jan 11 23:08:31.389: INFO: stdout: "update-demo-nautilus-b8dx4 update-demo-nautilus-jjx8q "
Jan 11 23:08:31.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-b8dx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:31.458: INFO: stderr: ""
Jan 11 23:08:31.458: INFO: stdout: ""
Jan 11 23:08:31.458: INFO: update-demo-nautilus-b8dx4 is created but not running
Jan 11 23:08:36.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:36.539: INFO: stderr: ""
Jan 11 23:08:36.539: INFO: stdout: "update-demo-nautilus-b8dx4 update-demo-nautilus-jjx8q "
Jan 11 23:08:36.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-b8dx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:36.611: INFO: stderr: ""
Jan 11 23:08:36.611: INFO: stdout: "true"
Jan 11 23:08:36.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-b8dx4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 11 23:08:36.681: INFO: stderr: ""
Jan 11 23:08:36.681: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 11 23:08:36.681: INFO: validating pod update-demo-nautilus-b8dx4
Jan 11 23:08:36.688: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 11 23:08:36.688: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 11 23:08:36.688: INFO: update-demo-nautilus-b8dx4 is verified up and running
Jan 11 23:08:36.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:36.761: INFO: stderr: ""
Jan 11 23:08:36.761: INFO: stdout: "true"
Jan 11 23:08:36.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 11 23:08:36.831: INFO: stderr: ""
Jan 11 23:08:36.831: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 11 23:08:36.831: INFO: validating pod update-demo-nautilus-jjx8q
Jan 11 23:08:36.839: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 11 23:08:36.839: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 11 23:08:36.839: INFO: update-demo-nautilus-jjx8q is verified up and running
STEP: scaling down the replication controller
Jan 11 23:08:36.840: INFO: scanned /root for discovery docs: <nil>
Jan 11 23:08:36.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jan 11 23:08:37.934: INFO: stderr: ""
Jan 11 23:08:37.934: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 11 23:08:37.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:38.005: INFO: stderr: ""
Jan 11 23:08:38.005: INFO: stdout: "update-demo-nautilus-b8dx4 update-demo-nautilus-jjx8q "
STEP: Replicas for name=update-demo: expected=1 actual=2
Jan 11 23:08:43.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:43.084: INFO: stderr: ""
Jan 11 23:08:43.084: INFO: stdout: "update-demo-nautilus-jjx8q "
Jan 11 23:08:43.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:43.166: INFO: stderr: ""
Jan 11 23:08:43.166: INFO: stdout: "true"
Jan 11 23:08:43.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 11 23:08:43.238: INFO: stderr: ""
Jan 11 23:08:43.238: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 11 23:08:43.238: INFO: validating pod update-demo-nautilus-jjx8q
Jan 11 23:08:43.242: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 11 23:08:43.242: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 11 23:08:43.242: INFO: update-demo-nautilus-jjx8q is verified up and running
STEP: scaling up the replication controller
Jan 11 23:08:43.243: INFO: scanned /root for discovery docs: <nil>
Jan 11 23:08:43.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jan 11 23:08:44.355: INFO: stderr: ""
Jan 11 23:08:44.355: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 11 23:08:44.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 11 23:08:44.440: INFO: stderr: ""
Jan 11 23:08:44.440: INFO: stdout: "update-demo-nautilus-jjx8q update-demo-nautilus-nmtb4 "
Jan 11 23:08:44.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:44.518: INFO: stderr: ""
Jan 11 23:08:44.518: INFO: stdout: "true"
Jan 11 23:08:44.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-jjx8q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 11 23:08:44.602: INFO: stderr: ""
Jan 11 23:08:44.602: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 11 23:08:44.602: INFO: validating pod update-demo-nautilus-jjx8q
Jan 11 23:08:44.606: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 11 23:08:44.606: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 11 23:08:44.606: INFO: update-demo-nautilus-jjx8q is verified up and running
Jan 11 23:08:44.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-nmtb4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 11 23:08:44.674: INFO: stderr: ""
Jan 11 23:08:44.674: INFO: stdout: "true"
Jan 11 23:08:44.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods update-demo-nautilus-nmtb4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 11 23:08:44.762: INFO: stderr: ""
Jan 11 23:08:44.762: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 11 23:08:44.762: INFO: validating pod update-demo-nautilus-nmtb4
Jan 11 23:08:44.771: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 11 23:08:44.771: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 11 23:08:44.771: INFO: update-demo-nautilus-nmtb4 is verified up and running
STEP: using delete to clean up resources
Jan 11 23:08:44.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 delete --grace-period=0 --force -f -'
Jan 11 23:08:44.842: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:08:44.842: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 11 23:08:44.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get rc,svc -l name=update-demo --no-headers'
Jan 11 23:08:44.947: INFO: stderr: "No resources found in kubectl-846 namespace.\n"
Jan 11 23:08:44.947: INFO: stdout: ""
Jan 11 23:08:44.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-846 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 11 23:08:45.035: INFO: stderr: ""
Jan 11 23:08:45.035: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:08:45.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-846" for this suite.

â€¢ [SLOW TEST:24.624 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":20,"skipped":492,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:45.045: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Jan 11 23:08:45.215: INFO: Waiting up to 5m0s for pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae" in namespace "var-expansion-2927" to be "Succeeded or Failed"
Jan 11 23:08:45.222: INFO: Pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae": Phase="Pending", Reason="", readiness=false. Elapsed: 6.895872ms
Jan 11 23:08:47.233: INFO: Pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018586135s
Jan 11 23:08:49.246: INFO: Pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031365704s
Jan 11 23:08:51.254: INFO: Pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.039218521s
STEP: Saw pod success
Jan 11 23:08:51.254: INFO: Pod "var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae" satisfied condition "Succeeded or Failed"
Jan 11 23:08:51.258: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae container dapi-container: <nil>
STEP: delete the pod
Jan 11 23:08:51.285: INFO: Waiting for pod var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae to disappear
Jan 11 23:08:51.288: INFO: Pod var-expansion-1155b7bc-d9fb-40e7-8f2a-cceb136751ae no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 11 23:08:51.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2927" for this suite.

â€¢ [SLOW TEST:6.254 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":509,"failed":0}
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:51.300: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2140
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:08:52.158: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:08:55.192: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:08:55.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2140" for this suite.
STEP: Destroying namespace "webhook-2140-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":22,"skipped":509,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:08:55.379: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8645
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:08:55.539: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76" in namespace "downward-api-8645" to be "Succeeded or Failed"
Jan 11 23:08:55.551: INFO: Pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76": Phase="Pending", Reason="", readiness=false. Elapsed: 11.521421ms
Jan 11 23:08:57.561: INFO: Pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76": Phase="Running", Reason="", readiness=true. Elapsed: 2.021910987s
Jan 11 23:08:59.572: INFO: Pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76": Phase="Running", Reason="", readiness=false. Elapsed: 4.032936061s
Jan 11 23:09:01.581: INFO: Pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.041800312s
STEP: Saw pod success
Jan 11 23:09:01.581: INFO: Pod "downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76" satisfied condition "Succeeded or Failed"
Jan 11 23:09:01.584: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76 container client-container: <nil>
STEP: delete the pod
Jan 11 23:09:01.634: INFO: Waiting for pod downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76 to disappear
Jan 11 23:09:01.637: INFO: Pod downwardapi-volume-ef1c1288-2459-4d47-bec8-b10199c38f76 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:09:01.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8645" for this suite.

â€¢ [SLOW TEST:6.275 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":539,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:09:01.655: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-3681/secret-test-bf3e554d-f5f1-44b9-a759-425cd39ff8a7
STEP: Creating a pod to test consume secrets
Jan 11 23:09:01.817: INFO: Waiting up to 5m0s for pod "pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013" in namespace "secrets-3681" to be "Succeeded or Failed"
Jan 11 23:09:01.831: INFO: Pod "pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013": Phase="Pending", Reason="", readiness=false. Elapsed: 14.023246ms
Jan 11 23:09:03.838: INFO: Pod "pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020657171s
Jan 11 23:09:05.847: INFO: Pod "pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029575817s
STEP: Saw pod success
Jan 11 23:09:05.847: INFO: Pod "pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013" satisfied condition "Succeeded or Failed"
Jan 11 23:09:05.852: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013 container env-test: <nil>
STEP: delete the pod
Jan 11 23:09:05.867: INFO: Waiting for pod pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013 to disappear
Jan 11 23:09:05.870: INFO: Pod pod-configmaps-8870b957-64ee-40ba-bf02-347b0db1b013 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 11 23:09:05.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3681" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":24,"skipped":557,"failed":0}
SSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:09:05.880: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2260
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Jan 11 23:09:06.716: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 11 23:10:06.975: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 11 23:10:06.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2260" for this suite.

â€¢ [SLOW TEST:61.114 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":25,"skipped":560,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:06.997: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:10:07.188: INFO: The status of Pod busybox-scheduling-d0587c21-ebd3-44a1-a676-227b11d12f6b is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:10:09.200: INFO: The status of Pod busybox-scheduling-d0587c21-ebd3-44a1-a676-227b11d12f6b is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 11 23:10:09.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1915" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":26,"skipped":631,"failed":0}

------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:09.221: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:10:09.371: INFO: Waiting up to 5m0s for pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853" in namespace "security-context-test-8469" to be "Succeeded or Failed"
Jan 11 23:10:09.383: INFO: Pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853": Phase="Pending", Reason="", readiness=false. Elapsed: 11.363117ms
Jan 11 23:10:11.390: INFO: Pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018332748s
Jan 11 23:10:13.395: INFO: Pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02349976s
Jan 11 23:10:15.400: INFO: Pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.029206418s
Jan 11 23:10:15.400: INFO: Pod "busybox-user-65534-20d3ad04-1758-43b3-bf80-268f188c2853" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 11 23:10:15.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8469" for this suite.

â€¢ [SLOW TEST:6.191 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:52
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":631,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:15.413: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4229
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:10:15.570: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575" in namespace "projected-4229" to be "Succeeded or Failed"
Jan 11 23:10:15.583: INFO: Pod "downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575": Phase="Pending", Reason="", readiness=false. Elapsed: 12.367325ms
Jan 11 23:10:17.592: INFO: Pod "downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022049038s
Jan 11 23:10:19.605: INFO: Pod "downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035024783s
STEP: Saw pod success
Jan 11 23:10:19.606: INFO: Pod "downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575" satisfied condition "Succeeded or Failed"
Jan 11 23:10:19.608: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575 container client-container: <nil>
STEP: delete the pod
Jan 11 23:10:19.633: INFO: Waiting for pod downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575 to disappear
Jan 11 23:10:19.640: INFO: Pod downwardapi-volume-3b2b6a99-44ff-430f-902b-45e2519dd575 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 11 23:10:19.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4229" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":28,"skipped":663,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:19.648: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9170
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-5aef23f4-8b0a-4d59-aa57-ac3e81ed7627
STEP: Creating a pod to test consume secrets
Jan 11 23:10:19.807: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638" in namespace "projected-9170" to be "Succeeded or Failed"
Jan 11 23:10:19.811: INFO: Pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00634ms
Jan 11 23:10:21.822: INFO: Pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638": Phase="Running", Reason="", readiness=true. Elapsed: 2.01438926s
Jan 11 23:10:23.827: INFO: Pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638": Phase="Running", Reason="", readiness=false. Elapsed: 4.020142288s
Jan 11 23:10:25.834: INFO: Pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.026896444s
STEP: Saw pod success
Jan 11 23:10:25.834: INFO: Pod "pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638" satisfied condition "Succeeded or Failed"
Jan 11 23:10:25.838: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 11 23:10:25.854: INFO: Waiting for pod pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638 to disappear
Jan 11 23:10:25.861: INFO: Pod pod-projected-secrets-36e725e6-32d5-486d-a452-2cfd153f8638 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 11 23:10:25.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9170" for this suite.

â€¢ [SLOW TEST:6.222 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":665,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:25.870: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4253
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 11 23:10:26.041: INFO: Waiting up to 5m0s for pod "pod-5b9d3552-e247-43d5-8be0-a0224db40257" in namespace "emptydir-4253" to be "Succeeded or Failed"
Jan 11 23:10:26.046: INFO: Pod "pod-5b9d3552-e247-43d5-8be0-a0224db40257": Phase="Pending", Reason="", readiness=false. Elapsed: 4.681246ms
Jan 11 23:10:28.053: INFO: Pod "pod-5b9d3552-e247-43d5-8be0-a0224db40257": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011350202s
Jan 11 23:10:30.063: INFO: Pod "pod-5b9d3552-e247-43d5-8be0-a0224db40257": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021909996s
STEP: Saw pod success
Jan 11 23:10:30.063: INFO: Pod "pod-5b9d3552-e247-43d5-8be0-a0224db40257" satisfied condition "Succeeded or Failed"
Jan 11 23:10:30.067: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-5b9d3552-e247-43d5-8be0-a0224db40257 container test-container: <nil>
STEP: delete the pod
Jan 11 23:10:30.135: INFO: Waiting for pod pod-5b9d3552-e247-43d5-8be0-a0224db40257 to disappear
Jan 11 23:10:30.145: INFO: Pod pod-5b9d3552-e247-43d5-8be0-a0224db40257 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:10:30.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4253" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":30,"skipped":691,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:10:30.183: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9793
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-5ef520d8-2058-48d7-9877-7eeaccd13ab0
STEP: Creating the pod
Jan 11 23:10:30.363: INFO: The status of Pod pod-projected-configmaps-c263e186-3823-429d-8f51-f8cef7754873 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:10:32.374: INFO: The status of Pod pod-projected-configmaps-c263e186-3823-429d-8f51-f8cef7754873 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-5ef520d8-2058-48d7-9877-7eeaccd13ab0
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:11:38.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9793" for this suite.

â€¢ [SLOW TEST:68.548 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":31,"skipped":728,"failed":0}
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:11:38.731: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 11 23:11:38.913: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:11:40.922: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 11 23:11:40.947: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:11:42.957: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 11 23:11:42.974: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 11 23:11:42.990: INFO: Pod pod-with-prestop-http-hook still exists
Jan 11 23:11:44.991: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 11 23:11:45.000: INFO: Pod pod-with-prestop-http-hook still exists
Jan 11 23:11:46.991: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 11 23:11:47.002: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 11 23:11:47.015: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3587" for this suite.

â€¢ [SLOW TEST:8.297 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":32,"skipped":728,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:11:47.029: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9413
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:11:47.184: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786" in namespace "downward-api-9413" to be "Succeeded or Failed"
Jan 11 23:11:47.193: INFO: Pod "downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786": Phase="Pending", Reason="", readiness=false. Elapsed: 9.266593ms
Jan 11 23:11:49.204: INFO: Pod "downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01962394s
Jan 11 23:11:51.212: INFO: Pod "downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027751065s
STEP: Saw pod success
Jan 11 23:11:51.212: INFO: Pod "downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786" satisfied condition "Succeeded or Failed"
Jan 11 23:11:51.215: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786 container client-container: <nil>
STEP: delete the pod
Jan 11 23:11:51.265: INFO: Waiting for pod downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786 to disappear
Jan 11 23:11:51.267: INFO: Pod downwardapi-volume-b0ea7c96-fb9d-454e-8072-545be417c786 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:11:51.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9413" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":33,"skipped":734,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:11:51.294: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8774
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 11 23:11:51.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8774 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Jan 11 23:11:51.510: INFO: stderr: ""
Jan 11 23:11:51.510: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Jan 11 23:11:51.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8774 delete pods e2e-test-httpd-pod'
Jan 11 23:11:53.999: INFO: stderr: ""
Jan 11 23:11:53.999: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:11:53.999: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8774" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":34,"skipped":744,"failed":0}
SSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:11:54.014: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4585
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:11:54.154: INFO: Creating simple deployment test-new-deployment
Jan 11 23:11:54.174: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 11 23:11:56.262: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-4585  561f78a2-189c-4a81-ace8-e985a0097c06 3821 3 2023-01-11 23:11:54 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-11 23:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:11:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003371258 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-11 23:11:55 +0000 UTC,LastTransitionTime:2023-01-11 23:11:55 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2023-01-11 23:11:55 +0000 UTC,LastTransitionTime:2023-01-11 23:11:54 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 11 23:11:56.281: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-4585  03a471fb-70d7-4de1-9817-85f1affff5d0 3830 3 2023-01-11 23:11:54 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 561f78a2-189c-4a81-ace8-e985a0097c06 0xc0004f8260 0xc0004f8261}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"561f78a2-189c-4a81-ace8-e985a0097c06\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:11:55 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0004f8318 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:11:56.325: INFO: Pod "test-new-deployment-55df494869-57tn7" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-57tn7 test-new-deployment-55df494869- deployment-4585  43e62831-bc42-4119-8332-c42e96733d64 3816 0 2023-01-11 23:11:54 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 03a471fb-70d7-4de1-9817-85f1affff5d0 0xc0004f93f0 0xc0004f93f1}] []  [{kube-controller-manager Update v1 2023-01-11 23:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03a471fb-70d7-4de1-9817-85f1affff5d0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:11:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.71\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-89w8r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-89w8r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:54 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:10.240.0.71,StartTime:2023-01-11 23:11:54 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:11:55 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ef576410d7ba9571813241fd744ab4cf7fae0daf94ae1f2414559e516996185f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.71,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 11 23:11:56.326: INFO: Pod "test-new-deployment-55df494869-qzqnr" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-qzqnr test-new-deployment-55df494869- deployment-4585  e9e95b40-1e8c-43fa-9502-8fc60e94d4bf 3829 0 2023-01-11 23:11:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 03a471fb-70d7-4de1-9817-85f1affff5d0 0xc0004f9dd0 0xc0004f9dd1}] []  [{kube-controller-manager Update v1 2023-01-11 23:11:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03a471fb-70d7-4de1-9817-85f1affff5d0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:11:56 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s2hth,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s2hth,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:56 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:56 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:,StartTime:2023-01-11 23:11:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 11 23:11:56.326: INFO: Pod "test-new-deployment-55df494869-vkljz" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-vkljz test-new-deployment-55df494869- deployment-4585  17b710a1-80c4-49b3-8483-6ace0ae003d7 3834 0 2023-01-11 23:11:56 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 03a471fb-70d7-4de1-9817-85f1affff5d0 0xc0002b0720 0xc0002b0721}] []  [{kube-controller-manager Update v1 2023-01-11 23:11:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"03a471fb-70d7-4de1-9817-85f1affff5d0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zvm4b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zvm4b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:11:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 11 23:11:56.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4585" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":35,"skipped":749,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:11:56.395: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3516
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-3516/configmap-test-584a20c4-f75f-414f-8cad-311301d62e3a
STEP: Creating a pod to test consume configMaps
Jan 11 23:11:56.582: INFO: Waiting up to 5m0s for pod "pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b" in namespace "configmap-3516" to be "Succeeded or Failed"
Jan 11 23:11:56.585: INFO: Pod "pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.265231ms
Jan 11 23:11:58.596: INFO: Pod "pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014401489s
Jan 11 23:12:00.602: INFO: Pod "pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020803097s
STEP: Saw pod success
Jan 11 23:12:00.602: INFO: Pod "pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b" satisfied condition "Succeeded or Failed"
Jan 11 23:12:00.606: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b container env-test: <nil>
STEP: delete the pod
Jan 11 23:12:00.627: INFO: Waiting for pod pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b to disappear
Jan 11 23:12:00.635: INFO: Pod pod-configmaps-4164bda2-4520-4ae5-9026-09cbcccd235b no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:12:00.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3516" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":36,"skipped":797,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:12:00.644: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1696
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-effc27f3-8d39-4e3f-b210-e7899609fc55
STEP: Creating a pod to test consume configMaps
Jan 11 23:12:00.817: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63" in namespace "projected-1696" to be "Succeeded or Failed"
Jan 11 23:12:00.830: INFO: Pod "pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63": Phase="Pending", Reason="", readiness=false. Elapsed: 13.795438ms
Jan 11 23:12:02.839: INFO: Pod "pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022146046s
Jan 11 23:12:04.846: INFO: Pod "pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029746045s
STEP: Saw pod success
Jan 11 23:12:04.846: INFO: Pod "pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63" satisfied condition "Succeeded or Failed"
Jan 11 23:12:04.850: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Jan 11 23:12:04.916: INFO: Waiting for pod pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63 to disappear
Jan 11 23:12:04.920: INFO: Pod pod-projected-configmaps-7669d8a6-ab04-46f4-99a7-47e8b6d6fa63 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:12:04.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1696" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":823,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:12:04.935: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9546
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:12:05.076: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-9363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-9546
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Jan 11 23:12:11.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-9363" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 11 23:12:11.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9546" for this suite.

â€¢ [SLOW TEST:6.403 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":38,"skipped":838,"failed":0}
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:12:11.339: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6421
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Jan 11 23:12:11.490: INFO: Waiting up to 5m0s for pod "var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475" in namespace "var-expansion-6421" to be "Succeeded or Failed"
Jan 11 23:12:11.495: INFO: Pod "var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475": Phase="Pending", Reason="", readiness=false. Elapsed: 5.246652ms
Jan 11 23:12:13.509: INFO: Pod "var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018966267s
Jan 11 23:12:15.515: INFO: Pod "var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024991618s
STEP: Saw pod success
Jan 11 23:12:15.515: INFO: Pod "var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475" satisfied condition "Succeeded or Failed"
Jan 11 23:12:15.520: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475 container dapi-container: <nil>
STEP: delete the pod
Jan 11 23:12:15.547: INFO: Waiting for pod var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475 to disappear
Jan 11 23:12:15.550: INFO: Pod var-expansion-e3632b9a-4d3d-4414-8d3a-65b9377e3475 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 11 23:12:15.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6421" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":838,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:12:15.560: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-3817
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 11 23:12:15.716: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 11 23:12:15.724: INFO: Waiting for terminating namespaces to be deleted...
Jan 11 23:12:15.727: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000000 before test
Jan 11 23:12:15.732: INFO: azure-ip-masq-agent-52p4t from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.732: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:12:15.732: INFO: kube-proxy-8chww from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.732: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:12:15.732: INFO: sonobuoy-e2e-job-4d0b931cd54444dd from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:12:15.732: INFO: 	Container e2e ready: true, restart count 0
Jan 11 23:12:15.732: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:12:15.732: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:12:15.732: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:12:15.732: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 11 23:12:15.732: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000001 before test
Jan 11 23:12:15.738: INFO: azure-ip-masq-agent-t5whg from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.738: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:12:15.738: INFO: kube-proxy-8rhgx from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.738: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:12:15.738: INFO: sonobuoy from sonobuoy started at 2023-01-11 23:04:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.738: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 11 23:12:15.738: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-jfx64 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:12:15.738: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:12:15.738: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 11 23:12:15.738: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000002 before test
Jan 11 23:12:15.743: INFO: azure-ip-masq-agent-tp2qx from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.743: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:12:15.743: INFO: kube-proxy-g5hg6 from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.743: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:12:15.743: INFO: metrics-server-66dd6687d9-rldfm from kube-system started at 2023-01-11 22:59:21 +0000 UTC (1 container statuses recorded)
Jan 11 23:12:15.743: INFO: 	Container metrics-server ready: true, restart count 0
Jan 11 23:12:15.743: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-whj75 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:12:15.743: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:12:15.743: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-34d75c14-efe7-451c-8f33-adae91902c3d 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.240.0.63 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-34d75c14-efe7-451c-8f33-adae91902c3d off the node k8s-agentpool1-12291382-vmss000001
STEP: verifying the node doesn't have the label kubernetes.io/e2e-34d75c14-efe7-451c-8f33-adae91902c3d
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:17:21.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-3817" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

â€¢ [SLOW TEST:306.348 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":40,"skipped":849,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:17:21.910: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:17:22.620: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:17:25.650: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Jan 11 23:17:25.672: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:17:25.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7895" for this suite.
STEP: Destroying namespace "webhook-7895-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":41,"skipped":872,"failed":0}
SSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:17:25.771: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Jan 11 23:17:25.945: INFO: Waiting up to 5m0s for pod "client-containers-07f24ce7-8e39-43cf-a790-54d60f019441" in namespace "containers-7355" to be "Succeeded or Failed"
Jan 11 23:17:25.948: INFO: Pod "client-containers-07f24ce7-8e39-43cf-a790-54d60f019441": Phase="Pending", Reason="", readiness=false. Elapsed: 3.17584ms
Jan 11 23:17:27.961: INFO: Pod "client-containers-07f24ce7-8e39-43cf-a790-54d60f019441": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015751326s
Jan 11 23:17:29.971: INFO: Pod "client-containers-07f24ce7-8e39-43cf-a790-54d60f019441": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026142324s
STEP: Saw pod success
Jan 11 23:17:29.971: INFO: Pod "client-containers-07f24ce7-8e39-43cf-a790-54d60f019441" satisfied condition "Succeeded or Failed"
Jan 11 23:17:29.975: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod client-containers-07f24ce7-8e39-43cf-a790-54d60f019441 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:17:30.028: INFO: Waiting for pod client-containers-07f24ce7-8e39-43cf-a790-54d60f019441 to disappear
Jan 11 23:17:30.030: INFO: Pod client-containers-07f24ce7-8e39-43cf-a790-54d60f019441 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 11 23:17:30.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7355" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":42,"skipped":878,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:17:30.045: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Jan 11 23:17:30.199: INFO: created test-pod-1
Jan 11 23:17:30.213: INFO: created test-pod-2
Jan 11 23:17:30.240: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Jan 11 23:17:30.240: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-4544' to be running and ready
Jan 11 23:17:30.279: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 11 23:17:30.279: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 11 23:17:30.279: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 11 23:17:30.279: INFO: 0 / 3 pods in namespace 'pods-4544' are running and ready (0 seconds elapsed)
Jan 11 23:17:30.279: INFO: expected 0 pod replicas in namespace 'pods-4544', 0 are Running and Ready.
Jan 11 23:17:30.279: INFO: POD         NODE                                PHASE    GRACE  CONDITIONS
Jan 11 23:17:30.279: INFO: test-pod-1  k8s-agentpool1-12291382-vmss000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  }]
Jan 11 23:17:30.279: INFO: test-pod-2  k8s-agentpool1-12291382-vmss000002  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  }]
Jan 11 23:17:30.279: INFO: test-pod-3  k8s-agentpool1-12291382-vmss000001  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  }]
Jan 11 23:17:30.280: INFO: 
Jan 11 23:17:32.294: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 11 23:17:32.294: INFO: 2 / 3 pods in namespace 'pods-4544' are running and ready (2 seconds elapsed)
Jan 11 23:17:32.294: INFO: expected 0 pod replicas in namespace 'pods-4544', 0 are Running and Ready.
Jan 11 23:17:32.294: INFO: POD         NODE                                PHASE    GRACE  CONDITIONS
Jan 11 23:17:32.294: INFO: test-pod-3  k8s-agentpool1-12291382-vmss000001  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-11 23:17:30 +0000 UTC  }]
Jan 11 23:17:32.295: INFO: 
Jan 11 23:17:34.294: INFO: 3 / 3 pods in namespace 'pods-4544' are running and ready (4 seconds elapsed)
Jan 11 23:17:34.294: INFO: expected 0 pod replicas in namespace 'pods-4544', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Jan 11 23:17:34.332: INFO: Pod quantity 3 is different from expected quantity 0
Jan 11 23:17:35.337: INFO: Pod quantity 2 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 11 23:17:36.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4544" for this suite.

â€¢ [SLOW TEST:6.316 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":43,"skipped":900,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:17:36.363: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-9159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9159
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 11 23:17:36.496: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 11 23:17:36.552: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:17:38.562: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:40.561: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:42.566: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:44.558: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:46.558: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:48.565: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:50.559: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:52.563: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:54.557: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:56.561: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:17:58.562: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 11 23:17:58.568: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 11 23:17:58.575: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 11 23:18:02.628: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 11 23:18:02.628: INFO: Going to poll 10.240.0.46 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:18:02.630: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.240.0.46:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9159 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:18:02.630: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:18:02.631: INFO: ExecWithOptions: Clientset creation
Jan 11 23:18:02.631: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9159/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.240.0.46%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:18:02.774: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 11 23:18:02.774: INFO: Going to poll 10.240.0.82 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:18:02.778: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.240.0.82:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9159 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:18:02.778: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:18:02.779: INFO: ExecWithOptions: Clientset creation
Jan 11 23:18:02.779: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9159/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.240.0.82%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:18:02.887: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 11 23:18:02.887: INFO: Going to poll 10.240.0.118 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:18:02.893: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.240.0.118:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9159 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:18:02.893: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:18:02.893: INFO: ExecWithOptions: Clientset creation
Jan 11 23:18:02.894: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9159/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.240.0.118%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:18:03.014: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 11 23:18:03.014: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9159" for this suite.

â€¢ [SLOW TEST:26.665 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":44,"skipped":943,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:03.028: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:18:03.195: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f" in namespace "projected-7843" to be "Succeeded or Failed"
Jan 11 23:18:03.207: INFO: Pod "downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f": Phase="Pending", Reason="", readiness=false. Elapsed: 12.397674ms
Jan 11 23:18:05.212: INFO: Pod "downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017428326s
Jan 11 23:18:07.222: INFO: Pod "downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027089144s
STEP: Saw pod success
Jan 11 23:18:07.222: INFO: Pod "downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f" satisfied condition "Succeeded or Failed"
Jan 11 23:18:07.225: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f container client-container: <nil>
STEP: delete the pod
Jan 11 23:18:07.321: INFO: Waiting for pod downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f to disappear
Jan 11 23:18:07.324: INFO: Pod downwardapi-volume-4d5ca4c9-578f-4e8f-80b5-0f42c423a41f no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 11 23:18:07.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7843" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":45,"skipped":944,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:07.334: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:18:07.524: INFO: The status of Pod server-envvars-6a10ad55-245d-4dad-937c-886162d3244c is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:18:09.532: INFO: The status of Pod server-envvars-6a10ad55-245d-4dad-937c-886162d3244c is Running (Ready = true)
Jan 11 23:18:09.575: INFO: Waiting up to 5m0s for pod "client-envvars-38194b25-c668-4d0a-b252-604d8354e887" in namespace "pods-8895" to be "Succeeded or Failed"
Jan 11 23:18:09.648: INFO: Pod "client-envvars-38194b25-c668-4d0a-b252-604d8354e887": Phase="Pending", Reason="", readiness=false. Elapsed: 73.027069ms
Jan 11 23:18:11.658: INFO: Pod "client-envvars-38194b25-c668-4d0a-b252-604d8354e887": Phase="Pending", Reason="", readiness=false. Elapsed: 2.082267138s
Jan 11 23:18:13.668: INFO: Pod "client-envvars-38194b25-c668-4d0a-b252-604d8354e887": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.092950555s
STEP: Saw pod success
Jan 11 23:18:13.668: INFO: Pod "client-envvars-38194b25-c668-4d0a-b252-604d8354e887" satisfied condition "Succeeded or Failed"
Jan 11 23:18:13.672: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod client-envvars-38194b25-c668-4d0a-b252-604d8354e887 container env3cont: <nil>
STEP: delete the pod
Jan 11 23:18:13.688: INFO: Waiting for pod client-envvars-38194b25-c668-4d0a-b252-604d8354e887 to disappear
Jan 11 23:18:13.691: INFO: Pod client-envvars-38194b25-c668-4d0a-b252-604d8354e887 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 11 23:18:13.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8895" for this suite.

â€¢ [SLOW TEST:6.366 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":46,"skipped":969,"failed":0}
SSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:13.701: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1567
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Jan 11 23:18:13.848: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1567  62ea8b67-1e54-4c36-9938-c525b1c67471 4999 0 2023-01-11 23:18:13 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2023-01-11 23:18:13 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-96hwp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-96hwp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 11 23:18:13.852: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:18:15.858: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Jan 11 23:18:15.858: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1567 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:18:15.858: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:18:15.859: INFO: ExecWithOptions: Clientset creation
Jan 11 23:18:15.859: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-1567/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Jan 11 23:18:16.001: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1567 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:18:16.002: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:18:16.003: INFO: ExecWithOptions: Clientset creation
Jan 11 23:18:16.003: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/dns-1567/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:18:16.152: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 11 23:18:16.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1567" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":47,"skipped":976,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:16.178: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2202
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 11 23:18:18.412: INFO: running pods: 0 < 3
Jan 11 23:18:20.418: INFO: running pods: 1 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 11 23:18:22.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2202" for this suite.

â€¢ [SLOW TEST:6.254 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":48,"skipped":1007,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:22.435: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-2059
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Jan 11 23:18:22.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-2059" for this suite.
â€¢{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":49,"skipped":1020,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:22.652: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:18:22.790: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Jan 11 23:18:25.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 create -f -'
Jan 11 23:18:26.990: INFO: stderr: ""
Jan 11 23:18:26.990: INFO: stdout: "e2e-test-crd-publish-openapi-5547-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 11 23:18:26.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 delete e2e-test-crd-publish-openapi-5547-crds test-foo'
Jan 11 23:18:27.075: INFO: stderr: ""
Jan 11 23:18:27.075: INFO: stdout: "e2e-test-crd-publish-openapi-5547-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jan 11 23:18:27.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 apply -f -'
Jan 11 23:18:27.345: INFO: stderr: ""
Jan 11 23:18:27.345: INFO: stdout: "e2e-test-crd-publish-openapi-5547-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 11 23:18:27.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 delete e2e-test-crd-publish-openapi-5547-crds test-foo'
Jan 11 23:18:27.422: INFO: stderr: ""
Jan 11 23:18:27.422: INFO: stdout: "e2e-test-crd-publish-openapi-5547-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Jan 11 23:18:27.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 create -f -'
Jan 11 23:18:27.655: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Jan 11 23:18:27.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 create -f -'
Jan 11 23:18:27.875: INFO: rc: 1
Jan 11 23:18:27.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 apply -f -'
Jan 11 23:18:28.115: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Jan 11 23:18:28.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 create -f -'
Jan 11 23:18:28.337: INFO: rc: 1
Jan 11 23:18:28.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 --namespace=crd-publish-openapi-4116 apply -f -'
Jan 11 23:18:28.545: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Jan 11 23:18:28.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 explain e2e-test-crd-publish-openapi-5547-crds'
Jan 11 23:18:28.786: INFO: stderr: ""
Jan 11 23:18:28.786: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5547-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Jan 11 23:18:28.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 explain e2e-test-crd-publish-openapi-5547-crds.metadata'
Jan 11 23:18:29.019: INFO: stderr: ""
Jan 11 23:18:29.019: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5547-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jan 11 23:18:29.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 explain e2e-test-crd-publish-openapi-5547-crds.spec'
Jan 11 23:18:29.261: INFO: stderr: ""
Jan 11 23:18:29.261: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5547-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jan 11 23:18:29.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 explain e2e-test-crd-publish-openapi-5547-crds.spec.bars'
Jan 11 23:18:29.491: INFO: stderr: ""
Jan 11 23:18:29.491: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5547-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Jan 11 23:18:29.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4116 explain e2e-test-crd-publish-openapi-5547-crds.spec.bars2'
Jan 11 23:18:29.727: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:18:32.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4116" for this suite.

â€¢ [SLOW TEST:9.447 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":50,"skipped":1044,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:32.099: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9192
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 11 23:18:32.279: INFO: The status of Pod labelsupdate1b1e6a76-564c-4e8b-8ac1-bc325fd02b57 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:18:34.285: INFO: The status of Pod labelsupdate1b1e6a76-564c-4e8b-8ac1-bc325fd02b57 is Running (Ready = true)
Jan 11 23:18:34.840: INFO: Successfully updated pod "labelsupdate1b1e6a76-564c-4e8b-8ac1-bc325fd02b57"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 11 23:18:36.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9192" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":51,"skipped":1047,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:36.875: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-408
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Jan 11 23:18:37.030: INFO: The status of Pod pod-hostip-e464359b-b84b-48e6-b8ef-d50b6c0b36c2 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:18:39.040: INFO: The status of Pod pod-hostip-e464359b-b84b-48e6-b8ef-d50b6c0b36c2 is Running (Ready = true)
Jan 11 23:18:39.047: INFO: Pod pod-hostip-e464359b-b84b-48e6-b8ef-d50b6c0b36c2 has hostIP: 10.240.0.92
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 11 23:18:39.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-408" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":52,"skipped":1067,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:39.057: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5068
STEP: creating service affinity-clusterip in namespace services-5068
STEP: creating replication controller affinity-clusterip in namespace services-5068
I0111 23:18:39.256084      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5068, replica count: 3
I0111 23:18:42.307928      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:18:42.324: INFO: Creating new exec pod
Jan 11 23:18:45.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5068 exec execpod-affinity9hthj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Jan 11 23:18:45.590: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jan 11 23:18:45.590: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:18:45.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5068 exec execpod-affinity9hthj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.117.246 80'
Jan 11 23:18:45.782: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.117.246 80\nConnection to 10.0.117.246 80 port [tcp/http] succeeded!\n"
Jan 11 23:18:45.782: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:18:45.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5068 exec execpod-affinity9hthj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.117.246:80/ ; done'
Jan 11 23:18:46.044: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.117.246:80/\n"
Jan 11 23:18:46.044: INFO: stdout: "\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9\naffinity-clusterip-246z9"
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Received response from host: affinity-clusterip-246z9
Jan 11 23:18:46.044: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-5068, will wait for the garbage collector to delete the pods
Jan 11 23:18:46.129: INFO: Deleting ReplicationController affinity-clusterip took: 6.337399ms
Jan 11 23:18:46.230: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.964075ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:18:48.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5068" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:9.435 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":53,"skipped":1079,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:48.494: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:18:49.211: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:18:52.242: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Jan 11 23:18:54.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=webhook-3386 attach --namespace=webhook-3386 to-be-attached-pod -i -c=container1'
Jan 11 23:18:54.420: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:18:54.426: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3386" for this suite.
STEP: Destroying namespace "webhook-3386-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.026 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":54,"skipped":1093,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:54.521: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9851
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 11 23:18:54.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9851" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":55,"skipped":1101,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:54.744: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7527
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:18:54.893: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886" in namespace "downward-api-7527" to be "Succeeded or Failed"
Jan 11 23:18:54.908: INFO: Pod "downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886": Phase="Pending", Reason="", readiness=false. Elapsed: 14.647618ms
Jan 11 23:18:56.914: INFO: Pod "downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021024208s
Jan 11 23:18:58.922: INFO: Pod "downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028501622s
STEP: Saw pod success
Jan 11 23:18:58.922: INFO: Pod "downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886" satisfied condition "Succeeded or Failed"
Jan 11 23:18:58.925: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886 container client-container: <nil>
STEP: delete the pod
Jan 11 23:18:58.951: INFO: Waiting for pod downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886 to disappear
Jan 11 23:18:58.954: INFO: Pod downwardapi-volume-1d8786f1-5d34-4728-a8db-6956d22ae886 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:18:58.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7527" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":56,"skipped":1112,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:18:58.967: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4818
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 11 23:19:10.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4818" for this suite.

â€¢ [SLOW TEST:11.232 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":57,"skipped":1120,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:10.199: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:19:10.360: INFO: Waiting up to 5m0s for pod "downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944" in namespace "downward-api-2528" to be "Succeeded or Failed"
Jan 11 23:19:10.369: INFO: Pod "downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944": Phase="Pending", Reason="", readiness=false. Elapsed: 8.319722ms
Jan 11 23:19:12.378: INFO: Pod "downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017742947s
Jan 11 23:19:14.390: INFO: Pod "downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029235391s
STEP: Saw pod success
Jan 11 23:19:14.390: INFO: Pod "downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944" satisfied condition "Succeeded or Failed"
Jan 11 23:19:14.393: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944 container client-container: <nil>
STEP: delete the pod
Jan 11 23:19:14.416: INFO: Waiting for pod downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944 to disappear
Jan 11 23:19:14.419: INFO: Pod downwardapi-volume-259c4c02-7259-4d94-935d-d4f4075b4944 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:19:14.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2528" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":58,"skipped":1131,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:14.427: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5983
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:19:14.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5983" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":59,"skipped":1140,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:14.627: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-6ea1c645-7c06-400f-8403-83cbade91a22
STEP: Creating a pod to test consume configMaps
Jan 11 23:19:14.781: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469" in namespace "projected-2406" to be "Succeeded or Failed"
Jan 11 23:19:14.795: INFO: Pod "pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469": Phase="Pending", Reason="", readiness=false. Elapsed: 13.888961ms
Jan 11 23:19:16.806: INFO: Pod "pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025270003s
Jan 11 23:19:18.815: INFO: Pod "pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034158779s
STEP: Saw pod success
Jan 11 23:19:18.815: INFO: Pod "pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469" satisfied condition "Succeeded or Failed"
Jan 11 23:19:18.818: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:19:18.840: INFO: Waiting for pod pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469 to disappear
Jan 11 23:19:18.843: INFO: Pod pod-projected-configmaps-ca324673-8bec-448d-b890-20a8b46c8469 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:19:18.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2406" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":60,"skipped":1152,"failed":0}
SSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:18.853: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-1855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Jan 11 23:19:19.013: INFO: Waiting up to 5m0s for pod "client-containers-940ff791-b747-40b4-b55c-683c10371464" in namespace "containers-1855" to be "Succeeded or Failed"
Jan 11 23:19:19.021: INFO: Pod "client-containers-940ff791-b747-40b4-b55c-683c10371464": Phase="Pending", Reason="", readiness=false. Elapsed: 7.460908ms
Jan 11 23:19:21.027: INFO: Pod "client-containers-940ff791-b747-40b4-b55c-683c10371464": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013961755s
Jan 11 23:19:23.040: INFO: Pod "client-containers-940ff791-b747-40b4-b55c-683c10371464": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026616947s
STEP: Saw pod success
Jan 11 23:19:23.040: INFO: Pod "client-containers-940ff791-b747-40b4-b55c-683c10371464" satisfied condition "Succeeded or Failed"
Jan 11 23:19:23.043: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod client-containers-940ff791-b747-40b4-b55c-683c10371464 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:19:23.068: INFO: Waiting for pod client-containers-940ff791-b747-40b4-b55c-683c10371464 to disappear
Jan 11 23:19:23.071: INFO: Pod client-containers-940ff791-b747-40b4-b55c-683c10371464 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 11 23:19:23.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-1855" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1158,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:23.081: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:19:23.250: INFO: Waiting up to 5m0s for pod "downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f" in namespace "downward-api-4146" to be "Succeeded or Failed"
Jan 11 23:19:23.265: INFO: Pod "downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f": Phase="Pending", Reason="", readiness=false. Elapsed: 14.42978ms
Jan 11 23:19:25.270: INFO: Pod "downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019267474s
Jan 11 23:19:27.277: INFO: Pod "downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026404785s
STEP: Saw pod success
Jan 11 23:19:27.277: INFO: Pod "downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f" satisfied condition "Succeeded or Failed"
Jan 11 23:19:27.280: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f container client-container: <nil>
STEP: delete the pod
Jan 11 23:19:27.305: INFO: Waiting for pod downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f to disappear
Jan 11 23:19:27.308: INFO: Pod downwardapi-volume-41655d4a-437d-42c3-b09c-dd3140c8302f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:19:27.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4146" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1175,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:27.320: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-2408
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 11 23:19:27.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2408" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":63,"skipped":1218,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:19:27.502: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-6890
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 11 23:21:01.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-6890" for this suite.

â€¢ [SLOW TEST:94.188 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":64,"skipped":1237,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:01.691: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-4234
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Jan 11 23:21:01.853: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Jan 11 23:21:01.870: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 11 23:21:01.870: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Jan 11 23:21:01.880: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 11 23:21:01.880: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Jan 11 23:21:01.898: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jan 11 23:21:01.898: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Jan 11 23:21:08.954: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Jan 11 23:21:08.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-4234" for this suite.

â€¢ [SLOW TEST:7.322 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":65,"skipped":1251,"failed":0}
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:09.014: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-933a855d-a7c5-4ae4-89d6-647141a5f28e
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:21:13.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6965" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1251,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:13.307: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1294
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-1294
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-1294
I0111 23:21:13.515087      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1294, replica count: 2
Jan 11 23:21:16.566: INFO: Creating new exec pod
I0111 23:21:16.566619      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:21:19.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 11 23:21:19.817: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:19.817: INFO: stdout: ""
Jan 11 23:21:20.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 11 23:21:21.016: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:21.016: INFO: stdout: ""
Jan 11 23:21:21.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 11 23:21:22.003: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:22.003: INFO: stdout: "externalname-service-lxhhk"
Jan 11 23:21:22.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.240.216 80'
Jan 11 23:21:22.179: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.240.216 80\nConnection to 10.0.240.216 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:22.179: INFO: stdout: ""
Jan 11 23:21:23.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.240.216 80'
Jan 11 23:21:23.353: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.240.216 80\nConnection to 10.0.240.216 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:23.353: INFO: stdout: ""
Jan 11 23:21:24.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.240.216 80'
Jan 11 23:21:24.374: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.240.216 80\nConnection to 10.0.240.216 80 port [tcp/http] succeeded!\n"
Jan 11 23:21:24.374: INFO: stdout: "externalname-service-gxm4q"
Jan 11 23:21:24.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 32535'
Jan 11 23:21:24.567: INFO: stderr: "+ nc -v -t -w 2 10.240.0.63 32535\n+ echo hostName\nConnection to 10.240.0.63 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:24.567: INFO: stdout: ""
Jan 11 23:21:25.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 32535'
Jan 11 23:21:25.752: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.63 32535\nConnection to 10.240.0.63 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:25.752: INFO: stdout: ""
Jan 11 23:21:26.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 32535'
Jan 11 23:21:26.757: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.63 32535\nConnection to 10.240.0.63 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:26.757: INFO: stdout: ""
Jan 11 23:21:27.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 32535'
Jan 11 23:21:27.748: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.63 32535\nConnection to 10.240.0.63 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:27.748: INFO: stdout: "externalname-service-gxm4q"
Jan 11 23:21:27.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:27.924: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:27.924: INFO: stdout: ""
Jan 11 23:21:28.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:29.123: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:29.123: INFO: stdout: ""
Jan 11 23:21:29.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:30.111: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:30.112: INFO: stdout: ""
Jan 11 23:21:30.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:31.106: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:31.106: INFO: stdout: ""
Jan 11 23:21:31.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:32.142: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:32.142: INFO: stdout: ""
Jan 11 23:21:32.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-1294 exec execpodc9pkl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 32535'
Jan 11 23:21:33.118: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 32535\nConnection to 10.240.0.92 32535 port [tcp/*] succeeded!\n"
Jan 11 23:21:33.118: INFO: stdout: "externalname-service-gxm4q"
Jan 11 23:21:33.118: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:21:33.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1294" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:19.856 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":67,"skipped":1284,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:33.164: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:21:33.759: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:21:36.787: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:21:36.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7891" for this suite.
STEP: Destroying namespace "webhook-7891-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":68,"skipped":1285,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:36.908: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:21:37.101: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"5d968f07-1b0a-4612-84b1-ea21f3f6f1d7", Controller:(*bool)(0xc00356d756), BlockOwnerDeletion:(*bool)(0xc00356d757)}}
Jan 11 23:21:37.115: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d80f470c-8555-4003-a6a5-11da03b28d1d", Controller:(*bool)(0xc00356d9ae), BlockOwnerDeletion:(*bool)(0xc00356d9af)}}
Jan 11 23:21:37.135: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"cac37e6a-0be3-48aa-b6e6-baa328b95c80", Controller:(*bool)(0xc00337023e), BlockOwnerDeletion:(*bool)(0xc00337023f)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 11 23:21:42.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7612" for this suite.

â€¢ [SLOW TEST:5.268 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":69,"skipped":1296,"failed":0}
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:42.176: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 11 23:21:42.355: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:21:44.364: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 11 23:21:44.388: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:21:46.395: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 11 23:21:46.460: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 11 23:21:46.469: INFO: Pod pod-with-poststart-http-hook still exists
Jan 11 23:21:48.470: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 11 23:21:48.476: INFO: Pod pod-with-poststart-http-hook still exists
Jan 11 23:21:50.469: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 11 23:21:50.476: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 11 23:21:50.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4447" for this suite.

â€¢ [SLOW TEST:8.311 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1300,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:50.489: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1526
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Jan 11 23:21:50.631: INFO: Creating e2e-svc-a-nr22g
Jan 11 23:21:50.650: INFO: Creating e2e-svc-b-crll2
Jan 11 23:21:50.667: INFO: Creating e2e-svc-c-wwkv6
STEP: deleting service collection
Jan 11 23:21:50.737: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:21:50.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1526" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":71,"skipped":1312,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:50.761: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3109
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:21:50.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3109 version'
Jan 11 23:21:51.046: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jan 11 23:21:51.046: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.8\", GitCommit:\"fdc77503e954d1ee641c0e350481f7528e8d068b\", GitTreeState:\"clean\", BuildDate:\"2022-11-09T13:38:19Z\", GoVersion:\"go1.18.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.8\", GitCommit:\"fdc77503e954d1ee641c0e350481f7528e8d068b\", GitTreeState:\"clean\", BuildDate:\"2022-11-11T08:20:31Z\", GoVersion:\"go1.18.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:21:51.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3109" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":72,"skipped":1329,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:21:51.056: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8438
Jan 11 23:21:51.213: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:21:53.224: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:21:55.219: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 11 23:21:55.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 11 23:21:55.414: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jan 11 23:21:55.414: INFO: stdout: "iptables"
Jan 11 23:21:55.414: INFO: proxyMode: iptables
Jan 11 23:21:55.434: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 11 23:21:55.451: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-8438
STEP: creating replication controller affinity-clusterip-timeout in namespace services-8438
I0111 23:21:55.493934      19 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-8438, replica count: 3
I0111 23:21:58.544707      19 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:21:58.556: INFO: Creating new exec pod
Jan 11 23:22:01.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Jan 11 23:22:01.802: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Jan 11 23:22:01.802: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:22:01.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.109.248 80'
Jan 11 23:22:01.985: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.109.248 80\nConnection to 10.0.109.248 80 port [tcp/http] succeeded!\n"
Jan 11 23:22:01.985: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:22:01.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.109.248:80/ ; done'
Jan 11 23:22:02.286: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n"
Jan 11 23:22:02.286: INFO: stdout: "\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5\naffinity-clusterip-timeout-brbl5"
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Received response from host: affinity-clusterip-timeout-brbl5
Jan 11 23:22:02.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.109.248:80/'
Jan 11 23:22:02.471: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n"
Jan 11 23:22:02.471: INFO: stdout: "affinity-clusterip-timeout-brbl5"
Jan 11 23:22:22.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.109.248:80/'
Jan 11 23:22:22.668: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n"
Jan 11 23:22:22.668: INFO: stdout: "affinity-clusterip-timeout-brbl5"
Jan 11 23:22:42.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8438 exec execpod-affinityklhtl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.109.248:80/'
Jan 11 23:22:42.912: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.109.248:80/\n"
Jan 11 23:22:42.912: INFO: stdout: "affinity-clusterip-timeout-xrw94"
Jan 11 23:22:42.912: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-8438, will wait for the garbage collector to delete the pods
Jan 11 23:22:42.998: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 6.953277ms
Jan 11 23:22:43.099: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.935024ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:22:45.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8438" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:53.977 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":73,"skipped":1333,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:22:45.034: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 11 23:24:01.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5587" for this suite.

â€¢ [SLOW TEST:76.185 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":74,"skipped":1352,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:01.221: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-539
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 11 23:24:01.365: INFO: Waiting up to 5m0s for pod "downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e" in namespace "downward-api-539" to be "Succeeded or Failed"
Jan 11 23:24:01.380: INFO: Pod "downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e": Phase="Pending", Reason="", readiness=false. Elapsed: 14.353653ms
Jan 11 23:24:03.392: INFO: Pod "downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026086932s
Jan 11 23:24:05.398: INFO: Pod "downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032615755s
STEP: Saw pod success
Jan 11 23:24:05.398: INFO: Pod "downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e" satisfied condition "Succeeded or Failed"
Jan 11 23:24:05.402: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e container dapi-container: <nil>
STEP: delete the pod
Jan 11 23:24:05.473: INFO: Waiting for pod downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e to disappear
Jan 11 23:24:05.476: INFO: Pod downward-api-5008490a-eb2c-4a54-a7d5-002f7c749f4e no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 11 23:24:05.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-539" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":75,"skipped":1388,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:05.484: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7664
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-756cea40-171a-438e-9b0b-8779b8566d0e
STEP: Creating a pod to test consume secrets
Jan 11 23:24:05.673: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7" in namespace "projected-7664" to be "Succeeded or Failed"
Jan 11 23:24:05.678: INFO: Pod "pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.318557ms
Jan 11 23:24:07.703: INFO: Pod "pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029851073s
Jan 11 23:24:09.709: INFO: Pod "pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036127248s
STEP: Saw pod success
Jan 11 23:24:09.709: INFO: Pod "pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7" satisfied condition "Succeeded or Failed"
Jan 11 23:24:09.712: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 11 23:24:09.765: INFO: Waiting for pod pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7 to disappear
Jan 11 23:24:09.770: INFO: Pod pod-projected-secrets-1513df66-c901-403b-a0d4-00df7341c0c7 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 11 23:24:09.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7664" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":76,"skipped":1418,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:09.785: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2088
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2088.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2088.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2088.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2088.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:24:13.984: INFO: DNS probes using dns-2088/dns-test-a6d922a9-071f-4999-8161-f675d7844e6e succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 11 23:24:14.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2088" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":77,"skipped":1446,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:14.036: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:24:14.476: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 11 23:24:16.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 11, 23, 24, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 24, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 24, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 24, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:24:19.526: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:24:19.536: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:24:22.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2382" for this suite.
STEP: Destroying namespace "webhook-2382-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:8.806 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":78,"skipped":1476,"failed":0}
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:22.842: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 11 23:24:23.046: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:23.056: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:24:23.056: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:24:24.064: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:24.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:24:24.069: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 11 23:24:25.066: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:25.070: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 11 23:24:25.070: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Jan 11 23:24:25.105: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:25.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:24:25.115: INFO: Node k8s-agentpool1-12291382-vmss000002 is running 0 daemon pod, expected 1
Jan 11 23:24:26.125: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:26.129: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 11 23:24:26.129: INFO: Node k8s-agentpool1-12291382-vmss000002 is running 0 daemon pod, expected 1
Jan 11 23:24:27.123: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 11 23:24:27.127: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 11 23:24:27.127: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2339, will wait for the garbage collector to delete the pods
Jan 11 23:24:27.194: INFO: Deleting DaemonSet.extensions daemon-set took: 8.003684ms
Jan 11 23:24:27.296: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.546263ms
Jan 11 23:24:29.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:24:29.308: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 11 23:24:29.311: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7166"},"items":null}

Jan 11 23:24:29.315: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7166"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:24:29.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2339" for this suite.

â€¢ [SLOW TEST:6.495 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":79,"skipped":1481,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:29.340: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8231
STEP: creating service affinity-nodeport in namespace services-8231
STEP: creating replication controller affinity-nodeport in namespace services-8231
I0111 23:24:29.536256      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8231, replica count: 3
I0111 23:24:32.587537      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0111 23:24:35.587821      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:24:35.602: INFO: Creating new exec pod
Jan 11 23:24:40.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8231 exec execpod-affinity7hdnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Jan 11 23:24:40.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jan 11 23:24:40.866: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:24:40.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8231 exec execpod-affinity7hdnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.243.202 80'
Jan 11 23:24:41.052: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.243.202 80\nConnection to 10.0.243.202 80 port [tcp/http] succeeded!\n"
Jan 11 23:24:41.052: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:24:41.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8231 exec execpod-affinity7hdnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 31449'
Jan 11 23:24:41.236: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 31449\nConnection to 10.240.0.34 31449 port [tcp/*] succeeded!\n"
Jan 11 23:24:41.236: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:24:41.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8231 exec execpod-affinity7hdnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 31449'
Jan 11 23:24:41.443: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 31449\nConnection to 10.240.0.92 31449 port [tcp/*] succeeded!\n"
Jan 11 23:24:41.443: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:24:41.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-8231 exec execpod-affinity7hdnp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.34:31449/ ; done'
Jan 11 23:24:41.723: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:31449/\n"
Jan 11 23:24:41.723: INFO: stdout: "\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw\naffinity-nodeport-zr6cw"
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Received response from host: affinity-nodeport-zr6cw
Jan 11 23:24:41.723: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-8231, will wait for the garbage collector to delete the pods
Jan 11 23:24:41.801: INFO: Deleting ReplicationController affinity-nodeport took: 7.253476ms
Jan 11 23:24:41.902: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.972654ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:24:44.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8231" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:15.016 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":80,"skipped":1498,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:24:44.356: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5484
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 11 23:24:44.516: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 11 23:25:44.560: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:25:44.563: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-909
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Jan 11 23:25:46.759: INFO: found a healthy node: k8s-agentpool1-12291382-vmss000001
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:25:56.854: INFO: pods created so far: [1 1 1]
Jan 11 23:25:56.854: INFO: length of pods created so far: 3
Jan 11 23:26:02.872: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Jan 11 23:26:09.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-909" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:26:09.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5484" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:85.618 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":81,"skipped":1512,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:26:09.975: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:26:10.159: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:26:12.169: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:14.171: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:16.168: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:18.166: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:20.164: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:22.169: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:24.166: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:26.167: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:28.171: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:30.165: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = false)
Jan 11 23:26:32.166: INFO: The status of Pod test-webserver-4f639793-75e3-4299-8d2b-906eaa71a0fc is Running (Ready = true)
Jan 11 23:26:32.169: INFO: Container started at 2023-01-11 23:26:10 +0000 UTC, pod became ready at 2023-01-11 23:26:30 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 11 23:26:32.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6090" for this suite.

â€¢ [SLOW TEST:22.205 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1516,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:26:32.180: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-8094
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Jan 11 23:26:32.344: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:26:34.357: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:26:36.355: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Jan 11 23:26:36.381: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:26:38.390: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Jan 11 23:26:38.393: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.393: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.394: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.394: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 11 23:26:38.513: INFO: Exec stderr: ""
Jan 11 23:26:38.513: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.513: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.514: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.514: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 11 23:26:38.621: INFO: Exec stderr: ""
Jan 11 23:26:38.622: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.622: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.623: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.623: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 11 23:26:38.733: INFO: Exec stderr: ""
Jan 11 23:26:38.733: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.733: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.735: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.735: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 11 23:26:38.841: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Jan 11 23:26:38.841: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.841: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.842: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.842: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 11 23:26:38.941: INFO: Exec stderr: ""
Jan 11 23:26:38.941: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:38.941: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:38.942: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:38.942: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 11 23:26:39.061: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Jan 11 23:26:39.062: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:39.062: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:39.064: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:39.064: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 11 23:26:39.171: INFO: Exec stderr: ""
Jan 11 23:26:39.171: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:39.171: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:39.171: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:39.171: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 11 23:26:39.267: INFO: Exec stderr: ""
Jan 11 23:26:39.267: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:39.267: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:39.268: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:39.268: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 11 23:26:39.370: INFO: Exec stderr: ""
Jan 11 23:26:39.370: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8094 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:26:39.370: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:26:39.371: INFO: ExecWithOptions: Clientset creation
Jan 11 23:26:39.371: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8094/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 11 23:26:39.503: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Jan 11 23:26:39.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-8094" for this suite.

â€¢ [SLOW TEST:7.336 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1527,"failed":0}
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:26:39.516: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5400
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-5400, will wait for the garbage collector to delete the pods
Jan 11 23:26:41.729: INFO: Deleting Job.batch foo took: 5.541654ms
Jan 11 23:26:41.830: INFO: Terminating Job.batch foo pods took: 101.015275ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 11 23:27:14.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5400" for this suite.

â€¢ [SLOW TEST:35.230 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":84,"skipped":1527,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:14.747: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-90db2e4c-3cee-4e56-9ed3-c6e4e5aa796e
STEP: Creating a pod to test consume secrets
Jan 11 23:27:14.941: INFO: Waiting up to 5m0s for pod "pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14" in namespace "secrets-501" to be "Succeeded or Failed"
Jan 11 23:27:14.974: INFO: Pod "pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14": Phase="Pending", Reason="", readiness=false. Elapsed: 32.749936ms
Jan 11 23:27:16.985: INFO: Pod "pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.044103069s
Jan 11 23:27:18.995: INFO: Pod "pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.05332628s
STEP: Saw pod success
Jan 11 23:27:18.995: INFO: Pod "pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14" satisfied condition "Succeeded or Failed"
Jan 11 23:27:18.999: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14 container secret-volume-test: <nil>
STEP: delete the pod
Jan 11 23:27:19.058: INFO: Waiting for pod pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14 to disappear
Jan 11 23:27:19.062: INFO: Pod pod-secrets-7ec1a983-6ee4-4cbe-8e57-9479f9d06f14 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 11 23:27:19.062: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-501" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1554,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:19.077: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6569
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-48641d45-9837-4355-acb3-ffa23937645a
STEP: Creating configMap with name cm-test-opt-upd-fdaf644c-b135-4b82-b4cd-daf5ed4938c1
STEP: Creating the pod
Jan 11 23:27:19.254: INFO: The status of Pod pod-configmaps-1107861d-f742-433d-9018-3965ba789009 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:27:21.260: INFO: The status of Pod pod-configmaps-1107861d-f742-433d-9018-3965ba789009 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-48641d45-9837-4355-acb3-ffa23937645a
STEP: Updating configmap cm-test-opt-upd-fdaf644c-b135-4b82-b4cd-daf5ed4938c1
STEP: Creating configMap with name cm-test-opt-create-1785087e-514f-4ff2-8c6c-f768efed9cd4
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:27:23.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6569" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":86,"skipped":1581,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:23.342: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-8144
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-8144
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-8144
STEP: Deleting pre-stop pod
Jan 11 23:27:32.548: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Jan 11 23:27:32.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-8144" for this suite.

â€¢ [SLOW TEST:9.238 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":87,"skipped":1593,"failed":0}
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:32.580: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4401
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4401
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-4401
I0111 23:27:32.752613      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4401, replica count: 2
I0111 23:27:35.803770      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:27:35.803: INFO: Creating new exec pod
Jan 11 23:27:38.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4401 exec execpoddcs22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 11 23:27:39.040: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 11 23:27:39.040: INFO: stdout: "externalname-service-jzhz6"
Jan 11 23:27:39.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4401 exec execpoddcs22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.153.115 80'
Jan 11 23:27:39.242: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.153.115 80\nConnection to 10.0.153.115 80 port [tcp/http] succeeded!\n"
Jan 11 23:27:39.242: INFO: stdout: ""
Jan 11 23:27:40.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4401 exec execpoddcs22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.153.115 80'
Jan 11 23:27:40.439: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.153.115 80\nConnection to 10.0.153.115 80 port [tcp/http] succeeded!\n"
Jan 11 23:27:40.439: INFO: stdout: ""
Jan 11 23:27:41.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4401 exec execpoddcs22 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.153.115 80'
Jan 11 23:27:41.448: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.153.115 80\nConnection to 10.0.153.115 80 port [tcp/http] succeeded!\n"
Jan 11 23:27:41.448: INFO: stdout: "externalname-service-jzhz6"
Jan 11 23:27:41.448: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:27:41.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4401" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:8.942 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":88,"skipped":1593,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:41.522: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 11 23:27:41.687: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:27:43.703: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 11 23:27:43.716: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:27:45.731: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 11 23:27:45.739: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 11 23:27:45.760: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 11 23:27:47.762: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 11 23:27:47.773: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 11 23:27:49.760: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 11 23:27:49.769: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 11 23:27:49.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4512" for this suite.

â€¢ [SLOW TEST:8.298 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1614,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:49.821: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2358
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Jan 11 23:27:49.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2358 create -f -'
Jan 11 23:27:50.296: INFO: stderr: ""
Jan 11 23:27:50.296: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Jan 11 23:27:50.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2358 diff -f -'
Jan 11 23:27:50.607: INFO: rc: 1
Jan 11 23:27:50.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2358 delete -f -'
Jan 11 23:27:50.702: INFO: stderr: ""
Jan 11 23:27:50.702: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:27:50.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2358" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":90,"skipped":1621,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:50.718: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 11 23:27:50.867: INFO: Waiting up to 5m0s for pod "pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96" in namespace "emptydir-5472" to be "Succeeded or Failed"
Jan 11 23:27:50.871: INFO: Pod "pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96": Phase="Pending", Reason="", readiness=false. Elapsed: 3.90714ms
Jan 11 23:27:52.881: INFO: Pod "pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013398087s
Jan 11 23:27:54.892: INFO: Pod "pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024683861s
STEP: Saw pod success
Jan 11 23:27:54.892: INFO: Pod "pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96" satisfied condition "Succeeded or Failed"
Jan 11 23:27:54.897: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96 container test-container: <nil>
STEP: delete the pod
Jan 11 23:27:54.938: INFO: Waiting for pod pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96 to disappear
Jan 11 23:27:54.945: INFO: Pod pod-355a4d4d-6521-4cf8-bb6f-7fefd2e26c96 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:27:54.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5472" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":91,"skipped":1645,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:27:54.969: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 11 23:27:55.138: INFO: Waiting up to 5m0s for pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722" in namespace "emptydir-5161" to be "Succeeded or Failed"
Jan 11 23:27:55.145: INFO: Pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722": Phase="Pending", Reason="", readiness=false. Elapsed: 6.272964ms
Jan 11 23:27:57.155: INFO: Pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016691229s
Jan 11 23:27:59.163: INFO: Pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024351766s
Jan 11 23:28:01.169: INFO: Pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.03050969s
STEP: Saw pod success
Jan 11 23:28:01.169: INFO: Pod "pod-c960927e-c8b0-4ae9-9718-b4a973597722" satisfied condition "Succeeded or Failed"
Jan 11 23:28:01.173: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-c960927e-c8b0-4ae9-9718-b4a973597722 container test-container: <nil>
STEP: delete the pod
Jan 11 23:28:01.200: INFO: Waiting for pod pod-c960927e-c8b0-4ae9-9718-b4a973597722 to disappear
Jan 11 23:28:01.203: INFO: Pod pod-c960927e-c8b0-4ae9-9718-b4a973597722 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:28:01.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5161" for this suite.

â€¢ [SLOW TEST:6.242 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1701,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:01.213: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 11 23:28:11.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2012" for this suite.

â€¢ [SLOW TEST:10.179 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":93,"skipped":1727,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:11.393: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-706
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:28:13.613: INFO: Deleting pod "var-expansion-3744fd3e-6aa2-4e91-90e8-0f53169bb981" in namespace "var-expansion-706"
Jan 11 23:28:13.620: INFO: Wait up to 5m0s for pod "var-expansion-3744fd3e-6aa2-4e91-90e8-0f53169bb981" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 11 23:28:15.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-706" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":94,"skipped":1739,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:15.649: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:28:15.804: INFO: Waiting up to 5m0s for pod "downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a" in namespace "projected-8198" to be "Succeeded or Failed"
Jan 11 23:28:15.809: INFO: Pod "downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.172839ms
Jan 11 23:28:17.820: INFO: Pod "downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015188165s
Jan 11 23:28:19.828: INFO: Pod "downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023829865s
STEP: Saw pod success
Jan 11 23:28:19.828: INFO: Pod "downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a" satisfied condition "Succeeded or Failed"
Jan 11 23:28:19.832: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a container client-container: <nil>
STEP: delete the pod
Jan 11 23:28:19.854: INFO: Waiting for pod downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a to disappear
Jan 11 23:28:19.857: INFO: Pod downwardapi-volume-74372a83-ab84-4ffa-a556-e382b1707f4a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 11 23:28:19.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8198" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":95,"skipped":1742,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:19.866: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2684
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:28:20.039: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jan 11 23:28:25.052: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 11 23:28:25.052: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 11 23:28:27.098: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-2684  9ab06a91-4df2-4ed8-8a28-1634297ed164 8600 1 2023-01-11 23:28:25 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2023-01-11 23:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:28:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0038b7128 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-11 23:28:25 +0000 UTC,LastTransitionTime:2023-01-11 23:28:25 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2023-01-11 23:28:26 +0000 UTC,LastTransitionTime:2023-01-11 23:28:25 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 11 23:28:27.101: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-2684  766d7c7b-759d-4145-9d73-c74f040c2fa4 8590 1 2023-01-11 23:28:25 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 9ab06a91-4df2-4ed8-8a28-1634297ed164 0xc003231407 0xc003231408}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9ab06a91-4df2-4ed8-8a28-1634297ed164\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:28:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0032314e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:28:27.104: INFO: Pod "test-cleanup-deployment-6755c7b765-cpd4k" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-cpd4k test-cleanup-deployment-6755c7b765- deployment-2684  457f349a-7fd4-41d8-ad63-fc69b6f4c853 8589 0 2023-01-11 23:28:25 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 766d7c7b-759d-4145-9d73-c74f040c2fa4 0xc003231887 0xc003231888}] []  [{kube-controller-manager Update v1 2023-01-11 23:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"766d7c7b-759d-4145-9d73-c74f040c2fa4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:28:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.111\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-klbcv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-klbcv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.111,StartTime:2023-01-11 23:28:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:28:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://b6d7bc842701428d6f1a96bf8495d477bac18c1e836d17c758492eebee56bfac,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.111,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 11 23:28:27.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2684" for this suite.

â€¢ [SLOW TEST:7.247 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":96,"skipped":1753,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:27.113: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8102
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Jan 11 23:28:27.261: INFO: Pod name pod-release: Found 0 pods out of 1
Jan 11 23:28:32.270: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 11 23:28:33.302: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8102" for this suite.

â€¢ [SLOW TEST:6.201 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":97,"skipped":1757,"failed":0}
SSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:33.315: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2552
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Jan 11 23:28:33.477: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.477: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.485: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.485: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.519: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.519: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.538: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:33.538: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 11 23:28:34.412: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 11 23:28:34.412: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 11 23:28:35.530: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Jan 11 23:28:35.539: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 0
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.544: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.561: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.561: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.587: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.588: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:35.623: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:35.623: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:35.631: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:35.631: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:36.848: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:36.848: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:36.879: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
STEP: listing Deployments
Jan 11 23:28:36.886: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Jan 11 23:28:36.896: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Jan 11 23:28:36.907: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:36.911: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:36.954: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:36.984: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:37.004: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:38.450: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:38.606: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:38.667: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 11 23:28:39.859: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 1
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:39.913: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 3
Jan 11 23:28:39.914: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 2
Jan 11 23:28:39.914: INFO: observed Deployment test-deployment in namespace deployment-2552 with ReadyReplicas 3
STEP: deleting the Deployment
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
Jan 11 23:28:39.924: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 11 23:28:39.929: INFO: Log out all the ReplicaSets if there is no deployment created
Jan 11 23:28:39.937: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-2552  9d038997-ab76-41ba-a00f-a48c12ede091 8746 3 2023-01-11 23:28:33 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment deb25533-6fd1-4b0a-b37d-e97064cf3103 0xc002985327 0xc002985328}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:28:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"deb25533-6fd1-4b0a-b37d-e97064cf3103\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:28:36 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0029853b0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 11 23:28:39.944: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-2552  120c236b-d4ba-4d64-9ba8-fa65fca6e998 8834 2 2023-01-11 23:28:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment deb25533-6fd1-4b0a-b37d-e97064cf3103 0xc002985417 0xc002985418}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:28:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"deb25533-6fd1-4b0a-b37d-e97064cf3103\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:28:38 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0029854a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Jan 11 23:28:39.954: INFO: pod: "test-deployment-74c6dd549b-5xh48":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-5xh48 test-deployment-74c6dd549b- deployment-2552  3a43acdf-a0e4-4f21-bfe3-78fd46468457 8809 0 2023-01-11 23:28:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 120c236b-d4ba-4d64-9ba8-fa65fca6e998 0xc002843b37 0xc002843b38}] []  [{kube-controller-manager Update v1 2023-01-11 23:28:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"120c236b-d4ba-4d64-9ba8-fa65fca6e998\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:28:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c94gs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c94gs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:10.240.0.70,StartTime:2023-01-11 23:28:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:28:38 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://c02da24d50c316ce927f1ccd63d063fec43b1f326ef33fc9fdc635b8eee32fa7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.70,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 11 23:28:39.955: INFO: pod: "test-deployment-74c6dd549b-67v8n":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-67v8n test-deployment-74c6dd549b- deployment-2552  1cadcba9-54de-40e6-ac92-c56e6e40d143 8833 0 2023-01-11 23:28:38 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 120c236b-d4ba-4d64-9ba8-fa65fca6e998 0xc002843d17 0xc002843d18}] []  [{kube-controller-manager Update v1 2023-01-11 23:28:38 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"120c236b-d4ba-4d64-9ba8-fa65fca6e998\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:28:39 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b92gw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b92gw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.109,StartTime:2023-01-11 23:28:38 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:28:39 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bb7b36d2ded87a2f26850a9818a71e8dfbddc6c9625beee3095978e9edf6c353,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.109,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 11 23:28:39.955: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-2552  8349512c-6d6b-4510-8dfd-248f86180406 8843 4 2023-01-11 23:28:35 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment deb25533-6fd1-4b0a-b37d-e97064cf3103 0xc002985507 0xc002985508}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:28:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"deb25533-6fd1-4b0a-b37d-e97064cf3103\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:28:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0029855a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 11 23:28:39.966: INFO: pod: "test-deployment-84b949bdfc-676jw":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-676jw test-deployment-84b949bdfc- deployment-2552  946664d9-99bb-49c7-b22d-51803c7988e7 8839 0 2023-01-11 23:28:35 +0000 UTC 2023-01-11 23:28:40 +0000 UTC 0xc00291d0a0 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc 8349512c-6d6b-4510-8dfd-248f86180406 0xc00291d0d7 0xc00291d0d8}] []  [{kube-controller-manager Update v1 2023-01-11 23:28:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8349512c-6d6b-4510-8dfd-248f86180406\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:28:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-27k5n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-27k5n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:35 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.100,StartTime:2023-01-11 23:28:35 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:28:36 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://89e1f146218f55165e0d2a2e7eca83d57ea5f1ea2a3b9199629148fb7ecfec71,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.100,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 11 23:28:39.966: INFO: pod: "test-deployment-84b949bdfc-vwl4x":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-vwl4x test-deployment-84b949bdfc- deployment-2552  757f2b16-a3e5-4cae-af2c-0fbde63ac040 8815 0 2023-01-11 23:28:36 +0000 UTC 2023-01-11 23:28:39 +0000 UTC 0xc00291d2a0 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc 8349512c-6d6b-4510-8dfd-248f86180406 0xc00291d2d7 0xc00291d2d8}] []  [{kube-controller-manager Update v1 2023-01-11 23:28:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8349512c-6d6b-4510-8dfd-248f86180406\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:28:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4dktq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4dktq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:28:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:10.240.0.52,StartTime:2023-01-11 23:28:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:28:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://941952425b6f969f5b3ad1d9539f6e8c116ab527a75b4987cdbc5d10374d71eb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.52,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 11 23:28:39.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2552" for this suite.

â€¢ [SLOW TEST:6.671 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":98,"skipped":1760,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:28:39.986: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-rpbm
STEP: Creating a pod to test atomic-volume-subpath
Jan 11 23:28:40.147: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-rpbm" in namespace "subpath-5967" to be "Succeeded or Failed"
Jan 11 23:28:40.153: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Pending", Reason="", readiness=false. Elapsed: 6.431761ms
Jan 11 23:28:42.161: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 2.014069976s
Jan 11 23:28:44.173: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 4.026132184s
Jan 11 23:28:46.186: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 6.03931713s
Jan 11 23:28:48.192: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 8.045167572s
Jan 11 23:28:50.198: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 10.05065973s
Jan 11 23:28:52.216: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 12.06947979s
Jan 11 23:28:54.227: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 14.080300967s
Jan 11 23:28:56.237: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 16.089587129s
Jan 11 23:28:58.247: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 18.100378731s
Jan 11 23:29:00.253: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=true. Elapsed: 20.106188072s
Jan 11 23:29:02.262: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Running", Reason="", readiness=false. Elapsed: 22.114561438s
Jan 11 23:29:04.272: INFO: Pod "pod-subpath-test-downwardapi-rpbm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.124777421s
STEP: Saw pod success
Jan 11 23:29:04.272: INFO: Pod "pod-subpath-test-downwardapi-rpbm" satisfied condition "Succeeded or Failed"
Jan 11 23:29:04.276: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-subpath-test-downwardapi-rpbm container test-container-subpath-downwardapi-rpbm: <nil>
STEP: delete the pod
Jan 11 23:29:04.298: INFO: Waiting for pod pod-subpath-test-downwardapi-rpbm to disappear
Jan 11 23:29:04.303: INFO: Pod pod-subpath-test-downwardapi-rpbm no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-rpbm
Jan 11 23:29:04.303: INFO: Deleting pod "pod-subpath-test-downwardapi-rpbm" in namespace "subpath-5967"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 11 23:29:04.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5967" for this suite.

â€¢ [SLOW TEST:24.339 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":99,"skipped":1809,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:04.327: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 11 23:29:15.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5653" for this suite.

â€¢ [SLOW TEST:11.421 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":100,"skipped":1863,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:15.748: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-49
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Jan 11 23:29:17.931: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-49 pod-service-account-b9dd1a1a-873e-4adf-a3ea-d35f626565de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Jan 11 23:29:18.139: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-49 pod-service-account-b9dd1a1a-873e-4adf-a3ea-d35f626565de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Jan 11 23:29:18.317: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-49 pod-service-account-b9dd1a1a-873e-4adf-a3ea-d35f626565de -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jan 11 23:29:18.505: INFO: Got root ca configmap in namespace "svcaccounts-49"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 11 23:29:18.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-49" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":101,"skipped":1865,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:18.518: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9971
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Jan 11 23:29:18.672: INFO: Creating simple deployment test-deployment-xztsq
Jan 11 23:29:18.691: INFO: deployment "test-deployment-xztsq" doesn't have the required revision set
STEP: Getting /status
Jan 11 23:29:20.709: INFO: Deployment test-deployment-xztsq has Conditions: [{Available True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xztsq-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Jan 11 23:29:20.717: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 29, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 29, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 29, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 29, 18, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-xztsq-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Jan 11 23:29:20.719: INFO: Observed &Deployment event: ADDED
Jan 11 23:29:20.719: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xztsq-688c4d6789"}
Jan 11 23:29:20.720: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xztsq-688c4d6789"}
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 11 23:29:20.720: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xztsq-688c4d6789" is progressing.}
Jan 11 23:29:20.720: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xztsq-688c4d6789" has successfully progressed.}
Jan 11 23:29:20.720: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 11 23:29:20.720: INFO: Observed Deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xztsq-688c4d6789" has successfully progressed.}
Jan 11 23:29:20.720: INFO: Found Deployment test-deployment-xztsq in namespace deployment-9971 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 11 23:29:20.720: INFO: Deployment test-deployment-xztsq has an updated status
STEP: patching the Statefulset Status
Jan 11 23:29:20.720: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 11 23:29:20.726: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Jan 11 23:29:20.728: INFO: Observed &Deployment event: ADDED
Jan 11 23:29:20.728: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xztsq-688c4d6789"}
Jan 11 23:29:20.728: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-xztsq-688c4d6789"}
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 11 23:29:20.729: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:18 +0000 UTC 2023-01-11 23:29:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-xztsq-688c4d6789" is progressing.}
Jan 11 23:29:20.729: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xztsq-688c4d6789" has successfully progressed.}
Jan 11 23:29:20.729: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-11 23:29:19 +0000 UTC 2023-01-11 23:29:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-xztsq-688c4d6789" has successfully progressed.}
Jan 11 23:29:20.729: INFO: Observed deployment test-deployment-xztsq in namespace deployment-9971 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 11 23:29:20.729: INFO: Observed &Deployment event: MODIFIED
Jan 11 23:29:20.730: INFO: Found deployment test-deployment-xztsq in namespace deployment-9971 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jan 11 23:29:20.730: INFO: Deployment test-deployment-xztsq has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 11 23:29:20.737: INFO: Deployment "test-deployment-xztsq":
&Deployment{ObjectMeta:{test-deployment-xztsq  deployment-9971  a266a2cd-4066-4948-85a2-79e554288065 9088 1 2023-01-11 23:29:18 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2023-01-11 23:29:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-11 23:29:20 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-01-11 23:29:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003289168 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-xztsq-688c4d6789",LastUpdateTime:2023-01-11 23:29:20 +0000 UTC,LastTransitionTime:2023-01-11 23:29:20 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 11 23:29:20.741: INFO: New ReplicaSet "test-deployment-xztsq-688c4d6789" of Deployment "test-deployment-xztsq":
&ReplicaSet{ObjectMeta:{test-deployment-xztsq-688c4d6789  deployment-9971  fdf1ede3-9f2a-4a6f-8dc4-0d8f7ffb3621 9082 1 2023-01-11 23:29:18 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-xztsq a266a2cd-4066-4948-85a2-79e554288065 0xc003289547 0xc003289548}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:29:18 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a266a2cd-4066-4948-85a2-79e554288065\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:29:19 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0032895f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:29:20.745: INFO: Pod "test-deployment-xztsq-688c4d6789-9gpzw" is available:
&Pod{ObjectMeta:{test-deployment-xztsq-688c4d6789-9gpzw test-deployment-xztsq-688c4d6789- deployment-9971  51943a28-de7c-4069-88bd-5303dd62f235 9081 0 2023-01-11 23:29:18 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-xztsq-688c4d6789 fdf1ede3-9f2a-4a6f-8dc4-0d8f7ffb3621 0xc003289987 0xc003289988}] []  [{kube-controller-manager Update v1 2023-01-11 23:29:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fdf1ede3-9f2a-4a6f-8dc4-0d8f7ffb3621\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:29:19 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fl9s9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fl9s9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:29:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:29:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:29:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:29:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.109,StartTime:2023-01-11 23:29:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:29:19 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ade19c64cb0a45b776d035c8a1fc74ab30b12523377152c47ed2e8d998eb7c9d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.109,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 11 23:29:20.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9971" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":102,"skipped":1866,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:20.774: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-6970
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Jan 11 23:29:23.460: INFO: Successfully updated pod "adopt-release-cklkr"
STEP: Checking that the Job readopts the Pod
Jan 11 23:29:23.460: INFO: Waiting up to 15m0s for pod "adopt-release-cklkr" in namespace "job-6970" to be "adopted"
Jan 11 23:29:23.463: INFO: Pod "adopt-release-cklkr": Phase="Running", Reason="", readiness=true. Elapsed: 2.718332ms
Jan 11 23:29:25.470: INFO: Pod "adopt-release-cklkr": Phase="Running", Reason="", readiness=true. Elapsed: 2.010533329s
Jan 11 23:29:25.471: INFO: Pod "adopt-release-cklkr" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Jan 11 23:29:25.982: INFO: Successfully updated pod "adopt-release-cklkr"
STEP: Checking that the Job releases the Pod
Jan 11 23:29:25.982: INFO: Waiting up to 15m0s for pod "adopt-release-cklkr" in namespace "job-6970" to be "released"
Jan 11 23:29:25.990: INFO: Pod "adopt-release-cklkr": Phase="Running", Reason="", readiness=true. Elapsed: 8.218696ms
Jan 11 23:29:28.002: INFO: Pod "adopt-release-cklkr": Phase="Running", Reason="", readiness=true. Elapsed: 2.019948639s
Jan 11 23:29:28.002: INFO: Pod "adopt-release-cklkr" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 11 23:29:28.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-6970" for this suite.

â€¢ [SLOW TEST:7.246 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":103,"skipped":1875,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:28.021: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-9a557c91-cfd3-4ba8-9c28-d242559af99b
STEP: Creating a pod to test consume configMaps
Jan 11 23:29:28.175: INFO: Waiting up to 5m0s for pod "pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f" in namespace "configmap-2692" to be "Succeeded or Failed"
Jan 11 23:29:28.188: INFO: Pod "pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f": Phase="Pending", Reason="", readiness=false. Elapsed: 12.423819ms
Jan 11 23:29:30.194: INFO: Pod "pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018517847s
Jan 11 23:29:32.200: INFO: Pod "pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025041678s
STEP: Saw pod success
Jan 11 23:29:32.200: INFO: Pod "pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f" satisfied condition "Succeeded or Failed"
Jan 11 23:29:32.207: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:29:32.231: INFO: Waiting for pod pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f to disappear
Jan 11 23:29:32.235: INFO: Pod pod-configmaps-3eb541ca-461f-4eb6-9984-f1a5e8a72d5f no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:29:32.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2692" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":104,"skipped":1923,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:32.248: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8416
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-e0209c74-2718-407d-9835-75e609c72b12
STEP: Creating a pod to test consume configMaps
Jan 11 23:29:32.395: INFO: Waiting up to 5m0s for pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771" in namespace "configmap-8416" to be "Succeeded or Failed"
Jan 11 23:29:32.399: INFO: Pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771": Phase="Pending", Reason="", readiness=false. Elapsed: 3.91134ms
Jan 11 23:29:34.410: INFO: Pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771": Phase="Running", Reason="", readiness=true. Elapsed: 2.015358121s
Jan 11 23:29:36.419: INFO: Pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771": Phase="Running", Reason="", readiness=false. Elapsed: 4.024458178s
Jan 11 23:29:38.429: INFO: Pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.033986399s
STEP: Saw pod success
Jan 11 23:29:38.429: INFO: Pod "pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771" satisfied condition "Succeeded or Failed"
Jan 11 23:29:38.432: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771 container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:29:38.454: INFO: Waiting for pod pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771 to disappear
Jan 11 23:29:38.458: INFO: Pod pod-configmaps-fab61058-ef80-46af-ac07-a7e083717771 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:29:38.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8416" for this suite.

â€¢ [SLOW TEST:6.220 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":105,"skipped":1940,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:38.468: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-2445
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:29:38.611: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: creating replication controller svc-latency-rc in namespace svc-latency-2445
I0111 23:29:38.616917      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2445, replica count: 1
I0111 23:29:39.667898      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0111 23:29:40.668221      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0111 23:29:41.669094      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:29:41.800: INFO: Created: latency-svc-h7rqg
Jan 11 23:29:41.803: INFO: Got endpoints: latency-svc-h7rqg [33.545613ms]
Jan 11 23:29:41.931: INFO: Created: latency-svc-lxvlq
Jan 11 23:29:41.955: INFO: Got endpoints: latency-svc-lxvlq [152.261922ms]
Jan 11 23:29:41.956: INFO: Created: latency-svc-g7jxd
Jan 11 23:29:41.979: INFO: Created: latency-svc-j5b9g
Jan 11 23:29:41.980: INFO: Got endpoints: latency-svc-g7jxd [176.439148ms]
Jan 11 23:29:41.989: INFO: Got endpoints: latency-svc-j5b9g [183.988818ms]
Jan 11 23:29:42.007: INFO: Created: latency-svc-qhctl
Jan 11 23:29:42.036: INFO: Got endpoints: latency-svc-qhctl [230.820256ms]
Jan 11 23:29:42.048: INFO: Created: latency-svc-mlpvb
Jan 11 23:29:42.065: INFO: Got endpoints: latency-svc-mlpvb [259.665425ms]
Jan 11 23:29:42.071: INFO: Created: latency-svc-7lhfv
Jan 11 23:29:42.074: INFO: Got endpoints: latency-svc-7lhfv [268.643309ms]
Jan 11 23:29:42.092: INFO: Created: latency-svc-2jl2l
Jan 11 23:29:42.115: INFO: Got endpoints: latency-svc-2jl2l [309.650392ms]
Jan 11 23:29:42.121: INFO: Created: latency-svc-qg5g2
Jan 11 23:29:42.135: INFO: Got endpoints: latency-svc-qg5g2 [331.536497ms]
Jan 11 23:29:42.138: INFO: Created: latency-svc-t68cv
Jan 11 23:29:42.154: INFO: Got endpoints: latency-svc-t68cv [350.425773ms]
Jan 11 23:29:42.174: INFO: Created: latency-svc-cddwj
Jan 11 23:29:42.177: INFO: Got endpoints: latency-svc-cddwj [372.58048ms]
Jan 11 23:29:42.192: INFO: Created: latency-svc-nns9z
Jan 11 23:29:42.223: INFO: Created: latency-svc-72jgs
Jan 11 23:29:42.231: INFO: Got endpoints: latency-svc-nns9z [427.079089ms]
Jan 11 23:29:42.246: INFO: Got endpoints: latency-svc-72jgs [441.849127ms]
Jan 11 23:29:42.247: INFO: Created: latency-svc-9djp2
Jan 11 23:29:42.277: INFO: Got endpoints: latency-svc-9djp2 [473.26192ms]
Jan 11 23:29:42.281: INFO: Created: latency-svc-rkk74
Jan 11 23:29:42.290: INFO: Got endpoints: latency-svc-rkk74 [484.078021ms]
Jan 11 23:29:42.299: INFO: Created: latency-svc-2q2j6
Jan 11 23:29:42.309: INFO: Got endpoints: latency-svc-2q2j6 [503.848005ms]
Jan 11 23:29:42.324: INFO: Created: latency-svc-xpkgv
Jan 11 23:29:42.334: INFO: Got endpoints: latency-svc-xpkgv [377.748728ms]
Jan 11 23:29:42.344: INFO: Created: latency-svc-82ktc
Jan 11 23:29:42.351: INFO: Got endpoints: latency-svc-82ktc [369.960755ms]
Jan 11 23:29:42.361: INFO: Created: latency-svc-twwwz
Jan 11 23:29:42.377: INFO: Created: latency-svc-rqn9d
Jan 11 23:29:42.377: INFO: Got endpoints: latency-svc-twwwz [387.699821ms]
Jan 11 23:29:42.388: INFO: Got endpoints: latency-svc-rqn9d [352.337991ms]
Jan 11 23:29:42.401: INFO: Created: latency-svc-krcqn
Jan 11 23:29:42.419: INFO: Got endpoints: latency-svc-krcqn [354.253409ms]
Jan 11 23:29:42.421: INFO: Created: latency-svc-llm55
Jan 11 23:29:42.441: INFO: Created: latency-svc-6q8pj
Jan 11 23:29:42.441: INFO: Got endpoints: latency-svc-llm55 [367.714934ms]
Jan 11 23:29:42.464: INFO: Got endpoints: latency-svc-6q8pj [348.939059ms]
Jan 11 23:29:42.464: INFO: Created: latency-svc-rgdlf
Jan 11 23:29:42.470: INFO: Got endpoints: latency-svc-rgdlf [334.541425ms]
Jan 11 23:29:42.653: INFO: Created: latency-svc-2mrdb
Jan 11 23:29:42.655: INFO: Created: latency-svc-2gk8c
Jan 11 23:29:42.655: INFO: Created: latency-svc-fpgp5
Jan 11 23:29:42.656: INFO: Created: latency-svc-6mhwx
Jan 11 23:29:42.658: INFO: Created: latency-svc-jsbm4
Jan 11 23:29:42.658: INFO: Created: latency-svc-vtg8f
Jan 11 23:29:42.659: INFO: Created: latency-svc-542rs
Jan 11 23:29:42.660: INFO: Created: latency-svc-v4694
Jan 11 23:29:42.660: INFO: Created: latency-svc-5rs57
Jan 11 23:29:42.660: INFO: Created: latency-svc-7q68h
Jan 11 23:29:42.660: INFO: Created: latency-svc-7g9nv
Jan 11 23:29:42.660: INFO: Created: latency-svc-54qnh
Jan 11 23:29:42.661: INFO: Created: latency-svc-xvptj
Jan 11 23:29:42.661: INFO: Created: latency-svc-gpm62
Jan 11 23:29:42.662: INFO: Created: latency-svc-zhflr
Jan 11 23:29:42.671: INFO: Got endpoints: latency-svc-6mhwx [229.822547ms]
Jan 11 23:29:42.672: INFO: Got endpoints: latency-svc-2mrdb [201.510282ms]
Jan 11 23:29:42.679: INFO: Got endpoints: latency-svc-2gk8c [402.064955ms]
Jan 11 23:29:42.722: INFO: Got endpoints: latency-svc-zhflr [567.665402ms]
Jan 11 23:29:42.733: INFO: Created: latency-svc-2n2xq
Jan 11 23:29:42.735: INFO: Got endpoints: latency-svc-v4694 [425.738876ms]
Jan 11 23:29:42.735: INFO: Got endpoints: latency-svc-7q68h [445.519061ms]
Jan 11 23:29:42.735: INFO: Got endpoints: latency-svc-54qnh [558.89532ms]
Jan 11 23:29:42.736: INFO: Got endpoints: latency-svc-5rs57 [504.192709ms]
Jan 11 23:29:42.751: INFO: Got endpoints: latency-svc-vtg8f [417.884303ms]
Jan 11 23:29:42.756: INFO: Created: latency-svc-fcg5k
Jan 11 23:29:42.760: INFO: Got endpoints: latency-svc-fpgp5 [514.061902ms]
Jan 11 23:29:42.761: INFO: Got endpoints: latency-svc-xvptj [383.169678ms]
Jan 11 23:29:42.761: INFO: Got endpoints: latency-svc-gpm62 [410.04763ms]
Jan 11 23:29:42.779: INFO: Got endpoints: latency-svc-542rs [390.703449ms]
Jan 11 23:29:42.785: INFO: Created: latency-svc-9rlm7
Jan 11 23:29:42.787: INFO: Got endpoints: latency-svc-jsbm4 [367.926837ms]
Jan 11 23:29:42.787: INFO: Got endpoints: latency-svc-7g9nv [323.004217ms]
Jan 11 23:29:42.788: INFO: Got endpoints: latency-svc-2n2xq [108.245611ms]
Jan 11 23:29:42.788: INFO: Got endpoints: latency-svc-fcg5k [116.938892ms]
Jan 11 23:29:42.801: INFO: Created: latency-svc-sfwpm
Jan 11 23:29:42.802: INFO: Got endpoints: latency-svc-9rlm7 [129.874713ms]
Jan 11 23:29:42.821: INFO: Got endpoints: latency-svc-sfwpm [98.760122ms]
Jan 11 23:29:43.006: INFO: Created: latency-svc-htpnd
Jan 11 23:29:43.006: INFO: Created: latency-svc-ztl7x
Jan 11 23:29:43.006: INFO: Created: latency-svc-m5zbv
Jan 11 23:29:43.006: INFO: Created: latency-svc-8j4xw
Jan 11 23:29:43.006: INFO: Created: latency-svc-bslgq
Jan 11 23:29:43.007: INFO: Created: latency-svc-gbl52
Jan 11 23:29:43.015: INFO: Created: latency-svc-88zd2
Jan 11 23:29:43.016: INFO: Created: latency-svc-mkqbl
Jan 11 23:29:43.017: INFO: Created: latency-svc-gbxw9
Jan 11 23:29:43.017: INFO: Created: latency-svc-2ss96
Jan 11 23:29:43.018: INFO: Created: latency-svc-4zlbv
Jan 11 23:29:43.018: INFO: Created: latency-svc-v752n
Jan 11 23:29:43.019: INFO: Created: latency-svc-c7sgl
Jan 11 23:29:43.019: INFO: Created: latency-svc-b5l8j
Jan 11 23:29:43.019: INFO: Created: latency-svc-5p5tw
Jan 11 23:29:43.032: INFO: Got endpoints: latency-svc-8j4xw [296.685671ms]
Jan 11 23:29:43.032: INFO: Got endpoints: latency-svc-m5zbv [230.394752ms]
Jan 11 23:29:43.035: INFO: Got endpoints: latency-svc-v752n [274.351963ms]
Jan 11 23:29:43.037: INFO: Got endpoints: latency-svc-htpnd [250.174837ms]
Jan 11 23:29:43.059: INFO: Got endpoints: latency-svc-4zlbv [297.714381ms]
Jan 11 23:29:43.059: INFO: Got endpoints: latency-svc-gbxw9 [280.160716ms]
Jan 11 23:29:43.060: INFO: Got endpoints: latency-svc-2ss96 [272.920749ms]
Jan 11 23:29:43.060: INFO: Got endpoints: latency-svc-c7sgl [299.616098ms]
Jan 11 23:29:43.060: INFO: Got endpoints: latency-svc-gbl52 [239.026933ms]
Jan 11 23:29:43.075: INFO: Created: latency-svc-vhn48
Jan 11 23:29:43.077: INFO: Got endpoints: latency-svc-mkqbl [288.276392ms]
Jan 11 23:29:43.085: INFO: Got endpoints: latency-svc-bslgq [297.131875ms]
Jan 11 23:29:43.095: INFO: Created: latency-svc-5xqdw
Jan 11 23:29:43.119: INFO: Created: latency-svc-jp469
Jan 11 23:29:43.134: INFO: Created: latency-svc-sfxph
Jan 11 23:29:43.148: INFO: Created: latency-svc-jlw8p
Jan 11 23:29:43.148: INFO: Got endpoints: latency-svc-88zd2 [412.394852ms]
Jan 11 23:29:43.167: INFO: Created: latency-svc-59mxq
Jan 11 23:29:43.179: INFO: Created: latency-svc-nmhq4
Jan 11 23:29:43.197: INFO: Created: latency-svc-4pgbd
Jan 11 23:29:43.205: INFO: Got endpoints: latency-svc-5p5tw [469.418784ms]
Jan 11 23:29:43.221: INFO: Created: latency-svc-8q9nl
Jan 11 23:29:43.237: INFO: Created: latency-svc-5rwjm
Jan 11 23:29:43.242: INFO: Got endpoints: latency-svc-b5l8j [506.43893ms]
Jan 11 23:29:43.253: INFO: Created: latency-svc-h8qc4
Jan 11 23:29:43.271: INFO: Created: latency-svc-sqvnh
Jan 11 23:29:43.282: INFO: Created: latency-svc-2mhxw
Jan 11 23:29:43.292: INFO: Got endpoints: latency-svc-ztl7x [540.808951ms]
Jan 11 23:29:43.304: INFO: Created: latency-svc-j4wgb
Jan 11 23:29:43.326: INFO: Created: latency-svc-w82t4
Jan 11 23:29:43.337: INFO: Got endpoints: latency-svc-vhn48 [304.413743ms]
Jan 11 23:29:43.355: INFO: Created: latency-svc-xbw6v
Jan 11 23:29:43.385: INFO: Got endpoints: latency-svc-5xqdw [349.968869ms]
Jan 11 23:29:43.406: INFO: Created: latency-svc-w2btw
Jan 11 23:29:43.438: INFO: Got endpoints: latency-svc-jp469 [405.928391ms]
Jan 11 23:29:43.464: INFO: Created: latency-svc-g2n68
Jan 11 23:29:43.488: INFO: Got endpoints: latency-svc-sfxph [451.304215ms]
Jan 11 23:29:43.508: INFO: Created: latency-svc-75ldp
Jan 11 23:29:43.539: INFO: Got endpoints: latency-svc-jlw8p [480.620189ms]
Jan 11 23:29:43.579: INFO: Created: latency-svc-2n9sl
Jan 11 23:29:43.587: INFO: Got endpoints: latency-svc-59mxq [526.318315ms]
Jan 11 23:29:43.608: INFO: Created: latency-svc-m2bd5
Jan 11 23:29:43.637: INFO: Got endpoints: latency-svc-nmhq4 [577.154991ms]
Jan 11 23:29:43.662: INFO: Created: latency-svc-kxhw9
Jan 11 23:29:43.688: INFO: Got endpoints: latency-svc-4pgbd [627.561561ms]
Jan 11 23:29:43.706: INFO: Created: latency-svc-nsrnl
Jan 11 23:29:43.738: INFO: Got endpoints: latency-svc-8q9nl [678.76424ms]
Jan 11 23:29:43.770: INFO: Created: latency-svc-7qxzx
Jan 11 23:29:43.784: INFO: Got endpoints: latency-svc-5rwjm [707.66191ms]
Jan 11 23:29:43.828: INFO: Created: latency-svc-7d959
Jan 11 23:29:43.842: INFO: Got endpoints: latency-svc-h8qc4 [756.630167ms]
Jan 11 23:29:43.869: INFO: Created: latency-svc-8qts8
Jan 11 23:29:43.890: INFO: Got endpoints: latency-svc-sqvnh [741.96163ms]
Jan 11 23:29:43.909: INFO: Created: latency-svc-mbntk
Jan 11 23:29:43.935: INFO: Got endpoints: latency-svc-2mhxw [730.426222ms]
Jan 11 23:29:43.957: INFO: Created: latency-svc-5xgls
Jan 11 23:29:43.986: INFO: Got endpoints: latency-svc-j4wgb [743.868647ms]
Jan 11 23:29:44.017: INFO: Created: latency-svc-zn9xg
Jan 11 23:29:44.036: INFO: Got endpoints: latency-svc-w82t4 [743.195342ms]
Jan 11 23:29:44.054: INFO: Created: latency-svc-gcw2c
Jan 11 23:29:44.086: INFO: Got endpoints: latency-svc-xbw6v [748.860294ms]
Jan 11 23:29:44.105: INFO: Created: latency-svc-fqkfz
Jan 11 23:29:44.137: INFO: Got endpoints: latency-svc-w2btw [751.55062ms]
Jan 11 23:29:44.157: INFO: Created: latency-svc-jjddk
Jan 11 23:29:44.185: INFO: Got endpoints: latency-svc-g2n68 [747.423981ms]
Jan 11 23:29:44.208: INFO: Created: latency-svc-qkvqr
Jan 11 23:29:44.236: INFO: Got endpoints: latency-svc-75ldp [747.071277ms]
Jan 11 23:29:44.265: INFO: Created: latency-svc-6vq6l
Jan 11 23:29:44.296: INFO: Got endpoints: latency-svc-2n9sl [756.926469ms]
Jan 11 23:29:44.321: INFO: Created: latency-svc-fftc9
Jan 11 23:29:44.338: INFO: Got endpoints: latency-svc-m2bd5 [751.424218ms]
Jan 11 23:29:44.358: INFO: Created: latency-svc-pqrk6
Jan 11 23:29:44.388: INFO: Got endpoints: latency-svc-kxhw9 [751.026315ms]
Jan 11 23:29:44.425: INFO: Created: latency-svc-45qbj
Jan 11 23:29:44.438: INFO: Got endpoints: latency-svc-nsrnl [750.377409ms]
Jan 11 23:29:44.454: INFO: Created: latency-svc-t2gz7
Jan 11 23:29:44.486: INFO: Got endpoints: latency-svc-7qxzx [747.234079ms]
Jan 11 23:29:44.503: INFO: Created: latency-svc-rs4nm
Jan 11 23:29:44.546: INFO: Got endpoints: latency-svc-7d959 [761.529513ms]
Jan 11 23:29:44.562: INFO: Created: latency-svc-wmphc
Jan 11 23:29:44.586: INFO: Got endpoints: latency-svc-8qts8 [743.586245ms]
Jan 11 23:29:44.609: INFO: Created: latency-svc-fsd9s
Jan 11 23:29:44.636: INFO: Got endpoints: latency-svc-mbntk [745.534963ms]
Jan 11 23:29:44.659: INFO: Created: latency-svc-zz4vn
Jan 11 23:29:44.687: INFO: Got endpoints: latency-svc-5xgls [751.931123ms]
Jan 11 23:29:44.705: INFO: Created: latency-svc-t69g9
Jan 11 23:29:44.736: INFO: Got endpoints: latency-svc-zn9xg [750.50451ms]
Jan 11 23:29:44.755: INFO: Created: latency-svc-rhzf8
Jan 11 23:29:44.786: INFO: Got endpoints: latency-svc-gcw2c [750.619611ms]
Jan 11 23:29:44.807: INFO: Created: latency-svc-hd58x
Jan 11 23:29:44.839: INFO: Got endpoints: latency-svc-fqkfz [753.328136ms]
Jan 11 23:29:44.863: INFO: Created: latency-svc-txl8f
Jan 11 23:29:44.885: INFO: Got endpoints: latency-svc-jjddk [747.682783ms]
Jan 11 23:29:44.906: INFO: Created: latency-svc-749jk
Jan 11 23:29:44.946: INFO: Got endpoints: latency-svc-qkvqr [760.737709ms]
Jan 11 23:29:44.964: INFO: Created: latency-svc-tlb4b
Jan 11 23:29:44.986: INFO: Got endpoints: latency-svc-6vq6l [749.883612ms]
Jan 11 23:29:45.003: INFO: Created: latency-svc-54t5f
Jan 11 23:29:45.035: INFO: Got endpoints: latency-svc-fftc9 [738.963315ms]
Jan 11 23:29:45.059: INFO: Created: latency-svc-rdwzg
Jan 11 23:29:45.085: INFO: Got endpoints: latency-svc-pqrk6 [746.485191ms]
Jan 11 23:29:45.116: INFO: Created: latency-svc-l5mq2
Jan 11 23:29:45.140: INFO: Got endpoints: latency-svc-45qbj [752.009648ms]
Jan 11 23:29:45.162: INFO: Created: latency-svc-wzhln
Jan 11 23:29:45.185: INFO: Got endpoints: latency-svc-t2gz7 [746.544701ms]
Jan 11 23:29:45.201: INFO: Created: latency-svc-5ctt6
Jan 11 23:29:45.235: INFO: Got endpoints: latency-svc-rs4nm [749.483735ms]
Jan 11 23:29:45.252: INFO: Created: latency-svc-jvwmt
Jan 11 23:29:45.287: INFO: Got endpoints: latency-svc-wmphc [741.195162ms]
Jan 11 23:29:45.318: INFO: Created: latency-svc-nxhp4
Jan 11 23:29:45.338: INFO: Got endpoints: latency-svc-fsd9s [751.896368ms]
Jan 11 23:29:45.365: INFO: Created: latency-svc-rb6xp
Jan 11 23:29:45.389: INFO: Got endpoints: latency-svc-zz4vn [753.072584ms]
Jan 11 23:29:45.424: INFO: Created: latency-svc-qq9fq
Jan 11 23:29:45.439: INFO: Got endpoints: latency-svc-t69g9 [751.533775ms]
Jan 11 23:29:45.452: INFO: Created: latency-svc-rlg6g
Jan 11 23:29:45.488: INFO: Got endpoints: latency-svc-rhzf8 [750.817672ms]
Jan 11 23:29:45.505: INFO: Created: latency-svc-tjdrt
Jan 11 23:29:45.536: INFO: Got endpoints: latency-svc-hd58x [749.97467ms]
Jan 11 23:29:45.562: INFO: Created: latency-svc-d2lrw
Jan 11 23:29:45.586: INFO: Got endpoints: latency-svc-txl8f [746.976347ms]
Jan 11 23:29:45.608: INFO: Created: latency-svc-5hsxt
Jan 11 23:29:45.642: INFO: Got endpoints: latency-svc-749jk [757.36365ms]
Jan 11 23:29:45.661: INFO: Created: latency-svc-dzqhl
Jan 11 23:29:45.694: INFO: Got endpoints: latency-svc-tlb4b [746.745552ms]
Jan 11 23:29:45.713: INFO: Created: latency-svc-7d4d2
Jan 11 23:29:45.735: INFO: Got endpoints: latency-svc-54t5f [749.157675ms]
Jan 11 23:29:45.770: INFO: Created: latency-svc-n7vbp
Jan 11 23:29:45.786: INFO: Got endpoints: latency-svc-rdwzg [750.100484ms]
Jan 11 23:29:45.801: INFO: Created: latency-svc-8wqt6
Jan 11 23:29:45.842: INFO: Got endpoints: latency-svc-l5mq2 [757.173051ms]
Jan 11 23:29:45.866: INFO: Created: latency-svc-rnm4n
Jan 11 23:29:45.891: INFO: Got endpoints: latency-svc-wzhln [750.174284ms]
Jan 11 23:29:45.909: INFO: Created: latency-svc-gl9xk
Jan 11 23:29:45.940: INFO: Got endpoints: latency-svc-5ctt6 [755.07133ms]
Jan 11 23:29:45.955: INFO: Created: latency-svc-5xdz8
Jan 11 23:29:45.986: INFO: Got endpoints: latency-svc-jvwmt [750.420287ms]
Jan 11 23:29:46.005: INFO: Created: latency-svc-jd6jq
Jan 11 23:29:46.037: INFO: Got endpoints: latency-svc-nxhp4 [749.69468ms]
Jan 11 23:29:46.054: INFO: Created: latency-svc-5bz7k
Jan 11 23:29:46.086: INFO: Got endpoints: latency-svc-rb6xp [748.178565ms]
Jan 11 23:29:46.112: INFO: Created: latency-svc-r2mg2
Jan 11 23:29:46.137: INFO: Got endpoints: latency-svc-qq9fq [747.355358ms]
Jan 11 23:29:46.159: INFO: Created: latency-svc-g28qh
Jan 11 23:29:46.186: INFO: Got endpoints: latency-svc-rlg6g [746.978554ms]
Jan 11 23:29:46.219: INFO: Created: latency-svc-gvkpd
Jan 11 23:29:46.236: INFO: Got endpoints: latency-svc-tjdrt [748.241066ms]
Jan 11 23:29:46.262: INFO: Created: latency-svc-xtlf2
Jan 11 23:29:46.286: INFO: Got endpoints: latency-svc-d2lrw [749.301576ms]
Jan 11 23:29:46.303: INFO: Created: latency-svc-9cbbl
Jan 11 23:29:46.336: INFO: Got endpoints: latency-svc-5hsxt [749.287376ms]
Jan 11 23:29:46.355: INFO: Created: latency-svc-lwhbn
Jan 11 23:29:46.404: INFO: Got endpoints: latency-svc-dzqhl [761.974896ms]
Jan 11 23:29:46.427: INFO: Created: latency-svc-mmpkv
Jan 11 23:29:46.441: INFO: Got endpoints: latency-svc-7d4d2 [747.451659ms]
Jan 11 23:29:46.457: INFO: Created: latency-svc-wjsq4
Jan 11 23:29:46.490: INFO: Got endpoints: latency-svc-n7vbp [754.303623ms]
Jan 11 23:29:46.509: INFO: Created: latency-svc-m6qbk
Jan 11 23:29:46.536: INFO: Got endpoints: latency-svc-8wqt6 [750.071183ms]
Jan 11 23:29:46.558: INFO: Created: latency-svc-8gpfg
Jan 11 23:29:46.586: INFO: Got endpoints: latency-svc-rnm4n [742.867016ms]
Jan 11 23:29:46.616: INFO: Created: latency-svc-9p25d
Jan 11 23:29:46.644: INFO: Got endpoints: latency-svc-gl9xk [753.299214ms]
Jan 11 23:29:46.669: INFO: Created: latency-svc-92mll
Jan 11 23:29:46.685: INFO: Got endpoints: latency-svc-5xdz8 [745.43724ms]
Jan 11 23:29:46.711: INFO: Created: latency-svc-m7fwl
Jan 11 23:29:46.739: INFO: Got endpoints: latency-svc-jd6jq [753.648117ms]
Jan 11 23:29:46.768: INFO: Created: latency-svc-spzdc
Jan 11 23:29:46.785: INFO: Got endpoints: latency-svc-5bz7k [748.442368ms]
Jan 11 23:29:46.802: INFO: Created: latency-svc-c6kfm
Jan 11 23:29:46.839: INFO: Got endpoints: latency-svc-r2mg2 [752.948911ms]
Jan 11 23:29:46.862: INFO: Created: latency-svc-2fjlb
Jan 11 23:29:46.885: INFO: Got endpoints: latency-svc-g28qh [748.195265ms]
Jan 11 23:29:46.906: INFO: Created: latency-svc-rrbln
Jan 11 23:29:46.945: INFO: Got endpoints: latency-svc-gvkpd [758.773865ms]
Jan 11 23:29:46.965: INFO: Created: latency-svc-qk7vj
Jan 11 23:29:46.984: INFO: Got endpoints: latency-svc-xtlf2 [748.122765ms]
Jan 11 23:29:47.002: INFO: Created: latency-svc-6hk4r
Jan 11 23:29:47.035: INFO: Got endpoints: latency-svc-9cbbl [749.447377ms]
Jan 11 23:29:47.056: INFO: Created: latency-svc-jnx6r
Jan 11 23:29:47.094: INFO: Got endpoints: latency-svc-lwhbn [758.09046ms]
Jan 11 23:29:47.110: INFO: Created: latency-svc-ms69f
Jan 11 23:29:47.134: INFO: Got endpoints: latency-svc-mmpkv [730.094695ms]
Jan 11 23:29:47.159: INFO: Created: latency-svc-xgbtk
Jan 11 23:29:47.186: INFO: Got endpoints: latency-svc-wjsq4 [745.149237ms]
Jan 11 23:29:47.209: INFO: Created: latency-svc-49w56
Jan 11 23:29:47.242: INFO: Got endpoints: latency-svc-m6qbk [751.980501ms]
Jan 11 23:29:47.261: INFO: Created: latency-svc-n786n
Jan 11 23:29:47.286: INFO: Got endpoints: latency-svc-8gpfg [750.142684ms]
Jan 11 23:29:47.307: INFO: Created: latency-svc-xbkk4
Jan 11 23:29:47.336: INFO: Got endpoints: latency-svc-9p25d [749.614379ms]
Jan 11 23:29:47.373: INFO: Created: latency-svc-gms7p
Jan 11 23:29:47.394: INFO: Got endpoints: latency-svc-92mll [749.702579ms]
Jan 11 23:29:47.414: INFO: Created: latency-svc-c49bn
Jan 11 23:29:47.441: INFO: Got endpoints: latency-svc-m7fwl [754.96553ms]
Jan 11 23:29:47.461: INFO: Created: latency-svc-kxc55
Jan 11 23:29:47.486: INFO: Got endpoints: latency-svc-spzdc [746.807252ms]
Jan 11 23:29:47.507: INFO: Created: latency-svc-ct42d
Jan 11 23:29:47.537: INFO: Got endpoints: latency-svc-c6kfm [751.448396ms]
Jan 11 23:29:47.552: INFO: Created: latency-svc-k7ps4
Jan 11 23:29:47.586: INFO: Got endpoints: latency-svc-2fjlb [746.882154ms]
Jan 11 23:29:47.615: INFO: Created: latency-svc-mdbvh
Jan 11 23:29:47.644: INFO: Got endpoints: latency-svc-rrbln [758.989567ms]
Jan 11 23:29:47.661: INFO: Created: latency-svc-sf52k
Jan 11 23:29:47.688: INFO: Got endpoints: latency-svc-qk7vj [742.904515ms]
Jan 11 23:29:47.707: INFO: Created: latency-svc-dnjcj
Jan 11 23:29:47.736: INFO: Got endpoints: latency-svc-6hk4r [751.225494ms]
Jan 11 23:29:47.752: INFO: Created: latency-svc-mrhks
Jan 11 23:29:47.786: INFO: Got endpoints: latency-svc-jnx6r [750.185384ms]
Jan 11 23:29:47.804: INFO: Created: latency-svc-cxwg5
Jan 11 23:29:47.847: INFO: Got endpoints: latency-svc-ms69f [753.443915ms]
Jan 11 23:29:47.876: INFO: Created: latency-svc-gdpjp
Jan 11 23:29:47.900: INFO: Got endpoints: latency-svc-xgbtk [765.371227ms]
Jan 11 23:29:47.931: INFO: Created: latency-svc-vzws7
Jan 11 23:29:47.944: INFO: Got endpoints: latency-svc-49w56 [757.994458ms]
Jan 11 23:29:47.971: INFO: Created: latency-svc-nwhv6
Jan 11 23:29:47.986: INFO: Got endpoints: latency-svc-n786n [743.718224ms]
Jan 11 23:29:48.005: INFO: Created: latency-svc-7w5zq
Jan 11 23:29:48.035: INFO: Got endpoints: latency-svc-xbkk4 [749.036274ms]
Jan 11 23:29:48.058: INFO: Created: latency-svc-7vvrk
Jan 11 23:29:48.097: INFO: Got endpoints: latency-svc-gms7p [761.482092ms]
Jan 11 23:29:48.112: INFO: Created: latency-svc-kr97m
Jan 11 23:29:48.135: INFO: Got endpoints: latency-svc-c49bn [740.922197ms]
Jan 11 23:29:48.163: INFO: Created: latency-svc-l4r2z
Jan 11 23:29:48.186: INFO: Got endpoints: latency-svc-kxc55 [745.576441ms]
Jan 11 23:29:48.224: INFO: Created: latency-svc-nsl5n
Jan 11 23:29:48.237: INFO: Got endpoints: latency-svc-ct42d [750.043583ms]
Jan 11 23:29:48.279: INFO: Created: latency-svc-4fqjs
Jan 11 23:29:48.287: INFO: Got endpoints: latency-svc-k7ps4 [749.826081ms]
Jan 11 23:29:48.303: INFO: Created: latency-svc-v25hg
Jan 11 23:29:48.335: INFO: Got endpoints: latency-svc-mdbvh [748.841471ms]
Jan 11 23:29:48.355: INFO: Created: latency-svc-g7hbz
Jan 11 23:29:48.391: INFO: Got endpoints: latency-svc-sf52k [746.347048ms]
Jan 11 23:29:48.407: INFO: Created: latency-svc-f6zw7
Jan 11 23:29:48.447: INFO: Got endpoints: latency-svc-dnjcj [759.28057ms]
Jan 11 23:29:48.471: INFO: Created: latency-svc-vzqt7
Jan 11 23:29:48.489: INFO: Got endpoints: latency-svc-mrhks [752.91111ms]
Jan 11 23:29:48.523: INFO: Created: latency-svc-ng5mt
Jan 11 23:29:48.536: INFO: Got endpoints: latency-svc-cxwg5 [750.166884ms]
Jan 11 23:29:48.555: INFO: Created: latency-svc-g5hrn
Jan 11 23:29:48.585: INFO: Got endpoints: latency-svc-gdpjp [737.532165ms]
Jan 11 23:29:48.629: INFO: Created: latency-svc-hw7wv
Jan 11 23:29:48.653: INFO: Got endpoints: latency-svc-vzws7 [753.598016ms]
Jan 11 23:29:48.671: INFO: Created: latency-svc-gtwwc
Jan 11 23:29:48.697: INFO: Got endpoints: latency-svc-nwhv6 [752.095003ms]
Jan 11 23:29:48.718: INFO: Created: latency-svc-jldnf
Jan 11 23:29:48.751: INFO: Got endpoints: latency-svc-7w5zq [765.476729ms]
Jan 11 23:29:48.778: INFO: Created: latency-svc-gmcql
Jan 11 23:29:48.795: INFO: Got endpoints: latency-svc-7vvrk [759.26857ms]
Jan 11 23:29:48.812: INFO: Created: latency-svc-4t2vv
Jan 11 23:29:48.837: INFO: Got endpoints: latency-svc-kr97m [740.16089ms]
Jan 11 23:29:48.867: INFO: Created: latency-svc-6d576
Jan 11 23:29:48.885: INFO: Got endpoints: latency-svc-l4r2z [750.190985ms]
Jan 11 23:29:48.912: INFO: Created: latency-svc-nhl8r
Jan 11 23:29:48.948: INFO: Got endpoints: latency-svc-nsl5n [761.535592ms]
Jan 11 23:29:48.962: INFO: Created: latency-svc-cdgsm
Jan 11 23:29:48.985: INFO: Got endpoints: latency-svc-4fqjs [748.421668ms]
Jan 11 23:29:49.008: INFO: Created: latency-svc-k8dln
Jan 11 23:29:49.036: INFO: Got endpoints: latency-svc-v25hg [748.789871ms]
Jan 11 23:29:49.055: INFO: Created: latency-svc-gmj6b
Jan 11 23:29:49.089: INFO: Got endpoints: latency-svc-g7hbz [753.717617ms]
Jan 11 23:29:49.112: INFO: Created: latency-svc-bnvdc
Jan 11 23:29:49.137: INFO: Got endpoints: latency-svc-f6zw7 [746.404248ms]
Jan 11 23:29:49.158: INFO: Created: latency-svc-qsgfj
Jan 11 23:29:49.217: INFO: Got endpoints: latency-svc-vzqt7 [770.140573ms]
Jan 11 23:29:49.236: INFO: Created: latency-svc-ckjdw
Jan 11 23:29:49.241: INFO: Got endpoints: latency-svc-ng5mt [751.942201ms]
Jan 11 23:29:49.265: INFO: Created: latency-svc-jzhvk
Jan 11 23:29:49.294: INFO: Got endpoints: latency-svc-g5hrn [757.789256ms]
Jan 11 23:29:49.315: INFO: Created: latency-svc-8qf6h
Jan 11 23:29:49.336: INFO: Got endpoints: latency-svc-hw7wv [750.71459ms]
Jan 11 23:29:49.355: INFO: Created: latency-svc-qx856
Jan 11 23:29:49.403: INFO: Got endpoints: latency-svc-gtwwc [749.345577ms]
Jan 11 23:29:49.421: INFO: Created: latency-svc-59l85
Jan 11 23:29:49.438: INFO: Got endpoints: latency-svc-jldnf [741.630504ms]
Jan 11 23:29:49.462: INFO: Created: latency-svc-hxtzk
Jan 11 23:29:49.489: INFO: Got endpoints: latency-svc-gmcql [737.711567ms]
Jan 11 23:29:49.509: INFO: Created: latency-svc-gxn98
Jan 11 23:29:49.553: INFO: Got endpoints: latency-svc-4t2vv [758.245361ms]
Jan 11 23:29:49.569: INFO: Created: latency-svc-2f5pv
Jan 11 23:29:49.585: INFO: Got endpoints: latency-svc-6d576 [746.681852ms]
Jan 11 23:29:49.616: INFO: Created: latency-svc-pnzzv
Jan 11 23:29:49.652: INFO: Got endpoints: latency-svc-nhl8r [766.130935ms]
Jan 11 23:29:49.680: INFO: Created: latency-svc-bk7vk
Jan 11 23:29:49.687: INFO: Got endpoints: latency-svc-cdgsm [738.517374ms]
Jan 11 23:29:49.711: INFO: Created: latency-svc-k4cvv
Jan 11 23:29:49.735: INFO: Got endpoints: latency-svc-k8dln [750.083084ms]
Jan 11 23:29:49.786: INFO: Got endpoints: latency-svc-gmj6b [750.237885ms]
Jan 11 23:29:49.838: INFO: Got endpoints: latency-svc-bnvdc [748.889572ms]
Jan 11 23:29:49.901: INFO: Got endpoints: latency-svc-qsgfj [763.53421ms]
Jan 11 23:29:49.936: INFO: Got endpoints: latency-svc-ckjdw [718.538185ms]
Jan 11 23:29:49.985: INFO: Got endpoints: latency-svc-jzhvk [744.659532ms]
Jan 11 23:29:50.036: INFO: Got endpoints: latency-svc-8qf6h [742.356711ms]
Jan 11 23:29:50.087: INFO: Got endpoints: latency-svc-qx856 [750.83469ms]
Jan 11 23:29:50.136: INFO: Got endpoints: latency-svc-59l85 [733.178024ms]
Jan 11 23:29:50.186: INFO: Got endpoints: latency-svc-hxtzk [747.134055ms]
Jan 11 23:29:50.235: INFO: Got endpoints: latency-svc-gxn98 [746.019245ms]
Jan 11 23:29:50.295: INFO: Got endpoints: latency-svc-2f5pv [741.407102ms]
Jan 11 23:29:50.344: INFO: Got endpoints: latency-svc-pnzzv [759.543073ms]
Jan 11 23:29:50.390: INFO: Got endpoints: latency-svc-bk7vk [738.226072ms]
Jan 11 23:29:50.437: INFO: Got endpoints: latency-svc-k4cvv [749.74948ms]
Jan 11 23:29:50.437: INFO: Latencies: [98.760122ms 108.245611ms 116.938892ms 129.874713ms 152.261922ms 176.439148ms 183.988818ms 201.510282ms 229.822547ms 230.394752ms 230.820256ms 239.026933ms 250.174837ms 259.665425ms 268.643309ms 272.920749ms 274.351963ms 280.160716ms 288.276392ms 296.685671ms 297.131875ms 297.714381ms 299.616098ms 304.413743ms 309.650392ms 323.004217ms 331.536497ms 334.541425ms 348.939059ms 349.968869ms 350.425773ms 352.337991ms 354.253409ms 367.714934ms 367.926837ms 369.960755ms 372.58048ms 377.748728ms 383.169678ms 387.699821ms 390.703449ms 402.064955ms 405.928391ms 410.04763ms 412.394852ms 417.884303ms 425.738876ms 427.079089ms 441.849127ms 445.519061ms 451.304215ms 469.418784ms 473.26192ms 480.620189ms 484.078021ms 503.848005ms 504.192709ms 506.43893ms 514.061902ms 526.318315ms 540.808951ms 558.89532ms 567.665402ms 577.154991ms 627.561561ms 678.76424ms 707.66191ms 718.538185ms 730.094695ms 730.426222ms 733.178024ms 737.532165ms 737.711567ms 738.226072ms 738.517374ms 738.963315ms 740.16089ms 740.922197ms 741.195162ms 741.407102ms 741.630504ms 741.96163ms 742.356711ms 742.867016ms 742.904515ms 743.195342ms 743.586245ms 743.718224ms 743.868647ms 744.659532ms 745.149237ms 745.43724ms 745.534963ms 745.576441ms 746.019245ms 746.347048ms 746.404248ms 746.485191ms 746.544701ms 746.681852ms 746.745552ms 746.807252ms 746.882154ms 746.976347ms 746.978554ms 747.071277ms 747.134055ms 747.234079ms 747.355358ms 747.423981ms 747.451659ms 747.682783ms 748.122765ms 748.178565ms 748.195265ms 748.241066ms 748.421668ms 748.442368ms 748.789871ms 748.841471ms 748.860294ms 748.889572ms 749.036274ms 749.157675ms 749.287376ms 749.301576ms 749.345577ms 749.447377ms 749.483735ms 749.614379ms 749.69468ms 749.702579ms 749.74948ms 749.826081ms 749.883612ms 749.97467ms 750.043583ms 750.071183ms 750.083084ms 750.100484ms 750.142684ms 750.166884ms 750.174284ms 750.185384ms 750.190985ms 750.237885ms 750.377409ms 750.420287ms 750.50451ms 750.619611ms 750.71459ms 750.817672ms 750.83469ms 751.026315ms 751.225494ms 751.424218ms 751.448396ms 751.533775ms 751.55062ms 751.896368ms 751.931123ms 751.942201ms 751.980501ms 752.009648ms 752.095003ms 752.91111ms 752.948911ms 753.072584ms 753.299214ms 753.328136ms 753.443915ms 753.598016ms 753.648117ms 753.717617ms 754.303623ms 754.96553ms 755.07133ms 756.630167ms 756.926469ms 757.173051ms 757.36365ms 757.789256ms 757.994458ms 758.09046ms 758.245361ms 758.773865ms 758.989567ms 759.26857ms 759.28057ms 759.543073ms 760.737709ms 761.482092ms 761.529513ms 761.535592ms 761.974896ms 763.53421ms 765.371227ms 765.476729ms 766.130935ms 770.140573ms]
Jan 11 23:29:50.437: INFO: 50 %ile: 746.745552ms
Jan 11 23:29:50.437: INFO: 90 %ile: 757.36365ms
Jan 11 23:29:50.437: INFO: 99 %ile: 766.130935ms
Jan 11 23:29:50.437: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Jan 11 23:29:50.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-2445" for this suite.

â€¢ [SLOW TEST:12.000 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":106,"skipped":1973,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:29:50.469: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-c02b3ced-147c-4e2c-ba15-4ed785d779c0 in namespace container-probe-2432
Jan 11 23:29:52.650: INFO: Started pod busybox-c02b3ced-147c-4e2c-ba15-4ed785d779c0 in namespace container-probe-2432
STEP: checking the pod's current state and verifying that restartCount is present
Jan 11 23:29:52.654: INFO: Initial restart count of pod busybox-c02b3ced-147c-4e2c-ba15-4ed785d779c0 is 0
Jan 11 23:30:42.888: INFO: Restart count of pod container-probe-2432/busybox-c02b3ced-147c-4e2c-ba15-4ed785d779c0 is now 1 (50.233624866s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 11 23:30:42.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2432" for this suite.

â€¢ [SLOW TEST:52.455 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":1977,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:30:42.924: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5058 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5058;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5058 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5058;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5058.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5058.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5058.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5058.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5058.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5058.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5058.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5058.svc;check="$$(dig +notcp +noall +answer +search 107.105.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.105.107_udp@PTR;check="$$(dig +tcp +noall +answer +search 107.105.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.105.107_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5058 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5058;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5058 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5058;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5058.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5058.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5058.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5058.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5058.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5058.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5058.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5058.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5058.svc;check="$$(dig +notcp +noall +answer +search 107.105.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.105.107_udp@PTR;check="$$(dig +tcp +noall +answer +search 107.105.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.105.107_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:30:47.187: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.191: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.195: INFO: Unable to read wheezy_udp@dns-test-service.dns-5058 from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.199: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5058 from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.204: INFO: Unable to read wheezy_udp@dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.211: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.217: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.220: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.243: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.252: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.256: INFO: Unable to read jessie_udp@dns-test-service.dns-5058 from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.260: INFO: Unable to read jessie_tcp@dns-test-service.dns-5058 from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.264: INFO: Unable to read jessie_udp@dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.270: INFO: Unable to read jessie_tcp@dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.275: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.279: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5058.svc from pod dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a: the server could not find the requested resource (get pods dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a)
Jan 11 23:30:47.297: INFO: Lookups using dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5058 wheezy_tcp@dns-test-service.dns-5058 wheezy_udp@dns-test-service.dns-5058.svc wheezy_tcp@dns-test-service.dns-5058.svc wheezy_udp@_http._tcp.dns-test-service.dns-5058.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5058.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5058 jessie_tcp@dns-test-service.dns-5058 jessie_udp@dns-test-service.dns-5058.svc jessie_tcp@dns-test-service.dns-5058.svc jessie_udp@_http._tcp.dns-test-service.dns-5058.svc jessie_tcp@_http._tcp.dns-test-service.dns-5058.svc]

Jan 11 23:30:52.396: INFO: DNS probes using dns-5058/dns-test-b05b121b-558a-4b10-9ec0-0b9ebc10ea0a succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 11 23:30:52.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5058" for this suite.

â€¢ [SLOW TEST:9.614 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":108,"skipped":1986,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:30:52.539: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-946
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-f522d76c-efa4-4d94-8429-7b6813efdd85
STEP: Creating the pod
Jan 11 23:30:52.720: INFO: The status of Pod pod-configmaps-ea8affbe-1e22-4053-b897-335850bd16e4 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:30:54.731: INFO: The status of Pod pod-configmaps-ea8affbe-1e22-4053-b897-335850bd16e4 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:30:56.731: INFO: The status of Pod pod-configmaps-ea8affbe-1e22-4053-b897-335850bd16e4 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-f522d76c-efa4-4d94-8429-7b6813efdd85
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:32:27.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-946" for this suite.

â€¢ [SLOW TEST:94.688 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":109,"skipped":2072,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:32:27.228: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-7982
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:32:27.414: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Creating first CR 
Jan 11 23:32:30.004: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:32:30Z]] name:name1 resourceVersion:11346 uid:0a5453f1-3d60-4832-b42e-9cca18190c24] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Jan 11 23:32:40.014: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:40Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:32:40Z]] name:name2 resourceVersion:11377 uid:835936a9-6569-43c6-86d2-edda41b5901b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Jan 11 23:32:50.035: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:32:50Z]] name:name1 resourceVersion:11393 uid:0a5453f1-3d60-4832-b42e-9cca18190c24] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Jan 11 23:33:00.053: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:33:00Z]] name:name2 resourceVersion:11410 uid:835936a9-6569-43c6-86d2-edda41b5901b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Jan 11 23:33:10.064: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:32:50Z]] name:name1 resourceVersion:11426 uid:0a5453f1-3d60-4832-b42e-9cca18190c24] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Jan 11 23:33:20.084: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-11T23:32:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-11T23:33:00Z]] name:name2 resourceVersion:11442 uid:835936a9-6569-43c6-86d2-edda41b5901b] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:33:30.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-7982" for this suite.

â€¢ [SLOW TEST:63.385 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":110,"skipped":2088,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:33:30.614: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9566
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9566
STEP: creating service affinity-nodeport-transition in namespace services-9566
STEP: creating replication controller affinity-nodeport-transition in namespace services-9566
I0111 23:33:30.811646      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-9566, replica count: 3
I0111 23:33:33.862368      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 11 23:33:33.875: INFO: Creating new exec pod
Jan 11 23:33:36.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Jan 11 23:33:37.105: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jan 11 23:33:37.105: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:33:37.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.210.225 80'
Jan 11 23:33:37.302: INFO: stderr: "+ nc -v -t -w 2 10.0.210.225 80\n+ echo hostName\nConnection to 10.0.210.225 80 port [tcp/http] succeeded!\n"
Jan 11 23:33:37.302: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:33:37.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 30959'
Jan 11 23:33:37.486: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.63 30959\nConnection to 10.240.0.63 30959 port [tcp/*] succeeded!\n"
Jan 11 23:33:37.486: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:33:37.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30959'
Jan 11 23:33:37.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30959\nConnection to 10.240.0.34 30959 port [tcp/*] succeeded!\n"
Jan 11 23:33:37.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 11 23:33:37.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.34:30959/ ; done'
Jan 11 23:33:38.046: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n"
Jan 11 23:33:38.046: INFO: stdout: "\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-9k82v\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-9k82v\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-9k82v\naffinity-nodeport-transition-lgtvc\naffinity-nodeport-transition-vxc4g"
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-9k82v
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.046: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-9k82v
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-9k82v
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-lgtvc
Jan 11 23:33:38.047: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-9566 exec execpod-affinityxd227 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.34:30959/ ; done'
Jan 11 23:33:38.428: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:30959/\n"
Jan 11 23:33:38.428: INFO: stdout: "\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g\naffinity-nodeport-transition-vxc4g"
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Received response from host: affinity-nodeport-transition-vxc4g
Jan 11 23:33:38.428: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9566, will wait for the garbage collector to delete the pods
Jan 11 23:33:38.513: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.004035ms
Jan 11 23:33:38.614: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.794135ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:33:40.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9566" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.041 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":111,"skipped":2109,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:33:40.655: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Jan 11 23:33:41.888: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 11 23:34:42.077: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 11 23:34:42.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9508" for this suite.

â€¢ [SLOW TEST:61.439 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":112,"skipped":2129,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:34:42.095: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8249
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:34:42.265: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Jan 11 23:34:44.330: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 11 23:34:45.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8249" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":113,"skipped":2162,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:34:45.353: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:34:45.883: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:34:48.917: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:34:59.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1214" for this suite.
STEP: Destroying namespace "webhook-1214-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:13.819 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":114,"skipped":2203,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:34:59.175: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 11 23:34:59.346: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:35:17.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6736" for this suite.

â€¢ [SLOW TEST:17.924 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":115,"skipped":2203,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:17.099: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2041
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 11 23:35:24.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2041" for this suite.

â€¢ [SLOW TEST:7.182 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":116,"skipped":2206,"failed":0}
SSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:24.281: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-6502
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 11 23:35:26.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-6502" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":2209,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:26.485: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Jan 11 23:35:26.642: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Jan 11 23:35:37.115: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:35:39.412: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:35:50.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4081" for this suite.

â€¢ [SLOW TEST:23.705 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":118,"skipped":2232,"failed":0}
SSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:50.192: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-f0ebf2ad-f73d-4946-8034-be8eb90924a2
STEP: Creating a pod to test consume configMaps
Jan 11 23:35:50.349: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d" in namespace "projected-290" to be "Succeeded or Failed"
Jan 11 23:35:50.362: INFO: Pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d": Phase="Pending", Reason="", readiness=false. Elapsed: 13.402889ms
Jan 11 23:35:52.368: INFO: Pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019205673s
Jan 11 23:35:54.377: INFO: Pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028466558s
Jan 11 23:35:56.385: INFO: Pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035919827s
STEP: Saw pod success
Jan 11 23:35:56.385: INFO: Pod "pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d" satisfied condition "Succeeded or Failed"
Jan 11 23:35:56.389: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:35:56.446: INFO: Waiting for pod pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d to disappear
Jan 11 23:35:56.452: INFO: Pod pod-projected-configmaps-3cf56323-4144-4c6c-b49c-c1fb4ffb3e7d no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:35:56.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-290" for this suite.

â€¢ [SLOW TEST:6.276 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":119,"skipped":2235,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:56.469: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7095
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 11 23:35:56.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7095" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":120,"skipped":2272,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:35:56.656: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4548
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:35:56.799: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 11 23:36:00.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4548 --namespace=crd-publish-openapi-4548 create -f -'
Jan 11 23:36:02.004: INFO: stderr: ""
Jan 11 23:36:02.004: INFO: stdout: "e2e-test-crd-publish-openapi-442-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 11 23:36:02.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4548 --namespace=crd-publish-openapi-4548 delete e2e-test-crd-publish-openapi-442-crds test-cr'
Jan 11 23:36:02.080: INFO: stderr: ""
Jan 11 23:36:02.080: INFO: stdout: "e2e-test-crd-publish-openapi-442-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jan 11 23:36:02.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4548 --namespace=crd-publish-openapi-4548 apply -f -'
Jan 11 23:36:02.328: INFO: stderr: ""
Jan 11 23:36:02.328: INFO: stdout: "e2e-test-crd-publish-openapi-442-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 11 23:36:02.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4548 --namespace=crd-publish-openapi-4548 delete e2e-test-crd-publish-openapi-442-crds test-cr'
Jan 11 23:36:02.404: INFO: stderr: ""
Jan 11 23:36:02.404: INFO: stdout: "e2e-test-crd-publish-openapi-442-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 11 23:36:02.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-4548 explain e2e-test-crd-publish-openapi-442-crds'
Jan 11 23:36:02.640: INFO: stderr: ""
Jan 11 23:36:02.640: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-442-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:36:04.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4548" for this suite.

â€¢ [SLOW TEST:8.283 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":121,"skipped":2301,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:36:04.941: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8669
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Jan 11 23:36:05.128: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:36:07.139: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Jan 11 23:36:08.169: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 11 23:36:08.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8669" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":122,"skipped":2347,"failed":0}
SSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:36:08.255: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8586
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-2ffc8a28-7be6-49b9-8f6d-46e6fe0550d6 in namespace container-probe-8586
Jan 11 23:36:10.421: INFO: Started pod busybox-2ffc8a28-7be6-49b9-8f6d-46e6fe0550d6 in namespace container-probe-8586
STEP: checking the pod's current state and verifying that restartCount is present
Jan 11 23:36:10.425: INFO: Initial restart count of pod busybox-2ffc8a28-7be6-49b9-8f6d-46e6fe0550d6 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 11 23:40:11.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8586" for this suite.

â€¢ [SLOW TEST:243.347 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":123,"skipped":2352,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:11.603: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2430
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-cce346f6-f97c-4be3-92d3-56309116d024
STEP: Creating a pod to test consume configMaps
Jan 11 23:40:11.783: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d" in namespace "projected-2430" to be "Succeeded or Failed"
Jan 11 23:40:11.796: INFO: Pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.654716ms
Jan 11 23:40:13.805: INFO: Pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d": Phase="Running", Reason="", readiness=true. Elapsed: 2.021975561s
Jan 11 23:40:15.810: INFO: Pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d": Phase="Running", Reason="", readiness=false. Elapsed: 4.026970566s
Jan 11 23:40:17.820: INFO: Pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.036643812s
STEP: Saw pod success
Jan 11 23:40:17.820: INFO: Pod "pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d" satisfied condition "Succeeded or Failed"
Jan 11 23:40:17.824: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d container agnhost-container: <nil>
STEP: delete the pod
Jan 11 23:40:17.877: INFO: Waiting for pod pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d to disappear
Jan 11 23:40:17.886: INFO: Pod pod-projected-configmaps-bb3e7554-58ac-4045-bc57-73c625f76f4d no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 11 23:40:17.886: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2430" for this suite.

â€¢ [SLOW TEST:6.293 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":124,"skipped":2371,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:17.897: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3364
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Jan 11 23:40:18.034: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jan 11 23:40:18.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:18.362: INFO: stderr: ""
Jan 11 23:40:18.362: INFO: stdout: "service/agnhost-replica created\n"
Jan 11 23:40:18.363: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jan 11 23:40:18.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:18.633: INFO: stderr: ""
Jan 11 23:40:18.633: INFO: stdout: "service/agnhost-primary created\n"
Jan 11 23:40:18.634: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jan 11 23:40:18.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:18.897: INFO: stderr: ""
Jan 11 23:40:18.897: INFO: stdout: "service/frontend created\n"
Jan 11 23:40:18.897: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jan 11 23:40:18.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:19.134: INFO: stderr: ""
Jan 11 23:40:19.134: INFO: stdout: "deployment.apps/frontend created\n"
Jan 11 23:40:19.134: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 11 23:40:19.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:19.419: INFO: stderr: ""
Jan 11 23:40:19.419: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jan 11 23:40:19.419: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 11 23:40:19.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 create -f -'
Jan 11 23:40:19.694: INFO: stderr: ""
Jan 11 23:40:19.694: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Jan 11 23:40:19.694: INFO: Waiting for all frontend pods to be Running.
Jan 11 23:40:24.747: INFO: Waiting for frontend to serve content.
Jan 11 23:40:24.764: INFO: Trying to add a new entry to the guestbook.
Jan 11 23:40:24.778: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Jan 11 23:40:24.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:24.912: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:24.912: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Jan 11 23:40:24.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:25.016: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:25.016: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 11 23:40:25.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:25.104: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:25.104: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 11 23:40:25.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:25.184: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:25.184: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 11 23:40:25.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:25.277: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:25.277: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 11 23:40:25.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3364 delete --grace-period=0 --force -f -'
Jan 11 23:40:25.352: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 11 23:40:25.352: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:40:25.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3364" for this suite.

â€¢ [SLOW TEST:7.487 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":125,"skipped":2372,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:25.384: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-1447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:40:26.427: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:40:29.463: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:40:29.469: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:40:32.648: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-1447" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:7.332 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":126,"skipped":2409,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:32.728: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-2135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Jan 11 23:40:32.914: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Jan 11 23:40:32.945: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 11 23:40:32.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2135" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":127,"skipped":2437,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:32.978: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7419
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:40:33.439: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:40:36.476: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:40:36.483: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7672-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:40:39.669: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7419" for this suite.
STEP: Destroying namespace "webhook-7419-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.772 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":128,"skipped":2449,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:39.752: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9860
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:40:39.917: INFO: Creating ReplicaSet my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a
Jan 11 23:40:39.935: INFO: Pod name my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a: Found 0 pods out of 1
Jan 11 23:40:44.957: INFO: Pod name my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a: Found 1 pods out of 1
Jan 11 23:40:44.957: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a" is running
Jan 11 23:40:44.962: INFO: Pod "my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a-r2rzv" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:40:39 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:40:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:40:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:40:39 +0000 UTC Reason: Message:}])
Jan 11 23:40:44.962: INFO: Trying to dial the pod
Jan 11 23:40:49.989: INFO: Controller my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a: Got expected result from replica 1 [my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a-r2rzv]: "my-hostname-basic-0445d0a5-bb7c-4a19-bc51-b9f3c67d1b9a-r2rzv", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 11 23:40:49.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9860" for this suite.

â€¢ [SLOW TEST:10.250 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":129,"skipped":2453,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:40:50.005: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-9572
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 11 23:40:50.210: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 11 23:41:50.252: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 11 23:41:50.277: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 11 23:41:50.285: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 11 23:41:50.314: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 11 23:41:50.321: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 11 23:41:50.356: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 11 23:41:50.365: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:42:06.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-9572" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:76.507 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":130,"skipped":2500,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:42:06.515: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 11 23:42:10.763: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8092" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":131,"skipped":2531,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:42:10.772: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6185
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 11 23:42:10.940: INFO: The status of Pod labelsupdate58d1e18e-8f5e-4232-a924-f3ae86129a95 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:42:12.950: INFO: The status of Pod labelsupdate58d1e18e-8f5e-4232-a924-f3ae86129a95 is Running (Ready = true)
Jan 11 23:42:13.515: INFO: Successfully updated pod "labelsupdate58d1e18e-8f5e-4232-a924-f3ae86129a95"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 11 23:42:17.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6185" for this suite.

â€¢ [SLOW TEST:6.801 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":132,"skipped":2539,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:42:17.574: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4057
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-gpkl
STEP: Creating a pod to test atomic-volume-subpath
Jan 11 23:42:17.740: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-gpkl" in namespace "subpath-4057" to be "Succeeded or Failed"
Jan 11 23:42:17.750: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Pending", Reason="", readiness=false. Elapsed: 9.908801ms
Jan 11 23:42:19.761: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 2.020471915s
Jan 11 23:42:21.772: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 4.03118387s
Jan 11 23:42:23.778: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 6.037511178s
Jan 11 23:42:25.786: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 8.045094499s
Jan 11 23:42:27.793: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 10.052840938s
Jan 11 23:42:29.803: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 12.062859735s
Jan 11 23:42:31.813: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 14.072494027s
Jan 11 23:42:33.819: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 16.078388579s
Jan 11 23:42:35.829: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 18.088508251s
Jan 11 23:42:37.836: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=true. Elapsed: 20.095557777s
Jan 11 23:42:39.845: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Running", Reason="", readiness=false. Elapsed: 22.104900726s
Jan 11 23:42:41.853: INFO: Pod "pod-subpath-test-secret-gpkl": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.11279256s
STEP: Saw pod success
Jan 11 23:42:41.853: INFO: Pod "pod-subpath-test-secret-gpkl" satisfied condition "Succeeded or Failed"
Jan 11 23:42:41.857: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-subpath-test-secret-gpkl container test-container-subpath-secret-gpkl: <nil>
STEP: delete the pod
Jan 11 23:42:41.913: INFO: Waiting for pod pod-subpath-test-secret-gpkl to disappear
Jan 11 23:42:41.917: INFO: Pod pod-subpath-test-secret-gpkl no longer exists
STEP: Deleting pod pod-subpath-test-secret-gpkl
Jan 11 23:42:41.917: INFO: Deleting pod "pod-subpath-test-secret-gpkl" in namespace "subpath-4057"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 11 23:42:41.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4057" for this suite.

â€¢ [SLOW TEST:24.375 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":133,"skipped":2576,"failed":0}
SS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:42:41.950: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-9582
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Jan 11 23:43:02.297: INFO: EndpointSlice for Service endpointslice-9582/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 11 23:43:12.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9582" for this suite.

â€¢ [SLOW TEST:30.396 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":134,"skipped":2578,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:43:12.346: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 11 23:43:12.524: INFO: Waiting up to 5m0s for pod "downward-api-23941135-5316-462f-930f-49c88a369307" in namespace "downward-api-312" to be "Succeeded or Failed"
Jan 11 23:43:12.527: INFO: Pod "downward-api-23941135-5316-462f-930f-49c88a369307": Phase="Pending", Reason="", readiness=false. Elapsed: 3.021731ms
Jan 11 23:43:14.536: INFO: Pod "downward-api-23941135-5316-462f-930f-49c88a369307": Phase="Running", Reason="", readiness=false. Elapsed: 2.011980696s
Jan 11 23:43:16.544: INFO: Pod "downward-api-23941135-5316-462f-930f-49c88a369307": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019446081s
STEP: Saw pod success
Jan 11 23:43:16.544: INFO: Pod "downward-api-23941135-5316-462f-930f-49c88a369307" satisfied condition "Succeeded or Failed"
Jan 11 23:43:16.548: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod downward-api-23941135-5316-462f-930f-49c88a369307 container dapi-container: <nil>
STEP: delete the pod
Jan 11 23:43:16.599: INFO: Waiting for pod downward-api-23941135-5316-462f-930f-49c88a369307 to disappear
Jan 11 23:43:16.603: INFO: Pod downward-api-23941135-5316-462f-930f-49c88a369307 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 11 23:43:16.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-312" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":135,"skipped":2610,"failed":0}

------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:43:16.612: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Jan 11 23:43:22.817: INFO: 25 pods remaining
Jan 11 23:43:22.817: INFO: 25 pods has nil DeletionTimestamp
Jan 11 23:43:22.817: INFO: 
Jan 11 23:43:23.820: INFO: 17 pods remaining
Jan 11 23:43:23.820: INFO: 17 pods has nil DeletionTimestamp
Jan 11 23:43:23.820: INFO: 
STEP: Gathering metrics
Jan 11 23:43:24.887: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 11 23:44:25.131: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 11 23:44:25.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4485" for this suite.

â€¢ [SLOW TEST:68.530 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":136,"skipped":2610,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:44:25.143: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-5423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Jan 11 23:44:25.306: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:44:27.316: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.240.0.34 on the node which pod1 resides and expect scheduled
Jan 11 23:44:27.331: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:44:29.342: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.240.0.34 but use UDP protocol on the node which pod2 resides
Jan 11 23:44:29.366: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:44:31.375: INFO: The status of Pod pod3 is Running (Ready = true)
Jan 11 23:44:31.385: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:44:33.397: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Jan 11 23:44:33.400: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.240.0.34 http://127.0.0.1:54323/hostname] Namespace:hostport-5423 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:44:33.400: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:44:33.401: INFO: ExecWithOptions: Clientset creation
Jan 11 23:44:33.402: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-5423/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.240.0.34+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.240.0.34, port: 54323
Jan 11 23:44:33.524: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.240.0.34:54323/hostname] Namespace:hostport-5423 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:44:33.524: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:44:33.525: INFO: ExecWithOptions: Clientset creation
Jan 11 23:44:33.525: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-5423/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.240.0.34%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.240.0.34, port: 54323 UDP
Jan 11 23:44:33.649: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.240.0.34 54323] Namespace:hostport-5423 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:44:33.649: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:44:33.650: INFO: ExecWithOptions: Clientset creation
Jan 11 23:44:33.650: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/hostport-5423/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.240.0.34+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Jan 11 23:44:38.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-5423" for this suite.

â€¢ [SLOW TEST:13.626 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":137,"skipped":2655,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:44:38.769: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 11 23:44:38.909: INFO: Waiting up to 5m0s for pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f" in namespace "emptydir-993" to be "Succeeded or Failed"
Jan 11 23:44:38.928: INFO: Pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f": Phase="Pending", Reason="", readiness=false. Elapsed: 19.02549ms
Jan 11 23:44:40.936: INFO: Pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f": Phase="Running", Reason="", readiness=true. Elapsed: 2.027324584s
Jan 11 23:44:42.946: INFO: Pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f": Phase="Running", Reason="", readiness=false. Elapsed: 4.037361037s
Jan 11 23:44:44.953: INFO: Pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.04398954s
STEP: Saw pod success
Jan 11 23:44:44.953: INFO: Pod "pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f" satisfied condition "Succeeded or Failed"
Jan 11 23:44:44.957: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f container test-container: <nil>
STEP: delete the pod
Jan 11 23:44:45.001: INFO: Waiting for pod pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f to disappear
Jan 11 23:44:45.004: INFO: Pod pod-c7bde1eb-495e-4352-af1e-7168a6b0cb8f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:44:45.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-993" for this suite.

â€¢ [SLOW TEST:6.245 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":138,"skipped":2692,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:44:45.014: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3531
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:44:45.144: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 11 23:44:47.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-3531 --namespace=crd-publish-openapi-3531 create -f -'
Jan 11 23:44:49.600: INFO: stderr: ""
Jan 11 23:44:49.600: INFO: stdout: "e2e-test-crd-publish-openapi-6395-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 11 23:44:49.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-3531 --namespace=crd-publish-openapi-3531 delete e2e-test-crd-publish-openapi-6395-crds test-cr'
Jan 11 23:44:49.677: INFO: stderr: ""
Jan 11 23:44:49.677: INFO: stdout: "e2e-test-crd-publish-openapi-6395-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jan 11 23:44:49.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-3531 --namespace=crd-publish-openapi-3531 apply -f -'
Jan 11 23:44:49.916: INFO: stderr: ""
Jan 11 23:44:49.916: INFO: stdout: "e2e-test-crd-publish-openapi-6395-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 11 23:44:49.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-3531 --namespace=crd-publish-openapi-3531 delete e2e-test-crd-publish-openapi-6395-crds test-cr'
Jan 11 23:44:49.992: INFO: stderr: ""
Jan 11 23:44:49.992: INFO: stdout: "e2e-test-crd-publish-openapi-6395-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 11 23:44:49.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-3531 explain e2e-test-crd-publish-openapi-6395-crds'
Jan 11 23:44:50.246: INFO: stderr: ""
Jan 11 23:44:50.246: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6395-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:44:52.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3531" for this suite.

â€¢ [SLOW TEST:7.455 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":139,"skipped":2700,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:44:52.469: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 11 23:44:52.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8177" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":140,"skipped":2721,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:44:52.645: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2975
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Jan 11 23:44:52.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jan 11 23:44:52.877: INFO: stderr: ""
Jan 11 23:44:52.877: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Jan 11 23:44:52.877: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jan 11 23:44:52.877: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-2975" to be "running and ready, or succeeded"
Jan 11 23:44:52.890: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 12.608123ms
Jan 11 23:44:54.899: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.021447397s
Jan 11 23:44:54.899: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jan 11 23:44:54.899: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Jan 11 23:44:54.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator'
Jan 11 23:44:54.976: INFO: stderr: ""
Jan 11 23:44:54.976: INFO: stdout: "I0111 23:44:54.017672       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/2frv 263\nI0111 23:44:54.217920       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/h42 543\nI0111 23:44:54.418723       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kjt 449\nI0111 23:44:54.618093       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/hb9 338\nI0111 23:44:54.818506       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6ln7 581\n"
Jan 11 23:44:56.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator'
Jan 11 23:44:57.066: INFO: stderr: ""
Jan 11 23:44:57.066: INFO: stdout: "I0111 23:44:54.017672       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/2frv 263\nI0111 23:44:54.217920       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/h42 543\nI0111 23:44:54.418723       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kjt 449\nI0111 23:44:54.618093       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/hb9 338\nI0111 23:44:54.818506       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6ln7 581\nI0111 23:44:55.017842       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/s4j 441\nI0111 23:44:55.218297       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mb6 506\nI0111 23:44:55.417771       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/ts2v 423\nI0111 23:44:55.618179       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8qdl 382\nI0111 23:44:55.818580       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/hqq 248\nI0111 23:44:56.017829       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/kq29 466\nI0111 23:44:56.218229       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/tvlp 594\nI0111 23:44:56.418667       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/zwjv 545\nI0111 23:44:56.618078       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wstd 353\nI0111 23:44:56.818452       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/5m5 204\nI0111 23:44:57.017725       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/tg5r 351\n"
Jan 11 23:44:59.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator'
Jan 11 23:44:59.148: INFO: stderr: ""
Jan 11 23:44:59.148: INFO: stdout: "I0111 23:44:54.017672       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/2frv 263\nI0111 23:44:54.217920       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/h42 543\nI0111 23:44:54.418723       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kjt 449\nI0111 23:44:54.618093       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/hb9 338\nI0111 23:44:54.818506       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6ln7 581\nI0111 23:44:55.017842       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/s4j 441\nI0111 23:44:55.218297       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mb6 506\nI0111 23:44:55.417771       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/ts2v 423\nI0111 23:44:55.618179       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8qdl 382\nI0111 23:44:55.818580       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/hqq 248\nI0111 23:44:56.017829       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/kq29 466\nI0111 23:44:56.218229       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/tvlp 594\nI0111 23:44:56.418667       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/zwjv 545\nI0111 23:44:56.618078       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wstd 353\nI0111 23:44:56.818452       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/5m5 204\nI0111 23:44:57.017725       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/tg5r 351\nI0111 23:44:57.218153       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/pvzs 581\nI0111 23:44:57.418638       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/r99r 346\nI0111 23:44:57.617816       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/mdqn 305\nI0111 23:44:57.818208       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/j925 343\nI0111 23:44:58.018566       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/74hf 560\nI0111 23:44:58.217822       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/r4zt 210\nI0111 23:44:58.418276       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/kql 316\nI0111 23:44:58.618679       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/k7ks 275\nI0111 23:44:58.818061       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/2v2p 551\nI0111 23:44:59.018496       1 logs_generator.go:76] 25 GET /api/v1/namespaces/kube-system/pods/g2l 440\n"
STEP: limiting log lines
Jan 11 23:44:59.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator --tail=1'
Jan 11 23:44:59.220: INFO: stderr: ""
Jan 11 23:44:59.220: INFO: stdout: "I0111 23:44:59.217886       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/kube-system/pods/zjv 542\n"
Jan 11 23:44:59.220: INFO: got output "I0111 23:44:59.217886       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/kube-system/pods/zjv 542\n"
STEP: limiting log bytes
Jan 11 23:44:59.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator --limit-bytes=1'
Jan 11 23:44:59.297: INFO: stderr: ""
Jan 11 23:44:59.297: INFO: stdout: "I"
Jan 11 23:44:59.297: INFO: got output "I"
STEP: exposing timestamps
Jan 11 23:44:59.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator --tail=1 --timestamps'
Jan 11 23:44:59.373: INFO: stderr: ""
Jan 11 23:44:59.373: INFO: stdout: "2023-01-11T23:44:59.218120769Z I0111 23:44:59.217886       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/kube-system/pods/zjv 542\n"
Jan 11 23:44:59.373: INFO: got output "2023-01-11T23:44:59.218120769Z I0111 23:44:59.217886       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/kube-system/pods/zjv 542\n"
STEP: restricting to a time range
Jan 11 23:45:01.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator --since=1s'
Jan 11 23:45:01.960: INFO: stderr: ""
Jan 11 23:45:01.960: INFO: stdout: "I0111 23:45:01.018211       1 logs_generator.go:76] 35 PUT /api/v1/namespaces/default/pods/hd9x 563\nI0111 23:45:01.218583       1 logs_generator.go:76] 36 POST /api/v1/namespaces/default/pods/pgvn 485\nI0111 23:45:01.417872       1 logs_generator.go:76] 37 GET /api/v1/namespaces/kube-system/pods/tjgs 543\nI0111 23:45:01.618283       1 logs_generator.go:76] 38 GET /api/v1/namespaces/kube-system/pods/s6dd 324\nI0111 23:45:01.818771       1 logs_generator.go:76] 39 POST /api/v1/namespaces/kube-system/pods/jk5s 559\n"
Jan 11 23:45:01.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 logs logs-generator logs-generator --since=24h'
Jan 11 23:45:02.042: INFO: stderr: ""
Jan 11 23:45:02.042: INFO: stdout: "I0111 23:44:54.017672       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/2frv 263\nI0111 23:44:54.217920       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/h42 543\nI0111 23:44:54.418723       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kjt 449\nI0111 23:44:54.618093       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/hb9 338\nI0111 23:44:54.818506       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6ln7 581\nI0111 23:44:55.017842       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/s4j 441\nI0111 23:44:55.218297       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mb6 506\nI0111 23:44:55.417771       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/ts2v 423\nI0111 23:44:55.618179       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8qdl 382\nI0111 23:44:55.818580       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/hqq 248\nI0111 23:44:56.017829       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/kq29 466\nI0111 23:44:56.218229       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/tvlp 594\nI0111 23:44:56.418667       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/zwjv 545\nI0111 23:44:56.618078       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/wstd 353\nI0111 23:44:56.818452       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/5m5 204\nI0111 23:44:57.017725       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/tg5r 351\nI0111 23:44:57.218153       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/pvzs 581\nI0111 23:44:57.418638       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/r99r 346\nI0111 23:44:57.617816       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/mdqn 305\nI0111 23:44:57.818208       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/j925 343\nI0111 23:44:58.018566       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/74hf 560\nI0111 23:44:58.217822       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/r4zt 210\nI0111 23:44:58.418276       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/kql 316\nI0111 23:44:58.618679       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/k7ks 275\nI0111 23:44:58.818061       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/2v2p 551\nI0111 23:44:59.018496       1 logs_generator.go:76] 25 GET /api/v1/namespaces/kube-system/pods/g2l 440\nI0111 23:44:59.217886       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/kube-system/pods/zjv 542\nI0111 23:44:59.418248       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/5bs 273\nI0111 23:44:59.618661       1 logs_generator.go:76] 28 PUT /api/v1/namespaces/kube-system/pods/fh26 530\nI0111 23:44:59.818175       1 logs_generator.go:76] 29 POST /api/v1/namespaces/ns/pods/qptd 243\nI0111 23:45:00.018548       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/default/pods/5crc 295\nI0111 23:45:00.217825       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/default/pods/xqbf 506\nI0111 23:45:00.418214       1 logs_generator.go:76] 32 PUT /api/v1/namespaces/kube-system/pods/wpg 399\nI0111 23:45:00.618630       1 logs_generator.go:76] 33 GET /api/v1/namespaces/ns/pods/w4r 306\nI0111 23:45:00.817842       1 logs_generator.go:76] 34 PUT /api/v1/namespaces/kube-system/pods/wjnt 281\nI0111 23:45:01.018211       1 logs_generator.go:76] 35 PUT /api/v1/namespaces/default/pods/hd9x 563\nI0111 23:45:01.218583       1 logs_generator.go:76] 36 POST /api/v1/namespaces/default/pods/pgvn 485\nI0111 23:45:01.417872       1 logs_generator.go:76] 37 GET /api/v1/namespaces/kube-system/pods/tjgs 543\nI0111 23:45:01.618283       1 logs_generator.go:76] 38 GET /api/v1/namespaces/kube-system/pods/s6dd 324\nI0111 23:45:01.818771       1 logs_generator.go:76] 39 POST /api/v1/namespaces/kube-system/pods/jk5s 559\nI0111 23:45:02.018180       1 logs_generator.go:76] 40 GET /api/v1/namespaces/default/pods/lxqx 481\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Jan 11 23:45:02.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2975 delete pod logs-generator'
Jan 11 23:45:03.264: INFO: stderr: ""
Jan 11 23:45:03.264: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:45:03.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2975" for this suite.

â€¢ [SLOW TEST:10.640 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":141,"skipped":2745,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:45:03.285: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 11 23:45:03.465: INFO: The status of Pod pod-update-58cf46b6-79f0-4cc4-bf00-bf668fe1c6ed is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:45:05.472: INFO: The status of Pod pod-update-58cf46b6-79f0-4cc4-bf00-bf668fe1c6ed is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 11 23:45:05.999: INFO: Successfully updated pod "pod-update-58cf46b6-79f0-4cc4-bf00-bf668fe1c6ed"
STEP: verifying the updated pod is in kubernetes
Jan 11 23:45:06.006: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 11 23:45:06.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5596" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":142,"skipped":2758,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:45:06.014: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-2900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Jan 11 23:45:06.207: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:45:08.215: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 11 23:45:09.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-2900" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":143,"skipped":2779,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:45:09.258: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7618
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-6c12e23d-30b3-4e3a-9f85-446da8a48519 in namespace container-probe-7618
Jan 11 23:45:11.420: INFO: Started pod test-webserver-6c12e23d-30b3-4e3a-9f85-446da8a48519 in namespace container-probe-7618
STEP: checking the pod's current state and verifying that restartCount is present
Jan 11 23:45:11.424: INFO: Initial restart count of pod test-webserver-6c12e23d-30b3-4e3a-9f85-446da8a48519 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 11 23:49:12.591: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7618" for this suite.

â€¢ [SLOW TEST:243.354 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2792,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:12.614: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7885
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 11 23:49:12.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7885" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":145,"skipped":2810,"failed":0}
SSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:12.797: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-2044
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 11 23:49:15.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-2044" for this suite.
â€¢{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":146,"skipped":2813,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:16.006: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8065
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:49:16.782: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:49:19.822: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:49:19.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8065" for this suite.
STEP: Destroying namespace "webhook-8065-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":147,"skipped":2825,"failed":0}
SSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:20.011: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1265
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:49:20.159: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jan 11 23:49:25.166: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 11 23:49:25.166: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jan 11 23:49:27.173: INFO: Creating deployment "test-rollover-deployment"
Jan 11 23:49:27.181: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jan 11 23:49:29.194: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jan 11 23:49:29.204: INFO: Ensure that both replica sets have 1 created replica
Jan 11 23:49:29.211: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jan 11 23:49:29.222: INFO: Updating deployment test-rollover-deployment
Jan 11 23:49:29.222: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jan 11 23:49:31.252: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jan 11 23:49:31.259: INFO: Make sure deployment "test-rollover-deployment" is complete
Jan 11 23:49:31.265: INFO: all replica sets need to contain the pod-template-hash label
Jan 11 23:49:31.265: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 11 23:49:33.279: INFO: all replica sets need to contain the pod-template-hash label
Jan 11 23:49:33.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 11 23:49:35.275: INFO: all replica sets need to contain the pod-template-hash label
Jan 11 23:49:35.275: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 11 23:49:37.278: INFO: all replica sets need to contain the pod-template-hash label
Jan 11 23:49:37.278: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 11 23:49:39.292: INFO: all replica sets need to contain the pod-template-hash label
Jan 11 23:49:39.293: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 49, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 49, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 11 23:49:41.274: INFO: 
Jan 11 23:49:41.274: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 11 23:49:41.282: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-1265  8854e74a-9069-41a4-bf76-d984b0e33ba4 15696 2 2023-01-11 23:49:27 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-11 23:49:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:49:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b51478 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-11 23:49:27 +0000 UTC,LastTransitionTime:2023-01-11 23:49:27 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2023-01-11 23:49:40 +0000 UTC,LastTransitionTime:2023-01-11 23:49:27 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 11 23:49:41.285: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-1265  77e1ac22-99ed-46fa-b970-8dc916d8d36f 15686 2 2023-01-11 23:49:29 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 8854e74a-9069-41a4-bf76-d984b0e33ba4 0xc002c40077 0xc002c40078}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:49:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8854e74a-9069-41a4-bf76-d984b0e33ba4\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:49:40 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002c40128 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:49:41.285: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jan 11 23:49:41.286: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-1265  00d84d21-9bfa-43fa-ad28-03eecd19953b 15695 2 2023-01-11 23:49:20 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 8854e74a-9069-41a4-bf76-d984b0e33ba4 0xc00252bd37 0xc00252bd38}] []  [{e2e.test Update apps/v1 2023-01-11 23:49:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:49:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8854e74a-9069-41a4-bf76-d984b0e33ba4\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:49:40 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002c40008 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:49:41.286: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-1265  43629a6d-f3af-4053-9dad-d845df8e9c36 15655 2 2023-01-11 23:49:27 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 8854e74a-9069-41a4-bf76-d984b0e33ba4 0xc002c40190 0xc002c40191}] []  [{kube-controller-manager Update apps/v1 2023-01-11 23:49:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8854e74a-9069-41a4-bf76-d984b0e33ba4\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-11 23:49:29 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002c40238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 11 23:49:41.289: INFO: Pod "test-rollover-deployment-779c67f4f8-qhqbb" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-qhqbb test-rollover-deployment-779c67f4f8- deployment-1265  35cd697d-a323-43c0-bd02-878a1fa29f1a 15668 0 2023-01-11 23:49:29 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 77e1ac22-99ed-46fa-b970-8dc916d8d36f 0xc002c411c7 0xc002c411c8}] []  [{kube-controller-manager Update v1 2023-01-11 23:49:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"77e1ac22-99ed-46fa-b970-8dc916d8d36f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-11 23:49:30 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zbg85,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zbg85,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:49:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:49:30 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:49:30 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-11 23:49:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.117,StartTime:2023-01-11 23:49:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-11 23:49:30 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://b8c1f11d00c499edad94a9e5d636e2103614441cbe50058c709b5fde95379433,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.117,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 11 23:49:41.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1265" for this suite.

â€¢ [SLOW TEST:21.289 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":148,"skipped":2828,"failed":0}
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:41.302: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5892
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 11 23:49:46.518: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 11 23:49:46.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5892" for this suite.

â€¢ [SLOW TEST:5.262 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    on terminated container
    test/e2e/common/node/runtime.go:136
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2831,"failed":0}
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:49:46.564: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-cczg
STEP: Creating a pod to test atomic-volume-subpath
Jan 11 23:49:46.745: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-cczg" in namespace "subpath-6874" to be "Succeeded or Failed"
Jan 11 23:49:46.764: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Pending", Reason="", readiness=false. Elapsed: 19.226763ms
Jan 11 23:49:48.778: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032930378s
Jan 11 23:49:50.792: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 4.04666728s
Jan 11 23:49:52.803: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 6.057265653s
Jan 11 23:49:54.814: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 8.06885106s
Jan 11 23:49:56.821: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 10.075959596s
Jan 11 23:49:58.828: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 12.083238798s
Jan 11 23:50:00.836: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 14.090289498s
Jan 11 23:50:02.851: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 16.105479797s
Jan 11 23:50:04.860: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 18.11507191s
Jan 11 23:50:06.867: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=true. Elapsed: 20.122172226s
Jan 11 23:50:08.879: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Running", Reason="", readiness=false. Elapsed: 22.133604012s
Jan 11 23:50:10.892: INFO: Pod "pod-subpath-test-configmap-cczg": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.147033922s
STEP: Saw pod success
Jan 11 23:50:10.892: INFO: Pod "pod-subpath-test-configmap-cczg" satisfied condition "Succeeded or Failed"
Jan 11 23:50:10.896: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-subpath-test-configmap-cczg container test-container-subpath-configmap-cczg: <nil>
STEP: delete the pod
Jan 11 23:50:10.949: INFO: Waiting for pod pod-subpath-test-configmap-cczg to disappear
Jan 11 23:50:10.954: INFO: Pod pod-subpath-test-configmap-cczg no longer exists
STEP: Deleting pod pod-subpath-test-configmap-cczg
Jan 11 23:50:10.954: INFO: Deleting pod "pod-subpath-test-configmap-cczg" in namespace "subpath-6874"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 11 23:50:10.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6874" for this suite.

â€¢ [SLOW TEST:24.405 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":150,"skipped":2831,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:50:10.969: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 11 23:50:11.140: INFO: Waiting up to 5m0s for pod "pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a" in namespace "emptydir-5470" to be "Succeeded or Failed"
Jan 11 23:50:11.144: INFO: Pod "pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.503167ms
Jan 11 23:50:13.153: INFO: Pod "pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012585646s
Jan 11 23:50:15.159: INFO: Pod "pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018616067s
STEP: Saw pod success
Jan 11 23:50:15.159: INFO: Pod "pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a" satisfied condition "Succeeded or Failed"
Jan 11 23:50:15.163: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a container test-container: <nil>
STEP: delete the pod
Jan 11 23:50:15.178: INFO: Waiting for pod pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a to disappear
Jan 11 23:50:15.181: INFO: Pod pod-5fd06d38-b08b-43fd-857f-5e31d9e3ec8a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:50:15.181: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5470" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":151,"skipped":2831,"failed":0}
SSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:50:15.191: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-3315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f
Jan 11 23:50:15.355: INFO: Pod name my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f: Found 0 pods out of 1
Jan 11 23:50:20.369: INFO: Pod name my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f: Found 1 pods out of 1
Jan 11 23:50:20.369: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f" are running
Jan 11 23:50:20.374: INFO: Pod "my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f-ffs7t" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:50:15 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:50:16 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:50:16 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-11 23:50:15 +0000 UTC Reason: Message:}])
Jan 11 23:50:20.374: INFO: Trying to dial the pod
Jan 11 23:50:25.389: INFO: Controller my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f: Got expected result from replica 1 [my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f-ffs7t]: "my-hostname-basic-b38d7f2e-0b08-42d7-83d4-5e924e893b9f-ffs7t", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 11 23:50:25.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3315" for this suite.

â€¢ [SLOW TEST:10.206 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":152,"skipped":2834,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:50:25.398: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3666
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:50:25.546: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:50:26.129: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3666" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":153,"skipped":2865,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:50:26.191: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:50:26.674: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:50:29.708: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:50:29.717: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:50:33.014: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-489" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

â€¢ [SLOW TEST:6.902 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":154,"skipped":2915,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:50:33.095: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1220
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1220
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 11 23:50:33.267: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 11 23:50:33.360: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 11 23:50:35.365: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:37.370: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:39.369: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:41.366: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:43.368: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:45.366: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:47.370: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:49.370: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:51.366: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:53.370: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 11 23:50:55.368: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 11 23:50:55.382: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 11 23:50:55.388: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 11 23:50:57.429: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 11 23:50:57.430: INFO: Going to poll 10.240.0.43 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:50:57.432: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.240.0.43 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1220 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:50:57.432: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:50:57.433: INFO: ExecWithOptions: Clientset creation
Jan 11 23:50:57.433: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1220/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.240.0.43+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:50:58.543: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 11 23:50:58.544: INFO: Going to poll 10.240.0.79 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:50:58.551: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.240.0.79 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1220 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:50:58.551: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:50:58.552: INFO: ExecWithOptions: Clientset creation
Jan 11 23:50:58.552: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1220/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.240.0.79+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:50:59.662: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 11 23:50:59.662: INFO: Going to poll 10.240.0.96 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jan 11 23:50:59.669: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.240.0.96 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1220 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:50:59.669: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:50:59.670: INFO: ExecWithOptions: Clientset creation
Jan 11 23:50:59.670: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-1220/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.240.0.96+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 11 23:51:00.774: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 11 23:51:00.774: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1220" for this suite.

â€¢ [SLOW TEST:27.691 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":2926,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:51:00.788: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-2563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 11 23:51:00.991: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 11 23:51:00.997: INFO: starting watch
STEP: patching
STEP: updating
Jan 11 23:51:01.015: INFO: waiting for watch events with expected annotations
Jan 11 23:51:01.015: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 11 23:51:01.038: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-2563" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":156,"skipped":2940,"failed":0}
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:51:01.046: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-8727
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 11 23:51:01.204: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 11 23:51:01.223: INFO: Waiting for terminating namespaces to be deleted...
Jan 11 23:51:01.226: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000000 before test
Jan 11 23:51:01.234: INFO: azure-ip-masq-agent-52p4t from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.234: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:51:01.234: INFO: kube-proxy-8chww from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.234: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:51:01.234: INFO: netserver-0 from pod-network-test-1220 started at 2023-01-11 23:50:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.234: INFO: 	Container webserver ready: true, restart count 0
Jan 11 23:51:01.234: INFO: sonobuoy-e2e-job-4d0b931cd54444dd from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:51:01.234: INFO: 	Container e2e ready: true, restart count 0
Jan 11 23:51:01.234: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:51:01.234: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:51:01.235: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:51:01.235: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 11 23:51:01.235: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000001 before test
Jan 11 23:51:01.242: INFO: azure-ip-masq-agent-t5whg from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:51:01.242: INFO: kube-proxy-8rhgx from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:51:01.242: INFO: netserver-1 from pod-network-test-1220 started at 2023-01-11 23:50:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container webserver ready: true, restart count 0
Jan 11 23:51:01.242: INFO: test-container-pod from pod-network-test-1220 started at 2023-01-11 23:50:55 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container webserver ready: true, restart count 0
Jan 11 23:51:01.242: INFO: sonobuoy from sonobuoy started at 2023-01-11 23:04:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 11 23:51:01.242: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-jfx64 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:51:01.242: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:51:01.242: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 11 23:51:01.242: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000002 before test
Jan 11 23:51:01.251: INFO: azure-ip-masq-agent-tp2qx from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 11 23:51:01.251: INFO: kube-proxy-g5hg6 from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 11 23:51:01.251: INFO: metrics-server-66dd6687d9-rldfm from kube-system started at 2023-01-11 22:59:21 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container metrics-server ready: true, restart count 0
Jan 11 23:51:01.251: INFO: host-test-container-pod from pod-network-test-1220 started at 2023-01-11 23:50:55 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container agnhost-container ready: true, restart count 0
Jan 11 23:51:01.251: INFO: netserver-2 from pod-network-test-1220 started at 2023-01-11 23:50:33 +0000 UTC (1 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container webserver ready: true, restart count 0
Jan 11 23:51:01.251: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-whj75 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 11 23:51:01.251: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 11 23:51:01.251: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node k8s-agentpool1-12291382-vmss000000
STEP: verifying the node has the label node k8s-agentpool1-12291382-vmss000001
STEP: verifying the node has the label node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.352: INFO: Pod azure-ip-masq-agent-52p4t requesting resource cpu=50m on Node k8s-agentpool1-12291382-vmss000000
Jan 11 23:51:01.352: INFO: Pod azure-ip-masq-agent-t5whg requesting resource cpu=50m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.352: INFO: Pod azure-ip-masq-agent-tp2qx requesting resource cpu=50m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.352: INFO: Pod kube-proxy-8chww requesting resource cpu=100m on Node k8s-agentpool1-12291382-vmss000000
Jan 11 23:51:01.352: INFO: Pod kube-proxy-8rhgx requesting resource cpu=100m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.352: INFO: Pod kube-proxy-g5hg6 requesting resource cpu=100m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.352: INFO: Pod metrics-server-66dd6687d9-rldfm requesting resource cpu=100m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.352: INFO: Pod host-test-container-pod requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.352: INFO: Pod netserver-0 requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000000
Jan 11 23:51:01.353: INFO: Pod netserver-1 requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.353: INFO: Pod netserver-2 requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.353: INFO: Pod test-container-pod requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.353: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.353: INFO: Pod sonobuoy-e2e-job-4d0b931cd54444dd requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000000
Jan 11 23:51:01.353: INFO: Pod sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000000
Jan 11 23:51:01.353: INFO: Pod sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-jfx64 requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.353: INFO: Pod sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-whj75 requesting resource cpu=0m on Node k8s-agentpool1-12291382-vmss000002
STEP: Starting Pods to consume most of the cluster CPU.
Jan 11 23:51:01.353: INFO: Creating a pod which consumes cpu=1295m on Node k8s-agentpool1-12291382-vmss000001
Jan 11 23:51:01.362: INFO: Creating a pod which consumes cpu=1225m on Node k8s-agentpool1-12291382-vmss000002
Jan 11 23:51:01.376: INFO: Creating a pod which consumes cpu=1295m on Node k8s-agentpool1-12291382-vmss000000
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5.17396628aae2d80d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8727/filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5 to k8s-agentpool1-12291382-vmss000002]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5.17396628cc8cbdfb], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5.17396628d111d7a5], Reason = [Created], Message = [Created container filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5.17396628d7124068], Reason = [Started], Message = [Started container filler-pod-3b3e82ce-d33f-4001-a9b8-ce9100e45dd5]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd.17396628ab7c7c20], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8727/filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd to k8s-agentpool1-12291382-vmss000000]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd.17396628d0977f78], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd.17396628d7cf370c], Reason = [Created], Message = [Created container filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd.17396628dda4b573], Reason = [Started], Message = [Started container filler-pod-95fed5cb-de51-4bba-9ad3-6fa56c671dcd]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7.17396628a9b8d3ce], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8727/filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7 to k8s-agentpool1-12291382-vmss000001]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7.17396628d78ef5b3], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7.17396628e754fc7b], Reason = [Created], Message = [Created container filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7.17396628f0c4a90f], Reason = [Started], Message = [Started container filler-pod-e4046c9c-c859-444b-9b91-0169dc1971e7]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.17396629250d0e75], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/master: true}, 3 Insufficient cpu. preemption: 0/4 nodes are available: 1 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node k8s-agentpool1-12291382-vmss000000
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node k8s-agentpool1-12291382-vmss000001
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node k8s-agentpool1-12291382-vmss000002
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:51:04.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-8727" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":157,"skipped":2946,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:51:04.523: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-c3d279d4-b32b-4897-980d-31e2b2bf1ab5 in namespace container-probe-3990
Jan 11 23:51:06.688: INFO: Started pod liveness-c3d279d4-b32b-4897-980d-31e2b2bf1ab5 in namespace container-probe-3990
STEP: checking the pod's current state and verifying that restartCount is present
Jan 11 23:51:06.690: INFO: Initial restart count of pod liveness-c3d279d4-b32b-4897-980d-31e2b2bf1ab5 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 11 23:55:07.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3990" for this suite.

â€¢ [SLOW TEST:243.260 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":158,"skipped":2962,"failed":0}
SSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:07.784: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1473
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 11 23:55:08.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1473" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":2970,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:08.018: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1652
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 11 23:55:12.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1652" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":2979,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:12.229: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 11 23:55:28.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4900" for this suite.

â€¢ [SLOW TEST:16.310 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":161,"skipped":3016,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:28.540: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2739
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Jan 11 23:55:30.712: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2739 PodName:pod-sharedvolume-c88b356c-7865-4fbe-96db-4db8dce0073e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 11 23:55:30.712: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 11 23:55:30.713: INFO: ExecWithOptions: Clientset creation
Jan 11 23:55:30.713: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/emptydir-2739/pods/pod-sharedvolume-c88b356c-7865-4fbe-96db-4db8dce0073e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jan 11 23:55:30.857: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:55:30.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2739" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":162,"skipped":3077,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:30.881: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:55:31.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3994" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":163,"skipped":3115,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:31.071: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1150
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 11 23:55:31.221: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0" in namespace "projected-1150" to be "Succeeded or Failed"
Jan 11 23:55:31.231: INFO: Pod "downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.836101ms
Jan 11 23:55:33.241: INFO: Pod "downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019169837s
Jan 11 23:55:35.246: INFO: Pod "downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02460086s
STEP: Saw pod success
Jan 11 23:55:35.246: INFO: Pod "downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0" satisfied condition "Succeeded or Failed"
Jan 11 23:55:35.250: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0 container client-container: <nil>
STEP: delete the pod
Jan 11 23:55:35.302: INFO: Waiting for pod downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0 to disappear
Jan 11 23:55:35.337: INFO: Pod downwardapi-volume-5a330600-9ada-4e17-a67e-3e0833fdd1f0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 11 23:55:35.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1150" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":3120,"failed":0}
SSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:35.347: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6002
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6002.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6002.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 208.72.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.72.208_udp@PTR;check="$$(dig +tcp +noall +answer +search 208.72.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.72.208_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6002.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6002.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6002.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6002.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6002.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 208.72.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.72.208_udp@PTR;check="$$(dig +tcp +noall +answer +search 208.72.0.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.0.72.208_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 11 23:55:39.606: INFO: Unable to read wheezy_udp@dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.611: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.615: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.620: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.640: INFO: Unable to read jessie_udp@dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.644: INFO: Unable to read jessie_tcp@dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.648: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.652: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local from pod dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21: the server could not find the requested resource (get pods dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21)
Jan 11 23:55:39.670: INFO: Lookups using dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21 failed for: [wheezy_udp@dns-test-service.dns-6002.svc.cluster.local wheezy_tcp@dns-test-service.dns-6002.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local jessie_udp@dns-test-service.dns-6002.svc.cluster.local jessie_tcp@dns-test-service.dns-6002.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6002.svc.cluster.local]

Jan 11 23:55:44.736: INFO: DNS probes using dns-6002/dns-test-ba5b0a58-8577-42ba-b984-d4d540c86e21 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 11 23:55:44.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6002" for this suite.

â€¢ [SLOW TEST:9.507 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":165,"skipped":3126,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:44.856: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3087
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-3087/configmap-test-fffba61f-3937-463d-961f-f2f4bd6a7821
STEP: Creating a pod to test consume configMaps
Jan 11 23:55:45.015: INFO: Waiting up to 5m0s for pod "pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c" in namespace "configmap-3087" to be "Succeeded or Failed"
Jan 11 23:55:45.024: INFO: Pod "pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c": Phase="Pending", Reason="", readiness=false. Elapsed: 9.312303ms
Jan 11 23:55:47.030: INFO: Pod "pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014969684s
Jan 11 23:55:49.041: INFO: Pod "pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02605006s
STEP: Saw pod success
Jan 11 23:55:49.041: INFO: Pod "pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c" satisfied condition "Succeeded or Failed"
Jan 11 23:55:49.045: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c container env-test: <nil>
STEP: delete the pod
Jan 11 23:55:49.105: INFO: Waiting for pod pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c to disappear
Jan 11 23:55:49.109: INFO: Pod pod-configmaps-9b9dc1dc-d715-4edc-b948-6d6f1f89032c no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 11 23:55:49.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3087" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":3136,"failed":0}
SSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:49.118: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-9088
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 11 23:55:49.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-9088" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":167,"skipped":3144,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:55:49.359: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1360
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 11 23:55:49.510: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:56:04.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1360" for this suite.

â€¢ [SLOW TEST:15.245 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":168,"skipped":3186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:56:04.608: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4792
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Jan 11 23:56:04.783: INFO: Found Service test-service-md2jk in namespace services-4792 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jan 11 23:56:04.784: INFO: Service test-service-md2jk created
STEP: Getting /status
Jan 11 23:56:04.789: INFO: Service test-service-md2jk has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Jan 11 23:56:04.797: INFO: observed Service test-service-md2jk in namespace services-4792 with annotations: map[] & LoadBalancer: {[]}
Jan 11 23:56:04.797: INFO: Found Service test-service-md2jk in namespace services-4792 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jan 11 23:56:04.798: INFO: Service test-service-md2jk has service status patched
STEP: updating the ServiceStatus
Jan 11 23:56:04.807: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Jan 11 23:56:04.810: INFO: Observed Service test-service-md2jk in namespace services-4792 with annotations: map[] & Conditions: {[]}
Jan 11 23:56:04.811: INFO: Observed event: &Service{ObjectMeta:{test-service-md2jk  services-4792  b561eddf-e292-491b-b4df-c3418f5c619e 17078 0 2023-01-11 23:56:04 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2023-01-11 23:56:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-01-11 23:56:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.0.207.48,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.0.207.48],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jan 11 23:56:04.811: INFO: Found Service test-service-md2jk in namespace services-4792 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 11 23:56:04.811: INFO: Service test-service-md2jk has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Jan 11 23:56:04.829: INFO: observed Service test-service-md2jk in namespace services-4792 with labels: map[test-service-static:true]
Jan 11 23:56:04.829: INFO: observed Service test-service-md2jk in namespace services-4792 with labels: map[test-service-static:true]
Jan 11 23:56:04.829: INFO: observed Service test-service-md2jk in namespace services-4792 with labels: map[test-service-static:true]
Jan 11 23:56:04.830: INFO: Found Service test-service-md2jk in namespace services-4792 with labels: map[test-service:patched test-service-static:true]
Jan 11 23:56:04.830: INFO: Service test-service-md2jk patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Jan 11 23:56:04.876: INFO: Observed event: ADDED
Jan 11 23:56:04.876: INFO: Observed event: MODIFIED
Jan 11 23:56:04.876: INFO: Observed event: MODIFIED
Jan 11 23:56:04.876: INFO: Observed event: MODIFIED
Jan 11 23:56:04.877: INFO: Found Service test-service-md2jk in namespace services-4792 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jan 11 23:56:04.877: INFO: Service test-service-md2jk deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:56:04.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4792" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":169,"skipped":3233,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:56:04.890: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Jan 11 23:56:45.138: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 11 23:57:45.324: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
Jan 11 23:57:45.324: INFO: Deleting pod "simpletest.rc-25xqc" in namespace "gc-343"
Jan 11 23:57:45.354: INFO: Deleting pod "simpletest.rc-2z9s7" in namespace "gc-343"
Jan 11 23:57:45.382: INFO: Deleting pod "simpletest.rc-4cd9n" in namespace "gc-343"
Jan 11 23:57:45.398: INFO: Deleting pod "simpletest.rc-4f5zg" in namespace "gc-343"
Jan 11 23:57:45.418: INFO: Deleting pod "simpletest.rc-57jk6" in namespace "gc-343"
Jan 11 23:57:45.440: INFO: Deleting pod "simpletest.rc-67kqg" in namespace "gc-343"
Jan 11 23:57:45.447: INFO: Deleting pod "simpletest.rc-79dcd" in namespace "gc-343"
Jan 11 23:57:45.466: INFO: Deleting pod "simpletest.rc-7ztnr" in namespace "gc-343"
Jan 11 23:57:45.487: INFO: Deleting pod "simpletest.rc-8zt5z" in namespace "gc-343"
Jan 11 23:57:45.504: INFO: Deleting pod "simpletest.rc-9h67h" in namespace "gc-343"
Jan 11 23:57:45.516: INFO: Deleting pod "simpletest.rc-ch5rh" in namespace "gc-343"
Jan 11 23:57:45.539: INFO: Deleting pod "simpletest.rc-chm94" in namespace "gc-343"
Jan 11 23:57:45.558: INFO: Deleting pod "simpletest.rc-cwnfr" in namespace "gc-343"
Jan 11 23:57:45.572: INFO: Deleting pod "simpletest.rc-cx7sf" in namespace "gc-343"
Jan 11 23:57:45.591: INFO: Deleting pod "simpletest.rc-d6n2l" in namespace "gc-343"
Jan 11 23:57:45.605: INFO: Deleting pod "simpletest.rc-fr965" in namespace "gc-343"
Jan 11 23:57:45.630: INFO: Deleting pod "simpletest.rc-fvzgr" in namespace "gc-343"
Jan 11 23:57:45.652: INFO: Deleting pod "simpletest.rc-gn9xz" in namespace "gc-343"
Jan 11 23:57:45.666: INFO: Deleting pod "simpletest.rc-jf8k9" in namespace "gc-343"
Jan 11 23:57:45.683: INFO: Deleting pod "simpletest.rc-jjc7c" in namespace "gc-343"
Jan 11 23:57:45.699: INFO: Deleting pod "simpletest.rc-jnhd6" in namespace "gc-343"
Jan 11 23:57:45.716: INFO: Deleting pod "simpletest.rc-kbzxr" in namespace "gc-343"
Jan 11 23:57:45.735: INFO: Deleting pod "simpletest.rc-kg4vt" in namespace "gc-343"
Jan 11 23:57:45.758: INFO: Deleting pod "simpletest.rc-kqfdz" in namespace "gc-343"
Jan 11 23:57:45.775: INFO: Deleting pod "simpletest.rc-mjp2k" in namespace "gc-343"
Jan 11 23:57:45.793: INFO: Deleting pod "simpletest.rc-nl7kf" in namespace "gc-343"
Jan 11 23:57:45.809: INFO: Deleting pod "simpletest.rc-np2nc" in namespace "gc-343"
Jan 11 23:57:45.833: INFO: Deleting pod "simpletest.rc-nsj5z" in namespace "gc-343"
Jan 11 23:57:45.851: INFO: Deleting pod "simpletest.rc-nvmbq" in namespace "gc-343"
Jan 11 23:57:45.871: INFO: Deleting pod "simpletest.rc-phrtn" in namespace "gc-343"
Jan 11 23:57:45.901: INFO: Deleting pod "simpletest.rc-pp6hr" in namespace "gc-343"
Jan 11 23:57:45.913: INFO: Deleting pod "simpletest.rc-qhxv2" in namespace "gc-343"
Jan 11 23:57:45.935: INFO: Deleting pod "simpletest.rc-qmwgl" in namespace "gc-343"
Jan 11 23:57:45.958: INFO: Deleting pod "simpletest.rc-qsnv2" in namespace "gc-343"
Jan 11 23:57:45.967: INFO: Deleting pod "simpletest.rc-r97mh" in namespace "gc-343"
Jan 11 23:57:45.995: INFO: Deleting pod "simpletest.rc-rktws" in namespace "gc-343"
Jan 11 23:57:46.010: INFO: Deleting pod "simpletest.rc-smg8r" in namespace "gc-343"
Jan 11 23:57:46.026: INFO: Deleting pod "simpletest.rc-sn6qg" in namespace "gc-343"
Jan 11 23:57:46.045: INFO: Deleting pod "simpletest.rc-x2qrt" in namespace "gc-343"
Jan 11 23:57:46.056: INFO: Deleting pod "simpletest.rc-x5rwn" in namespace "gc-343"
Jan 11 23:57:46.073: INFO: Deleting pod "simpletest.rc-xdlk7" in namespace "gc-343"
Jan 11 23:57:46.088: INFO: Deleting pod "simpletest.rc-xl2lb" in namespace "gc-343"
Jan 11 23:57:46.111: INFO: Deleting pod "simpletest.rc-xnhh2" in namespace "gc-343"
Jan 11 23:57:46.131: INFO: Deleting pod "simpletest.rc-zq6nq" in namespace "gc-343"
Jan 11 23:57:46.146: INFO: Deleting pod "simpletest.rc-zxrjt" in namespace "gc-343"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 11 23:57:46.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-343" for this suite.

â€¢ [SLOW TEST:101.301 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":170,"skipped":3239,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:57:46.192: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 11 23:57:46.345: INFO: Waiting up to 5m0s for pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0" in namespace "emptydir-9051" to be "Succeeded or Failed"
Jan 11 23:57:46.354: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.026403ms
Jan 11 23:57:48.362: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016642379s
Jan 11 23:57:50.368: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022738518s
Jan 11 23:57:52.375: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.029736348s
Jan 11 23:57:54.391: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.046012497s
STEP: Saw pod success
Jan 11 23:57:54.391: INFO: Pod "pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0" satisfied condition "Succeeded or Failed"
Jan 11 23:57:54.395: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0 container test-container: <nil>
STEP: delete the pod
Jan 11 23:57:54.452: INFO: Waiting for pod pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0 to disappear
Jan 11 23:57:54.455: INFO: Pod pod-8d625ae9-804f-4c12-8902-efb8e08bb2f0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 11 23:57:54.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9051" for this suite.

â€¢ [SLOW TEST:8.273 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":171,"skipped":3271,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:57:54.465: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:57:54.606: INFO: Got root ca configmap in namespace "svcaccounts-2521"
Jan 11 23:57:54.610: INFO: Deleted root ca configmap in namespace "svcaccounts-2521"
STEP: waiting for a new root ca configmap created
Jan 11 23:57:55.114: INFO: Recreated root ca configmap in namespace "svcaccounts-2521"
Jan 11 23:57:55.119: INFO: Updated root ca configmap in namespace "svcaccounts-2521"
STEP: waiting for the root ca configmap reconciled
Jan 11 23:57:55.625: INFO: Reconciled root ca configmap in namespace "svcaccounts-2521"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 11 23:57:55.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2521" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":172,"skipped":3273,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:57:55.636: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5089
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Jan 11 23:57:55.801: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Jan 11 23:57:55.809: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:55.809: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Jan 11 23:57:55.835: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:55.835: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:57:56.841: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:56.842: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:57:57.842: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 11 23:57:57.842: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Jan 11 23:57:57.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 11 23:57:57.868: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jan 11 23:57:58.877: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:58.877: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Jan 11 23:57:58.888: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:58.888: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:57:59.902: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:57:59.902: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:58:00.895: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:58:00.895: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:58:01.897: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:58:01.897: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 11 23:58:02.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 11 23:58:02.894: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5089, will wait for the garbage collector to delete the pods
Jan 11 23:58:02.965: INFO: Deleting DaemonSet.extensions daemon-set took: 11.302226ms
Jan 11 23:58:03.066: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.942024ms
Jan 11 23:58:05.374: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 11 23:58:05.374: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 11 23:58:05.382: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18203"},"items":null}

Jan 11 23:58:05.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18203"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 11 23:58:05.414: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5089" for this suite.

â€¢ [SLOW TEST:9.787 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":173,"skipped":3288,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:58:05.424: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1452
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 11 23:58:05.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1452" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":174,"skipped":3320,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:58:05.581: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2475
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 11 23:58:05.982: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Jan 11 23:58:07.998: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 11, 23, 58, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 58, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 11, 23, 58, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 11, 23, 58, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 11 23:58:11.026: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 11 23:58:11.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2475" for this suite.
STEP: Destroying namespace "webhook-2475-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:5.608 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":175,"skipped":3323,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:58:11.190: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-30378189-b104-4b08-9eb7-0fd5c76e8ea9
STEP: Creating a pod to test consume secrets
Jan 11 23:58:11.360: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5" in namespace "projected-5425" to be "Succeeded or Failed"
Jan 11 23:58:11.369: INFO: Pod "pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.748891ms
Jan 11 23:58:13.377: INFO: Pod "pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016777508s
Jan 11 23:58:15.383: INFO: Pod "pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02325358s
STEP: Saw pod success
Jan 11 23:58:15.383: INFO: Pod "pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5" satisfied condition "Succeeded or Failed"
Jan 11 23:58:15.387: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5 container secret-volume-test: <nil>
STEP: delete the pod
Jan 11 23:58:15.410: INFO: Waiting for pod pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5 to disappear
Jan 11 23:58:15.418: INFO: Pod pod-projected-secrets-26309847-aa0e-4e0b-a9c1-4267729d24f5 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 11 23:58:15.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5425" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3350,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:58:15.434: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3152
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Jan 11 23:58:15.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3152 api-versions'
Jan 11 23:58:16.117: INFO: stderr: ""
Jan 11 23:58:16.117: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 11 23:58:16.117: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3152" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":177,"skipped":3355,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 11 23:58:16.139: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-2310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 12 00:04:00.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-2310" for this suite.

â€¢ [SLOW TEST:344.213 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":178,"skipped":3377,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:04:00.355: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5453
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 12 00:05:00.527: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5453" for this suite.

â€¢ [SLOW TEST:60.185 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3388,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:05:00.541: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-1978
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:05:00.705: INFO: The status of Pod pod-secrets-1a74609b-45ca-403e-97bb-7cea6586da05 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:05:02.715: INFO: The status of Pod pod-secrets-1a74609b-45ca-403e-97bb-7cea6586da05 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 12 00:05:02.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-1978" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":180,"skipped":3432,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:05:02.751: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9031
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Jan 12 00:05:02.912: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 12 00:05:07.929: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Jan 12 00:05:07.941: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Jan 12 00:05:07.964: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Jan 12 00:05:07.966: INFO: Observed &ReplicaSet event: ADDED
Jan 12 00:05:07.966: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.966: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.966: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.966: INFO: Found replicaset test-rs in namespace replicaset-9031 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 12 00:05:07.966: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Jan 12 00:05:07.966: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 12 00:05:07.972: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Jan 12 00:05:07.975: INFO: Observed &ReplicaSet event: ADDED
Jan 12 00:05:07.975: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.975: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.976: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.976: INFO: Observed replicaset test-rs in namespace replicaset-9031 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 12 00:05:07.976: INFO: Observed &ReplicaSet event: MODIFIED
Jan 12 00:05:07.976: INFO: Found replicaset test-rs in namespace replicaset-9031 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jan 12 00:05:07.976: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 12 00:05:07.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9031" for this suite.

â€¢ [SLOW TEST:5.237 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":181,"skipped":3487,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:05:07.988: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6547
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-4a8dd914-2f4b-42f7-a389-e550df48640b
STEP: Creating secret with name s-test-opt-upd-b088ed84-7cd7-4fbb-a118-ccf0f94969f7
STEP: Creating the pod
Jan 12 00:05:08.156: INFO: The status of Pod pod-secrets-2cd4266a-0e90-457f-9625-84a09ccecfc6 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:05:10.162: INFO: The status of Pod pod-secrets-2cd4266a-0e90-457f-9625-84a09ccecfc6 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:05:12.166: INFO: The status of Pod pod-secrets-2cd4266a-0e90-457f-9625-84a09ccecfc6 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-4a8dd914-2f4b-42f7-a389-e550df48640b
STEP: Updating secret s-test-opt-upd-b088ed84-7cd7-4fbb-a118-ccf0f94969f7
STEP: Creating secret with name s-test-opt-create-df8dbe20-6134-4cba-a577-7497f8d50f51
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:06:32.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6547" for this suite.

â€¢ [SLOW TEST:84.640 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":3495,"failed":0}
SSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:06:32.629: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-6930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:06:33.409: INFO: Checking APIGroup: apiregistration.k8s.io
Jan 12 00:06:33.410: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jan 12 00:06:33.410: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jan 12 00:06:33.410: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jan 12 00:06:33.410: INFO: Checking APIGroup: apps
Jan 12 00:06:33.411: INFO: PreferredVersion.GroupVersion: apps/v1
Jan 12 00:06:33.411: INFO: Versions found [{apps/v1 v1}]
Jan 12 00:06:33.411: INFO: apps/v1 matches apps/v1
Jan 12 00:06:33.411: INFO: Checking APIGroup: events.k8s.io
Jan 12 00:06:33.413: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jan 12 00:06:33.413: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.413: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jan 12 00:06:33.413: INFO: Checking APIGroup: authentication.k8s.io
Jan 12 00:06:33.414: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jan 12 00:06:33.414: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jan 12 00:06:33.414: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jan 12 00:06:33.414: INFO: Checking APIGroup: authorization.k8s.io
Jan 12 00:06:33.415: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jan 12 00:06:33.415: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jan 12 00:06:33.415: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jan 12 00:06:33.415: INFO: Checking APIGroup: autoscaling
Jan 12 00:06:33.417: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jan 12 00:06:33.417: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Jan 12 00:06:33.417: INFO: autoscaling/v2 matches autoscaling/v2
Jan 12 00:06:33.417: INFO: Checking APIGroup: batch
Jan 12 00:06:33.418: INFO: PreferredVersion.GroupVersion: batch/v1
Jan 12 00:06:33.418: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Jan 12 00:06:33.418: INFO: batch/v1 matches batch/v1
Jan 12 00:06:33.418: INFO: Checking APIGroup: certificates.k8s.io
Jan 12 00:06:33.422: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jan 12 00:06:33.422: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jan 12 00:06:33.422: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jan 12 00:06:33.422: INFO: Checking APIGroup: networking.k8s.io
Jan 12 00:06:33.424: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jan 12 00:06:33.424: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jan 12 00:06:33.424: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jan 12 00:06:33.424: INFO: Checking APIGroup: policy
Jan 12 00:06:33.425: INFO: PreferredVersion.GroupVersion: policy/v1
Jan 12 00:06:33.425: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Jan 12 00:06:33.425: INFO: policy/v1 matches policy/v1
Jan 12 00:06:33.425: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jan 12 00:06:33.427: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jan 12 00:06:33.427: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jan 12 00:06:33.427: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jan 12 00:06:33.427: INFO: Checking APIGroup: storage.k8s.io
Jan 12 00:06:33.431: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jan 12 00:06:33.431: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.431: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jan 12 00:06:33.431: INFO: Checking APIGroup: admissionregistration.k8s.io
Jan 12 00:06:33.432: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jan 12 00:06:33.432: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jan 12 00:06:33.432: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jan 12 00:06:33.432: INFO: Checking APIGroup: apiextensions.k8s.io
Jan 12 00:06:33.434: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jan 12 00:06:33.434: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jan 12 00:06:33.434: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jan 12 00:06:33.434: INFO: Checking APIGroup: scheduling.k8s.io
Jan 12 00:06:33.435: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jan 12 00:06:33.435: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jan 12 00:06:33.435: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jan 12 00:06:33.435: INFO: Checking APIGroup: coordination.k8s.io
Jan 12 00:06:33.436: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jan 12 00:06:33.436: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jan 12 00:06:33.436: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jan 12 00:06:33.436: INFO: Checking APIGroup: node.k8s.io
Jan 12 00:06:33.437: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jan 12 00:06:33.437: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.437: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jan 12 00:06:33.437: INFO: Checking APIGroup: discovery.k8s.io
Jan 12 00:06:33.439: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jan 12 00:06:33.439: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.439: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jan 12 00:06:33.439: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jan 12 00:06:33.440: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Jan 12 00:06:33.440: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.440: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Jan 12 00:06:33.440: INFO: Checking APIGroup: metrics.k8s.io
Jan 12 00:06:33.442: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Jan 12 00:06:33.442: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Jan 12 00:06:33.442: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Jan 12 00:06:33.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-6930" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":183,"skipped":3498,"failed":0}
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:06:33.460: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 12 00:06:33.614: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 12 00:07:33.661: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:07:33.665: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-7306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:07:33.817: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Jan 12 00:07:33.820: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Jan 12 00:07:33.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-7306" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:07:33.871: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1215" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:60.462 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":184,"skipped":3500,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:07:33.922: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
STEP: Gathering metrics
Jan 12 00:07:44.461: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 12 00:08:44.637: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
Jan 12 00:08:44.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hwkw" in namespace "gc-3779"
Jan 12 00:08:44.662: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xkd8" in namespace "gc-3779"
Jan 12 00:08:44.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-5f8v9" in namespace "gc-3779"
Jan 12 00:08:44.695: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qhjj" in namespace "gc-3779"
Jan 12 00:08:44.716: INFO: Deleting pod "simpletest-rc-to-be-deleted-75qc7" in namespace "gc-3779"
Jan 12 00:08:44.732: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gd5z" in namespace "gc-3779"
Jan 12 00:08:44.747: INFO: Deleting pod "simpletest-rc-to-be-deleted-8glq9" in namespace "gc-3779"
Jan 12 00:08:44.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-96k67" in namespace "gc-3779"
Jan 12 00:08:44.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qxc6" in namespace "gc-3779"
Jan 12 00:08:44.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rf4s" in namespace "gc-3779"
Jan 12 00:08:44.815: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8jqk" in namespace "gc-3779"
Jan 12 00:08:44.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-bw2wz" in namespace "gc-3779"
Jan 12 00:08:44.856: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdshz" in namespace "gc-3779"
Jan 12 00:08:44.872: INFO: Deleting pod "simpletest-rc-to-be-deleted-cl4gz" in namespace "gc-3779"
Jan 12 00:08:44.888: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2c7v" in namespace "gc-3779"
Jan 12 00:08:44.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc8zq" in namespace "gc-3779"
Jan 12 00:08:44.920: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddphv" in namespace "gc-3779"
Jan 12 00:08:44.940: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnq2s" in namespace "gc-3779"
Jan 12 00:08:44.955: INFO: Deleting pod "simpletest-rc-to-be-deleted-fckvm" in namespace "gc-3779"
Jan 12 00:08:44.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg427" in namespace "gc-3779"
Jan 12 00:08:44.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-hjm7g" in namespace "gc-3779"
Jan 12 00:08:45.002: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxqlk" in namespace "gc-3779"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 12 00:08:45.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3779" for this suite.

â€¢ [SLOW TEST:71.103 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":185,"skipped":3522,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:08:45.026: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6797
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:08:45.183: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17" in namespace "projected-6797" to be "Succeeded or Failed"
Jan 12 00:08:45.196: INFO: Pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17": Phase="Pending", Reason="", readiness=false. Elapsed: 13.199611ms
Jan 12 00:08:47.203: INFO: Pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019560658s
Jan 12 00:08:49.218: INFO: Pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035189254s
Jan 12 00:08:51.227: INFO: Pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043376132s
STEP: Saw pod success
Jan 12 00:08:51.227: INFO: Pod "downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17" satisfied condition "Succeeded or Failed"
Jan 12 00:08:51.232: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17 container client-container: <nil>
STEP: delete the pod
Jan 12 00:08:51.311: INFO: Waiting for pod downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17 to disappear
Jan 12 00:08:51.316: INFO: Pod downwardapi-volume-0a3899e4-66db-4dc3-9a9e-73a071c95c17 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:08:51.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6797" for this suite.

â€¢ [SLOW TEST:6.304 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":186,"skipped":3574,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:08:51.331: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8083
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-59aee251-e405-46fc-984f-9c2ce2560c94
STEP: Creating secret with name s-test-opt-upd-f4edfd36-0436-4c5c-9c8a-dc8c103d0410
STEP: Creating the pod
Jan 12 00:08:51.533: INFO: The status of Pod pod-projected-secrets-8eeb5ae8-6d81-456a-8a0c-a89ffeca6722 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:08:53.543: INFO: The status of Pod pod-projected-secrets-8eeb5ae8-6d81-456a-8a0c-a89ffeca6722 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:08:55.538: INFO: The status of Pod pod-projected-secrets-8eeb5ae8-6d81-456a-8a0c-a89ffeca6722 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-59aee251-e405-46fc-984f-9c2ce2560c94
STEP: Updating secret s-test-opt-upd-f4edfd36-0436-4c5c-9c8a-dc8c103d0410
STEP: Creating secret with name s-test-opt-create-ea928909-0394-49fa-ad1e-8ca384c70d4e
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 12 00:10:09.974: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8083" for this suite.

â€¢ [SLOW TEST:78.671 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3600,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:10.002: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5835
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 12 00:10:10.198: INFO: Waiting up to 5m0s for pod "pod-786752fc-896c-4a6a-af2e-c882a409f63e" in namespace "emptydir-5835" to be "Succeeded or Failed"
Jan 12 00:10:10.206: INFO: Pod "pod-786752fc-896c-4a6a-af2e-c882a409f63e": Phase="Pending", Reason="", readiness=false. Elapsed: 8.103406ms
Jan 12 00:10:12.216: INFO: Pod "pod-786752fc-896c-4a6a-af2e-c882a409f63e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01780041s
Jan 12 00:10:14.236: INFO: Pod "pod-786752fc-896c-4a6a-af2e-c882a409f63e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.038601659s
STEP: Saw pod success
Jan 12 00:10:14.237: INFO: Pod "pod-786752fc-896c-4a6a-af2e-c882a409f63e" satisfied condition "Succeeded or Failed"
Jan 12 00:10:14.240: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-786752fc-896c-4a6a-af2e-c882a409f63e container test-container: <nil>
STEP: delete the pod
Jan 12 00:10:14.297: INFO: Waiting for pod pod-786752fc-896c-4a6a-af2e-c882a409f63e to disappear
Jan 12 00:10:14.302: INFO: Pod pod-786752fc-896c-4a6a-af2e-c882a409f63e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:10:14.302: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5835" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":188,"skipped":3606,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:14.316: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Jan 12 00:10:14.479: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6154 proxy --unix-socket=/tmp/kubectl-proxy-unix3368092685/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:10:14.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6154" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":189,"skipped":3613,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:14.534: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1219
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1219
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-1219
Jan 12 00:10:14.703: INFO: Found 0 stateful pods, waiting for 1
Jan 12 00:10:24.719: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Jan 12 00:10:24.747: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Jan 12 00:10:24.754: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Jan 12 00:10:24.756: INFO: Observed &StatefulSet event: ADDED
Jan 12 00:10:24.756: INFO: Found Statefulset ss in namespace statefulset-1219 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 12 00:10:24.756: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Jan 12 00:10:24.757: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 12 00:10:24.768: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Jan 12 00:10:24.771: INFO: Observed &StatefulSet event: ADDED
Jan 12 00:10:24.771: INFO: Observed Statefulset ss in namespace statefulset-1219 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 12 00:10:24.771: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:10:24.771: INFO: Deleting all statefulset in ns statefulset-1219
Jan 12 00:10:24.774: INFO: Scaling statefulset ss to 0
Jan 12 00:10:34.806: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:10:34.809: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:10:34.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1219" for this suite.

â€¢ [SLOW TEST:20.314 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":190,"skipped":3635,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:34.848: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8936
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:10:35.441: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:10:38.496: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:10:38.776: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8936" for this suite.
STEP: Destroying namespace "webhook-8936-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":191,"skipped":3651,"failed":0}
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:38.847: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9044
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:10:39.017: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f" in namespace "security-context-test-9044" to be "Succeeded or Failed"
Jan 12 00:10:39.026: INFO: Pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f": Phase="Pending", Reason="", readiness=false. Elapsed: 9.163126ms
Jan 12 00:10:41.034: INFO: Pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016891487s
Jan 12 00:10:43.043: INFO: Pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026571275s
Jan 12 00:10:45.055: INFO: Pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.038729384s
Jan 12 00:10:45.055: INFO: Pod "busybox-readonly-false-3918c7e7-a11f-4105-8ae2-7c309667461f" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 12 00:10:45.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9044" for this suite.

â€¢ [SLOW TEST:6.220 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:173
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3655,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:45.068: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:10:45.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6843" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":193,"skipped":3673,"failed":0}
SS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:45.216: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 12 00:10:47.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7864" for this suite.
â€¢{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":194,"skipped":3675,"failed":0}
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:47.392: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Jan 12 00:10:47.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-392" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":195,"skipped":3682,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:47.572: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1329
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 12 00:10:47.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-1329 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 12 00:10:47.786: INFO: stderr: ""
Jan 12 00:10:47.786: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Jan 12 00:10:47.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-1329 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Jan 12 00:10:48.093: INFO: stderr: ""
Jan 12 00:10:48.093: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 12 00:10:48.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-1329 delete pods e2e-test-httpd-pod'
Jan 12 00:10:49.958: INFO: stderr: ""
Jan 12 00:10:49.958: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:10:49.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1329" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":196,"skipped":3689,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:49.973: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Jan 12 00:10:50.142: INFO: Waiting up to 5m0s for pod "pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c" in namespace "emptydir-1505" to be "Succeeded or Failed"
Jan 12 00:10:50.157: INFO: Pod "pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c": Phase="Pending", Reason="", readiness=false. Elapsed: 14.995902ms
Jan 12 00:10:52.166: INFO: Pod "pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024369246s
Jan 12 00:10:54.175: INFO: Pod "pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033306202s
STEP: Saw pod success
Jan 12 00:10:54.175: INFO: Pod "pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c" satisfied condition "Succeeded or Failed"
Jan 12 00:10:54.178: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000000 pod pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c container test-container: <nil>
STEP: delete the pod
Jan 12 00:10:54.218: INFO: Waiting for pod pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c to disappear
Jan 12 00:10:54.221: INFO: Pod pod-37cecd1e-d11d-43f0-a45e-10b054cb5a8c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:10:54.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1505" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":197,"skipped":3711,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:10:54.228: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-4187
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 12 00:10:54.378: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 12 00:11:54.422: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 12 00:11:54.462: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 12 00:11:54.477: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 12 00:11:54.500: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 12 00:11:54.505: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 12 00:11:54.542: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 12 00:11:54.557: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:12:02.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-4187" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

â€¢ [SLOW TEST:68.489 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":198,"skipped":3722,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:12:02.721: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-6933
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Jan 12 00:12:02.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-6933" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":199,"skipped":3761,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:12:02.896: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4351
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:12:03.396: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:12:06.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:12:06.431: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1834-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:12:09.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4351" for this suite.
STEP: Destroying namespace "webhook-4351-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:7.047 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":200,"skipped":3781,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:12:09.948: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-s8jd
STEP: Creating a pod to test atomic-volume-subpath
Jan 12 00:12:10.156: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-s8jd" in namespace "subpath-7598" to be "Succeeded or Failed"
Jan 12 00:12:10.165: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Pending", Reason="", readiness=false. Elapsed: 9.138315ms
Jan 12 00:12:12.174: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01752551s
Jan 12 00:12:14.184: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 4.027513379s
Jan 12 00:12:16.190: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 6.034427548s
Jan 12 00:12:18.198: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 8.042240828s
Jan 12 00:12:20.203: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 10.047307474s
Jan 12 00:12:22.214: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 12.05759428s
Jan 12 00:12:24.224: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 14.067558403s
Jan 12 00:12:26.231: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 16.075343703s
Jan 12 00:12:28.238: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 18.082363896s
Jan 12 00:12:30.245: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 20.088587468s
Jan 12 00:12:32.253: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=true. Elapsed: 22.097364871s
Jan 12 00:12:34.264: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Running", Reason="", readiness=false. Elapsed: 24.108187199s
Jan 12 00:12:36.271: INFO: Pod "pod-subpath-test-projected-s8jd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.114990877s
STEP: Saw pod success
Jan 12 00:12:36.271: INFO: Pod "pod-subpath-test-projected-s8jd" satisfied condition "Succeeded or Failed"
Jan 12 00:12:36.275: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-subpath-test-projected-s8jd container test-container-subpath-projected-s8jd: <nil>
STEP: delete the pod
Jan 12 00:12:36.331: INFO: Waiting for pod pod-subpath-test-projected-s8jd to disappear
Jan 12 00:12:36.334: INFO: Pod pod-subpath-test-projected-s8jd no longer exists
STEP: Deleting pod pod-subpath-test-projected-s8jd
Jan 12 00:12:36.334: INFO: Deleting pod "pod-subpath-test-projected-s8jd" in namespace "subpath-7598"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 12 00:12:36.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7598" for this suite.

â€¢ [SLOW TEST:26.409 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":201,"skipped":3799,"failed":0}
SSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:12:36.359: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-1372
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Jan 12 00:12:36.516: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Jan 12 00:12:36.934: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Jan 12 00:12:39.019: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:41.028: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:43.026: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:45.028: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:47.029: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:49.028: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:51.027: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 12, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-66955c4dd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:12:53.155: INFO: Waited 124.381981ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Jan 12 00:12:53.330: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Jan 12 00:12:53.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-1372" for this suite.

â€¢ [SLOW TEST:17.382 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":202,"skipped":3802,"failed":0}
SSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:12:53.743: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:12:53.907: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05" in namespace "security-context-test-6332" to be "Succeeded or Failed"
Jan 12 00:12:53.924: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 16.174479ms
Jan 12 00:12:55.930: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022556652s
Jan 12 00:12:57.939: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031866357s
Jan 12 00:12:59.950: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 6.042409776s
Jan 12 00:13:01.957: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 8.049785611s
Jan 12 00:13:03.969: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 10.061550134s
Jan 12 00:13:05.994: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 12.086913721s
Jan 12 00:13:08.006: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 14.098054836s
Jan 12 00:13:10.015: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 16.108009246s
Jan 12 00:13:12.023: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Pending", Reason="", readiness=false. Elapsed: 18.115559951s
Jan 12 00:13:14.039: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Running", Reason="", readiness=false. Elapsed: 20.131067897s
Jan 12 00:13:16.046: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05": Phase="Succeeded", Reason="", readiness=false. Elapsed: 22.138718675s
Jan 12 00:13:16.046: INFO: Pod "alpine-nnp-false-1a10af22-961c-476a-aa40-e970e67f7d05" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 12 00:13:16.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6332" for this suite.

â€¢ [SLOW TEST:22.324 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3807,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:16.069: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6660
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Jan 12 00:13:16.233: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6660  fabb6726-a4a0-485c-add8-225f30b4ce32 21703 0 2023-01-12 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:13:16.233: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6660  fabb6726-a4a0-485c-add8-225f30b4ce32 21704 0 2023-01-12 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Jan 12 00:13:16.250: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6660  fabb6726-a4a0-485c-add8-225f30b4ce32 21705 0 2023-01-12 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:13:16.251: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6660  fabb6726-a4a0-485c-add8-225f30b4ce32 21706 0 2023-01-12 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 12 00:13:16.251: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6660" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":204,"skipped":3818,"failed":0}
S
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:16.259: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2152
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-01e38979-8562-46a1-925f-9e28e7f1cf86
STEP: Creating a pod to test consume secrets
Jan 12 00:13:16.422: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d" in namespace "projected-2152" to be "Succeeded or Failed"
Jan 12 00:13:16.431: INFO: Pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.982409ms
Jan 12 00:13:18.436: INFO: Pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014720937s
Jan 12 00:13:20.442: INFO: Pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020184233s
Jan 12 00:13:22.450: INFO: Pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028034157s
STEP: Saw pod success
Jan 12 00:13:22.450: INFO: Pod "pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d" satisfied condition "Succeeded or Failed"
Jan 12 00:13:22.453: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:13:22.479: INFO: Waiting for pod pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d to disappear
Jan 12 00:13:22.482: INFO: Pod pod-projected-secrets-2a828158-f803-4c6c-87bf-a2ee82b2293d no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 12 00:13:22.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2152" for this suite.

â€¢ [SLOW TEST:6.241 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":205,"skipped":3819,"failed":0}
SSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:22.500: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-6341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:13:22.641: INFO: Creating pod...
Jan 12 00:13:24.661: INFO: Creating service...
Jan 12 00:13:24.678: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=DELETE
Jan 12 00:13:24.693: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 12 00:13:24.693: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=OPTIONS
Jan 12 00:13:24.707: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 12 00:13:24.708: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=PATCH
Jan 12 00:13:24.714: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 12 00:13:24.715: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=POST
Jan 12 00:13:24.721: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 12 00:13:24.721: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=PUT
Jan 12 00:13:24.732: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 12 00:13:24.732: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=DELETE
Jan 12 00:13:24.738: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 12 00:13:24.738: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jan 12 00:13:24.745: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 12 00:13:24.746: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=PATCH
Jan 12 00:13:24.753: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 12 00:13:24.753: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=POST
Jan 12 00:13:24.758: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 12 00:13:24.758: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=PUT
Jan 12 00:13:24.765: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 12 00:13:24.765: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=GET
Jan 12 00:13:24.768: INFO: http.Client request:GET StatusCode:301
Jan 12 00:13:24.768: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=GET
Jan 12 00:13:24.774: INFO: http.Client request:GET StatusCode:301
Jan 12 00:13:24.774: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/pods/agnhost/proxy?method=HEAD
Jan 12 00:13:24.777: INFO: http.Client request:HEAD StatusCode:301
Jan 12 00:13:24.777: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6341/services/e2e-proxy-test-service/proxy?method=HEAD
Jan 12 00:13:24.781: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 12 00:13:24.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6341" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":206,"skipped":3824,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:24.792: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8113
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-a826a030-29ca-4cf6-840b-319d5a52dd9d
STEP: Creating a pod to test consume configMaps
Jan 12 00:13:24.958: INFO: Waiting up to 5m0s for pod "pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c" in namespace "configmap-8113" to be "Succeeded or Failed"
Jan 12 00:13:24.970: INFO: Pod "pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c": Phase="Pending", Reason="", readiness=false. Elapsed: 12.0608ms
Jan 12 00:13:26.980: INFO: Pod "pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022149004s
Jan 12 00:13:28.988: INFO: Pod "pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030121529s
STEP: Saw pod success
Jan 12 00:13:28.988: INFO: Pod "pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c" satisfied condition "Succeeded or Failed"
Jan 12 00:13:28.992: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:13:29.041: INFO: Waiting for pod pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c to disappear
Jan 12 00:13:29.044: INFO: Pod pod-configmaps-013d2956-ea9d-4df2-a197-d1d4468e5f1c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:13:29.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8113" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":207,"skipped":3849,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:29.053: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:13:30.068: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:13:33.099: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:13:33.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6590" for this suite.
STEP: Destroying namespace "webhook-6590-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":208,"skipped":3874,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:33.472: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:13:33.629: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 12 00:13:33.640: INFO: The status of Pod pod-exec-websocket-1ff459a8-40f4-4b7e-b199-07b493a2e3e4 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:13:35.646: INFO: The status of Pod pod-exec-websocket-1ff459a8-40f4-4b7e-b199-07b493a2e3e4 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 12 00:13:35.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7950" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":209,"skipped":3877,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:35.775: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-3930
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-3930
STEP: creating replication controller externalsvc in namespace services-3930
I0112 00:13:35.982172      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3930, replica count: 2
I0112 00:13:39.033160      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Jan 12 00:13:39.063: INFO: Creating new exec pod
Jan 12 00:13:41.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3930 exec execpod6b57h -- /bin/sh -x -c nslookup nodeport-service.services-3930.svc.cluster.local'
Jan 12 00:13:41.291: INFO: stderr: "+ nslookup nodeport-service.services-3930.svc.cluster.local\n"
Jan 12 00:13:41.291: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nnodeport-service.services-3930.svc.cluster.local\tcanonical name = externalsvc.services-3930.svc.cluster.local.\nName:\texternalsvc.services-3930.svc.cluster.local\nAddress: 10.0.4.124\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-3930, will wait for the garbage collector to delete the pods
Jan 12 00:13:41.352: INFO: Deleting ReplicationController externalsvc took: 7.043607ms
Jan 12 00:13:41.453: INFO: Terminating ReplicationController externalsvc pods took: 100.960235ms
Jan 12 00:13:43.773: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:13:43.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3930" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:8.035 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":210,"skipped":3907,"failed":0}
SS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:43.810: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-7274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Jan 12 00:13:43.981: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Jan 12 00:13:44.016: INFO: waiting for watch events with expected annotations in namespace
Jan 12 00:13:44.016: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Jan 12 00:13:44.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-7274" for this suite.
â€¢{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":211,"skipped":3909,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:44.056: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-7daa564c-28bc-4ed1-84d4-5620774bb636
STEP: Creating a pod to test consume configMaps
Jan 12 00:13:44.214: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f" in namespace "projected-5015" to be "Succeeded or Failed"
Jan 12 00:13:44.225: INFO: Pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.001467ms
Jan 12 00:13:46.232: INFO: Pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f": Phase="Running", Reason="", readiness=true. Elapsed: 2.018378991s
Jan 12 00:13:48.238: INFO: Pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f": Phase="Running", Reason="", readiness=false. Elapsed: 4.023729349s
Jan 12 00:13:50.243: INFO: Pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028753896s
STEP: Saw pod success
Jan 12 00:13:50.243: INFO: Pod "pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f" satisfied condition "Succeeded or Failed"
Jan 12 00:13:50.247: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:13:50.269: INFO: Waiting for pod pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f to disappear
Jan 12 00:13:50.273: INFO: Pod pod-projected-configmaps-680c9bb2-6273-47a0-9ea7-0a5d9f08433f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 12 00:13:50.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5015" for this suite.

â€¢ [SLOW TEST:6.236 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":212,"skipped":3927,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:50.293: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Jan 12 00:13:50.473: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1428  3c8c3542-fbc3-4e39-b495-759e888a5549 22161 0 2023-01-12 00:13:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:13:50.473: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1428  3c8c3542-fbc3-4e39-b495-759e888a5549 22162 0 2023-01-12 00:13:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-12 00:13:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 12 00:13:50.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1428" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":213,"skipped":3957,"failed":0}

------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:50.488: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 12 00:13:50.624: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 12 00:13:50.631: INFO: Waiting for terminating namespaces to be deleted...
Jan 12 00:13:50.633: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000000 before test
Jan 12 00:13:50.638: INFO: azure-ip-masq-agent-52p4t from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.638: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 12 00:13:50.638: INFO: kube-proxy-8chww from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.639: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 12 00:13:50.639: INFO: sonobuoy-e2e-job-4d0b931cd54444dd from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 12 00:13:50.639: INFO: 	Container e2e ready: true, restart count 0
Jan 12 00:13:50.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 12 00:13:50.639: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 12 00:13:50.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 12 00:13:50.639: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 12 00:13:50.639: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000001 before test
Jan 12 00:13:50.644: INFO: azure-ip-masq-agent-t5whg from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.644: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 12 00:13:50.644: INFO: kube-proxy-8rhgx from kube-system started at 2023-01-11 23:00:09 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.644: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 12 00:13:50.644: INFO: pod-exec-websocket-1ff459a8-40f4-4b7e-b199-07b493a2e3e4 from pods-7950 started at 2023-01-12 00:13:33 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.644: INFO: 	Container main ready: true, restart count 0
Jan 12 00:13:50.644: INFO: sonobuoy from sonobuoy started at 2023-01-11 23:04:33 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.644: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 12 00:13:50.644: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-jfx64 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 12 00:13:50.644: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 12 00:13:50.644: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 12 00:13:50.644: INFO: 
Logging pods the apiserver thinks is on node k8s-agentpool1-12291382-vmss000002 before test
Jan 12 00:13:50.649: INFO: azure-ip-masq-agent-tp2qx from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.649: INFO: 	Container azure-ip-masq-agent ready: true, restart count 0
Jan 12 00:13:50.649: INFO: kube-proxy-g5hg6 from kube-system started at 2023-01-11 22:59:12 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.649: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 12 00:13:50.649: INFO: metrics-server-66dd6687d9-rldfm from kube-system started at 2023-01-11 22:59:21 +0000 UTC (1 container statuses recorded)
Jan 12 00:13:50.649: INFO: 	Container metrics-server ready: true, restart count 0
Jan 12 00:13:50.649: INFO: sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-whj75 from sonobuoy started at 2023-01-11 23:04:43 +0000 UTC (2 container statuses recorded)
Jan 12 00:13:50.649: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 12 00:13:50.649: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-21ac1dbc-fb42-4c50-b2de-6c551725fe8c 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-21ac1dbc-fb42-4c50-b2de-6c551725fe8c off the node k8s-agentpool1-12291382-vmss000002
STEP: verifying the node doesn't have the label kubernetes.io/e2e-21ac1dbc-fb42-4c50-b2de-6c551725fe8c
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:13:54.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5194" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
â€¢{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":214,"skipped":3957,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:54.804: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5989
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 12 00:13:59.038: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 12 00:13:59.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5989" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":215,"skipped":4019,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:13:59.070: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Jan 12 00:14:01.246: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3032 PodName:var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 12 00:14:01.246: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:14:01.247: INFO: ExecWithOptions: Clientset creation
Jan 12 00:14:01.247: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-3032/pods/var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Jan 12 00:14:01.359: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3032 PodName:var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 12 00:14:01.359: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:14:01.360: INFO: ExecWithOptions: Clientset creation
Jan 12 00:14:01.360: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/var-expansion-3032/pods/var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Jan 12 00:14:01.984: INFO: Successfully updated pod "var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Jan 12 00:14:01.996: INFO: Deleting pod "var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820" in namespace "var-expansion-3032"
Jan 12 00:14:02.002: INFO: Wait up to 5m0s for pod "var-expansion-b0d3d173-5e0b-465b-9c97-43c956f02820" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 12 00:14:36.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3032" for this suite.

â€¢ [SLOW TEST:36.962 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":216,"skipped":4041,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:14:36.032: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-4674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-4674-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 12 00:14:36.219: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4674" for this suite.
â€¢{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":217,"skipped":4066,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:14:36.230: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4618
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 12 00:14:40.441: INFO: DNS probes using dns-4618/dns-test-752c9773-2395-4435-9b2e-3b1a5b7d6c8c succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 12 00:14:40.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4618" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":218,"skipped":4096,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:14:40.475: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-114
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Jan 12 00:14:40.629: INFO: Major version: 1
STEP: Confirm minor version
Jan 12 00:14:40.629: INFO: cleanMinorVersion: 24
Jan 12 00:14:40.629: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Jan 12 00:14:40.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-114" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":219,"skipped":4102,"failed":0}
SSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:14:40.638: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-8490
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 12 00:19:40.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-8490" for this suite.

â€¢ [SLOW TEST:300.200 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":220,"skipped":4107,"failed":0}
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:40.838: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-5041
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 12 00:19:42.128: INFO: starting watch
STEP: patching
STEP: updating
Jan 12 00:19:42.138: INFO: waiting for watch events with expected annotations
Jan 12 00:19:42.138: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:19:42.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-5041" for this suite.
â€¢{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":221,"skipped":4109,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:42.241: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-305
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 12 00:19:42.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-305 create -f -'
Jan 12 00:19:42.613: INFO: stderr: ""
Jan 12 00:19:42.613: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 12 00:19:43.621: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:19:43.621: INFO: Found 0 / 1
Jan 12 00:19:44.619: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:19:44.619: INFO: Found 1 / 1
Jan 12 00:19:44.619: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Jan 12 00:19:44.623: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:19:44.623: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 12 00:19:44.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-305 patch pod agnhost-primary-2r65j -p {"metadata":{"annotations":{"x":"y"}}}'
Jan 12 00:19:44.705: INFO: stderr: ""
Jan 12 00:19:44.705: INFO: stdout: "pod/agnhost-primary-2r65j patched\n"
STEP: checking annotations
Jan 12 00:19:44.712: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:19:44.712: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:19:44.712: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-305" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":222,"skipped":4168,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:44.720: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9533
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-fde409dd-7c6b-49b7-a9e9-5b5cb1ec8111
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:19:44.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9533" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":223,"skipped":4181,"failed":0}
SS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:44.870: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6919
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:19:45.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6919" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
â€¢{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":224,"skipped":4183,"failed":0}

------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:45.125: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1166
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:19:45.270: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621" in namespace "downward-api-1166" to be "Succeeded or Failed"
Jan 12 00:19:45.279: INFO: Pod "downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621": Phase="Pending", Reason="", readiness=false. Elapsed: 8.772279ms
Jan 12 00:19:47.295: INFO: Pod "downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025461657s
Jan 12 00:19:49.303: INFO: Pod "downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033450457s
STEP: Saw pod success
Jan 12 00:19:49.304: INFO: Pod "downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621" satisfied condition "Succeeded or Failed"
Jan 12 00:19:49.307: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621 container client-container: <nil>
STEP: delete the pod
Jan 12 00:19:49.367: INFO: Waiting for pod downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621 to disappear
Jan 12 00:19:49.370: INFO: Pod downwardapi-volume-3d263a2f-803c-4432-9e8e-a241b61f6621 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 12 00:19:49.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1166" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4183,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:19:49.398: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4906
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 12 00:20:05.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4906" for this suite.

â€¢ [SLOW TEST:16.311 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":226,"skipped":4195,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:20:05.710: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-2396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Jan 12 00:20:05.905: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 12 00:20:05.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2396" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":227,"skipped":4223,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:20:05.931: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-9318
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9318
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 12 00:20:06.066: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 12 00:20:06.146: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:20:08.158: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 12 00:20:10.152: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 12 00:20:12.157: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 12 00:20:14.155: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 12 00:20:16.154: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 12 00:20:18.163: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 12 00:20:18.170: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 12 00:20:20.176: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 12 00:20:22.177: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 12 00:20:24.181: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 12 00:20:26.178: INFO: The status of Pod netserver-1 is Running (Ready = false)
Jan 12 00:20:28.182: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 12 00:20:28.193: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jan 12 00:20:30.230: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jan 12 00:20:30.230: INFO: Breadth first check of 10.240.0.38 on host 10.240.0.34...
Jan 12 00:20:30.233: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.68:9080/dial?request=hostname&protocol=udp&host=10.240.0.38&port=8081&tries=1'] Namespace:pod-network-test-9318 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 12 00:20:30.234: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:20:30.235: INFO: ExecWithOptions: Clientset creation
Jan 12 00:20:30.235: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9318/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.68%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.240.0.38%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 12 00:20:30.352: INFO: Waiting for responses: map[]
Jan 12 00:20:30.352: INFO: reached 10.240.0.38 after 0/1 tries
Jan 12 00:20:30.352: INFO: Breadth first check of 10.240.0.74 on host 10.240.0.63...
Jan 12 00:20:30.356: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.68:9080/dial?request=hostname&protocol=udp&host=10.240.0.74&port=8081&tries=1'] Namespace:pod-network-test-9318 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 12 00:20:30.356: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:20:30.357: INFO: ExecWithOptions: Clientset creation
Jan 12 00:20:30.357: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9318/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.68%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.240.0.74%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 12 00:20:30.463: INFO: Waiting for responses: map[]
Jan 12 00:20:30.463: INFO: reached 10.240.0.74 after 0/1 tries
Jan 12 00:20:30.464: INFO: Breadth first check of 10.240.0.94 on host 10.240.0.92...
Jan 12 00:20:30.467: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.240.0.68:9080/dial?request=hostname&protocol=udp&host=10.240.0.94&port=8081&tries=1'] Namespace:pod-network-test-9318 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 12 00:20:30.468: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:20:30.469: INFO: ExecWithOptions: Clientset creation
Jan 12 00:20:30.469: INFO: ExecWithOptions: execute(POST https://10.0.0.1:443/api/v1/namespaces/pod-network-test-9318/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.240.0.68%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.240.0.94%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 12 00:20:30.583: INFO: Waiting for responses: map[]
Jan 12 00:20:30.583: INFO: reached 10.240.0.94 after 0/1 tries
Jan 12 00:20:30.583: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 12 00:20:30.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9318" for this suite.

â€¢ [SLOW TEST:24.662 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":228,"skipped":4247,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:20:30.595: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2378
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Jan 12 00:20:32.777: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 12 00:20:34.904: INFO: running pods: 2 < 3
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 12 00:20:36.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2378" for this suite.

â€¢ [SLOW TEST:6.381 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":229,"skipped":4293,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:20:36.976: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Jan 12 00:20:37.122: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 12 00:20:41.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9743" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":230,"skipped":4299,"failed":0}
SSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:20:41.486: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:20:41.640: INFO: created pod
Jan 12 00:20:41.640: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4544" to be "Succeeded or Failed"
Jan 12 00:20:41.644: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.786934ms
Jan 12 00:20:43.651: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010522515s
Jan 12 00:20:45.657: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017126304s
STEP: Saw pod success
Jan 12 00:20:45.657: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jan 12 00:21:15.658: INFO: polling logs
Jan 12 00:21:15.693: INFO: Pod logs: 
I0112 00:20:43.131960       1 log.go:195] OK: Got token
I0112 00:20:43.132006       1 log.go:195] validating with in-cluster discovery
I0112 00:20:43.133496       1 log.go:195] OK: got issuer https://kubernetes.default.svc.cluster.local
I0112 00:20:43.133548       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4544:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1673483441, NotBefore:1673482841, IssuedAt:1673482841, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4544", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f64eeda4-2d23-46dd-952b-7690da816230"}}}
I0112 00:20:43.177840       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0112 00:20:43.215182       1 log.go:195] OK: Validated signature on JWT
I0112 00:20:43.215500       1 log.go:195] OK: Got valid claims from token!
I0112 00:20:43.215539       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4544:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1673483441, NotBefore:1673482841, IssuedAt:1673482841, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4544", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f64eeda4-2d23-46dd-952b-7690da816230"}}}

Jan 12 00:21:15.693: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 12 00:21:15.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4544" for this suite.

â€¢ [SLOW TEST:34.222 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":231,"skipped":4305,"failed":0}
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:21:15.708: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8859
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-8859
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8859
Jan 12 00:21:15.869: INFO: Found 0 stateful pods, waiting for 1
Jan 12 00:21:25.876: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Jan 12 00:21:25.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:21:26.096: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:21:26.096: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:21:26.096: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:21:26.101: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 12 00:21:36.110: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:21:36.111: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:21:36.133: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999996s
Jan 12 00:21:37.141: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.990491181s
Jan 12 00:21:38.150: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.982572978s
Jan 12 00:21:39.156: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.974027368s
Jan 12 00:21:40.162: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.967376877s
Jan 12 00:21:41.169: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.961947398s
Jan 12 00:21:42.180: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.954781033s
Jan 12 00:21:43.187: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.944103605s
Jan 12 00:21:44.194: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.936867407s
Jan 12 00:21:45.201: INFO: Verifying statefulset ss doesn't scale past 1 for another 929.096505ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8859
Jan 12 00:21:46.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:21:46.388: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:21:46.388: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:21:46.388: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:21:46.396: INFO: Found 1 stateful pods, waiting for 3
Jan 12 00:21:56.406: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:21:56.406: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:21:56.406: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Jan 12 00:21:56.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:21:56.599: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:21:56.599: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:21:56.599: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:21:56.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:21:56.817: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:21:56.817: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:21:56.817: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:21:56.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:21:57.049: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:21:57.049: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:21:57.049: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:21:57.049: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:21:57.057: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jan 12 00:22:07.072: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:22:07.072: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:22:07.072: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:22:07.088: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.9999997s
Jan 12 00:22:08.105: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.991513208s
Jan 12 00:22:09.113: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.974267333s
Jan 12 00:22:10.118: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.965889642s
Jan 12 00:22:11.125: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.961109185s
Jan 12 00:22:12.132: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.954672412s
Jan 12 00:22:13.139: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.947724535s
Jan 12 00:22:14.149: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.940591071s
Jan 12 00:22:15.154: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.929967856s
Jan 12 00:22:16.163: INFO: Verifying statefulset ss doesn't scale past 3 for another 924.349586ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8859
Jan 12 00:22:17.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:22:17.350: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:22:17.350: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:22:17.350: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:22:17.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:22:17.534: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:22:17.534: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:22:17.534: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:22:17.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-8859 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:22:17.719: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:22:17.719: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:22:17.719: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:22:17.719: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:22:27.738: INFO: Deleting all statefulset in ns statefulset-8859
Jan 12 00:22:27.741: INFO: Scaling statefulset ss to 0
Jan 12 00:22:27.750: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:22:27.753: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:22:27.775: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8859" for this suite.

â€¢ [SLOW TEST:72.079 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":232,"skipped":4305,"failed":0}
SSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:22:27.788: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-2775
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 12 00:22:27.932: INFO: Waiting up to 5m0s for pod "security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6" in namespace "security-context-2775" to be "Succeeded or Failed"
Jan 12 00:22:27.946: INFO: Pod "security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6": Phase="Pending", Reason="", readiness=false. Elapsed: 13.388226ms
Jan 12 00:22:29.954: INFO: Pod "security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021728628s
Jan 12 00:22:31.962: INFO: Pod "security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029725446s
STEP: Saw pod success
Jan 12 00:22:31.962: INFO: Pod "security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6" satisfied condition "Succeeded or Failed"
Jan 12 00:22:31.966: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6 container test-container: <nil>
STEP: delete the pod
Jan 12 00:22:31.990: INFO: Waiting for pod security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6 to disappear
Jan 12 00:22:31.994: INFO: Pod security-context-24a6de93-a96d-4a33-bbb3-ea37c6e54ec6 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 12 00:22:31.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-2775" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":233,"skipped":4309,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:22:32.004: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4949
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-4949
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4949 to expose endpoints map[]
Jan 12 00:22:32.181: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Jan 12 00:22:33.192: INFO: successfully validated that service endpoint-test2 in namespace services-4949 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-4949
Jan 12 00:22:33.214: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:22:35.219: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4949 to expose endpoints map[pod1:[80]]
Jan 12 00:22:35.238: INFO: successfully validated that service endpoint-test2 in namespace services-4949 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Jan 12 00:22:35.238: INFO: Creating new exec pod
Jan 12 00:22:38.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 12 00:22:38.458: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:38.458: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:22:38.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.130.43 80'
Jan 12 00:22:38.636: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.130.43 80\nConnection to 10.0.130.43 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:38.636: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-4949
Jan 12 00:22:38.656: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:22:40.661: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4949 to expose endpoints map[pod1:[80] pod2:[80]]
Jan 12 00:22:40.681: INFO: successfully validated that service endpoint-test2 in namespace services-4949 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Jan 12 00:22:41.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 12 00:22:41.881: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:41.881: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:22:41.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.130.43 80'
Jan 12 00:22:42.065: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.130.43 80\nConnection to 10.0.130.43 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:42.065: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-4949
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4949 to expose endpoints map[pod2:[80]]
Jan 12 00:22:42.108: INFO: successfully validated that service endpoint-test2 in namespace services-4949 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Jan 12 00:22:43.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 12 00:22:43.300: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:43.300: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:22:43.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4949 exec execpodpmkzp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.130.43 80'
Jan 12 00:22:43.481: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.130.43 80\nConnection to 10.0.130.43 80 port [tcp/http] succeeded!\n"
Jan 12 00:22:43.481: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-4949
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4949 to expose endpoints map[]
Jan 12 00:22:43.522: INFO: successfully validated that service endpoint-test2 in namespace services-4949 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:22:43.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4949" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:11.575 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":234,"skipped":4318,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:22:43.580: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Jan 12 00:22:45.746: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 12 00:22:47.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2642" for this suite.
â€¢{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":235,"skipped":4356,"failed":0}
SSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:22:47.814: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-293
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 12 00:22:48.021: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:22:48.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:22:48.024: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:22:49.034: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:22:49.038: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:22:49.038: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:22:50.032: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:22:50.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 12 00:22:50.036: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Jan 12 00:22:50.043: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Jan 12 00:22:50.051: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Jan 12 00:22:50.054: INFO: Observed &DaemonSet event: ADDED
Jan 12 00:22:50.054: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.054: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.055: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.055: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.055: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.055: INFO: Found daemon set daemon-set in namespace daemonsets-293 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 12 00:22:50.055: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Jan 12 00:22:50.066: INFO: Observed &DaemonSet event: ADDED
Jan 12 00:22:50.066: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Observed daemon set daemon-set in namespace daemonsets-293 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 12 00:22:50.067: INFO: Observed &DaemonSet event: MODIFIED
Jan 12 00:22:50.067: INFO: Found daemon set daemon-set in namespace daemonsets-293 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jan 12 00:22:50.067: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-293, will wait for the garbage collector to delete the pods
Jan 12 00:22:50.134: INFO: Deleting DaemonSet.extensions daemon-set took: 5.365446ms
Jan 12 00:22:50.235: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.113958ms
Jan 12 00:22:53.047: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:22:53.047: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 12 00:22:53.050: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24104"},"items":null}

Jan 12 00:22:53.052: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24104"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:22:53.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-293" for this suite.

â€¢ [SLOW TEST:5.266 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":236,"skipped":4359,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:22:53.082: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:22:53.873: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:22:56.900: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:22:56.907: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6749-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:22:59.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3054" for this suite.
STEP: Destroying namespace "webhook-3054-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:6.996 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":237,"skipped":4380,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:23:00.078: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7705
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7705
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-7705
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7705
Jan 12 00:23:00.273: INFO: Found 0 stateful pods, waiting for 1
Jan 12 00:23:10.279: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Jan 12 00:23:10.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:23:10.521: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:23:10.521: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:23:10.521: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:23:10.547: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 12 00:23:20.555: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:23:20.555: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:23:20.578: INFO: POD   NODE                                PHASE    GRACE  CONDITIONS
Jan 12 00:23:20.578: INFO: ss-0  k8s-agentpool1-12291382-vmss000001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:00 +0000 UTC  }]
Jan 12 00:23:20.578: INFO: 
Jan 12 00:23:20.578: INFO: StatefulSet ss has not reached scale 3, at 1
Jan 12 00:23:21.583: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995301499s
Jan 12 00:23:22.592: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990359996s
Jan 12 00:23:23.598: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982264365s
Jan 12 00:23:24.606: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975516646s
Jan 12 00:23:25.613: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.967492615s
Jan 12 00:23:26.623: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.960183745s
Jan 12 00:23:27.629: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.951078955s
Jan 12 00:23:28.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.944241685s
Jan 12 00:23:29.645: INFO: Verifying statefulset ss doesn't scale past 3 for another 936.012302ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7705
Jan 12 00:23:30.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:23:30.837: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:23:30.837: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:23:30.837: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:23:30.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:23:31.022: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 12 00:23:31.022: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:23:31.022: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:23:31.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:23:31.190: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 12 00:23:31.190: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:23:31.190: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:23:31.195: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Jan 12 00:23:41.204: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:23:41.204: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:23:41.204: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Jan 12 00:23:41.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:23:41.396: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:23:41.396: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:23:41.396: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:23:41.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:23:41.640: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:23:41.640: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:23:41.640: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:23:41.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-7705 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:23:41.919: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:23:41.919: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:23:41.919: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:23:41.919: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:23:41.923: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jan 12 00:23:51.938: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:23:51.938: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:23:51.938: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 12 00:23:51.970: INFO: POD   NODE                                PHASE    GRACE  CONDITIONS
Jan 12 00:23:51.970: INFO: ss-0  k8s-agentpool1-12291382-vmss000001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:00 +0000 UTC  }]
Jan 12 00:23:51.970: INFO: ss-1  k8s-agentpool1-12291382-vmss000002  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  }]
Jan 12 00:23:51.970: INFO: ss-2  k8s-agentpool1-12291382-vmss000000  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  }]
Jan 12 00:23:51.970: INFO: 
Jan 12 00:23:51.970: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 12 00:23:52.977: INFO: POD   NODE                                PHASE    GRACE  CONDITIONS
Jan 12 00:23:52.977: INFO: ss-1  k8s-agentpool1-12291382-vmss000002  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:23:20 +0000 UTC  }]
Jan 12 00:23:52.977: INFO: 
Jan 12 00:23:52.977: INFO: StatefulSet ss has not reached scale 0, at 1
Jan 12 00:23:53.984: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987721414s
Jan 12 00:23:54.991: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.980277258s
Jan 12 00:23:56.000: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.97358561s
Jan 12 00:23:57.008: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.964595739s
Jan 12 00:23:58.016: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.956158664s
Jan 12 00:23:59.021: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.948887924s
Jan 12 00:24:00.028: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.943534305s
Jan 12 00:24:01.034: INFO: Verifying statefulset ss doesn't scale past 0 for another 935.738158ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7705
Jan 12 00:24:02.041: INFO: Scaling statefulset ss to 0
Jan 12 00:24:02.051: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:24:02.054: INFO: Deleting all statefulset in ns statefulset-7705
Jan 12 00:24:02.057: INFO: Scaling statefulset ss to 0
Jan 12 00:24:02.071: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:24:02.074: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:24:02.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7705" for this suite.

â€¢ [SLOW TEST:62.028 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":238,"skipped":4430,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:02.109: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-6067
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 12 00:24:02.273: INFO: starting watch
STEP: patching
STEP: updating
Jan 12 00:24:02.300: INFO: waiting for watch events with expected annotations
Jan 12 00:24:02.300: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Jan 12 00:24:02.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-6067" for this suite.
â€¢{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":239,"skipped":4469,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:02.335: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 12 00:24:02.491: INFO: Waiting up to 5m0s for pod "pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8" in namespace "emptydir-1420" to be "Succeeded or Failed"
Jan 12 00:24:02.501: INFO: Pod "pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8": Phase="Pending", Reason="", readiness=false. Elapsed: 10.629419ms
Jan 12 00:24:04.512: INFO: Pod "pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021803562s
Jan 12 00:24:06.520: INFO: Pod "pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029393573s
STEP: Saw pod success
Jan 12 00:24:06.520: INFO: Pod "pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8" satisfied condition "Succeeded or Failed"
Jan 12 00:24:06.535: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8 container test-container: <nil>
STEP: delete the pod
Jan 12 00:24:06.582: INFO: Waiting for pod pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8 to disappear
Jan 12 00:24:06.596: INFO: Pod pod-d2977a29-ea2f-4e1a-9a2d-f33971c578d8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:24:06.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1420" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":240,"skipped":4473,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:06.617: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4612
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-4612
STEP: Waiting until pod test-pod will start running in namespace statefulset-4612
STEP: Creating statefulset with conflicting port in namespace statefulset-4612
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4612
Jan 12 00:24:10.864: INFO: Observed stateful pod in namespace: statefulset-4612, name: ss-0, uid: 0b98cb06-797a-4fc1-9813-c0a0b0c59329, status phase: Pending. Waiting for statefulset controller to delete.
Jan 12 00:24:10.889: INFO: Observed stateful pod in namespace: statefulset-4612, name: ss-0, uid: 0b98cb06-797a-4fc1-9813-c0a0b0c59329, status phase: Failed. Waiting for statefulset controller to delete.
Jan 12 00:24:10.906: INFO: Observed stateful pod in namespace: statefulset-4612, name: ss-0, uid: 0b98cb06-797a-4fc1-9813-c0a0b0c59329, status phase: Failed. Waiting for statefulset controller to delete.
Jan 12 00:24:10.913: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4612
STEP: Removing pod with conflicting port in namespace statefulset-4612
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4612 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:24:12.973: INFO: Deleting all statefulset in ns statefulset-4612
Jan 12 00:24:12.976: INFO: Scaling statefulset ss to 0
Jan 12 00:24:23.017: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:24:23.020: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:24:23.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4612" for this suite.

â€¢ [SLOW TEST:16.436 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":241,"skipped":4475,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:23.055: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4167
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4167
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4167
STEP: creating replication controller externalsvc in namespace services-4167
I0112 00:24:23.260541      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4167, replica count: 2
I0112 00:24:26.310898      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Jan 12 00:24:26.351: INFO: Creating new exec pod
Jan 12 00:24:28.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-4167 exec execpodvlhkc -- /bin/sh -x -c nslookup clusterip-service.services-4167.svc.cluster.local'
Jan 12 00:24:28.598: INFO: stderr: "+ nslookup clusterip-service.services-4167.svc.cluster.local\n"
Jan 12 00:24:28.598: INFO: stdout: "Server:\t\t10.0.0.10\nAddress:\t10.0.0.10#53\n\nclusterip-service.services-4167.svc.cluster.local\tcanonical name = externalsvc.services-4167.svc.cluster.local.\nName:\texternalsvc.services-4167.svc.cluster.local\nAddress: 10.0.241.189\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4167, will wait for the garbage collector to delete the pods
Jan 12 00:24:28.660: INFO: Deleting ReplicationController externalsvc took: 8.21202ms
Jan 12 00:24:28.761: INFO: Terminating ReplicationController externalsvc pods took: 100.82518ms
Jan 12 00:24:31.285: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:24:31.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4167" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:8.269 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":242,"skipped":4482,"failed":0}
SSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:31.323: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-5553
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 12 00:24:31.485: INFO: Waiting up to 5m0s for pod "security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647" in namespace "security-context-5553" to be "Succeeded or Failed"
Jan 12 00:24:31.491: INFO: Pod "security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647": Phase="Pending", Reason="", readiness=false. Elapsed: 6.549571ms
Jan 12 00:24:33.501: INFO: Pod "security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016061612s
Jan 12 00:24:35.506: INFO: Pod "security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021071321s
STEP: Saw pod success
Jan 12 00:24:35.506: INFO: Pod "security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647" satisfied condition "Succeeded or Failed"
Jan 12 00:24:35.509: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647 container test-container: <nil>
STEP: delete the pod
Jan 12 00:24:35.589: INFO: Waiting for pod security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647 to disappear
Jan 12 00:24:35.593: INFO: Pod security-context-cee7d13e-a6b0-4a92-a047-7dd0f89f8647 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 12 00:24:35.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-5553" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":243,"skipped":4486,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:35.604: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-7132
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8869
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-7028
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:24:49.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-7132" for this suite.
STEP: Destroying namespace "nsdeletetest-8869" for this suite.
Jan 12 00:24:49.061: INFO: Namespace nsdeletetest-8869 was already deleted
STEP: Destroying namespace "nsdeletetest-7028" for this suite.

â€¢ [SLOW TEST:13.461 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":244,"skipped":4491,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:49.065: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7841
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:24:49.202: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 12 00:24:49.213: INFO: The status of Pod pod-logs-websocket-c48e67d1-47f8-4eaa-aa62-9b2fca00449c is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:24:51.219: INFO: The status of Pod pod-logs-websocket-c48e67d1-47f8-4eaa-aa62-9b2fca00449c is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 12 00:24:51.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7841" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":245,"skipped":4497,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:24:51.256: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 12 00:25:04.515: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4528" for this suite.

â€¢ [SLOW TEST:13.270 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":246,"skipped":4502,"failed":0}
SS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:25:04.526: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5194
Jan 12 00:25:04.697: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:25:06.706: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 12 00:25:06.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 12 00:25:06.934: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jan 12 00:25:06.934: INFO: stdout: "iptables"
Jan 12 00:25:06.934: INFO: proxyMode: iptables
Jan 12 00:25:06.944: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 12 00:25:06.948: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-5194
STEP: creating replication controller affinity-nodeport-timeout in namespace services-5194
I0112 00:25:06.978694      19 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-5194, replica count: 3
I0112 00:25:10.079672      19 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 12 00:25:10.090: INFO: Creating new exec pod
Jan 12 00:25:13.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Jan 12 00:25:13.307: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Jan 12 00:25:13.307: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:25:13.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.188.113 80'
Jan 12 00:25:13.475: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.188.113 80\nConnection to 10.0.188.113 80 port [tcp/http] succeeded!\n"
Jan 12 00:25:13.475: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:25:13.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.63 32318'
Jan 12 00:25:13.660: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.63 32318\nConnection to 10.240.0.63 32318 port [tcp/*] succeeded!\n"
Jan 12 00:25:13.660: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:25:13.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 32318'
Jan 12 00:25:13.842: INFO: stderr: "+ nc -v -t -w 2 10.240.0.34 32318\n+ echo hostName\nConnection to 10.240.0.34 32318 port [tcp/*] succeeded!\n"
Jan 12 00:25:13.842: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:25:13.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.0.34:32318/ ; done'
Jan 12 00:25:14.158: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n"
Jan 12 00:25:14.158: INFO: stdout: "\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v\naffinity-nodeport-timeout-sm75v"
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Received response from host: affinity-nodeport-timeout-sm75v
Jan 12 00:25:14.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.240.0.34:32318/'
Jan 12 00:25:14.364: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n"
Jan 12 00:25:14.364: INFO: stdout: "affinity-nodeport-timeout-sm75v"
Jan 12 00:25:34.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.240.0.34:32318/'
Jan 12 00:25:34.549: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n"
Jan 12 00:25:34.549: INFO: stdout: "affinity-nodeport-timeout-sm75v"
Jan 12 00:25:54.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5194 exec execpod-affinityq4qd5 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.240.0.34:32318/'
Jan 12 00:25:54.773: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.240.0.34:32318/\n"
Jan 12 00:25:54.773: INFO: stdout: "affinity-nodeport-timeout-4wcxb"
Jan 12 00:25:54.773: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-5194, will wait for the garbage collector to delete the pods
Jan 12 00:25:54.857: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 7.428084ms
Jan 12 00:25:54.959: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 101.845461ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:25:57.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5194" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:52.776 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":247,"skipped":4504,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:25:57.303: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9635
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-2a0f5210-2028-42eb-ba84-303b82796c26
STEP: Creating a pod to test consume secrets
Jan 12 00:25:57.459: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83" in namespace "projected-9635" to be "Succeeded or Failed"
Jan 12 00:25:57.462: INFO: Pod "pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83": Phase="Pending", Reason="", readiness=false. Elapsed: 2.622142ms
Jan 12 00:25:59.468: INFO: Pod "pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008415844s
Jan 12 00:26:01.478: INFO: Pod "pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018937243s
STEP: Saw pod success
Jan 12 00:26:01.478: INFO: Pod "pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83" satisfied condition "Succeeded or Failed"
Jan 12 00:26:01.482: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:26:01.500: INFO: Waiting for pod pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83 to disappear
Jan 12 00:26:01.508: INFO: Pod pod-projected-secrets-8d0bdd16-2460-482c-ba41-9582792d6b83 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 12 00:26:01.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9635" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":248,"skipped":4531,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:01.518: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:26:01.684: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:26:04.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8130" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":249,"skipped":4544,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:04.916: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 12 00:26:17.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8312" for this suite.

â€¢ [SLOW TEST:12.162 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":250,"skipped":4576,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:17.078: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-71
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-817d173f-936b-4015-86cd-e08fe0aa3bc1
STEP: Creating a pod to test consume configMaps
Jan 12 00:26:17.228: INFO: Waiting up to 5m0s for pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d" in namespace "configmap-71" to be "Succeeded or Failed"
Jan 12 00:26:17.232: INFO: Pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.874956ms
Jan 12 00:26:19.238: INFO: Pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010123142s
Jan 12 00:26:21.247: INFO: Pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018861865s
Jan 12 00:26:23.256: INFO: Pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028458928s
STEP: Saw pod success
Jan 12 00:26:23.256: INFO: Pod "pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d" satisfied condition "Succeeded or Failed"
Jan 12 00:26:23.260: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:26:23.294: INFO: Waiting for pod pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d to disappear
Jan 12 00:26:23.297: INFO: Pod pod-configmaps-ec37a11b-f914-45dd-9658-9bee5d57188d no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:26:23.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-71" for this suite.

â€¢ [SLOW TEST:6.227 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4601,"failed":0}
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:23.306: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8021
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 12 00:26:23.446: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:26:28.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8021" for this suite.

â€¢ [SLOW TEST:5.229 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":252,"skipped":4601,"failed":0}
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:28.535: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-a7815b54-2d42-447b-a201-31bfd745eb07
STEP: Creating a pod to test consume configMaps
Jan 12 00:26:28.678: INFO: Waiting up to 5m0s for pod "pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c" in namespace "configmap-6501" to be "Succeeded or Failed"
Jan 12 00:26:28.682: INFO: Pod "pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.559754ms
Jan 12 00:26:30.689: INFO: Pod "pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010582648s
Jan 12 00:26:32.699: INFO: Pod "pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020695487s
STEP: Saw pod success
Jan 12 00:26:32.699: INFO: Pod "pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c" satisfied condition "Succeeded or Failed"
Jan 12 00:26:32.702: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:26:32.724: INFO: Waiting for pod pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c to disappear
Jan 12 00:26:32.732: INFO: Pod pod-configmaps-78e2b2fc-2be1-49e6-a891-40f3812a5d0c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:26:32.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6501" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4601,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:32.742: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2862
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 12 00:26:32.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 create -f -'
Jan 12 00:26:33.139: INFO: stderr: ""
Jan 12 00:26:33.139: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 12 00:26:33.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 12 00:26:33.219: INFO: stderr: ""
Jan 12 00:26:33.219: INFO: stdout: "update-demo-nautilus-7xg6v update-demo-nautilus-c6zvw "
Jan 12 00:26:33.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-7xg6v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 12 00:26:33.296: INFO: stderr: ""
Jan 12 00:26:33.296: INFO: stdout: ""
Jan 12 00:26:33.296: INFO: update-demo-nautilus-7xg6v is created but not running
Jan 12 00:26:38.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 12 00:26:38.380: INFO: stderr: ""
Jan 12 00:26:38.380: INFO: stdout: "update-demo-nautilus-7xg6v update-demo-nautilus-c6zvw "
Jan 12 00:26:38.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-7xg6v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 12 00:26:38.448: INFO: stderr: ""
Jan 12 00:26:38.448: INFO: stdout: ""
Jan 12 00:26:38.448: INFO: update-demo-nautilus-7xg6v is created but not running
Jan 12 00:26:43.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 12 00:26:43.532: INFO: stderr: ""
Jan 12 00:26:43.532: INFO: stdout: "update-demo-nautilus-7xg6v update-demo-nautilus-c6zvw "
Jan 12 00:26:43.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-7xg6v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 12 00:26:43.608: INFO: stderr: ""
Jan 12 00:26:43.608: INFO: stdout: "true"
Jan 12 00:26:43.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-7xg6v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 12 00:26:43.681: INFO: stderr: ""
Jan 12 00:26:43.681: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 12 00:26:43.681: INFO: validating pod update-demo-nautilus-7xg6v
Jan 12 00:26:43.688: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 12 00:26:43.688: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 12 00:26:43.688: INFO: update-demo-nautilus-7xg6v is verified up and running
Jan 12 00:26:43.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-c6zvw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 12 00:26:43.762: INFO: stderr: ""
Jan 12 00:26:43.762: INFO: stdout: "true"
Jan 12 00:26:43.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods update-demo-nautilus-c6zvw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 12 00:26:43.836: INFO: stderr: ""
Jan 12 00:26:43.836: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 12 00:26:43.836: INFO: validating pod update-demo-nautilus-c6zvw
Jan 12 00:26:43.844: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 12 00:26:43.844: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 12 00:26:43.844: INFO: update-demo-nautilus-c6zvw is verified up and running
STEP: using delete to clean up resources
Jan 12 00:26:43.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 delete --grace-period=0 --force -f -'
Jan 12 00:26:43.928: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 12 00:26:43.928: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 12 00:26:43.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get rc,svc -l name=update-demo --no-headers'
Jan 12 00:26:44.015: INFO: stderr: "No resources found in kubectl-2862 namespace.\n"
Jan 12 00:26:44.015: INFO: stdout: ""
Jan 12 00:26:44.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2862 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 12 00:26:44.089: INFO: stderr: ""
Jan 12 00:26:44.089: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:26:44.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2862" for this suite.

â€¢ [SLOW TEST:11.356 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":254,"skipped":4607,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:44.099: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6819
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 12 00:26:44.261: INFO: The status of Pod annotationupdate0003a64a-4d8e-4fc1-ae85-ac3a5c978a10 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:26:46.270: INFO: The status of Pod annotationupdate0003a64a-4d8e-4fc1-ae85-ac3a5c978a10 is Running (Ready = true)
Jan 12 00:26:46.827: INFO: Successfully updated pod "annotationupdate0003a64a-4d8e-4fc1-ae85-ac3a5c978a10"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 12 00:26:50.863: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6819" for this suite.

â€¢ [SLOW TEST:6.778 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":255,"skipped":4615,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:26:50.877: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2707.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2707.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2707.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2707.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 12 00:26:55.067: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.072: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.076: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.081: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.089: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.093: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.097: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.101: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2707.svc.cluster.local from pod dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01: the server could not find the requested resource (get pods dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01)
Jan 12 00:26:55.101: INFO: Lookups using dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2707.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2707.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2707.svc.cluster.local jessie_udp@dns-test-service-2.dns-2707.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2707.svc.cluster.local]

Jan 12 00:27:00.134: INFO: DNS probes using dns-2707/dns-test-e9aa5d9f-b8b6-458f-afa0-dbd3ad134a01 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 12 00:27:00.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2707" for this suite.

â€¢ [SLOW TEST:9.327 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":256,"skipped":4651,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:27:00.206: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9272
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:27:00.355: INFO: Creating deployment "test-recreate-deployment"
Jan 12 00:27:00.359: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jan 12 00:27:00.380: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jan 12 00:27:02.392: INFO: Waiting deployment "test-recreate-deployment" to complete
Jan 12 00:27:02.395: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 27, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 27, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 27, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 27, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-845d658455\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 12 00:27:04.402: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jan 12 00:27:04.410: INFO: Updating deployment test-recreate-deployment
Jan 12 00:27:04.410: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 12 00:27:04.518: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-9272  07518400-627d-48cf-9d56-a008869567a0 25778 2 2023-01-12 00:27:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0035d64f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-12 00:27:04 +0000 UTC,LastTransitionTime:2023-01-12 00:27:04 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2023-01-12 00:27:04 +0000 UTC,LastTransitionTime:2023-01-12 00:27:00 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jan 12 00:27:04.521: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-9272  5da9f961-7c8b-4ea8-9553-8e8fa7dc09f3 25776 1 2023-01-12 00:27:04 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 07518400-627d-48cf-9d56-a008869567a0 0xc0035d69e0 0xc0035d69e1}] []  [{kube-controller-manager Update apps/v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"07518400-627d-48cf-9d56-a008869567a0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0035d6a78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:27:04.521: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jan 12 00:27:04.521: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-9272  272ca68a-6c54-495e-990b-135d8b08b09c 25768 2 2023-01-12 00:27:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 07518400-627d-48cf-9d56-a008869567a0 0xc0035d68b7 0xc0035d68b8}] []  [{kube-controller-manager Update apps/v1 2023-01-12 00:27:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"07518400-627d-48cf-9d56-a008869567a0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0035d6968 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:27:04.524: INFO: Pod "test-recreate-deployment-cd8586fc7-mxbr8" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-mxbr8 test-recreate-deployment-cd8586fc7- deployment-9272  8bc6e3fc-c3fa-4497-94ab-0768b8de2097 25775 0 2023-01-12 00:27:04 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 5da9f961-7c8b-4ea8-9553-8e8fa7dc09f3 0xc0035d6f10 0xc0035d6f11}] []  [{kube-controller-manager Update v1 2023-01-12 00:27:04 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5da9f961-7c8b-4ea8-9553-8e8fa7dc09f3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9ngd9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9ngd9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:27:04 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 12 00:27:04.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9272" for this suite.
â€¢{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":257,"skipped":4681,"failed":0}
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:27:04.544: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-8997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Jan 12 00:27:04.685: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 12 00:28:04.725: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:28:04.731: INFO: Starting informer...
STEP: Starting pods...
Jan 12 00:28:04.951: INFO: Pod1 is running on k8s-agentpool1-12291382-vmss000001. Tainting Node
Jan 12 00:28:07.186: INFO: Pod2 is running on k8s-agentpool1-12291382-vmss000001. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Jan 12 00:28:12.916: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jan 12 00:28:32.955: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:28:32.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-8997" for this suite.

â€¢ [SLOW TEST:88.446 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":258,"skipped":4688,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:28:32.990: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5064
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-62e2ee91-9f3b-4579-8106-ac117b1fdf93 in namespace container-probe-5064
Jan 12 00:28:35.155: INFO: Started pod liveness-62e2ee91-9f3b-4579-8106-ac117b1fdf93 in namespace container-probe-5064
STEP: checking the pod's current state and verifying that restartCount is present
Jan 12 00:28:35.160: INFO: Initial restart count of pod liveness-62e2ee91-9f3b-4579-8106-ac117b1fdf93 is 0
Jan 12 00:28:55.263: INFO: Restart count of pod container-probe-5064/liveness-62e2ee91-9f3b-4579-8106-ac117b1fdf93 is now 1 (20.103117931s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 12 00:28:55.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5064" for this suite.

â€¢ [SLOW TEST:22.328 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":259,"skipped":4707,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:28:55.319: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6632
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Jan 12 00:28:55.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 create -f -'
Jan 12 00:28:55.704: INFO: stderr: ""
Jan 12 00:28:55.704: INFO: stdout: "pod/pause created\n"
Jan 12 00:28:55.704: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jan 12 00:28:55.704: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-6632" to be "running and ready"
Jan 12 00:28:55.734: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 30.684829ms
Jan 12 00:28:57.738: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.034392502s
Jan 12 00:28:57.738: INFO: Pod "pause" satisfied condition "running and ready"
Jan 12 00:28:57.738: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Jan 12 00:28:57.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 label pods pause testing-label=testing-label-value'
Jan 12 00:28:57.818: INFO: stderr: ""
Jan 12 00:28:57.818: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Jan 12 00:28:57.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 get pod pause -L testing-label'
Jan 12 00:28:57.885: INFO: stderr: ""
Jan 12 00:28:57.885: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Jan 12 00:28:57.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 label pods pause testing-label-'
Jan 12 00:28:57.963: INFO: stderr: ""
Jan 12 00:28:57.963: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Jan 12 00:28:57.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 get pod pause -L testing-label'
Jan 12 00:28:58.031: INFO: stderr: ""
Jan 12 00:28:58.031: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Jan 12 00:28:58.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 delete --grace-period=0 --force -f -'
Jan 12 00:28:58.116: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 12 00:28:58.116: INFO: stdout: "pod \"pause\" force deleted\n"
Jan 12 00:28:58.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 get rc,svc -l name=pause --no-headers'
Jan 12 00:28:58.203: INFO: stderr: "No resources found in kubectl-6632 namespace.\n"
Jan 12 00:28:58.204: INFO: stdout: ""
Jan 12 00:28:58.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-6632 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 12 00:28:58.273: INFO: stderr: ""
Jan 12 00:28:58.273: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:28:58.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6632" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":260,"skipped":4755,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:28:58.283: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:28:58.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3354" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":261,"skipped":4785,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:28:58.479: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-5fbe8595-046f-4e34-9376-63d82812891e
STEP: Creating a pod to test consume secrets
Jan 12 00:28:58.636: INFO: Waiting up to 5m0s for pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853" in namespace "secrets-9565" to be "Succeeded or Failed"
Jan 12 00:28:58.644: INFO: Pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853": Phase="Pending", Reason="", readiness=false. Elapsed: 8.433291ms
Jan 12 00:29:00.652: INFO: Pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015753702s
Jan 12 00:29:02.664: INFO: Pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027741024s
Jan 12 00:29:04.674: INFO: Pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.038245637s
STEP: Saw pod success
Jan 12 00:29:04.674: INFO: Pod "pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853" satisfied condition "Succeeded or Failed"
Jan 12 00:29:04.679: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853 container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:29:04.726: INFO: Waiting for pod pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853 to disappear
Jan 12 00:29:04.728: INFO: Pod pod-secrets-f1e9bf56-e32c-408c-8ff9-d91bf9afc853 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:29:04.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9565" for this suite.

â€¢ [SLOW TEST:6.256 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":262,"skipped":4787,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:29:04.736: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3815
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-a4a8a423-1864-494d-bad6-923ddce88a32 in namespace container-probe-3815
Jan 12 00:29:06.919: INFO: Started pod liveness-a4a8a423-1864-494d-bad6-923ddce88a32 in namespace container-probe-3815
STEP: checking the pod's current state and verifying that restartCount is present
Jan 12 00:29:06.924: INFO: Initial restart count of pod liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is 0
Jan 12 00:29:27.027: INFO: Restart count of pod container-probe-3815/liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is now 1 (20.103157151s elapsed)
Jan 12 00:29:47.121: INFO: Restart count of pod container-probe-3815/liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is now 2 (40.197103065s elapsed)
Jan 12 00:30:07.208: INFO: Restart count of pod container-probe-3815/liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is now 3 (1m0.284128942s elapsed)
Jan 12 00:30:27.283: INFO: Restart count of pod container-probe-3815/liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is now 4 (1m20.359121471s elapsed)
Jan 12 00:31:31.545: INFO: Restart count of pod container-probe-3815/liveness-a4a8a423-1864-494d-bad6-923ddce88a32 is now 5 (2m24.620986061s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 12 00:31:31.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3815" for this suite.

â€¢ [SLOW TEST:146.835 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":4816,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:31:31.573: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-4420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Jan 12 00:31:31.741: INFO: created test-podtemplate-1
Jan 12 00:31:31.747: INFO: created test-podtemplate-2
Jan 12 00:31:31.751: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Jan 12 00:31:31.754: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Jan 12 00:31:31.766: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 12 00:31:31.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-4420" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":264,"skipped":4828,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:31:31.778: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-3100
STEP: Creating secret with name secret-test-3adb7dbb-a9f3-42b2-a041-c1b52a37d4fd
STEP: Creating a pod to test consume secrets
Jan 12 00:31:32.062: INFO: Waiting up to 5m0s for pod "pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4" in namespace "secrets-1647" to be "Succeeded or Failed"
Jan 12 00:31:32.072: INFO: Pod "pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4": Phase="Pending", Reason="", readiness=false. Elapsed: 10.099188ms
Jan 12 00:31:34.082: INFO: Pod "pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01974015s
Jan 12 00:31:36.095: INFO: Pod "pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032732582s
STEP: Saw pod success
Jan 12 00:31:36.095: INFO: Pod "pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4" satisfied condition "Succeeded or Failed"
Jan 12 00:31:36.099: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4 container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:31:36.158: INFO: Waiting for pod pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4 to disappear
Jan 12 00:31:36.167: INFO: Pod pod-secrets-38a3be98-4907-4996-b57f-bb9645de80e4 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:31:36.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1647" for this suite.
STEP: Destroying namespace "secret-namespace-3100" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":4839,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:31:36.188: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-fa91e62d-f1dd-4816-990c-96f3dc86c17f
STEP: Creating a pod to test consume configMaps
Jan 12 00:31:36.352: INFO: Waiting up to 5m0s for pod "pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0" in namespace "configmap-3859" to be "Succeeded or Failed"
Jan 12 00:31:36.359: INFO: Pod "pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.458577ms
Jan 12 00:31:38.374: INFO: Pod "pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022240192s
Jan 12 00:31:40.380: INFO: Pod "pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027936987s
STEP: Saw pod success
Jan 12 00:31:40.380: INFO: Pod "pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0" satisfied condition "Succeeded or Failed"
Jan 12 00:31:40.384: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0 container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:31:40.420: INFO: Waiting for pod pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0 to disappear
Jan 12 00:31:40.423: INFO: Pod pod-configmaps-22590e03-2cd7-4554-8c42-989c3bc71ef0 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:31:40.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3859" for this suite.
â€¢{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":266,"skipped":4930,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:31:40.439: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-415
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-415
STEP: creating service affinity-clusterip-transition in namespace services-415
STEP: creating replication controller affinity-clusterip-transition in namespace services-415
I0112 00:31:40.620630      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-415, replica count: 3
I0112 00:31:43.671397      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:31:46.671691      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 12 00:31:46.684: INFO: Creating new exec pod
Jan 12 00:31:49.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-415 exec execpod-affinityrwzl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Jan 12 00:31:49.934: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jan 12 00:31:49.934: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:31:49.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-415 exec execpod-affinityrwzl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.97.28 80'
Jan 12 00:31:50.126: INFO: stderr: "+ nc -v -t -w 2 10.0.97.28 80\n+ echo hostName\nConnection to 10.0.97.28 80 port [tcp/http] succeeded!\n"
Jan 12 00:31:50.126: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:31:50.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-415 exec execpod-affinityrwzl6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.97.28:80/ ; done'
Jan 12 00:31:50.434: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n"
Jan 12 00:31:50.434: INFO: stdout: "\naffinity-clusterip-transition-qzzz4\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-qzzz4\naffinity-clusterip-transition-dbsx9\naffinity-clusterip-transition-qzzz4\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-dbsx9\naffinity-clusterip-transition-dbsx9\naffinity-clusterip-transition-qzzz4\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-dbsx9\naffinity-clusterip-transition-dbsx9\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx"
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-qzzz4
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-qzzz4
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-dbsx9
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-qzzz4
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-dbsx9
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-dbsx9
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-qzzz4
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-dbsx9
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-dbsx9
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.434: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-415 exec execpod-affinityrwzl6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.97.28:80/ ; done'
Jan 12 00:31:50.761: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.97.28:80/\n"
Jan 12 00:31:50.761: INFO: stdout: "\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx\naffinity-clusterip-transition-l78tx"
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Received response from host: affinity-clusterip-transition-l78tx
Jan 12 00:31:50.761: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-415, will wait for the garbage collector to delete the pods
Jan 12 00:31:50.838: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.923866ms
Jan 12 00:31:50.939: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.080328ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:31:53.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-415" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:12.896 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":267,"skipped":4967,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:31:53.335: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5546
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-5546
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5546 to expose endpoints map[]
Jan 12 00:31:53.508: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jan 12 00:31:54.521: INFO: successfully validated that service multi-endpoint-test in namespace services-5546 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5546
Jan 12 00:31:54.543: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:31:56.551: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5546 to expose endpoints map[pod1:[100]]
Jan 12 00:31:56.565: INFO: successfully validated that service multi-endpoint-test in namespace services-5546 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-5546
Jan 12 00:31:56.574: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:31:58.584: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5546 to expose endpoints map[pod1:[100] pod2:[101]]
Jan 12 00:31:58.602: INFO: successfully validated that service multi-endpoint-test in namespace services-5546 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Jan 12 00:31:58.602: INFO: Creating new exec pod
Jan 12 00:32:01.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5546 exec execpodlmq2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Jan 12 00:32:01.832: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:32:01.832: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:32:01.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5546 exec execpodlmq2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.57.242 80'
Jan 12 00:32:02.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.57.242 80\nConnection to 10.0.57.242 80 port [tcp/http] succeeded!\n"
Jan 12 00:32:02.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:32:02.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5546 exec execpodlmq2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Jan 12 00:32:02.204: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jan 12 00:32:02.204: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 12 00:32:02.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-5546 exec execpodlmq2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.57.242 81'
Jan 12 00:32:02.393: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.57.242 81\nConnection to 10.0.57.242 81 port [tcp/*] succeeded!\n"
Jan 12 00:32:02.393: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-5546
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5546 to expose endpoints map[pod2:[101]]
Jan 12 00:32:02.456: INFO: successfully validated that service multi-endpoint-test in namespace services-5546 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-5546
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5546 to expose endpoints map[]
Jan 12 00:32:03.495: INFO: successfully validated that service multi-endpoint-test in namespace services-5546 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:32:03.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5546" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:10.198 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":268,"skipped":4972,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:32:03.536: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8331
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 12 00:32:03.710: INFO: The status of Pod annotationupdatefe62b7a7-551b-4275-9d2f-4b5344fab01b is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:32:05.718: INFO: The status of Pod annotationupdatefe62b7a7-551b-4275-9d2f-4b5344fab01b is Running (Ready = true)
Jan 12 00:32:06.296: INFO: Successfully updated pod "annotationupdatefe62b7a7-551b-4275-9d2f-4b5344fab01b"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:32:10.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8331" for this suite.

â€¢ [SLOW TEST:6.803 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":269,"skipped":4988,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:32:10.340: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4718
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 12 00:32:10.497: INFO: Waiting up to 5m0s for pod "pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4" in namespace "emptydir-4718" to be "Succeeded or Failed"
Jan 12 00:32:10.500: INFO: Pod "pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.969028ms
Jan 12 00:32:12.510: INFO: Pod "pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0133004s
Jan 12 00:32:14.520: INFO: Pod "pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023074066s
STEP: Saw pod success
Jan 12 00:32:14.520: INFO: Pod "pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4" satisfied condition "Succeeded or Failed"
Jan 12 00:32:14.524: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4 container test-container: <nil>
STEP: delete the pod
Jan 12 00:32:14.567: INFO: Waiting for pod pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4 to disappear
Jan 12 00:32:14.572: INFO: Pod pod-1c9f69d1-f517-4672-8454-3b8f80ccd8f4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:32:14.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4718" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":270,"skipped":5000,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:32:14.589: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-1538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 12 00:32:31.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1538" for this suite.

â€¢ [SLOW TEST:17.223 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":271,"skipped":5007,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:32:31.813: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7556
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:32:32.187: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 12 00:32:34.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 32, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 32, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 32, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 32, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:32:37.231: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:32:37.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7556" for this suite.
STEP: Destroying namespace "webhook-7556-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:5.575 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":272,"skipped":5013,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:32:37.392: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6718
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 12 00:33:05.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6718" for this suite.

â€¢ [SLOW TEST:28.240 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":273,"skipped":5069,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:05.634: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-883
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:33:06.239: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 12 00:33:08.265: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 12, 0, 33, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 33, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 12, 0, 33, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 12, 0, 33, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:33:11.289: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:33:11.302: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-883" for this suite.
STEP: Destroying namespace "webhook-883-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:5.752 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":274,"skipped":5075,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:11.387: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3120
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Jan 12 00:33:11.536: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:33:13.882: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:33:24.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3120" for this suite.

â€¢ [SLOW TEST:13.371 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":275,"skipped":5105,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:24.759: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-6051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:33:24.908: INFO: Creating pod...
Jan 12 00:33:26.937: INFO: Creating service...
Jan 12 00:33:26.959: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/DELETE
Jan 12 00:33:26.974: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 12 00:33:26.974: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/GET
Jan 12 00:33:26.978: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 12 00:33:26.978: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/HEAD
Jan 12 00:33:26.982: INFO: http.Client request:HEAD | StatusCode:200
Jan 12 00:33:26.982: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/OPTIONS
Jan 12 00:33:26.988: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 12 00:33:26.988: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/PATCH
Jan 12 00:33:26.997: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 12 00:33:26.997: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/POST
Jan 12 00:33:27.002: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 12 00:33:27.002: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/pods/agnhost/proxy/some/path/with/PUT
Jan 12 00:33:27.008: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 12 00:33:27.008: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/DELETE
Jan 12 00:33:27.013: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 12 00:33:27.014: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/GET
Jan 12 00:33:27.019: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 12 00:33:27.019: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/HEAD
Jan 12 00:33:27.024: INFO: http.Client request:HEAD | StatusCode:200
Jan 12 00:33:27.024: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/OPTIONS
Jan 12 00:33:27.031: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 12 00:33:27.031: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/PATCH
Jan 12 00:33:27.042: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 12 00:33:27.042: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/POST
Jan 12 00:33:27.047: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 12 00:33:27.047: INFO: Starting http.Client for https://10.0.0.1:443/api/v1/namespaces/proxy-6051/services/test-service/proxy/some/path/with/PUT
Jan 12 00:33:27.052: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 12 00:33:27.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6051" for this suite.
â€¢{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":276,"skipped":5164,"failed":0}
SSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:27.064: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2020
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-39561600-9dd3-4519-b2b4-3eb98ac11c9e
STEP: Creating a pod to test consume secrets
Jan 12 00:33:27.212: INFO: Waiting up to 5m0s for pod "pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25" in namespace "secrets-2020" to be "Succeeded or Failed"
Jan 12 00:33:27.225: INFO: Pod "pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25": Phase="Pending", Reason="", readiness=false. Elapsed: 13.249441ms
Jan 12 00:33:29.235: INFO: Pod "pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023291102s
Jan 12 00:33:31.244: INFO: Pod "pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031716945s
STEP: Saw pod success
Jan 12 00:33:31.244: INFO: Pod "pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25" satisfied condition "Succeeded or Failed"
Jan 12 00:33:31.247: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25 container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:33:31.269: INFO: Waiting for pod pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25 to disappear
Jan 12 00:33:31.272: INFO: Pod pod-secrets-14e64a58-7265-4bac-943a-a57b0cdc0d25 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:33:31.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2020" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5168,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:31.283: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4121
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Jan 12 00:33:31.459: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27270 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:33:31.459: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27271 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:33:31.459: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27272 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Jan 12 00:33:41.487: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27322 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:33:41.487: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27323 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:33:41.487: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4121  6717703e-98bc-4392-9827-656318935b33 27324 0 2023-01-12 00:33:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-12 00:33:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 12 00:33:41.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4121" for this suite.

â€¢ [SLOW TEST:10.213 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":278,"skipped":5176,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:41.496: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 12 00:33:52.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6590" for this suite.

â€¢ [SLOW TEST:11.235 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":279,"skipped":5240,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:52.732: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-552
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:33:52.890: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e" in namespace "projected-552" to be "Succeeded or Failed"
Jan 12 00:33:52.902: INFO: Pod "downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e": Phase="Pending", Reason="", readiness=false. Elapsed: 11.584116ms
Jan 12 00:33:54.912: INFO: Pod "downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021337104s
Jan 12 00:33:56.922: INFO: Pod "downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0318711s
STEP: Saw pod success
Jan 12 00:33:56.922: INFO: Pod "downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e" satisfied condition "Succeeded or Failed"
Jan 12 00:33:56.926: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e container client-container: <nil>
STEP: delete the pod
Jan 12 00:33:56.975: INFO: Waiting for pod downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e to disappear
Jan 12 00:33:56.978: INFO: Pod downwardapi-volume-cd8beeee-3427-43df-b2e6-2da8583aa54e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:33:56.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-552" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":280,"skipped":5261,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:33:56.989: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7697
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Jan 12 00:33:57.155: INFO: Waiting up to 5m0s for pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1" in namespace "emptydir-7697" to be "Succeeded or Failed"
Jan 12 00:33:57.170: INFO: Pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1": Phase="Pending", Reason="", readiness=false. Elapsed: 14.449945ms
Jan 12 00:33:59.178: INFO: Pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1": Phase="Running", Reason="", readiness=true. Elapsed: 2.022324511s
Jan 12 00:34:01.185: INFO: Pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1": Phase="Running", Reason="", readiness=false. Elapsed: 4.029725263s
Jan 12 00:34:03.190: INFO: Pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035278396s
STEP: Saw pod success
Jan 12 00:34:03.191: INFO: Pod "pod-805c74f9-365a-4423-bfd2-89cefa8892e1" satisfied condition "Succeeded or Failed"
Jan 12 00:34:03.194: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-805c74f9-365a-4423-bfd2-89cefa8892e1 container test-container: <nil>
STEP: delete the pod
Jan 12 00:34:03.220: INFO: Waiting for pod pod-805c74f9-365a-4423-bfd2-89cefa8892e1 to disappear
Jan 12 00:34:03.224: INFO: Pod pod-805c74f9-365a-4423-bfd2-89cefa8892e1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:34:03.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7697" for this suite.

â€¢ [SLOW TEST:6.247 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5370,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:34:03.235: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 12 00:34:06.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4159" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":282,"skipped":5374,"failed":0}
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:34:06.244: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:34:06.419: INFO: The status of Pod busybox-readonly-fs1dcb5874-6470-49c6-9a2c-5709550b6e3d is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:34:08.430: INFO: The status of Pod busybox-readonly-fs1dcb5874-6470-49c6-9a2c-5709550b6e3d is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:34:10.437: INFO: The status of Pod busybox-readonly-fs1dcb5874-6470-49c6-9a2c-5709550b6e3d is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 12 00:34:10.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8712" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5380,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:34:10.459: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Jan 12 00:34:10.613: INFO: observed Pod pod-test in namespace pods-3157 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 12 00:34:10.613: INFO: observed Pod pod-test in namespace pods-3157 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC  }]
Jan 12 00:34:10.629: INFO: observed Pod pod-test in namespace pods-3157 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC  }]
Jan 12 00:34:11.481: INFO: Found Pod pod-test in namespace pods-3157 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-12 00:34:10 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Jan 12 00:34:11.527: INFO: observed event type MODIFIED
Jan 12 00:34:11.694: INFO: observed event type MODIFIED
Jan 12 00:34:14.504: INFO: observed event type MODIFIED
Jan 12 00:34:14.509: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 12 00:34:14.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3157" for this suite.
â€¢{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":284,"skipped":5442,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:34:14.547: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-95718f05-b382-46c0-9681-52355e6050f9
STEP: Creating a pod to test consume secrets
Jan 12 00:34:14.710: INFO: Waiting up to 5m0s for pod "pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb" in namespace "secrets-2296" to be "Succeeded or Failed"
Jan 12 00:34:14.713: INFO: Pod "pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.137733ms
Jan 12 00:34:16.722: INFO: Pod "pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012282021s
Jan 12 00:34:18.732: INFO: Pod "pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021686506s
STEP: Saw pod success
Jan 12 00:34:18.732: INFO: Pod "pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb" satisfied condition "Succeeded or Failed"
Jan 12 00:34:18.740: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:34:18.759: INFO: Waiting for pod pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb to disappear
Jan 12 00:34:18.763: INFO: Pod pod-secrets-8e1cc37b-1a5f-4adb-b6e4-d7960b8cd1cb no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:34:18.763: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2296" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5451,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:34:18.772: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Jan 12 00:36:19.470: INFO: Successfully updated pod "var-expansion-bada7b68-790f-4172-bb98-97db4843471d"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Jan 12 00:36:21.488: INFO: Deleting pod "var-expansion-bada7b68-790f-4172-bb98-97db4843471d" in namespace "var-expansion-3938"
Jan 12 00:36:21.494: INFO: Wait up to 5m0s for pod "var-expansion-bada7b68-790f-4172-bb98-97db4843471d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 12 00:36:53.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3938" for this suite.

â€¢ [SLOW TEST:154.750 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":286,"skipped":5470,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:36:53.523: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 12 00:36:53.679: INFO: Waiting up to 5m0s for pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be" in namespace "emptydir-6992" to be "Succeeded or Failed"
Jan 12 00:36:53.691: INFO: Pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be": Phase="Pending", Reason="", readiness=false. Elapsed: 12.041018ms
Jan 12 00:36:55.698: INFO: Pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018784404s
Jan 12 00:36:57.708: INFO: Pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02849497s
Jan 12 00:36:59.713: INFO: Pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.034043796s
STEP: Saw pod success
Jan 12 00:36:59.713: INFO: Pod "pod-050ece3c-31c0-47cc-aab1-9630a72dd0be" satisfied condition "Succeeded or Failed"
Jan 12 00:36:59.716: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-050ece3c-31c0-47cc-aab1-9630a72dd0be container test-container: <nil>
STEP: delete the pod
Jan 12 00:36:59.770: INFO: Waiting for pod pod-050ece3c-31c0-47cc-aab1-9630a72dd0be to disappear
Jan 12 00:36:59.773: INFO: Pod pod-050ece3c-31c0-47cc-aab1-9630a72dd0be no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:36:59.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6992" for this suite.

â€¢ [SLOW TEST:6.258 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5496,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:36:59.785: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4387
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 12 00:36:59.935: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:37:04.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4387" for this suite.

â€¢ [SLOW TEST:5.078 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":288,"skipped":5540,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:37:04.863: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5251
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 12 00:37:05.030: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:37:08.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5251" for this suite.
â€¢{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":289,"skipped":5555,"failed":0}
SSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:37:08.869: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-6178
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Jan 12 00:37:09.054: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 12 00:37:09.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-6178" for this suite.
â€¢{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":290,"skipped":5559,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:37:09.085: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5839
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-3c7dc4b5-60f1-41fc-9808-7fb273dc1b35
STEP: Creating a pod to test consume secrets
Jan 12 00:37:09.236: INFO: Waiting up to 5m0s for pod "pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b" in namespace "secrets-5839" to be "Succeeded or Failed"
Jan 12 00:37:09.239: INFO: Pod "pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.642335ms
Jan 12 00:37:11.244: INFO: Pod "pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008215043s
Jan 12 00:37:13.253: INFO: Pod "pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01779028s
STEP: Saw pod success
Jan 12 00:37:13.254: INFO: Pod "pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b" satisfied condition "Succeeded or Failed"
Jan 12 00:37:13.258: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:37:13.309: INFO: Waiting for pod pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b to disappear
Jan 12 00:37:13.315: INFO: Pod pod-secrets-2dfebdaf-02f2-45f0-afcb-621f59f56e4b no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:37:13.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5839" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5576,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:37:13.325: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 12 00:37:13.468: INFO: Waiting up to 5m0s for pod "downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843" in namespace "downward-api-3417" to be "Succeeded or Failed"
Jan 12 00:37:13.477: INFO: Pod "downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843": Phase="Pending", Reason="", readiness=false. Elapsed: 8.707079ms
Jan 12 00:37:15.482: INFO: Pod "downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013962778s
Jan 12 00:37:17.498: INFO: Pod "downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029624771s
STEP: Saw pod success
Jan 12 00:37:17.498: INFO: Pod "downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843" satisfied condition "Succeeded or Failed"
Jan 12 00:37:17.502: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843 container dapi-container: <nil>
STEP: delete the pod
Jan 12 00:37:17.533: INFO: Waiting for pod downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843 to disappear
Jan 12 00:37:17.536: INFO: Pod downward-api-4f26cb54-6a5f-4476-8d72-626b9c84d843 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 12 00:37:17.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3417" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":292,"skipped":5597,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:37:17.548: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5898
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5898
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 12 00:37:17.748: INFO: Found 0 stateful pods, waiting for 3
Jan 12 00:37:27.756: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:37:27.756: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:37:27.756: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:37:27.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-5898 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:37:28.050: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:37:28.050: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:37:28.050: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 12 00:37:38.091: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Jan 12 00:37:48.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-5898 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:37:48.320: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:37:48.320: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:37:48.320: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 12 00:38:08.363: INFO: Waiting for StatefulSet statefulset-5898/ss2 to complete update
STEP: Rolling back to a previous revision
Jan 12 00:38:18.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-5898 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 12 00:38:18.587: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 12 00:38:18.587: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 12 00:38:18.587: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 12 00:38:28.630: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Jan 12 00:38:38.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=statefulset-5898 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 12 00:38:38.844: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 12 00:38:38.844: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 12 00:38:38.844: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:38:48.877: INFO: Deleting all statefulset in ns statefulset-5898
Jan 12 00:38:48.880: INFO: Scaling statefulset ss2 to 0
Jan 12 00:38:58.903: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:38:58.906: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:38:58.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5898" for this suite.

â€¢ [SLOW TEST:101.400 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":293,"skipped":5621,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:38:58.948: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 12 00:38:59.103: INFO: Waiting up to 5m0s for pod "downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0" in namespace "downward-api-110" to be "Succeeded or Failed"
Jan 12 00:38:59.107: INFO: Pod "downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.505334ms
Jan 12 00:39:01.122: INFO: Pod "downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018541121s
Jan 12 00:39:03.131: INFO: Pod "downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028041455s
STEP: Saw pod success
Jan 12 00:39:03.131: INFO: Pod "downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0" satisfied condition "Succeeded or Failed"
Jan 12 00:39:03.134: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0 container dapi-container: <nil>
STEP: delete the pod
Jan 12 00:39:03.189: INFO: Waiting for pod downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0 to disappear
Jan 12 00:39:03.201: INFO: Pod downward-api-a05805cb-3083-41d9-b5f3-42757588a9c0 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 12 00:39:03.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-110" for this suite.
â€¢{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":294,"skipped":5631,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:03.212: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:39:03.779: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:39:06.812: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:39:06.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2126" for this suite.
STEP: Destroying namespace "webhook-2126-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
â€¢{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":295,"skipped":5636,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:07.042: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7888
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:39:09.277: INFO: Deleting pod "var-expansion-bf879fc1-d48a-4829-a439-5559aa3320cc" in namespace "var-expansion-7888"
Jan 12 00:39:09.282: INFO: Wait up to 5m0s for pod "var-expansion-bf879fc1-d48a-4829-a439-5559aa3320cc" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 12 00:39:11.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7888" for this suite.
â€¢{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":296,"skipped":5645,"failed":0}
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:11.315: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 12 00:39:11.515: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-677" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":297,"skipped":5652,"failed":0}
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:11.558: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5604
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 12 00:39:11.701: INFO: PodSpec: initContainers in spec.initContainers
Jan 12 00:39:55.261: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-7d8a52c1-5408-444e-8c9f-67f50d9a3fb8", GenerateName:"", Namespace:"init-container-5604", SelfLink:"", UID:"ff164d7f-ec68-4641-b312-b1c4db3f5bb5", ResourceVersion:"29035", Generation:0, CreationTimestamp:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"701055140"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002fdcfd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 12, 0, 39, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002fdd008), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s94c4", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002349260), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s94c4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s94c4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s94c4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0033d38a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-agentpool1-12291382-vmss000001", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0023c19d0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0033d3920)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0033d3940)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0033d3948), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0033d394c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc002786720), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.240.0.63", PodIP:"10.240.0.68", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.240.0.68"}}, StartTime:time.Date(2023, time.January, 12, 0, 39, 11, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0023c1ab0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0023c1b20)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://39ad8b529dc4e0b213d13c788e64add8878684a75c55a8d3c671bf7484832bf4", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0023492e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0023492c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc0033d39cf)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:39:55.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5604" for this suite.

â€¢ [SLOW TEST:43.717 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":298,"skipped":5658,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:55.275: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-eae346f5-a42d-4893-8c23-6dd43be7fbfa
STEP: Creating a pod to test consume secrets
Jan 12 00:39:55.424: INFO: Waiting up to 5m0s for pod "pod-secrets-23338c60-3c16-4105-a2bf-47283644b922" in namespace "secrets-3126" to be "Succeeded or Failed"
Jan 12 00:39:55.433: INFO: Pod "pod-secrets-23338c60-3c16-4105-a2bf-47283644b922": Phase="Pending", Reason="", readiness=false. Elapsed: 8.963886ms
Jan 12 00:39:57.442: INFO: Pod "pod-secrets-23338c60-3c16-4105-a2bf-47283644b922": Phase="Running", Reason="", readiness=false. Elapsed: 2.018008566s
Jan 12 00:39:59.451: INFO: Pod "pod-secrets-23338c60-3c16-4105-a2bf-47283644b922": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026836217s
STEP: Saw pod success
Jan 12 00:39:59.451: INFO: Pod "pod-secrets-23338c60-3c16-4105-a2bf-47283644b922" satisfied condition "Succeeded or Failed"
Jan 12 00:39:59.455: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-secrets-23338c60-3c16-4105-a2bf-47283644b922 container secret-env-test: <nil>
STEP: delete the pod
Jan 12 00:39:59.501: INFO: Waiting for pod pod-secrets-23338c60-3c16-4105-a2bf-47283644b922 to disappear
Jan 12 00:39:59.505: INFO: Pod pod-secrets-23338c60-3c16-4105-a2bf-47283644b922 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:39:59.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3126" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5679,"failed":0}
S
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:59.517: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-2817
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:39:59.674: INFO: Endpoints addresses: [10.255.255.5] , ports: [443]
Jan 12 00:39:59.674: INFO: EndpointSlices addresses: [10.255.255.5] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 12 00:39:59.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-2817" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":300,"skipped":5680,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:39:59.689: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-6802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 12 00:39:59.873: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:39:59.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:39:59.876: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:40:00.886: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:00.890: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 12 00:40:00.890: INFO: Node k8s-agentpool1-12291382-vmss000001 is running 0 daemon pod, expected 1
Jan 12 00:40:01.885: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:01.889: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 12 00:40:01.889: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Jan 12 00:40:01.913: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:01.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 12 00:40:01.917: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:40:02.924: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:02.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 12 00:40:02.928: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:40:03.925: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:03.929: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 12 00:40:03.929: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:40:04.926: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:40:04.938: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 12 00:40:04.938: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6802, will wait for the garbage collector to delete the pods
Jan 12 00:40:05.000: INFO: Deleting DaemonSet.extensions daemon-set took: 6.45876ms
Jan 12 00:40:05.102: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.219344ms
Jan 12 00:40:07.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:40:07.911: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 12 00:40:07.914: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29193"},"items":null}

Jan 12 00:40:07.917: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29193"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:40:07.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6802" for this suite.

â€¢ [SLOW TEST:8.257 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":301,"skipped":5701,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:40:07.946: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-6725
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Jan 12 00:40:08.412: INFO: Pod name wrapped-volume-race-666a4d55-47a5-4557-9a2c-73d7daac65a3: Found 1 pods out of 5
Jan 12 00:40:13.427: INFO: Pod name wrapped-volume-race-666a4d55-47a5-4557-9a2c-73d7daac65a3: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-666a4d55-47a5-4557-9a2c-73d7daac65a3 in namespace emptydir-wrapper-6725, will wait for the garbage collector to delete the pods
Jan 12 00:40:23.521: INFO: Deleting ReplicationController wrapped-volume-race-666a4d55-47a5-4557-9a2c-73d7daac65a3 took: 11.896713ms
Jan 12 00:40:23.622: INFO: Terminating ReplicationController wrapped-volume-race-666a4d55-47a5-4557-9a2c-73d7daac65a3 pods took: 101.200156ms
STEP: Creating RC which spawns configmap-volume pods
Jan 12 00:40:27.849: INFO: Pod name wrapped-volume-race-7d0c9661-d0e5-4eec-8a1f-2c87da2a1e8e: Found 0 pods out of 5
Jan 12 00:40:32.861: INFO: Pod name wrapped-volume-race-7d0c9661-d0e5-4eec-8a1f-2c87da2a1e8e: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-7d0c9661-d0e5-4eec-8a1f-2c87da2a1e8e in namespace emptydir-wrapper-6725, will wait for the garbage collector to delete the pods
Jan 12 00:40:44.963: INFO: Deleting ReplicationController wrapped-volume-race-7d0c9661-d0e5-4eec-8a1f-2c87da2a1e8e took: 8.670683ms
Jan 12 00:40:45.064: INFO: Terminating ReplicationController wrapped-volume-race-7d0c9661-d0e5-4eec-8a1f-2c87da2a1e8e pods took: 100.410059ms
STEP: Creating RC which spawns configmap-volume pods
Jan 12 00:40:48.798: INFO: Pod name wrapped-volume-race-a86f2d0d-79a8-44fa-b427-4004dacbbfef: Found 0 pods out of 5
Jan 12 00:40:53.812: INFO: Pod name wrapped-volume-race-a86f2d0d-79a8-44fa-b427-4004dacbbfef: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-a86f2d0d-79a8-44fa-b427-4004dacbbfef in namespace emptydir-wrapper-6725, will wait for the garbage collector to delete the pods
Jan 12 00:41:05.942: INFO: Deleting ReplicationController wrapped-volume-race-a86f2d0d-79a8-44fa-b427-4004dacbbfef took: 30.606693ms
Jan 12 00:41:06.143: INFO: Terminating ReplicationController wrapped-volume-race-a86f2d0d-79a8-44fa-b427-4004dacbbfef pods took: 200.994926ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 12 00:41:10.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-6725" for this suite.

â€¢ [SLOW TEST:62.587 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":302,"skipped":5712,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:10.533: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Jan 12 00:41:10.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-5141 cluster-info'
Jan 12 00:41:10.760: INFO: stderr: ""
Jan 12 00:41:10.760: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.0.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:41:10.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5141" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":303,"skipped":5720,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:10.771: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2823
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 12 00:41:40.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2823" for this suite.

â€¢ [SLOW TEST:29.580 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5739,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:40.351: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4174
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:41:40.517: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jan 12 00:41:40.530: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 12 00:41:45.541: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 12 00:41:45.541: INFO: Creating deployment "test-rolling-update-deployment"
Jan 12 00:41:45.547: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jan 12 00:41:45.565: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jan 12 00:41:47.576: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jan 12 00:41:47.579: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 12 00:41:47.586: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-4174  a259d528-9c5d-458a-b0d8-dae9c3c3a0e6 30325 1 2023-01-12 00:41:45 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2023-01-12 00:41:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:41:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b507d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-12 00:41:45 +0000 UTC,LastTransitionTime:2023-01-12 00:41:45 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2023-01-12 00:41:46 +0000 UTC,LastTransitionTime:2023-01-12 00:41:45 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 12 00:41:47.589: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-4174  550332a1-08cb-4d27-aacb-49d959a83f03 30315 1 2023-01-12 00:41:45 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment a259d528-9c5d-458a-b0d8-dae9c3c3a0e6 0xc0036d68c7 0xc0036d68c8}] []  [{kube-controller-manager Update apps/v1 2023-01-12 00:41:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a259d528-9c5d-458a-b0d8-dae9c3c3a0e6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:41:46 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036d6da8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:41:47.590: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jan 12 00:41:47.590: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-4174  73fc116a-deb2-42cc-a953-bbb871225994 30324 2 2023-01-12 00:41:40 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment a259d528-9c5d-458a-b0d8-dae9c3c3a0e6 0xc0036d6447 0xc0036d6448}] []  [{e2e.test Update apps/v1 2023-01-12 00:41:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:41:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a259d528-9c5d-458a-b0d8-dae9c3c3a0e6\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:41:46 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0036d6798 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:41:47.593: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-vjbl2" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-vjbl2 test-rolling-update-deployment-67c8f74c6c- deployment-4174  fecfa780-a050-47fd-8225-3ac0648baa1e 30314 0 2023-01-12 00:41:45 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c 550332a1-08cb-4d27-aacb-49d959a83f03 0xc002b50bb7 0xc002b50bb8}] []  [{kube-controller-manager Update v1 2023-01-12 00:41:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"550332a1-08cb-4d27-aacb-49d959a83f03\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:41:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.97\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-24zjp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-24zjp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:41:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:41:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:41:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:41:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.97,StartTime:2023-01-12 00:41:45 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:41:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://e6555ef6b54b1ff8e0ad4fc7fd036f4cf32b25ecfbf45b42dc2d494839314fb8,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.97,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 12 00:41:47.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4174" for this suite.

â€¢ [SLOW TEST:7.252 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":305,"skipped":5756,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:47.604: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Jan 12 00:41:47.763: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Jan 12 00:41:47.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-472" for this suite.
â€¢{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":306,"skipped":5780,"failed":0}
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:47.780: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4486
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:41:47.932: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db" in namespace "security-context-test-4486" to be "Succeeded or Failed"
Jan 12 00:41:47.942: INFO: Pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db": Phase="Pending", Reason="", readiness=false. Elapsed: 9.901758ms
Jan 12 00:41:49.946: INFO: Pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014156309s
Jan 12 00:41:51.955: INFO: Pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023317942s
Jan 12 00:41:51.955: INFO: Pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db" satisfied condition "Succeeded or Failed"
Jan 12 00:41:51.986: INFO: Got logs for pod "busybox-privileged-false-c57022b0-f183-442b-a2b9-4d11de5010db": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 12 00:41:51.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4486" for this suite.
â€¢{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5787,"failed":0}

------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:51.997: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 12 00:41:52.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3992 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 12 00:41:52.236: INFO: stderr: ""
Jan 12 00:41:52.236: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Jan 12 00:41:57.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3992 get pod e2e-test-httpd-pod -o json'
Jan 12 00:41:57.366: INFO: stderr: ""
Jan 12 00:41:57.366: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2023-01-12T00:41:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3992\",\n        \"resourceVersion\": \"30406\",\n        \"uid\": \"a9e14f85-53d1-4188-b729-5e0f8faa5329\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bkbds\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-agentpool1-12291382-vmss000001\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-bkbds\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-12T00:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-12T00:41:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-12T00:41:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-12T00:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://beb0473d80c779ce6685a1bcf2fdc88effe6313505f7b868ab5d4c6a92d7840d\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-12T00:41:53Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.240.0.63\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.240.0.66\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.240.0.66\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-12T00:41:52Z\"\n    }\n}\n"
STEP: replace the image in the pod
Jan 12 00:41:57.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3992 replace -f -'
Jan 12 00:41:57.605: INFO: stderr: ""
Jan 12 00:41:57.605: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Jan 12 00:41:57.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-3992 delete pods e2e-test-httpd-pod'
Jan 12 00:41:59.567: INFO: stderr: ""
Jan 12 00:41:59.567: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:41:59.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3992" for this suite.

â€¢ [SLOW TEST:7.584 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":308,"skipped":5787,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:41:59.581: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 12 00:41:59.731: INFO: The status of Pod pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207 is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:42:01.739: INFO: The status of Pod pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 12 00:42:02.261: INFO: Successfully updated pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207"
Jan 12 00:42:02.261: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207" in namespace "pods-8659" to be "terminated due to deadline exceeded"
Jan 12 00:42:02.270: INFO: Pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207": Phase="Running", Reason="", readiness=true. Elapsed: 8.649573ms
Jan 12 00:42:04.280: INFO: Pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207": Phase="Running", Reason="", readiness=true. Elapsed: 2.019204712s
Jan 12 00:42:06.300: INFO: Pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207": Phase="Running", Reason="", readiness=false. Elapsed: 4.038689429s
Jan 12 00:42:08.309: INFO: Pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.047945571s
Jan 12 00:42:08.309: INFO: Pod "pod-update-activedeadlineseconds-daa66798-5af7-4730-8dc5-79149d74b207" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 12 00:42:08.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8659" for this suite.

â€¢ [SLOW TEST:8.740 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5793,"failed":0}
SSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:08.323: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-6fe68958-5f75-4e86-ae23-733d34058241
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:42:08.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5864" for this suite.
â€¢{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":310,"skipped":5800,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:08.494: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1822
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:42:08.637: INFO: Creating deployment "webserver-deployment"
Jan 12 00:42:08.643: INFO: Waiting for observed generation 1
Jan 12 00:42:10.653: INFO: Waiting for all required pods to come up
Jan 12 00:42:10.658: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Jan 12 00:42:12.685: INFO: Waiting for deployment "webserver-deployment" to complete
Jan 12 00:42:12.693: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jan 12 00:42:12.712: INFO: Updating deployment webserver-deployment
Jan 12 00:42:12.712: INFO: Waiting for observed generation 2
Jan 12 00:42:14.729: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jan 12 00:42:14.733: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jan 12 00:42:14.742: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 12 00:42:14.769: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jan 12 00:42:14.769: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jan 12 00:42:14.776: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 12 00:42:14.787: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jan 12 00:42:14.787: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jan 12 00:42:14.793: INFO: Updating deployment webserver-deployment
Jan 12 00:42:14.793: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jan 12 00:42:14.808: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jan 12 00:42:14.827: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 12 00:42:14.903: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-1822  7f8cae35-4a74-401c-8103-dad91161b290 30748 3 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004bf8f38 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2023-01-12 00:42:12 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-12 00:42:14 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jan 12 00:42:14.940: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-1822  ddd2eac5-f22e-4159-a63e-70c0f853ae38 30729 3 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 7f8cae35-4a74-401c-8103-dad91161b290 0xc0037b55b7 0xc0037b55b8}] []  [{kube-controller-manager Update apps/v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7f8cae35-4a74-401c-8103-dad91161b290\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0037b5658 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:42:14.940: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jan 12 00:42:14.940: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-1822  615ba358-5086-4301-b352-d0383e2b6e6e 30727 3 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 7f8cae35-4a74-401c-8103-dad91161b290 0xc0037b54c7 0xc0037b54c8}] []  [{kube-controller-manager Update apps/v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7f8cae35-4a74-401c-8103-dad91161b290\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-12 00:42:10 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0037b5558 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jan 12 00:42:14.979: INFO: Pod "webserver-deployment-55df494869-2bdmq" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2bdmq webserver-deployment-55df494869- deployment-1822  30413aea-17f5-48f2-bd0e-02da4e82954e 30754 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b4177 0xc0059b4178}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-khn5x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-khn5x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:,StartTime:2023-01-12 00:42:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.980: INFO: Pod "webserver-deployment-55df494869-429t9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-429t9 webserver-deployment-55df494869- deployment-1822  b1ca14e2-75b5-4d90-a710-29f6fd72adf6 30610 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b4337 0xc0059b4338}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f88x8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f88x8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:10.240.0.60,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ff235d447a6951846d4f8a9cf39ebbb489ced73edd37f6cc15d6e535098a247a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.60,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.980: INFO: Pod "webserver-deployment-55df494869-5x22q" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5x22q webserver-deployment-55df494869- deployment-1822  a42ecfd4-a373-4213-aedc-91872f65cc55 30607 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b48f0 0xc0059b48f1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.39\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z7fm4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z7fm4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:10.240.0.39,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://37c6f93c689ca9a6f82a8421661981448d4b93c132b9049aeb48986968ec0720,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.39,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.980: INFO: Pod "webserver-deployment-55df494869-6zntg" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6zntg webserver-deployment-55df494869- deployment-1822  c57ad0c1-866c-440b-9823-366c66546223 30756 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b4e90 0xc0059b4e91}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wc9bv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wc9bv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.980: INFO: Pod "webserver-deployment-55df494869-7xlt9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-7xlt9 webserver-deployment-55df494869- deployment-1822  722d9760-e867-465b-a26f-67f0d346fd5e 30604 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b4fe0 0xc0059b4fe1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.47\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zblff,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zblff,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:10.240.0.47,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bb8e8a0ef710ea4dced721eaab141f2c953d9b6cadd3a31cfc16269807045793,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.47,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.981: INFO: Pod "webserver-deployment-55df494869-8lts8" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8lts8 webserver-deployment-55df494869- deployment-1822  adee30aa-e850-4705-a458-416fafc96eec 30776 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b51b0 0xc0059b51b1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6cpbd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6cpbd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.981: INFO: Pod "webserver-deployment-55df494869-98gwr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-98gwr webserver-deployment-55df494869- deployment-1822  142a9359-a6d8-40f1-b28a-fcdfe6757c97 30778 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5300 0xc0059b5301}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-64k6h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-64k6h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.981: INFO: Pod "webserver-deployment-55df494869-c47xm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-c47xm webserver-deployment-55df494869- deployment-1822  32f2bcfb-fd22-4f04-8739-3af7864d5bc4 30594 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5450 0xc0059b5451}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.94\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kkrvj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kkrvj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.94,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:09 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://d4aeafcccd0b47124f256cc6d0509e3778a2df204b2d2d8d1b489015115af301,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.94,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.981: INFO: Pod "webserver-deployment-55df494869-jpkdn" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jpkdn webserver-deployment-55df494869- deployment-1822  c02210fc-5e29-4d36-a9ba-3a3964316cc2 30592 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5630 0xc0059b5631}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.118\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ffklq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ffklq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.118,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://de6a5263eb0eed0c55bba4a312014fd4ea4f42dbc7c2afc8282ac6e6bfc829c9,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.118,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.982: INFO: Pod "webserver-deployment-55df494869-p465s" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-p465s webserver-deployment-55df494869- deployment-1822  ceeb6591-704c-4210-9771-32b04df575df 30614 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5807 0xc0059b5808}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.89\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xlpmc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xlpmc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:10.240.0.89,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bfb8589e8123ec81e5c8ed6bfe8ab04cd6ecb1dd40ead26bbd1aafbe78f87528,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.89,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.982: INFO: Pod "webserver-deployment-55df494869-pc7zn" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pc7zn webserver-deployment-55df494869- deployment-1822  56d7053a-73ee-4d86-9e4b-f6b8ed577247 30757 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b59f0 0xc0059b59f1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cgqh2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cgqh2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.982: INFO: Pod "webserver-deployment-55df494869-pllqr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pllqr webserver-deployment-55df494869- deployment-1822  dfe83332-b07c-4d44-ab02-82bd14310fc8 30779 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5b60 0xc0059b5b61}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tr9hh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tr9hh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:,StartTime:2023-01-12 00:42:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.982: INFO: Pod "webserver-deployment-55df494869-qlt7m" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-qlt7m webserver-deployment-55df494869- deployment-1822  9f6eb6b6-a3cf-43c8-b430-14ec4d1dbdaa 30774 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5d27 0xc0059b5d28}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rj9j9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rj9j9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.982: INFO: Pod "webserver-deployment-55df494869-sdxhj" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sdxhj webserver-deployment-55df494869- deployment-1822  a965b25b-1b57-4e39-b22f-1c3f6cbbab02 30780 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0059b5e90 0xc0059b5e91}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z8bjn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z8bjn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-sg9hm" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sg9hm webserver-deployment-55df494869- deployment-1822  574ea8a5-069c-4024-9e72-8457adc97458 30750 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc003230140 0xc003230141}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v88n7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v88n7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-t4svt" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-t4svt webserver-deployment-55df494869- deployment-1822  74cdb8f4-3320-4335-a112-28a391708b88 30753 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc0032304d0 0xc0032304d1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s4rvm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s4rvm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-tgch5" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-tgch5 webserver-deployment-55df494869- deployment-1822  44611dc2-ff40-4135-9f19-55663ca02ad6 30584 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc003230a20 0xc003230a21}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p8ls8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p8ls8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:10.240.0.75,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:10 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://de0599ee3b8ada77e387e30f4fffef560546e02deac414225f8b8e8c8e5da1c2,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.75,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-vbwjb" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vbwjb webserver-deployment-55df494869- deployment-1822  f45b07f0-f987-4e52-ba2d-06c3b939d8b4 30777 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc003230d10 0xc003230d11}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f678g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f678g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-wdck9" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-wdck9 webserver-deployment-55df494869- deployment-1822  9bcbe185-ea3b-46a9-8d6b-21f92971d147 30766 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc003231130 0xc003231131}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jhlgq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jhlgq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:,StartTime:2023-01-12 00:42:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.983: INFO: Pod "webserver-deployment-55df494869-xw5zw" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-xw5zw webserver-deployment-55df494869- deployment-1822  3a984d47-ab22-44f6-8a18-413c26448e7a 30597 0 2023-01-12 00:42:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 615ba358-5086-4301-b352-d0383e2b6e6e 0xc003231337 0xc003231338}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"615ba358-5086-4301-b352-d0383e2b6e6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:10 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cc6gt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cc6gt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.109,StartTime:2023-01-12 00:42:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-12 00:42:09 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://fe241012cd535e2ae75df71e8cf2ce9700ab79c23380a04c3d0188630a0c6df3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.109,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-2znpd" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-2znpd webserver-deployment-57ccb67bb8- deployment-1822  dfac959b-b28e-4f90-8887-616b55af6b31 30786 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231547 0xc003231548}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wpzx9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wpzx9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-6c4wx" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-6c4wx webserver-deployment-57ccb67bb8- deployment-1822  6b00c35e-f7a9-41b9-8583-f0de0e47bb8a 30768 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc0032316b0 0xc0032316b1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2m76s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2m76s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-9ldvq" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-9ldvq webserver-deployment-57ccb67bb8- deployment-1822  8488fd8a-3895-47f2-9fb6-f86a980fc2bd 30787 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231820 0xc003231821}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7c7wd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7c7wd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-ddpld" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-ddpld webserver-deployment-57ccb67bb8- deployment-1822  08738cd6-13f4-4ee4-a347-93b66d71acf5 30758 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231990 0xc003231991}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwdgz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwdgz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-dn8j5" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-dn8j5 webserver-deployment-57ccb67bb8- deployment-1822  631e773d-cc58-41ea-a3cc-b120554ed2e7 30781 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231b00 0xc003231b01}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-25gs2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-25gs2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.984: INFO: Pod "webserver-deployment-57ccb67bb8-dvwcl" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-dvwcl webserver-deployment-57ccb67bb8- deployment-1822  ff503426-4750-4e53-8b11-58bad7c4709d 30672 0 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231c67 0xc003231c68}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-klgqt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-klgqt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:,StartTime:2023-01-12 00:42:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.985: INFO: Pod "webserver-deployment-57ccb67bb8-h6kt4" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-h6kt4 webserver-deployment-57ccb67bb8- deployment-1822  fb8f27d5-d8ef-48bb-ae08-58cacba11cff 30713 0 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc003231e40 0xc003231e41}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.35\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r7bzp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r7bzp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.34,PodIP:10.240.0.35,StartTime:2023-01-12 00:42:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.35,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.985: INFO: Pod "webserver-deployment-57ccb67bb8-k257c" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-k257c webserver-deployment-57ccb67bb8- deployment-1822  184c1aa9-c759-4635-93e5-794b09f75013 30782 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc00356c050 0xc00356c051}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-khwrf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-khwrf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.985: INFO: Pod "webserver-deployment-57ccb67bb8-nx6kj" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-nx6kj webserver-deployment-57ccb67bb8- deployment-1822  757d4fdc-c561-4f04-9172-d618d33a6bf5 30725 0 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc00356c1d7 0xc00356c1d8}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jn2rt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jn2rt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.99,StartTime:2023-01-12 00:42:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.985: INFO: Pod "webserver-deployment-57ccb67bb8-nz88s" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-nz88s webserver-deployment-57ccb67bb8- deployment-1822  08653c06-98a4-4bfd-847c-76bb7d329057 30720 0 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc00356c3e0 0xc00356c3e1}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.112\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-624rc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-624rc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.92,PodIP:10.240.0.112,StartTime:2023-01-12 00:42:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.112,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.985: INFO: Pod "webserver-deployment-57ccb67bb8-r4kvf" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-r4kvf webserver-deployment-57ccb67bb8- deployment-1822  54ec9e4e-da47-4737-8540-d6bf77d74721 30718 0 2023-01-12 00:42:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc00356c600 0xc00356c601}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4tngg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4tngg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.240.0.63,PodIP:10.240.0.68,StartTime:2023-01-12 00:42:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.240.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 12 00:42:14.986: INFO: Pod "webserver-deployment-57ccb67bb8-rrpdt" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-rrpdt webserver-deployment-57ccb67bb8- deployment-1822  88a8c960-3bca-400c-87d8-9f0d3de42860 30739 0 2023-01-12 00:42:14 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 ddd2eac5-f22e-4159-a63e-70c0f853ae38 0xc00356c800 0xc00356c801}] []  [{kube-controller-manager Update v1 2023-01-12 00:42:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ddd2eac5-f22e-4159-a63e-70c0f853ae38\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f849q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f849q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-agentpool1-12291382-vmss000000,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-12 00:42:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 12 00:42:14.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1822" for this suite.

â€¢ [SLOW TEST:6.548 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":311,"skipped":5810,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:15.043: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-7284
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-6kct2 in namespace proxy-7284
I0112 00:42:15.240303      19 runners.go:193] Created replication controller with name: proxy-service-6kct2, namespace: proxy-7284, replica count: 1
I0112 00:42:16.292167      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:42:17.292418      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:42:18.292617      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:42:19.293397      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:42:20.293754      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0112 00:42:21.294202      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0112 00:42:22.295148      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0112 00:42:23.295364      19 runners.go:193] proxy-service-6kct2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 12 00:42:23.300: INFO: setup took 8.089389344s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Jan 12 00:42:23.345: INFO: (0) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 44.045998ms)
Jan 12 00:42:23.348: INFO: (0) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 47.056946ms)
Jan 12 00:42:23.351: INFO: (0) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 49.670587ms)
Jan 12 00:42:23.351: INFO: (0) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 50.061793ms)
Jan 12 00:42:23.352: INFO: (0) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 51.221713ms)
Jan 12 00:42:23.352: INFO: (0) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 51.961724ms)
Jan 12 00:42:23.353: INFO: (0) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 51.73622ms)
Jan 12 00:42:23.353: INFO: (0) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 51.940824ms)
Jan 12 00:42:23.353: INFO: (0) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 52.33913ms)
Jan 12 00:42:23.353: INFO: (0) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 52.495832ms)
Jan 12 00:42:23.353: INFO: (0) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 51.571417ms)
Jan 12 00:42:23.354: INFO: (0) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 52.829437ms)
Jan 12 00:42:23.354: INFO: (0) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 52.402631ms)
Jan 12 00:42:23.354: INFO: (0) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 53.137343ms)
Jan 12 00:42:23.354: INFO: (0) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 53.241544ms)
Jan 12 00:42:23.359: INFO: (0) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 58.291225ms)
Jan 12 00:42:23.369: INFO: (1) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 9.569452ms)
Jan 12 00:42:23.373: INFO: (1) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.824219ms)
Jan 12 00:42:23.373: INFO: (1) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 13.395112ms)
Jan 12 00:42:23.374: INFO: (1) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 14.215126ms)
Jan 12 00:42:23.374: INFO: (1) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 14.153125ms)
Jan 12 00:42:23.374: INFO: (1) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 14.992837ms)
Jan 12 00:42:23.375: INFO: (1) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 15.323243ms)
Jan 12 00:42:23.375: INFO: (1) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 15.241841ms)
Jan 12 00:42:23.375: INFO: (1) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 15.799651ms)
Jan 12 00:42:23.375: INFO: (1) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 15.382944ms)
Jan 12 00:42:23.375: INFO: (1) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 15.72865ms)
Jan 12 00:42:23.377: INFO: (1) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 16.830867ms)
Jan 12 00:42:23.377: INFO: (1) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 17.388676ms)
Jan 12 00:42:23.378: INFO: (1) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 17.531778ms)
Jan 12 00:42:23.378: INFO: (1) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 17.710281ms)
Jan 12 00:42:23.378: INFO: (1) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 17.629979ms)
Jan 12 00:42:23.382: INFO: (2) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 4.209767ms)
Jan 12 00:42:23.382: INFO: (2) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 4.503971ms)
Jan 12 00:42:23.389: INFO: (2) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.654969ms)
Jan 12 00:42:23.389: INFO: (2) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 11.086676ms)
Jan 12 00:42:23.389: INFO: (2) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 11.430981ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 11.500482ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.978174ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 12.123092ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 11.862388ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 11.97719ms)
Jan 12 00:42:23.390: INFO: (2) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 11.493982ms)
Jan 12 00:42:23.391: INFO: (2) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 12.817003ms)
Jan 12 00:42:23.391: INFO: (2) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.379796ms)
Jan 12 00:42:23.391: INFO: (2) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 12.354596ms)
Jan 12 00:42:23.391: INFO: (2) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.23371ms)
Jan 12 00:42:23.391: INFO: (2) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 12.799403ms)
Jan 12 00:42:23.401: INFO: (3) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 9.340648ms)
Jan 12 00:42:23.401: INFO: (3) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.954442ms)
Jan 12 00:42:23.402: INFO: (3) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 10.041459ms)
Jan 12 00:42:23.402: INFO: (3) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 10.184662ms)
Jan 12 00:42:23.402: INFO: (3) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 10.404365ms)
Jan 12 00:42:23.402: INFO: (3) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 10.326164ms)
Jan 12 00:42:23.403: INFO: (3) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 10.611868ms)
Jan 12 00:42:23.403: INFO: (3) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 10.582867ms)
Jan 12 00:42:23.403: INFO: (3) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 11.052175ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 11.96689ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 11.827887ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 11.413081ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.37808ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 11.739387ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.526583ms)
Jan 12 00:42:23.404: INFO: (3) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 11.598884ms)
Jan 12 00:42:23.411: INFO: (4) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 6.711307ms)
Jan 12 00:42:23.411: INFO: (4) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 6.997311ms)
Jan 12 00:42:23.411: INFO: (4) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 6.838308ms)
Jan 12 00:42:23.411: INFO: (4) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 6.888809ms)
Jan 12 00:42:23.415: INFO: (4) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.054575ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.128308ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 13.166409ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 12.940505ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 12.916705ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.113508ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.381512ms)
Jan 12 00:42:23.417: INFO: (4) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.433213ms)
Jan 12 00:42:23.418: INFO: (4) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.540014ms)
Jan 12 00:42:23.418: INFO: (4) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 13.712618ms)
Jan 12 00:42:23.420: INFO: (4) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 15.688249ms)
Jan 12 00:42:23.421: INFO: (4) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 16.582963ms)
Jan 12 00:42:23.430: INFO: (5) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 8.698637ms)
Jan 12 00:42:23.430: INFO: (5) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 9.104144ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 9.584852ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 9.48565ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 10.04106ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 9.997858ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 10.008259ms)
Jan 12 00:42:23.431: INFO: (5) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 10.441166ms)
Jan 12 00:42:23.434: INFO: (5) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 12.497198ms)
Jan 12 00:42:23.434: INFO: (5) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 12.714001ms)
Jan 12 00:42:23.434: INFO: (5) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.899304ms)
Jan 12 00:42:23.434: INFO: (5) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.6192ms)
Jan 12 00:42:23.435: INFO: (5) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 13.437113ms)
Jan 12 00:42:23.437: INFO: (5) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 15.500646ms)
Jan 12 00:42:23.437: INFO: (5) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 15.548246ms)
Jan 12 00:42:23.438: INFO: (5) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 15.816851ms)
Jan 12 00:42:23.449: INFO: (6) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 10.767171ms)
Jan 12 00:42:23.450: INFO: (6) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.063491ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.379797ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.120392ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 12.164093ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 12.563999ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.301295ms)
Jan 12 00:42:23.451: INFO: (6) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 13.073108ms)
Jan 12 00:42:23.452: INFO: (6) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.91672ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 14.747534ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 14.811335ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 15.18024ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 15.028538ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 15.71955ms)
Jan 12 00:42:23.453: INFO: (6) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 15.293443ms)
Jan 12 00:42:23.457: INFO: (6) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 19.135803ms)
Jan 12 00:42:23.463: INFO: (7) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 5.795091ms)
Jan 12 00:42:23.464: INFO: (7) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 6.648906ms)
Jan 12 00:42:23.464: INFO: (7) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 6.864909ms)
Jan 12 00:42:23.468: INFO: (7) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 9.542852ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 11.476382ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 11.573884ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 11.818987ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 12.108192ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.317595ms)
Jan 12 00:42:23.470: INFO: (7) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 12.856204ms)
Jan 12 00:42:23.471: INFO: (7) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.640001ms)
Jan 12 00:42:23.471: INFO: (7) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.711302ms)
Jan 12 00:42:23.471: INFO: (7) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.391196ms)
Jan 12 00:42:23.471: INFO: (7) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 12.725002ms)
Jan 12 00:42:23.471: INFO: (7) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.005206ms)
Jan 12 00:42:23.472: INFO: (7) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 14.049423ms)
Jan 12 00:42:23.483: INFO: (8) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 10.209362ms)
Jan 12 00:42:23.483: INFO: (8) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 10.972174ms)
Jan 12 00:42:23.484: INFO: (8) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 11.409481ms)
Jan 12 00:42:23.484: INFO: (8) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 11.164077ms)
Jan 12 00:42:23.484: INFO: (8) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 11.278979ms)
Jan 12 00:42:23.484: INFO: (8) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 11.422881ms)
Jan 12 00:42:23.484: INFO: (8) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.565084ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 12.901405ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.6005ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 12.159293ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.703201ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 12.337496ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 12.161393ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 12.990306ms)
Jan 12 00:42:23.485: INFO: (8) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.851204ms)
Jan 12 00:42:23.488: INFO: (8) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 15.299743ms)
Jan 12 00:42:23.496: INFO: (9) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 8.442734ms)
Jan 12 00:42:23.498: INFO: (9) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 9.45915ms)
Jan 12 00:42:23.498: INFO: (9) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 9.728454ms)
Jan 12 00:42:23.499: INFO: (9) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 10.817672ms)
Jan 12 00:42:23.499: INFO: (9) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 10.72847ms)
Jan 12 00:42:23.499: INFO: (9) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.971374ms)
Jan 12 00:42:23.500: INFO: (9) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 11.311779ms)
Jan 12 00:42:23.500: INFO: (9) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 11.663485ms)
Jan 12 00:42:23.500: INFO: (9) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.759286ms)
Jan 12 00:42:23.501: INFO: (9) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.6255ms)
Jan 12 00:42:23.501: INFO: (9) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 12.994906ms)
Jan 12 00:42:23.501: INFO: (9) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 12.794002ms)
Jan 12 00:42:23.501: INFO: (9) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.086208ms)
Jan 12 00:42:23.502: INFO: (9) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 13.662816ms)
Jan 12 00:42:23.502: INFO: (9) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.611015ms)
Jan 12 00:42:23.502: INFO: (9) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 13.717818ms)
Jan 12 00:42:23.510: INFO: (10) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 8.105129ms)
Jan 12 00:42:23.510: INFO: (10) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.055328ms)
Jan 12 00:42:23.511: INFO: (10) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 8.574036ms)
Jan 12 00:42:23.511: INFO: (10) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 8.642037ms)
Jan 12 00:42:23.511: INFO: (10) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.403033ms)
Jan 12 00:42:23.511: INFO: (10) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 8.547035ms)
Jan 12 00:42:23.512: INFO: (10) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 9.140945ms)
Jan 12 00:42:23.512: INFO: (10) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 9.753155ms)
Jan 12 00:42:23.513: INFO: (10) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.328364ms)
Jan 12 00:42:23.513: INFO: (10) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 10.06696ms)
Jan 12 00:42:23.515: INFO: (10) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 12.687301ms)
Jan 12 00:42:23.515: INFO: (10) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 12.903305ms)
Jan 12 00:42:23.515: INFO: (10) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.303011ms)
Jan 12 00:42:23.516: INFO: (10) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.299311ms)
Jan 12 00:42:23.516: INFO: (10) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 12.959906ms)
Jan 12 00:42:23.515: INFO: (10) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 12.778503ms)
Jan 12 00:42:23.525: INFO: (11) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 9.070647ms)
Jan 12 00:42:23.525: INFO: (11) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 9.282951ms)
Jan 12 00:42:23.525: INFO: (11) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.981945ms)
Jan 12 00:42:23.526: INFO: (11) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 9.256051ms)
Jan 12 00:42:23.528: INFO: (11) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 11.566888ms)
Jan 12 00:42:23.529: INFO: (11) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 13.309217ms)
Jan 12 00:42:23.529: INFO: (11) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 13.158014ms)
Jan 12 00:42:23.529: INFO: (11) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 13.162314ms)
Jan 12 00:42:23.529: INFO: (11) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.120914ms)
Jan 12 00:42:23.530: INFO: (11) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.087213ms)
Jan 12 00:42:23.530: INFO: (11) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.133114ms)
Jan 12 00:42:23.530: INFO: (11) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 13.424418ms)
Jan 12 00:42:23.529: INFO: (11) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 13.488519ms)
Jan 12 00:42:23.530: INFO: (11) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.314317ms)
Jan 12 00:42:23.530: INFO: (11) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.987427ms)
Jan 12 00:42:23.531: INFO: (11) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 14.186231ms)
Jan 12 00:42:23.537: INFO: (12) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 6.199201ms)
Jan 12 00:42:23.537: INFO: (12) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 6.255202ms)
Jan 12 00:42:23.537: INFO: (12) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 6.226301ms)
Jan 12 00:42:23.539: INFO: (12) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 8.385637ms)
Jan 12 00:42:23.541: INFO: (12) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 9.724158ms)
Jan 12 00:42:23.541: INFO: (12) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 9.655157ms)
Jan 12 00:42:23.542: INFO: (12) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.601273ms)
Jan 12 00:42:23.542: INFO: (12) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 10.915578ms)
Jan 12 00:42:23.544: INFO: (12) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.161698ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 13.52262ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.685723ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 13.49532ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.414419ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.689623ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 14.027529ms)
Jan 12 00:42:23.545: INFO: (12) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.855826ms)
Jan 12 00:42:23.554: INFO: (13) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 8.57734ms)
Jan 12 00:42:23.555: INFO: (13) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 8.860544ms)
Jan 12 00:42:23.555: INFO: (13) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.939345ms)
Jan 12 00:42:23.555: INFO: (13) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 9.060748ms)
Jan 12 00:42:23.556: INFO: (13) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 10.460271ms)
Jan 12 00:42:23.556: INFO: (13) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 10.139965ms)
Jan 12 00:42:23.557: INFO: (13) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 10.963178ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 15.874958ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 16.054062ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 17.065478ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 16.275265ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 16.604571ms)
Jan 12 00:42:23.562: INFO: (13) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 16.492369ms)
Jan 12 00:42:23.563: INFO: (13) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 16.668772ms)
Jan 12 00:42:23.563: INFO: (13) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 16.336566ms)
Jan 12 00:42:23.563: INFO: (13) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 16.611571ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 12.118197ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 11.920494ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 11.531188ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.996195ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.399502ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.468903ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.055496ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.112513ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 13.249016ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 12.998712ms)
Jan 12 00:42:23.576: INFO: (14) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 13.067613ms)
Jan 12 00:42:23.577: INFO: (14) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.089414ms)
Jan 12 00:42:23.577: INFO: (14) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.131914ms)
Jan 12 00:42:23.577: INFO: (14) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 12.918111ms)
Jan 12 00:42:23.577: INFO: (14) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 13.303716ms)
Jan 12 00:42:23.578: INFO: (14) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 14.666239ms)
Jan 12 00:42:23.590: INFO: (15) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.085197ms)
Jan 12 00:42:23.590: INFO: (15) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.078997ms)
Jan 12 00:42:23.590: INFO: (15) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 11.202183ms)
Jan 12 00:42:23.590: INFO: (15) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 11.410786ms)
Jan 12 00:42:23.590: INFO: (15) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 11.622189ms)
Jan 12 00:42:23.591: INFO: (15) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 11.945094ms)
Jan 12 00:42:23.591: INFO: (15) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.453202ms)
Jan 12 00:42:23.591: INFO: (15) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 12.710907ms)
Jan 12 00:42:23.591: INFO: (15) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.958395ms)
Jan 12 00:42:23.591: INFO: (15) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 12.842209ms)
Jan 12 00:42:23.595: INFO: (15) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 16.267565ms)
Jan 12 00:42:23.595: INFO: (15) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 15.94066ms)
Jan 12 00:42:23.595: INFO: (15) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 16.499169ms)
Jan 12 00:42:23.595: INFO: (15) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 16.165763ms)
Jan 12 00:42:23.595: INFO: (15) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 16.757573ms)
Jan 12 00:42:23.599: INFO: (15) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 20.388632ms)
Jan 12 00:42:23.608: INFO: (16) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 8.715542ms)
Jan 12 00:42:23.608: INFO: (16) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.334136ms)
Jan 12 00:42:23.608: INFO: (16) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 8.884845ms)
Jan 12 00:42:23.608: INFO: (16) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 8.215134ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 9.746959ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 10.146965ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 9.903761ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 9.607357ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 9.80856ms)
Jan 12 00:42:23.609: INFO: (16) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 9.685357ms)
Jan 12 00:42:23.614: INFO: (16) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 14.493637ms)
Jan 12 00:42:23.614: INFO: (16) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 14.190332ms)
Jan 12 00:42:23.614: INFO: (16) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 14.927543ms)
Jan 12 00:42:23.614: INFO: (16) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 15.441352ms)
Jan 12 00:42:23.614: INFO: (16) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 15.234448ms)
Jan 12 00:42:23.615: INFO: (16) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 15.36425ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 12.559804ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 13.119014ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 12.437503ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.826109ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 12.685206ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 12.984112ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 13.128914ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 13.661222ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 13.253516ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.159714ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 13.419819ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 12.944511ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.666723ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.84911ms)
Jan 12 00:42:23.629: INFO: (17) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.157814ms)
Jan 12 00:42:23.628: INFO: (17) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 12.483903ms)
Jan 12 00:42:23.638: INFO: (18) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 9.281551ms)
Jan 12 00:42:23.638: INFO: (18) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 9.517956ms)
Jan 12 00:42:23.639: INFO: (18) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 9.78676ms)
Jan 12 00:42:23.639: INFO: (18) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 9.894761ms)
Jan 12 00:42:23.642: INFO: (18) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 13.264616ms)
Jan 12 00:42:23.642: INFO: (18) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 13.405119ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 13.333717ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 13.55462ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 13.655022ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 13.970627ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 13.629922ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 14.09323ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 14.348334ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 14.173931ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 14.559637ms)
Jan 12 00:42:23.643: INFO: (18) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 14.354734ms)
Jan 12 00:42:23.656: INFO: (19) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:160/proxy/: foo (200; 11.434186ms)
Jan 12 00:42:23.656: INFO: (19) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.604189ms)
Jan 12 00:42:23.656: INFO: (19) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:162/proxy/: bar (200; 11.754091ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5/proxy/rewriteme">test</a> (200; 12.489304ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:160/proxy/: foo (200; 11.980395ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/proxy-service-6kct2-swcf5:1080/proxy/rewriteme">test<... (200; 12.342301ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:460/proxy/: tls baz (200; 12.752408ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:462/proxy/: tls qux (200; 13.004512ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/https:proxy-service-6kct2-swcf5:443/proxy/tlsrewritem... (200; 12.715907ms)
Jan 12 00:42:23.657: INFO: (19) /api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7284/pods/http:proxy-service-6kct2-swcf5:1080/proxy/rewriteme">... (200; 12.346001ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname1/proxy/: foo (200; 16.431168ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/http:proxy-service-6kct2:portname2/proxy/: bar (200; 16.384167ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname1/proxy/: foo (200; 16.453068ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname2/proxy/: tls qux (200; 16.812473ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/proxy-service-6kct2:portname2/proxy/: bar (200; 17.225281ms)
Jan 12 00:42:23.661: INFO: (19) /api/v1/namespaces/proxy-7284/services/https:proxy-service-6kct2:tlsportname1/proxy/: tls baz (200; 16.893675ms)
STEP: deleting ReplicationController proxy-service-6kct2 in namespace proxy-7284, will wait for the garbage collector to delete the pods
Jan 12 00:42:23.726: INFO: Deleting ReplicationController proxy-service-6kct2 took: 10.925978ms
Jan 12 00:42:23.827: INFO: Terminating ReplicationController proxy-service-6kct2 pods took: 100.765742ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 12 00:42:24.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-7284" for this suite.

â€¢ [SLOW TEST:9.700 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":312,"skipped":5821,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:24.744: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6113
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:42:24.889: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428" in namespace "projected-6113" to be "Succeeded or Failed"
Jan 12 00:42:24.904: INFO: Pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428": Phase="Pending", Reason="", readiness=false. Elapsed: 15.392651ms
Jan 12 00:42:26.921: INFO: Pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032356516s
Jan 12 00:42:28.932: INFO: Pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428": Phase="Running", Reason="", readiness=false. Elapsed: 4.043022378s
Jan 12 00:42:30.939: INFO: Pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.049595374s
STEP: Saw pod success
Jan 12 00:42:30.939: INFO: Pod "downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428" satisfied condition "Succeeded or Failed"
Jan 12 00:42:30.942: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428 container client-container: <nil>
STEP: delete the pod
Jan 12 00:42:30.964: INFO: Waiting for pod downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428 to disappear
Jan 12 00:42:30.966: INFO: Pod downwardapi-volume-3a654697-7dc7-4c19-ae6a-c35ef75ab428 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:42:30.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6113" for this suite.

â€¢ [SLOW TEST:6.231 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":313,"skipped":5844,"failed":0}
SSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:30.976: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-9332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Jan 12 00:42:31.132: INFO: Waiting up to 5m0s for pod "test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391" in namespace "svcaccounts-9332" to be "Succeeded or Failed"
Jan 12 00:42:31.146: INFO: Pod "test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391": Phase="Pending", Reason="", readiness=false. Elapsed: 13.863126ms
Jan 12 00:42:33.155: INFO: Pod "test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022392316s
Jan 12 00:42:35.159: INFO: Pod "test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026952296s
STEP: Saw pod success
Jan 12 00:42:35.159: INFO: Pod "test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391" satisfied condition "Succeeded or Failed"
Jan 12 00:42:35.175: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391 container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:42:35.197: INFO: Waiting for pod test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391 to disappear
Jan 12 00:42:35.200: INFO: Pod test-pod-452ebcc6-41e6-44d2-af20-7cdeb072c391 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 12 00:42:35.200: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-9332" for this suite.
â€¢{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":314,"skipped":5847,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:35.211: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1404
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:42:35.364: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54" in namespace "projected-1404" to be "Succeeded or Failed"
Jan 12 00:42:35.374: INFO: Pod "downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54": Phase="Pending", Reason="", readiness=false. Elapsed: 10.407382ms
Jan 12 00:42:37.388: INFO: Pod "downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024029021s
Jan 12 00:42:39.397: INFO: Pod "downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033537988s
STEP: Saw pod success
Jan 12 00:42:39.397: INFO: Pod "downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54" satisfied condition "Succeeded or Failed"
Jan 12 00:42:39.401: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54 container client-container: <nil>
STEP: delete the pod
Jan 12 00:42:39.430: INFO: Waiting for pod downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54 to disappear
Jan 12 00:42:39.433: INFO: Pod downwardapi-volume-a821dd0d-c4f1-4d2f-999c-7f0a53551a54 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:42:39.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1404" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":315,"skipped":5875,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:39.443: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-131
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 12 00:42:39.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-131" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":316,"skipped":5921,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:39.652: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Jan 12 00:42:39.807: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-8101 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:42:39.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8101" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":317,"skipped":5945,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:39.883: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4525
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Jan 12 00:42:40.027: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
Jan 12 00:42:42.355: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:42:52.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4525" for this suite.

â€¢ [SLOW TEST:12.240 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":318,"skipped":5953,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:52.124: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8487
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:42:52.288: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e" in namespace "downward-api-8487" to be "Succeeded or Failed"
Jan 12 00:42:52.298: INFO: Pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e": Phase="Pending", Reason="", readiness=false. Elapsed: 9.08895ms
Jan 12 00:42:54.306: INFO: Pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e": Phase="Running", Reason="", readiness=true. Elapsed: 2.016895478s
Jan 12 00:42:56.315: INFO: Pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e": Phase="Running", Reason="", readiness=false. Elapsed: 4.026504403s
Jan 12 00:42:58.325: INFO: Pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.036635849s
STEP: Saw pod success
Jan 12 00:42:58.325: INFO: Pod "downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e" satisfied condition "Succeeded or Failed"
Jan 12 00:42:58.330: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e container client-container: <nil>
STEP: delete the pod
Jan 12 00:42:58.354: INFO: Waiting for pod downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e to disappear
Jan 12 00:42:58.366: INFO: Pod downwardapi-volume-dbac6a8a-3611-4869-bd8b-b6765cefa70e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 12 00:42:58.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8487" for this suite.

â€¢ [SLOW TEST:6.258 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":319,"skipped":5959,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:42:58.383: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-8017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Jan 12 00:42:58.543: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Jan 12 00:43:00.567: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Jan 12 00:43:02.587: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Jan 12 00:43:04.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-8017" for this suite.

â€¢ [SLOW TEST:6.220 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":320,"skipped":5977,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:04.605: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7456
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 12 00:43:08.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7456" for this suite.
â€¢{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":321,"skipped":5991,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:08.802: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7212
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 12 00:43:09.393: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 12 00:43:12.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:43:24.580: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7212" for this suite.
STEP: Destroying namespace "webhook-7212-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

â€¢ [SLOW TEST:15.856 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":322,"skipped":5998,"failed":0}
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:24.659: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-8667
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:43:28.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-8667" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":323,"skipped":6000,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:28.872: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8495
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8495
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:43:29.035: INFO: Found 0 stateful pods, waiting for 1
Jan 12 00:43:39.049: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Jan 12 00:43:39.074: INFO: Found 1 stateful pods, waiting for 2
Jan 12 00:43:49.090: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:43:49.090: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:43:49.142: INFO: Deleting all statefulset in ns statefulset-8495
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:43:49.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8495" for this suite.

â€¢ [SLOW TEST:20.310 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":324,"skipped":6016,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:49.182: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-2932
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Jan 12 00:43:49.323: INFO: created test-event-1
Jan 12 00:43:49.329: INFO: created test-event-2
Jan 12 00:43:49.335: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Jan 12 00:43:49.339: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Jan 12 00:43:49.362: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 12 00:43:49.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2932" for this suite.
â€¢{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":325,"skipped":6027,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:49.378: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-2731
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 12 00:43:53.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-2731" for this suite.
â€¢{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":326,"skipped":6044,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:53.627: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-7168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 12 00:43:53.779: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 12 00:43:53.797: INFO: starting watch
STEP: patching
STEP: updating
Jan 12 00:43:53.819: INFO: waiting for watch events with expected annotations
Jan 12 00:43:53.819: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 12 00:43:53.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7168" for this suite.
â€¢{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":327,"skipped":6055,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:43:53.874: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6056
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Jan 12 00:43:54.031: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31787 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:43:54.031: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31787 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Jan 12 00:43:54.047: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31789 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:43:54.047: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31789 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Jan 12 00:43:54.053: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31790 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:43:54.054: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31790 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Jan 12 00:43:54.058: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31791 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:43:54.058: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6056  502edddd-65ce-4bc3-b1a4-64ac25ee02b5 31791 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Jan 12 00:43:54.060: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6056  31139829-33a3-4c8e-99f6-fbe4888df028 31792 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:43:54.061: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6056  31139829-33a3-4c8e-99f6-fbe4888df028 31792 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Jan 12 00:44:04.071: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6056  31139829-33a3-4c8e-99f6-fbe4888df028 31865 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 12 00:44:04.071: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6056  31139829-33a3-4c8e-99f6-fbe4888df028 31865 0 2023-01-12 00:43:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-12 00:43:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 12 00:44:14.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6056" for this suite.

â€¢ [SLOW TEST:20.214 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":328,"skipped":6074,"failed":0}
SSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:44:14.088: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-c1f1c191-52bb-418e-9e25-2221a15e2601
STEP: Creating a pod to test consume secrets
Jan 12 00:44:14.239: INFO: Waiting up to 5m0s for pod "pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e" in namespace "secrets-3449" to be "Succeeded or Failed"
Jan 12 00:44:14.252: INFO: Pod "pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e": Phase="Pending", Reason="", readiness=false. Elapsed: 13.265806ms
Jan 12 00:44:16.261: INFO: Pod "pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021598764s
Jan 12 00:44:18.269: INFO: Pod "pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030374276s
STEP: Saw pod success
Jan 12 00:44:18.269: INFO: Pod "pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e" satisfied condition "Succeeded or Failed"
Jan 12 00:44:18.272: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e container secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:44:18.305: INFO: Waiting for pod pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e to disappear
Jan 12 00:44:18.307: INFO: Pod pod-secrets-27cac28c-71d6-4d36-b4a4-e9e3edfa452e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 12 00:44:18.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3449" for this suite.
â€¢{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":329,"skipped":6078,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:44:18.316: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5071
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5071
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 12 00:44:18.505: INFO: Found 0 stateful pods, waiting for 3
Jan 12 00:44:28.519: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:44:28.519: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:44:28.519: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 12 00:44:28.556: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Jan 12 00:44:38.631: INFO: Updating stateful set ss2
Jan 12 00:44:38.663: INFO: Waiting for Pod statefulset-5071/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Jan 12 00:44:48.767: INFO: Found 1 stateful pods, waiting for 3
Jan 12 00:44:58.782: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:44:58.782: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 12 00:44:58.782: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Jan 12 00:44:58.807: INFO: Updating stateful set ss2
Jan 12 00:44:58.843: INFO: Waiting for Pod statefulset-5071/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Jan 12 00:45:08.882: INFO: Updating stateful set ss2
Jan 12 00:45:08.900: INFO: Waiting for StatefulSet statefulset-5071/ss2 to complete update
Jan 12 00:45:08.900: INFO: Waiting for Pod statefulset-5071/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 12 00:45:18.919: INFO: Deleting all statefulset in ns statefulset-5071
Jan 12 00:45:18.922: INFO: Scaling statefulset ss2 to 0
Jan 12 00:45:28.953: INFO: Waiting for statefulset status.replicas updated to 0
Jan 12 00:45:28.956: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 12 00:45:28.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5071" for this suite.

â€¢ [SLOW TEST:70.682 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":330,"skipped":6111,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:45:28.999: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3530
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-3530
STEP: creating replication controller nodeport-test in namespace services-3530
I0112 00:45:29.175310      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3530, replica count: 2
I0112 00:45:32.226492      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 12 00:45:32.226: INFO: Creating new exec pod
Jan 12 00:45:35.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:35.474: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:35.474: INFO: stdout: ""
Jan 12 00:45:36.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:36.672: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:36.672: INFO: stdout: ""
Jan 12 00:45:37.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:37.655: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:37.655: INFO: stdout: ""
Jan 12 00:45:38.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:38.656: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:38.656: INFO: stdout: ""
Jan 12 00:45:39.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:39.655: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:39.655: INFO: stdout: ""
Jan 12 00:45:40.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:40.666: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:40.666: INFO: stdout: ""
Jan 12 00:45:41.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:41.660: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:41.660: INFO: stdout: ""
Jan 12 00:45:42.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:42.680: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:42.680: INFO: stdout: ""
Jan 12 00:45:43.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:43.661: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:43.661: INFO: stdout: ""
Jan 12 00:45:44.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:44.696: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:44.696: INFO: stdout: ""
Jan 12 00:45:45.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 12 00:45:45.659: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:45.659: INFO: stdout: "nodeport-test-55xct"
Jan 12 00:45:45.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.5.30 80'
Jan 12 00:45:45.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.5.30 80\nConnection to 10.0.5.30 80 port [tcp/http] succeeded!\n"
Jan 12 00:45:45.851: INFO: stdout: "nodeport-test-55xct"
Jan 12 00:45:45.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30772'
Jan 12 00:45:46.037: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30772\nConnection to 10.240.0.34 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:46.037: INFO: stdout: ""
Jan 12 00:45:47.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30772'
Jan 12 00:45:47.241: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30772\nConnection to 10.240.0.34 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:47.241: INFO: stdout: ""
Jan 12 00:45:48.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30772'
Jan 12 00:45:48.217: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30772\nConnection to 10.240.0.34 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:48.217: INFO: stdout: ""
Jan 12 00:45:49.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30772'
Jan 12 00:45:49.217: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30772\nConnection to 10.240.0.34 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:49.217: INFO: stdout: ""
Jan 12 00:45:50.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.34 30772'
Jan 12 00:45:50.262: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.34 30772\nConnection to 10.240.0.34 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:50.262: INFO: stdout: "nodeport-test-55xct"
Jan 12 00:45:50.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 30772'
Jan 12 00:45:50.438: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 30772\nConnection to 10.240.0.92 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:50.438: INFO: stdout: ""
Jan 12 00:45:51.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 30772'
Jan 12 00:45:51.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 30772\nConnection to 10.240.0.92 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:51.610: INFO: stdout: ""
Jan 12 00:45:52.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 30772'
Jan 12 00:45:52.638: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 30772\nConnection to 10.240.0.92 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:52.638: INFO: stdout: ""
Jan 12 00:45:53.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 30772'
Jan 12 00:45:53.647: INFO: stderr: "+ nc -v -t -w 2 10.240.0.92 30772\n+ echo hostName\nConnection to 10.240.0.92 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:53.647: INFO: stdout: ""
Jan 12 00:45:54.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=services-3530 exec execpodbvts5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.0.92 30772'
Jan 12 00:45:54.603: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.0.92 30772\nConnection to 10.240.0.92 30772 port [tcp/*] succeeded!\n"
Jan 12 00:45:54.603: INFO: stdout: "nodeport-test-55xct"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 12 00:45:54.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3530" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

â€¢ [SLOW TEST:25.617 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":331,"skipped":6132,"failed":0}
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:45:54.616: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-3529
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 12 00:45:54.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-3529" for this suite.
â€¢{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":332,"skipped":6137,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:45:54.772: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2294
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:45:54.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 create -f -'
Jan 12 00:45:55.157: INFO: stderr: ""
Jan 12 00:45:55.158: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jan 12 00:45:55.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 create -f -'
Jan 12 00:45:55.408: INFO: stderr: ""
Jan 12 00:45:55.408: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 12 00:45:56.417: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:45:56.417: INFO: Found 0 / 1
Jan 12 00:45:57.415: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:45:57.415: INFO: Found 1 / 1
Jan 12 00:45:57.415: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 12 00:45:57.418: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 12 00:45:57.418: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 12 00:45:57.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 describe pod agnhost-primary-vvxg7'
Jan 12 00:45:57.499: INFO: stderr: ""
Jan 12 00:45:57.499: INFO: stdout: "Name:         agnhost-primary-vvxg7\nNamespace:    kubectl-2294\nPriority:     0\nNode:         k8s-agentpool1-12291382-vmss000001/10.240.0.63\nStart Time:   Thu, 12 Jan 2023 00:45:55 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           10.240.0.69\nIPs:\n  IP:           10.240.0.69\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://0ab47eb1be087836f0dd738aebecd270124e88676cf2da36bad96c1d9adf8c31\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 12 Jan 2023 00:45:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8dt5f (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-8dt5f:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2294/agnhost-primary-vvxg7 to k8s-agentpool1-12291382-vmss000001\n  Normal  Pulled     2s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Jan 12 00:45:57.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 describe rc agnhost-primary'
Jan 12 00:45:57.580: INFO: stderr: ""
Jan 12 00:45:57.580: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2294\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-vvxg7\n"
Jan 12 00:45:57.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 describe service agnhost-primary'
Jan 12 00:45:57.659: INFO: stderr: ""
Jan 12 00:45:57.659: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2294\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.0.58.51\nIPs:               10.0.58.51\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.240.0.69:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jan 12 00:45:57.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 describe node k8s-agentpool1-12291382-vmss000000'
Jan 12 00:45:57.779: INFO: stderr: ""
Jan 12 00:45:57.779: INFO: stdout: "Name:               k8s-agentpool1-12291382-vmss000000\nRoles:              agent\nLabels:             agentpool=agentpool1\n                    beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=Standard_D2_v3\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=westus2\n                    failure-domain.beta.kubernetes.io/zone=0\n                    kubernetes.azure.com/cluster=conformance-63bf3dfe\n                    kubernetes.azure.com/role=agent\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-agentpool1-12291382-vmss000000\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=agent\n                    node-role.kubernetes.io/agent=\n                    node.kubernetes.io/instance-type=Standard_D2_v3\n                    storageprofile=managed\n                    storagetier=Standard_LRS\n                    topology.kubernetes.io/region=westus2\n                    topology.kubernetes.io/zone=0\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 11 Jan 2023 22:59:12 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-agentpool1-12291382-vmss000000\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 12 Jan 2023 00:45:54 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Thu, 12 Jan 2023 00:43:21 +0000   Wed, 11 Jan 2023 22:59:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Thu, 12 Jan 2023 00:43:21 +0000   Wed, 11 Jan 2023 22:59:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Thu, 12 Jan 2023 00:43:21 +0000   Wed, 11 Jan 2023 22:59:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Thu, 12 Jan 2023 00:43:21 +0000   Wed, 11 Jan 2023 22:59:22 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  Hostname:    k8s-agentpool1-12291382-vmss000000\n  InternalIP:  10.240.0.34\nCapacity:\n  attachable-volumes-azure-disk:  4\n  cpu:                            2\n  ephemeral-storage:              30298176Ki\n  hugepages-1Gi:                  0\n  hugepages-2Mi:                  0\n  memory:                         8149160Ki\n  pods:                           30\n  scheduling.k8s.io/foo:          5\nAllocatable:\n  attachable-volumes-azure-disk:  4\n  cpu:                            2\n  ephemeral-storage:              27922798956\n  hugepages-1Gi:                  0\n  hugepages-2Mi:                  0\n  memory:                         7381160Ki\n  pods:                           30\n  scheduling.k8s.io/foo:          5\nSystem Info:\n  Machine ID:                 9b14971e226246a5b42253ac396816b7\n  System UUID:                6de760d3-d053-9c4d-93f2-a0ad9a45d7b2\n  Boot ID:                    96bc24cd-d979-4510-a131-3944cb1603d5\n  Kernel Version:             5.4.0-1100-azure\n  OS Image:                   Ubuntu 18.04.6 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.13+azure-2\n  Kubelet Version:            v1.24.8\n  Kube-Proxy Version:         v1.24.8\nProviderID:                   azure:///subscriptions/54bb93e1-4518-4d05-9d6d-a29b5cf33a8d/resourceGroups/conformance-63bf3dfe/providers/Microsoft.Compute/virtualMachineScaleSets/k8s-agentpool1-12291382-vmss/virtualMachines/0\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 azure-ip-masq-agent-52p4t                                  50m (2%)      50m (2%)    50Mi (0%)        250Mi (3%)     106m\n  kube-system                 kube-proxy-8chww                                           100m (5%)     0 (0%)      0 (0%)           0 (0%)         106m\n  services-3530               execpodbvts5                                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         25s\n  sonobuoy                    sonobuoy-e2e-job-4d0b931cd54444dd                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5e0d48ed5cef4e5c-gq54g    0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource                       Requests   Limits\n  --------                       --------   ------\n  cpu                            150m (7%)  50m (2%)\n  memory                         50Mi (0%)  250Mi (3%)\n  ephemeral-storage              0 (0%)     0 (0%)\n  hugepages-1Gi                  0 (0%)     0 (0%)\n  hugepages-2Mi                  0 (0%)     0 (0%)\n  attachable-volumes-azure-disk  0          0\n  scheduling.k8s.io/foo          0          0\nEvents:                          <none>\n"
Jan 12 00:45:57.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=kubectl-2294 describe namespace kubectl-2294'
Jan 12 00:45:57.866: INFO: stderr: ""
Jan 12 00:45:57.866: INFO: stdout: "Name:         kubectl-2294\nLabels:       e2e-framework=kubectl\n              e2e-run=88d88f57-65ea-42ab-a2fe-40f138fdf3e2\n              kubernetes.io/metadata.name=kubectl-2294\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 12 00:45:57.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2294" for this suite.
â€¢{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":333,"skipped":6144,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:45:57.877: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-9211
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 12 00:45:58.036: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:46:00.051: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 12 00:46:00.065: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:46:02.075: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 12 00:46:02.115: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 12 00:46:02.130: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 12 00:46:04.131: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 12 00:46:04.144: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 12 00:46:06.130: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 12 00:46:06.137: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 12 00:46:06.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-9211" for this suite.

â€¢ [SLOW TEST:8.273 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":334,"skipped":6183,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:06.152: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1124
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:46:06.325: INFO: The status of Pod busybox-host-aliasesed0e86f4-8851-45ac-8ec5-7708e1b838ef is Pending, waiting for it to be Running (with Ready = true)
Jan 12 00:46:08.332: INFO: The status of Pod busybox-host-aliasesed0e86f4-8851-45ac-8ec5-7708e1b838ef is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 12 00:46:08.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1124" for this suite.
â€¢{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":335,"skipped":6216,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:08.421: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 12 00:46:12.718: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 12 00:46:12.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3683" for this suite.
â€¢{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":336,"skipped":6227,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:12.755: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2958
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Jan 12 00:46:12.914: INFO: Pod name sample-pod: Found 0 pods out of 3
Jan 12 00:46:17.926: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Jan 12 00:46:17.933: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 12 00:46:17.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2958" for this suite.

â€¢ [SLOW TEST:5.253 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":337,"skipped":6251,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:18.009: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-f25p
STEP: Creating a pod to test atomic-volume-subpath
Jan 12 00:46:18.175: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-f25p" in namespace "subpath-3521" to be "Succeeded or Failed"
Jan 12 00:46:18.197: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Pending", Reason="", readiness=false. Elapsed: 22.081581ms
Jan 12 00:46:20.202: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027474404s
Jan 12 00:46:22.210: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 4.035307357s
Jan 12 00:46:24.221: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 6.046008935s
Jan 12 00:46:26.229: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 8.054141223s
Jan 12 00:46:28.240: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 10.064971444s
Jan 12 00:46:30.245: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 12.070145795s
Jan 12 00:46:32.256: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 14.081048023s
Jan 12 00:46:34.267: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 16.092184589s
Jan 12 00:46:36.276: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 18.100920939s
Jan 12 00:46:38.286: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 20.111296025s
Jan 12 00:46:40.291: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=true. Elapsed: 22.115878523s
Jan 12 00:46:42.309: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Running", Reason="", readiness=false. Elapsed: 24.134427628s
Jan 12 00:46:44.320: INFO: Pod "pod-subpath-test-configmap-f25p": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.145311685s
STEP: Saw pod success
Jan 12 00:46:44.320: INFO: Pod "pod-subpath-test-configmap-f25p" satisfied condition "Succeeded or Failed"
Jan 12 00:46:44.324: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-subpath-test-configmap-f25p container test-container-subpath-configmap-f25p: <nil>
STEP: delete the pod
Jan 12 00:46:44.350: INFO: Waiting for pod pod-subpath-test-configmap-f25p to disappear
Jan 12 00:46:44.360: INFO: Pod pod-subpath-test-configmap-f25p no longer exists
STEP: Deleting pod pod-subpath-test-configmap-f25p
Jan 12 00:46:44.360: INFO: Deleting pod "pod-subpath-test-configmap-f25p" in namespace "subpath-3521"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 12 00:46:44.362: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3521" for this suite.

â€¢ [SLOW TEST:26.361 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":338,"skipped":6279,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:44.371: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-5025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-4672
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-7370
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:46:50.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-5025" for this suite.
STEP: Destroying namespace "nsdeletetest-4672" for this suite.
Jan 12 00:46:50.889: INFO: Namespace nsdeletetest-4672 was already deleted
STEP: Destroying namespace "nsdeletetest-7370" for this suite.

â€¢ [SLOW TEST:6.527 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":339,"skipped":6284,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:50.900: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-108
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 12 00:46:51.085: INFO: Waiting up to 5m0s for pod "downward-api-99891318-513c-4885-8740-b724a764bb0d" in namespace "downward-api-108" to be "Succeeded or Failed"
Jan 12 00:46:51.100: INFO: Pod "downward-api-99891318-513c-4885-8740-b724a764bb0d": Phase="Pending", Reason="", readiness=false. Elapsed: 15.32611ms
Jan 12 00:46:53.110: INFO: Pod "downward-api-99891318-513c-4885-8740-b724a764bb0d": Phase="Running", Reason="", readiness=true. Elapsed: 2.02546014s
Jan 12 00:46:55.115: INFO: Pod "downward-api-99891318-513c-4885-8740-b724a764bb0d": Phase="Running", Reason="", readiness=false. Elapsed: 4.030149152s
Jan 12 00:46:57.128: INFO: Pod "downward-api-99891318-513c-4885-8740-b724a764bb0d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042693317s
STEP: Saw pod success
Jan 12 00:46:57.128: INFO: Pod "downward-api-99891318-513c-4885-8740-b724a764bb0d" satisfied condition "Succeeded or Failed"
Jan 12 00:46:57.133: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downward-api-99891318-513c-4885-8740-b724a764bb0d container dapi-container: <nil>
STEP: delete the pod
Jan 12 00:46:57.161: INFO: Waiting for pod downward-api-99891318-513c-4885-8740-b724a764bb0d to disappear
Jan 12 00:46:57.163: INFO: Pod downward-api-99891318-513c-4885-8740-b724a764bb0d no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 12 00:46:57.163: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-108" for this suite.

â€¢ [SLOW TEST:6.272 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":340,"skipped":6293,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:46:57.172: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5688
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:46:57.320: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51" in namespace "projected-5688" to be "Succeeded or Failed"
Jan 12 00:46:57.328: INFO: Pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51": Phase="Pending", Reason="", readiness=false. Elapsed: 8.064677ms
Jan 12 00:46:59.337: INFO: Pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017814612s
Jan 12 00:47:01.345: INFO: Pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51": Phase="Pending", Reason="", readiness=false. Elapsed: 4.025677228s
Jan 12 00:47:03.354: INFO: Pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.034047749s
STEP: Saw pod success
Jan 12 00:47:03.354: INFO: Pod "downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51" satisfied condition "Succeeded or Failed"
Jan 12 00:47:03.357: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51 container client-container: <nil>
STEP: delete the pod
Jan 12 00:47:03.378: INFO: Waiting for pod downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51 to disappear
Jan 12 00:47:03.381: INFO: Pod downwardapi-volume-b9f4b2d0-df7a-43bc-b577-45d217cfeb51 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 12 00:47:03.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5688" for this suite.

â€¢ [SLOW TEST:6.218 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":341,"skipped":6299,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:03.390: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-5552
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-6540ce09-e69a-4249-ac5a-3f8292c020c1-185
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:47:03.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-5552" for this suite.
STEP: Destroying namespace "nspatchtest-6540ce09-e69a-4249-ac5a-3f8292c020c1-185" for this suite.
â€¢{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":342,"skipped":6326,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:03.682: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1001
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 12 00:47:03.833: INFO: Waiting up to 5m0s for pod "pod-d748d979-bdf9-4e9d-b73d-abffd294fd43" in namespace "emptydir-1001" to be "Succeeded or Failed"
Jan 12 00:47:03.843: INFO: Pod "pod-d748d979-bdf9-4e9d-b73d-abffd294fd43": Phase="Pending", Reason="", readiness=false. Elapsed: 9.941395ms
Jan 12 00:47:05.854: INFO: Pod "pod-d748d979-bdf9-4e9d-b73d-abffd294fd43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020804271s
Jan 12 00:47:07.865: INFO: Pod "pod-d748d979-bdf9-4e9d-b73d-abffd294fd43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031851341s
STEP: Saw pod success
Jan 12 00:47:07.865: INFO: Pod "pod-d748d979-bdf9-4e9d-b73d-abffd294fd43" satisfied condition "Succeeded or Failed"
Jan 12 00:47:07.869: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-d748d979-bdf9-4e9d-b73d-abffd294fd43 container test-container: <nil>
STEP: delete the pod
Jan 12 00:47:07.891: INFO: Waiting for pod pod-d748d979-bdf9-4e9d-b73d-abffd294fd43 to disappear
Jan 12 00:47:07.894: INFO: Pod pod-d748d979-bdf9-4e9d-b73d-abffd294fd43 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:47:07.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1001" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6331,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:07.904: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4328.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4328.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4328.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4328.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 12 00:47:12.129: INFO: DNS probes using dns-4328/dns-test-ce50f04a-be54-4421-8291-d1f5ad3b3c8a succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 12 00:47:12.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4328" for this suite.
â€¢{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":344,"skipped":6348,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:12.159: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Jan 12 00:47:12.316: INFO: Waiting up to 5m0s for pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568" in namespace "var-expansion-2233" to be "Succeeded or Failed"
Jan 12 00:47:12.326: INFO: Pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568": Phase="Pending", Reason="", readiness=false. Elapsed: 9.819846ms
Jan 12 00:47:14.335: INFO: Pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018639046s
Jan 12 00:47:16.343: INFO: Pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027255744s
Jan 12 00:47:18.353: INFO: Pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.036797555s
STEP: Saw pod success
Jan 12 00:47:18.353: INFO: Pod "var-expansion-013300b5-456a-4e94-a962-d04794b8c568" satisfied condition "Succeeded or Failed"
Jan 12 00:47:18.356: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod var-expansion-013300b5-456a-4e94-a962-d04794b8c568 container dapi-container: <nil>
STEP: delete the pod
Jan 12 00:47:18.385: INFO: Waiting for pod var-expansion-013300b5-456a-4e94-a962-d04794b8c568 to disappear
Jan 12 00:47:18.391: INFO: Pod var-expansion-013300b5-456a-4e94-a962-d04794b8c568 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 12 00:47:18.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2233" for this suite.

â€¢ [SLOW TEST:6.244 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":345,"skipped":6364,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:18.403: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 12 00:47:18.561: INFO: Waiting up to 5m0s for pod "pod-20552648-08f1-48b9-b639-0828ac003eeb" in namespace "emptydir-7600" to be "Succeeded or Failed"
Jan 12 00:47:18.564: INFO: Pod "pod-20552648-08f1-48b9-b639-0828ac003eeb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.790633ms
Jan 12 00:47:20.569: INFO: Pod "pod-20552648-08f1-48b9-b639-0828ac003eeb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007871898s
Jan 12 00:47:22.578: INFO: Pod "pod-20552648-08f1-48b9-b639-0828ac003eeb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016781714s
STEP: Saw pod success
Jan 12 00:47:22.578: INFO: Pod "pod-20552648-08f1-48b9-b639-0828ac003eeb" satisfied condition "Succeeded or Failed"
Jan 12 00:47:22.581: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-20552648-08f1-48b9-b639-0828ac003eeb container test-container: <nil>
STEP: delete the pod
Jan 12 00:47:22.619: INFO: Waiting for pod pod-20552648-08f1-48b9-b639-0828ac003eeb to disappear
Jan 12 00:47:22.623: INFO: Pod pod-20552648-08f1-48b9-b639-0828ac003eeb no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 12 00:47:22.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7600" for this suite.
â€¢{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":346,"skipped":6376,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:22.633: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-604
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 12 00:47:22.822: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:47:22.829: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:47:22.829: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:47:23.842: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:47:23.847: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 12 00:47:23.847: INFO: Node k8s-agentpool1-12291382-vmss000000 is running 0 daemon pod, expected 1
Jan 12 00:47:24.839: INFO: DaemonSet pods can't tolerate node k8s-master-12291382-0 with taints [{Key:node-role.kubernetes.io/master Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 12 00:47:24.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 12 00:47:24.843: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Jan 12 00:47:24.877: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33164"},"items":null}

Jan 12 00:47:24.884: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33164"},"items":[{"metadata":{"name":"daemon-set-2xphh","generateName":"daemon-set-","namespace":"daemonsets-604","uid":"02672bf8-75c7-4141-813f-2de24dc345fd","resourceVersion":"33160","creationTimestamp":"2023-01-12T00:47:22Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"bb272cd5-0363-4ec4-b84c-81e0214348a9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bb272cd5-0363-4ec4-b84c-81e0214348a9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-n45s5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-n45s5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-agentpool1-12291382-vmss000001","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-agentpool1-12291382-vmss000001"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"}],"hostIP":"10.240.0.63","podIP":"10.240.0.72","podIPs":[{"ip":"10.240.0.72"}],"startTime":"2023-01-12T00:47:22Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-12T00:47:24Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://abeff81044f89499871de661a24ade003fe92a74f77c78d2c81cf7f54f3ef468","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fts77","generateName":"daemon-set-","namespace":"daemonsets-604","uid":"6f569e90-a02f-4764-947d-483ee7e48d38","resourceVersion":"33157","creationTimestamp":"2023-01-12T00:47:22Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"bb272cd5-0363-4ec4-b84c-81e0214348a9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bb272cd5-0363-4ec4-b84c-81e0214348a9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p44d5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p44d5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-agentpool1-12291382-vmss000000","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-agentpool1-12291382-vmss000000"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"}],"hostIP":"10.240.0.34","podIP":"10.240.0.37","podIPs":[{"ip":"10.240.0.37"}],"startTime":"2023-01-12T00:47:22Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-12T00:47:23Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://6a4dabb9b855b6a57e1363d1131fc1dfbb19a47a4315968a41cf7ed58ab0da42","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nhzhd","generateName":"daemon-set-","namespace":"daemonsets-604","uid":"01967653-1b11-4c73-84d4-96b5142fd16c","resourceVersion":"33162","creationTimestamp":"2023-01-12T00:47:22Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"bb272cd5-0363-4ec4-b84c-81e0214348a9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bb272cd5-0363-4ec4-b84c-81e0214348a9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-12T00:47:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.240.0.93\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dv22q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dv22q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-agentpool1-12291382-vmss000002","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-agentpool1-12291382-vmss000002"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:24Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-12T00:47:22Z"}],"hostIP":"10.240.0.92","podIP":"10.240.0.93","podIPs":[{"ip":"10.240.0.93"}],"startTime":"2023-01-12T00:47:22Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-12T00:47:23Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://17af0c6e320483b332f9c942501dbf86489c1bf6a472a5d65ff26c4ced1058b4","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:47:24.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-604" for this suite.
â€¢{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":347,"skipped":6430,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:47:24.920: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Jan 12 00:47:35.176: INFO: The status of Pod kube-controller-manager-k8s-master-12291382-0 is Running (Ready = true)
Jan 12 00:48:35.372: INFO: MetricsGrabber failed grab metrics. Skipping metrics gathering.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 12 00:48:35.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4925" for this suite.

â€¢ [SLOW TEST:70.466 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":348,"skipped":6447,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:48:35.389: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4744
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:48:35.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4744" for this suite.
â€¢{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":349,"skipped":6496,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:48:35.573: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 12 00:48:35.731: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976" in namespace "downward-api-6694" to be "Succeeded or Failed"
Jan 12 00:48:35.741: INFO: Pod "downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976": Phase="Pending", Reason="", readiness=false. Elapsed: 9.085901ms
Jan 12 00:48:37.749: INFO: Pod "downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017157229s
Jan 12 00:48:39.757: INFO: Pod "downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025454759s
STEP: Saw pod success
Jan 12 00:48:39.757: INFO: Pod "downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976" satisfied condition "Succeeded or Failed"
Jan 12 00:48:39.760: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976 container client-container: <nil>
STEP: delete the pod
Jan 12 00:48:39.789: INFO: Waiting for pod downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976 to disappear
Jan 12 00:48:39.792: INFO: Pod downwardapi-volume-e4394e7a-0782-4b25-a713-41d6186d9976 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 12 00:48:39.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6694" for this suite.
â€¢{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6515,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:48:39.801: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Jan 12 00:48:39.978: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 12 00:48:44.999: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 12 00:48:45.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8925" for this suite.

â€¢ [SLOW TEST:5.283 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":351,"skipped":6520,"failed":0}
S
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:48:45.085: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1094
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-15041b67-ed90-4c08-97ba-9b3c5e2d46a3
STEP: Creating a pod to test consume configMaps
Jan 12 00:48:45.282: INFO: Waiting up to 5m0s for pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37" in namespace "configmap-1094" to be "Succeeded or Failed"
Jan 12 00:48:45.295: INFO: Pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37": Phase="Pending", Reason="", readiness=false. Elapsed: 13.133946ms
Jan 12 00:48:47.303: INFO: Pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37": Phase="Running", Reason="", readiness=true. Elapsed: 2.021255606s
Jan 12 00:48:49.314: INFO: Pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37": Phase="Running", Reason="", readiness=false. Elapsed: 4.032508534s
Jan 12 00:48:51.321: INFO: Pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.039178421s
STEP: Saw pod success
Jan 12 00:48:51.321: INFO: Pod "pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37" satisfied condition "Succeeded or Failed"
Jan 12 00:48:51.325: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37 container configmap-volume-test: <nil>
STEP: delete the pod
Jan 12 00:48:51.348: INFO: Waiting for pod pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37 to disappear
Jan 12 00:48:51.351: INFO: Pod pod-configmaps-c09678d2-271d-42d2-a665-8da1f5ca4b37 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 12 00:48:51.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1094" for this suite.

â€¢ [SLOW TEST:6.291 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":352,"skipped":6521,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:48:51.379: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-2009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Jan 12 00:48:51.532: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 12 00:49:51.568: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:49:51.571: INFO: Starting informer...
STEP: Starting pod...
Jan 12 00:49:51.785: INFO: Pod is running on k8s-agentpool1-12291382-vmss000001. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Jan 12 00:49:51.808: INFO: Pod wasn't evicted. Proceeding
Jan 12 00:49:51.809: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Jan 12 00:51:06.834: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Jan 12 00:51:06.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-2009" for this suite.

â€¢ [SLOW TEST:135.471 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":353,"skipped":6561,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:51:06.851: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2401
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-e0ff18c3-c60f-462b-afc6-c036b5eff484
STEP: Creating a pod to test consume configMaps
Jan 12 00:51:07.020: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09" in namespace "projected-2401" to be "Succeeded or Failed"
Jan 12 00:51:07.029: INFO: Pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09": Phase="Pending", Reason="", readiness=false. Elapsed: 8.582888ms
Jan 12 00:51:09.045: INFO: Pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09": Phase="Running", Reason="", readiness=true. Elapsed: 2.024777917s
Jan 12 00:51:11.051: INFO: Pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09": Phase="Running", Reason="", readiness=false. Elapsed: 4.030738141s
Jan 12 00:51:13.056: INFO: Pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.036095622s
STEP: Saw pod success
Jan 12 00:51:13.056: INFO: Pod "pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09" satisfied condition "Succeeded or Failed"
Jan 12 00:51:13.059: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000002 pod pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09 container agnhost-container: <nil>
STEP: delete the pod
Jan 12 00:51:13.110: INFO: Waiting for pod pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09 to disappear
Jan 12 00:51:13.113: INFO: Pod pod-projected-configmaps-5461c75a-d51b-43bf-a4af-40984731ed09 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 12 00:51:13.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2401" for this suite.

â€¢ [SLOW TEST:6.271 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":354,"skipped":6592,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:51:13.124: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-860
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 12 00:51:13.279: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 12 00:51:15.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-860 --namespace=crd-publish-openapi-860 create -f -'
Jan 12 00:51:17.339: INFO: stderr: ""
Jan 12 00:51:17.339: INFO: stdout: "e2e-test-crd-publish-openapi-4888-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 12 00:51:17.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-860 --namespace=crd-publish-openapi-860 delete e2e-test-crd-publish-openapi-4888-crds test-cr'
Jan 12 00:51:17.418: INFO: stderr: ""
Jan 12 00:51:17.418: INFO: stdout: "e2e-test-crd-publish-openapi-4888-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jan 12 00:51:17.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-860 --namespace=crd-publish-openapi-860 apply -f -'
Jan 12 00:51:17.689: INFO: stderr: ""
Jan 12 00:51:17.689: INFO: stdout: "e2e-test-crd-publish-openapi-4888-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 12 00:51:17.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-860 --namespace=crd-publish-openapi-860 delete e2e-test-crd-publish-openapi-4888-crds test-cr'
Jan 12 00:51:17.766: INFO: stderr: ""
Jan 12 00:51:17.766: INFO: stdout: "e2e-test-crd-publish-openapi-4888-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Jan 12 00:51:17.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-462275495 --namespace=crd-publish-openapi-860 explain e2e-test-crd-publish-openapi-4888-crds'
Jan 12 00:51:18.010: INFO: stderr: ""
Jan 12 00:51:18.010: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4888-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 12 00:51:20.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-860" for this suite.

â€¢ [SLOW TEST:7.152 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":355,"skipped":6598,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 12 00:51:20.276: INFO: >>> kubeConfig: /tmp/kubeconfig-462275495
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9097
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-1c61b244-0ddd-40b0-a123-cad9b9f6b831
STEP: Creating a pod to test consume secrets
Jan 12 00:51:20.438: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c" in namespace "projected-9097" to be "Succeeded or Failed"
Jan 12 00:51:20.441: INFO: Pod "pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.266733ms
Jan 12 00:51:22.449: INFO: Pod "pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010496585s
Jan 12 00:51:24.458: INFO: Pod "pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02001036s
STEP: Saw pod success
Jan 12 00:51:24.458: INFO: Pod "pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c" satisfied condition "Succeeded or Failed"
Jan 12 00:51:24.461: INFO: Trying to get logs from node k8s-agentpool1-12291382-vmss000001 pod pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 12 00:51:24.514: INFO: Waiting for pod pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c to disappear
Jan 12 00:51:24.517: INFO: Pod pod-projected-secrets-724a2a6a-356a-4dbf-b408-75a34b4e905c no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 12 00:51:24.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9097" for this suite.
â€¢{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6606,"failed":0}
SSSSSSSSSSSJan 12 00:51:24.526: INFO: Running AfterSuite actions on all nodes
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Jan 12 00:51:24.526: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Jan 12 00:51:24.526: INFO: Running AfterSuite actions on node 1
Jan 12 00:51:24.526: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6617,"failed":0}

Ran 356 of 6973 Specs in 6381.808 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6617 Skipped
PASS

Ginkgo ran 1 suite in 1h46m23.826033773s
Test Suite Passed
