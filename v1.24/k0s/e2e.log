I0803 14:24:24.664225      23 e2e.go:129] Starting e2e run "8dfca170-da49-4e3c-8985-4fbedd5656b3" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1659536664 - Will randomize all specs
Will run 356 of 6971 specs

Aug  3 14:24:26.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:24:26.257: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug  3 14:24:26.312: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug  3 14:24:26.325: INFO: 9 / 9 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug  3 14:24:26.325: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
Aug  3 14:24:26.325: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug  3 14:24:26.328: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
Aug  3 14:24:26.328: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Aug  3 14:24:26.328: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
Aug  3 14:24:26.328: INFO: e2e test version: v1.24.3
Aug  3 14:24:26.329: INFO: kube-apiserver version: v1.24.3+k0s
Aug  3 14:24:26.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:24:26.332: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:26.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption
W0803 14:24:26.357275      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug  3 14:24:26.357: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Aug  3 14:24:26.362: INFO: PSP annotation exists on dry run pod: "00-k0s-privileged"; assuming PodSecurityPolicy is enabled
W0803 14:24:26.364276      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0803 14:24:26.366521      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug  3 14:24:26.371: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-1058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  3 14:24:32.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1058" for this suite.

• [SLOW TEST:6.203 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":1,"skipped":55,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:32.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Aug  3 14:24:32.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-4990 cluster-info'
Aug  3 14:24:33.278: INFO: stderr: ""
Aug  3 14:24:33.278: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 14:24:33.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4990" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":2,"skipped":78,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:33.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1365
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Aug  3 14:24:33.401: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug  3 14:24:33.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:34.209: INFO: stderr: ""
Aug  3 14:24:34.209: INFO: stdout: "service/agnhost-replica created\n"
Aug  3 14:24:34.209: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug  3 14:24:34.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:34.502: INFO: stderr: ""
Aug  3 14:24:34.502: INFO: stdout: "service/agnhost-primary created\n"
Aug  3 14:24:34.502: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug  3 14:24:34.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:34.735: INFO: stderr: ""
Aug  3 14:24:34.736: INFO: stdout: "service/frontend created\n"
Aug  3 14:24:34.736: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug  3 14:24:34.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:34.917: INFO: stderr: ""
Aug  3 14:24:34.917: INFO: stdout: "deployment.apps/frontend created\n"
Aug  3 14:24:34.917: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug  3 14:24:34.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:35.150: INFO: stderr: ""
Aug  3 14:24:35.150: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug  3 14:24:35.151: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug  3 14:24:35.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 create -f -'
Aug  3 14:24:35.431: INFO: stderr: ""
Aug  3 14:24:35.431: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug  3 14:24:35.431: INFO: Waiting for all frontend pods to be Running.
Aug  3 14:24:40.481: INFO: Waiting for frontend to serve content.
Aug  3 14:24:40.490: INFO: Trying to add a new entry to the guestbook.
Aug  3 14:24:40.495: INFO: Verifying that added entry can be retrieved.
Aug  3 14:24:40.503: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
STEP: using delete to clean up resources
Aug  3 14:24:45.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.570: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.570: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug  3 14:24:45.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.657: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.657: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug  3 14:24:45.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.715: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.715: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug  3 14:24:45.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.764: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.764: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug  3 14:24:45.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.826: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.826: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug  3 14:24:45.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1365 delete --grace-period=0 --force -f -'
Aug  3 14:24:45.877: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:24:45.877: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 14:24:45.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1365" for this suite.

• [SLOW TEST:12.601 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":3,"skipped":91,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:45.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 14:24:46.029: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2160" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":4,"skipped":93,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:46.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8513
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-610e8b4d-09f2-41bb-a304-ea334d128c68
STEP: Creating a pod to test consume secrets
Aug  3 14:24:46.166: INFO: Waiting up to 5m0s for pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6" in namespace "secrets-8513" to be "Succeeded or Failed"
Aug  3 14:24:46.168: INFO: Pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.33885ms
Aug  3 14:24:48.172: INFO: Pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6": Phase="Running", Reason="", readiness=true. Elapsed: 2.006537813s
Aug  3 14:24:50.177: INFO: Pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6": Phase="Running", Reason="", readiness=false. Elapsed: 4.010711076s
Aug  3 14:24:52.183: INFO: Pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017207718s
STEP: Saw pod success
Aug  3 14:24:52.183: INFO: Pod "pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6" satisfied condition "Succeeded or Failed"
Aug  3 14:24:52.185: INFO: Trying to get logs from node worker-1 pod pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6 container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 14:24:52.204: INFO: Waiting for pod pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6 to disappear
Aug  3 14:24:52.206: INFO: Pod pod-secrets-2d80b057-3b75-43b6-af37-832fdcd3f1a6 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 14:24:52.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8513" for this suite.

• [SLOW TEST:6.177 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":95,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:52.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:52.332: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-4256
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-927
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Aug  3 14:24:58.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-4256" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  3 14:24:58.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-927" for this suite.

• [SLOW TEST:6.301 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":6,"skipped":122,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:24:58.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4625
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug  3 14:24:58.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:25:13.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4625" for this suite.

• [SLOW TEST:14.733 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":7,"skipped":167,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:13.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:25:13.771: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:25:16.830: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:25:26.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7106" for this suite.
STEP: Destroying namespace "webhook-7106-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.731 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":8,"skipped":184,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:26.977: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7986
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-7986
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-7986
I0803 14:25:27.126024      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7986, replica count: 2
Aug  3 14:25:30.178: INFO: Creating new exec pod
I0803 14:25:30.178104      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:25:33.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7986 exec execpodj8xc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  3 14:25:33.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  3 14:25:33.325: INFO: stdout: ""
Aug  3 14:25:34.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7986 exec execpodj8xc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  3 14:25:34.438: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  3 14:25:34.438: INFO: stdout: ""
Aug  3 14:25:35.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7986 exec execpodj8xc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  3 14:25:35.442: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  3 14:25:35.442: INFO: stdout: "externalname-service-9db8x"
Aug  3 14:25:35.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7986 exec execpodj8xc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.222.131 80'
Aug  3 14:25:35.554: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.222.131 80\nConnection to 10.102.222.131 80 port [tcp/http] succeeded!\n"
Aug  3 14:25:35.554: INFO: stdout: ""
Aug  3 14:25:36.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7986 exec execpodj8xc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.222.131 80'
Aug  3 14:25:36.671: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.222.131 80\nConnection to 10.102.222.131 80 port [tcp/http] succeeded!\n"
Aug  3 14:25:36.671: INFO: stdout: "externalname-service-9db8x"
Aug  3 14:25:36.671: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:25:36.689: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7986" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.732 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":9,"skipped":196,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:36.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-8933
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Aug  3 14:25:36.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-8933" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":10,"skipped":241,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:36.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9350
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:25:36.992: INFO: Waiting up to 5m0s for pod "downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3" in namespace "projected-9350" to be "Succeeded or Failed"
Aug  3 14:25:36.994: INFO: Pod "downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.517683ms
Aug  3 14:25:39.000: INFO: Pod "downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007797279s
Aug  3 14:25:41.007: INFO: Pod "downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01507216s
STEP: Saw pod success
Aug  3 14:25:41.007: INFO: Pod "downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3" satisfied condition "Succeeded or Failed"
Aug  3 14:25:41.009: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3 container client-container: <nil>
STEP: delete the pod
Aug  3 14:25:41.020: INFO: Waiting for pod downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3 to disappear
Aug  3 14:25:41.025: INFO: Pod downwardapi-volume-54d4322b-b6a3-4fbf-b11c-24ec7af571f3 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 14:25:41.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9350" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":259,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:41.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-4369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug  3 14:25:41.191: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:25:43.197: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug  3 14:25:43.205: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:25:45.209: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug  3 14:25:45.211: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.212: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.212: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  3 14:25:45.277: INFO: Exec stderr: ""
Aug  3 14:25:45.277: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.277: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.277: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  3 14:25:45.336: INFO: Exec stderr: ""
Aug  3 14:25:45.336: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.336: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.336: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  3 14:25:45.415: INFO: Exec stderr: ""
Aug  3 14:25:45.416: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.416: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.416: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  3 14:25:45.479: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug  3 14:25:45.479: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.480: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.480: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug  3 14:25:45.535: INFO: Exec stderr: ""
Aug  3 14:25:45.535: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.536: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.536: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug  3 14:25:45.575: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug  3 14:25:45.575: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.575: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.575: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  3 14:25:45.639: INFO: Exec stderr: ""
Aug  3 14:25:45.639: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.640: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.640: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug  3 14:25:45.700: INFO: Exec stderr: ""
Aug  3 14:25:45.700: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.701: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.701: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  3 14:25:45.741: INFO: Exec stderr: ""
Aug  3 14:25:45.741: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4369 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:25:45.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:25:45.741: INFO: ExecWithOptions: Clientset creation
Aug  3 14:25:45.741: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4369/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug  3 14:25:45.795: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Aug  3 14:25:45.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-4369" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":12,"skipped":284,"failed":0}
SS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:25:45.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  3 14:25:45.923: INFO: PodSpec: initContainers in spec.initContainers
Aug  3 14:26:27.488: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-9c4ef660-6ebd-4056-b2e7-4710a40e4a15", GenerateName:"", Namespace:"init-container-8967", SelfLink:"", UID:"6b364a51-40ee-405e-8e08-f4dce78449b4", ResourceVersion:"1791", Generation:0, CreationTimestamp:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"923438026"}, Annotations:map[string]string{"kubernetes.io/psp":"00-k0s-privileged"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0025fc5e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 3, 14, 25, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0025fc618), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dpwct", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00511b960), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dpwct", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dpwct", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dpwct", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0040691e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001d72e70), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004069270)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004069290)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004069298), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00406929c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003bd2230), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.36.176", PodIP:"10.244.0.13", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.0.13"}}, StartTime:time.Date(2022, time.August, 3, 14, 25, 45, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001d72f50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001d73030)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://d15415d7cef173dda509e7c04028e42a10b9bd25cdb30bc2632627ecaf7a7f3f", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00511b9e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00511b9c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00406931f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 14:26:27.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8967" for this suite.

• [SLOW TEST:41.694 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":13,"skipped":286,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:27.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-1948
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-6c41e6ed-31df-42da-bee9-d9916235bb65-4650
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:26:27.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-1948" for this suite.
STEP: Destroying namespace "nspatchtest-6c41e6ed-31df-42da-bee9-d9916235bb65-4650" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":14,"skipped":378,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:27.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1437
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:26:27.879: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48" in namespace "downward-api-1437" to be "Succeeded or Failed"
Aug  3 14:26:27.882: INFO: Pod "downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.616211ms
Aug  3 14:26:29.885: INFO: Pod "downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005692893s
Aug  3 14:26:31.892: INFO: Pod "downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012572747s
STEP: Saw pod success
Aug  3 14:26:31.892: INFO: Pod "downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48" satisfied condition "Succeeded or Failed"
Aug  3 14:26:31.894: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48 container client-container: <nil>
STEP: delete the pod
Aug  3 14:26:31.905: INFO: Waiting for pod downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48 to disappear
Aug  3 14:26:31.907: INFO: Pod downwardapi-volume-7ee90da3-3ba5-4755-b5d2-6ccd22641e48 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 14:26:31.907: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1437" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":400,"failed":0}
SS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:31.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1908
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  3 14:26:32.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1908" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":16,"skipped":402,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:32.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:26:32.172: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug  3 14:26:32.177: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  3 14:26:37.184: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  3 14:26:37.184: INFO: Creating deployment "test-rolling-update-deployment"
Aug  3 14:26:37.187: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug  3 14:26:37.191: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug  3 14:26:39.197: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug  3 14:26:39.198: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:26:39.204: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-3515  339a3461-f5a2-49ae-ad1e-7229cce3a76d 1936 1 2022-08-03 14:26:37 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-03 14:26:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:26:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041f05d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-03 14:26:37 +0000 UTC,LastTransitionTime:2022-08-03 14:26:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-08-03 14:26:38 +0000 UTC,LastTransitionTime:2022-08-03 14:26:37 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  3 14:26:39.206: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-3515  8a50bb8e-e40e-4512-a15b-6a6d09b743f7 1927 1 2022-08-03 14:26:37 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 339a3461-f5a2-49ae-ad1e-7229cce3a76d 0xc0041f0b47 0xc0041f0b48}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:26:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"339a3461-f5a2-49ae-ad1e-7229cce3a76d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:26:38 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041f0c08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:26:39.206: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug  3 14:26:39.206: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-3515  6d6a1790-9fa6-470c-a9b0-6ab39b9dcc42 1935 2 2022-08-03 14:26:32 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 339a3461-f5a2-49ae-ad1e-7229cce3a76d 0xc0041f09e7 0xc0041f09e8}] []  [{e2e.test Update apps/v1 2022-08-03 14:26:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:26:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"339a3461-f5a2-49ae-ad1e-7229cce3a76d\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:26:38 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0041f0ae8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:26:39.208: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-l2kz6" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-l2kz6 test-rolling-update-deployment-67c8f74c6c- deployment-3515  5c9b43f7-02f3-4c63-b769-7d208bc429e3 1926 0 2022-08-03 14:26:37 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c 8a50bb8e-e40e-4512-a15b-6a6d09b743f7 0xc0041f114f 0xc0041f1180}] []  [{kube-controller-manager Update v1 2022-08-03 14:26:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a50bb8e-e40e-4512-a15b-6a6d09b743f7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:26:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.14\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sz2lm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sz2lm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:26:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:26:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:26:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:26:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.14,StartTime:2022-08-03 14:26:37 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:26:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://35727d11bc16393b3d9d7e52d3c9110a3069520240b9a45d5097ad3f393f5e4f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.14,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:26:39.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3515" for this suite.

• [SLOW TEST:7.160 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":17,"skipped":412,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:39.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8561
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug  3 14:26:39.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:26:51.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8561" for this suite.

• [SLOW TEST:12.463 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":18,"skipped":420,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:26:51.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-3764
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug  3 14:26:51.809: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2014 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:26:51.809: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2014 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug  3 14:26:51.813: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2015 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:26:51.814: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2015 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug  3 14:26:51.817: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2016 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:26:51.818: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2016 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug  3 14:26:51.821: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2017 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:26:51.821: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3764  b35234cb-e62a-4fae-b2f8-dda44a1498c7 2017 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug  3 14:26:51.823: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3764  811c0224-666d-4dd6-8cc9-30af500b1897 2018 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:26:51.823: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3764  811c0224-666d-4dd6-8cc9-30af500b1897 2018 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug  3 14:27:01.834: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3764  811c0224-666d-4dd6-8cc9-30af500b1897 2045 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:27:01.834: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3764  811c0224-666d-4dd6-8cc9-30af500b1897 2045 0 2022-08-03 14:26:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-03 14:26:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  3 14:27:11.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-3764" for this suite.

• [SLOW TEST:20.169 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":19,"skipped":454,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:27:11.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1040
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 14:27:11.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1040" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":20,"skipped":481,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:27:11.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-8038
STEP: creating replication controller nodeport-test in namespace services-8038
I0803 14:27:12.124177      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-8038, replica count: 2
I0803 14:27:15.176054      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:27:15.176: INFO: Creating new exec pod
Aug  3 14:27:18.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8038 exec execpod56gn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug  3 14:27:18.306: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug  3 14:27:18.306: INFO: stdout: ""
Aug  3 14:27:19.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8038 exec execpod56gn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug  3 14:27:19.415: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug  3 14:27:19.415: INFO: stdout: "nodeport-test-87ldw"
Aug  3 14:27:19.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8038 exec execpod56gn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.210.33 80'
Aug  3 14:27:19.523: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.210.33 80\nConnection to 10.96.210.33 80 port [tcp/http] succeeded!\n"
Aug  3 14:27:19.523: INFO: stdout: "nodeport-test-87ldw"
Aug  3 14:27:19.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8038 exec execpod56gn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.176 31809'
Aug  3 14:27:19.629: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.176 31809\nConnection to 10.0.36.176 31809 port [tcp/*] succeeded!\n"
Aug  3 14:27:19.629: INFO: stdout: "nodeport-test-87ldw"
Aug  3 14:27:19.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8038 exec execpod56gn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.79 31809'
Aug  3 14:27:19.734: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.79 31809\nConnection to 10.0.36.79 31809 port [tcp/*] succeeded!\n"
Aug  3 14:27:19.734: INFO: stdout: "nodeport-test-87ldw"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:27:19.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8038" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.748 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":21,"skipped":553,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:27:19.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7740
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:27:19.870: INFO: Waiting up to 5m0s for pod "downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2" in namespace "projected-7740" to be "Succeeded or Failed"
Aug  3 14:27:19.872: INFO: Pod "downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 1.826511ms
Aug  3 14:27:21.878: INFO: Pod "downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008054004s
Aug  3 14:27:23.885: INFO: Pod "downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015024247s
STEP: Saw pod success
Aug  3 14:27:23.885: INFO: Pod "downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2" satisfied condition "Succeeded or Failed"
Aug  3 14:27:23.887: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2 container client-container: <nil>
STEP: delete the pod
Aug  3 14:27:23.909: INFO: Waiting for pod downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2 to disappear
Aug  3 14:27:23.911: INFO: Pod downwardapi-volume-195628cb-02d5-4969-9f31-4ec3cfa50ce2 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 14:27:23.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7740" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":22,"skipped":556,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:27:23.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-1135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug  3 14:27:24.047: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug  3 14:27:29.054: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug  3 14:27:29.056: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 14:27:29.065: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-1135" for this suite.

• [SLOW TEST:5.157 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":23,"skipped":562,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:27:29.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:27:37.224: INFO: DNS probes using dns-test-50e01a60-cc9c-41f4-8cdc-15711ad0a8ad succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:27:39.252: INFO: File wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:39.255: INFO: File jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:39.255: INFO: Lookups using dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c failed for: [wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local]

Aug  3 14:27:44.263: INFO: File wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:44.266: INFO: File jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:44.266: INFO: Lookups using dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c failed for: [wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local]

Aug  3 14:27:49.263: INFO: File wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:49.266: INFO: File jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:49.266: INFO: Lookups using dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c failed for: [wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local]

Aug  3 14:27:54.262: INFO: File wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:54.266: INFO: File jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:54.266: INFO: Lookups using dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c failed for: [wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local]

Aug  3 14:27:59.259: INFO: File wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:59.262: INFO: File jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local from pod  dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug  3 14:27:59.262: INFO: Lookups using dns-1477/dns-test-a9687045-5760-488d-aa13-c6d08662d04c failed for: [wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local]

Aug  3 14:28:04.266: INFO: DNS probes using dns-test-a9687045-5760-488d-aa13-c6d08662d04c succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1477.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1477.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:28:06.315: INFO: DNS probes using dns-test-ea3a4489-5971-41cc-ba47-a3a61711b444 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 14:28:06.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1477" for this suite.

• [SLOW TEST:37.268 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":24,"skipped":590,"failed":0}
S
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:06.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5156
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-5156
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-5156
I0803 14:28:06.498047      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5156, replica count: 2
Aug  3 14:28:09.550: INFO: Creating new exec pod
I0803 14:28:09.550468      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:28:12.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5156 exec execpods4kk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug  3 14:28:12.687: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug  3 14:28:12.687: INFO: stdout: "externalname-service-z4zgv"
Aug  3 14:28:12.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5156 exec execpods4kk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.98.70 80'
Aug  3 14:28:12.797: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.98.70 80\nConnection to 10.101.98.70 80 port [tcp/http] succeeded!\n"
Aug  3 14:28:12.797: INFO: stdout: "externalname-service-twfnr"
Aug  3 14:28:12.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5156 exec execpods4kk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.176 31876'
Aug  3 14:28:12.910: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.176 31876\nConnection to 10.0.36.176 31876 port [tcp/*] succeeded!\n"
Aug  3 14:28:12.910: INFO: stdout: "externalname-service-z4zgv"
Aug  3 14:28:12.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5156 exec execpods4kk8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.79 31876'
Aug  3 14:28:13.027: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.79 31876\nConnection to 10.0.36.79 31876 port [tcp/*] succeeded!\n"
Aug  3 14:28:13.027: INFO: stdout: "externalname-service-twfnr"
Aug  3 14:28:13.027: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:28:13.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5156" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.710 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":25,"skipped":591,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:13.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-2520
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:28:13.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:28:19.328: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2520" for this suite.

• [SLOW TEST:6.281 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":26,"skipped":598,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:19.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-fc933962-983f-4a63-bf2d-067ed13c6af6
STEP: Creating secret with name s-test-opt-upd-5e3695e2-e152-4e71-bf5b-16f0c779c6a4
STEP: Creating the pod
Aug  3 14:28:19.468: INFO: The status of Pod pod-projected-secrets-47fcae39-a20f-495d-9f55-56362657f977 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:28:21.472: INFO: The status of Pod pod-projected-secrets-47fcae39-a20f-495d-9f55-56362657f977 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-fc933962-983f-4a63-bf2d-067ed13c6af6
STEP: Updating secret s-test-opt-upd-5e3695e2-e152-4e71-bf5b-16f0c779c6a4
STEP: Creating secret with name s-test-opt-create-39c12336-0b62-413e-b45d-d01b25af0ef7
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 14:28:23.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2494" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":645,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:23.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1307
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Aug  3 14:28:23.648: INFO: Waiting up to 5m0s for pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e" in namespace "var-expansion-1307" to be "Succeeded or Failed"
Aug  3 14:28:23.651: INFO: Pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.1993ms
Aug  3 14:28:25.657: INFO: Pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009215848s
Aug  3 14:28:27.664: INFO: Pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016211899s
Aug  3 14:28:29.667: INFO: Pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018883151s
STEP: Saw pod success
Aug  3 14:28:29.667: INFO: Pod "var-expansion-a422f69a-1835-49e4-8f54-49d54243875e" satisfied condition "Succeeded or Failed"
Aug  3 14:28:29.668: INFO: Trying to get logs from node worker-1 pod var-expansion-a422f69a-1835-49e4-8f54-49d54243875e container dapi-container: <nil>
STEP: delete the pod
Aug  3 14:28:29.689: INFO: Waiting for pod var-expansion-a422f69a-1835-49e4-8f54-49d54243875e to disappear
Aug  3 14:28:29.691: INFO: Pod var-expansion-a422f69a-1835-49e4-8f54-49d54243875e no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 14:28:29.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1307" for this suite.

• [SLOW TEST:6.174 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":28,"skipped":657,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:29.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-2598/secret-test-df02c8e3-7d12-4d09-9a05-3158c0d9d271
STEP: Creating a pod to test consume secrets
Aug  3 14:28:29.857: INFO: Waiting up to 5m0s for pod "pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca" in namespace "secrets-2598" to be "Succeeded or Failed"
Aug  3 14:28:29.861: INFO: Pod "pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca": Phase="Pending", Reason="", readiness=false. Elapsed: 4.159528ms
Aug  3 14:28:31.868: INFO: Pod "pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010766099s
Aug  3 14:28:33.874: INFO: Pod "pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016623698s
STEP: Saw pod success
Aug  3 14:28:33.874: INFO: Pod "pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca" satisfied condition "Succeeded or Failed"
Aug  3 14:28:33.875: INFO: Trying to get logs from node worker-0 pod pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca container env-test: <nil>
STEP: delete the pod
Aug  3 14:28:33.899: INFO: Waiting for pod pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca to disappear
Aug  3 14:28:33.900: INFO: Pod pod-configmaps-88c6739c-15c1-4ec0-b9b3-ba34eb2363ca no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  3 14:28:33.901: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2598" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":739,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:33.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4748
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:28:34.418: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug  3 14:28:36.428: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 14, 28, 34, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 28, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 28, 34, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 28, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:28:39.444: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:28:39.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4748" for this suite.
STEP: Destroying namespace "webhook-4748-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.599 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":30,"skipped":744,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:39.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-9497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug  3 14:28:39.657: INFO: Waiting up to 5m0s for pod "security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a" in namespace "security-context-9497" to be "Succeeded or Failed"
Aug  3 14:28:39.660: INFO: Pod "security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.724659ms
Aug  3 14:28:41.666: INFO: Pod "security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009147158s
Aug  3 14:28:43.674: INFO: Pod "security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016798506s
STEP: Saw pod success
Aug  3 14:28:43.674: INFO: Pod "security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a" satisfied condition "Succeeded or Failed"
Aug  3 14:28:43.676: INFO: Trying to get logs from node worker-0 pod security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a container test-container: <nil>
STEP: delete the pod
Aug  3 14:28:43.688: INFO: Waiting for pod security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a to disappear
Aug  3 14:28:43.690: INFO: Pod security-context-d2848361-c1a9-43eb-ba65-1c71dd18559a no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 14:28:43.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-9497" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":31,"skipped":752,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:43.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:28:44.370: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:28:47.407: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:28:47.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3716" for this suite.
STEP: Destroying namespace "webhook-3716-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":32,"skipped":753,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:47.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7456
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7456
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-7456
STEP: creating replication controller externalsvc in namespace services-7456
I0803 14:28:47.637428      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7456, replica count: 2
I0803 14:28:50.688386      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug  3 14:28:50.727: INFO: Creating new exec pod
Aug  3 14:28:52.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-7456 exec execpod4jxxf -- /bin/sh -x -c nslookup nodeport-service.services-7456.svc.cluster.local'
Aug  3 14:28:52.891: INFO: stderr: "+ nslookup nodeport-service.services-7456.svc.cluster.local\n"
Aug  3 14:28:52.891: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-7456.svc.cluster.local\tcanonical name = externalsvc.services-7456.svc.cluster.local.\nName:\texternalsvc.services-7456.svc.cluster.local\nAddress: 10.103.216.137\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7456, will wait for the garbage collector to delete the pods
Aug  3 14:28:52.947: INFO: Deleting ReplicationController externalsvc took: 3.417177ms
Aug  3 14:28:53.048: INFO: Terminating ReplicationController externalsvc pods took: 101.085752ms
Aug  3 14:28:54.960: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:28:54.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7456" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.490 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":33,"skipped":758,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:54.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6719
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-112d9a6e-682d-47da-b5fe-6a85dc06151e
STEP: Creating configMap with name cm-test-opt-upd-0eabd2ac-340b-4c82-8b22-d85880a9ca1b
STEP: Creating the pod
Aug  3 14:28:55.114: INFO: The status of Pod pod-configmaps-6c6ed203-7405-4cfc-8c65-e58438b62922 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:28:57.121: INFO: The status of Pod pod-configmaps-6c6ed203-7405-4cfc-8c65-e58438b62922 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-112d9a6e-682d-47da-b5fe-6a85dc06151e
STEP: Updating configmap cm-test-opt-upd-0eabd2ac-340b-4c82-8b22-d85880a9ca1b
STEP: Creating configMap with name cm-test-opt-create-261a55cb-ce59-4a12-802f-4e2909ba63ba
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:28:59.163: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6719" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":34,"skipped":770,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:28:59.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug  3 14:28:59.298: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  3 14:29:04.313: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 14:29:04.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7681" for this suite.

• [SLOW TEST:5.174 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":35,"skipped":776,"failed":0}
SSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:04.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-5662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  3 14:29:04.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-5662" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":36,"skipped":780,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:04.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7268
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:29:04.981: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:29:08.030: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:29:08.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7268" for this suite.
STEP: Destroying namespace "webhook-7268-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":37,"skipped":814,"failed":0}
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:08.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  3 14:29:08.288: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  3 14:29:08.292: INFO: Waiting for terminating namespaces to be deleted...
Aug  3 14:29:08.294: INFO: 
Logging pods the apiserver thinks is on node worker-0 before test
Aug  3 14:29:08.298: INFO: coredns-88b745646-87vmx from kube-system started at 2022-08-03 14:23:26 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:29:08.298: INFO: coredns-88b745646-pp8dz from kube-system started at 2022-08-03 14:23:26 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:29:08.298: INFO: konnectivity-agent-8dbdw from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:29:08.298: INFO: kube-proxy-lqvs2 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:29:08.298: INFO: kube-router-q22b4 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:29:08.298: INFO: metrics-server-7d7c4887f4-wjlwm from kube-system started at 2022-08-03 14:23:26 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container metrics-server ready: true, restart count 0
Aug  3 14:29:08.298: INFO: test-rs-kzf7z from replicaset-7681 started at 2022-08-03 14:28:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container httpd ready: true, restart count 0
Aug  3 14:29:08.298: INFO: test-rs-x82l6 from replicaset-7681 started at 2022-08-03 14:29:04 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container httpd ready: false, restart count 0
Aug  3 14:29:08.298: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:29:08.298: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:29:08.298: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  3 14:29:08.298: INFO: 
Logging pods the apiserver thinks is on node worker-1 before test
Aug  3 14:29:08.302: INFO: konnectivity-agent-vt5zk from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:29:08.302: INFO: kube-proxy-tlfh2 from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:29:08.302: INFO: kube-router-2jmhg from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:29:08.302: INFO: test-rs-j4fhn from replicaset-7681 started at 2022-08-03 14:29:04 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container httpd ready: false, restart count 0
Aug  3 14:29:08.302: INFO: sonobuoy from sonobuoy started at 2022-08-03 14:24:05 +0000 UTC (1 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  3 14:29:08.302: INFO: sonobuoy-e2e-job-56db34158e2f4c2c from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container e2e ready: true, restart count 0
Aug  3 14:29:08.302: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:29:08.302: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-cqd8v from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:29:08.302: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:29:08.302: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-37dca47f-ee84-429c-816f-93b912feb7bf 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-37dca47f-ee84-429c-816f-93b912feb7bf off the node worker-0
STEP: verifying the node doesn't have the label kubernetes.io/e2e-37dca47f-ee84-429c-816f-93b912feb7bf
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:29:12.353: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4915" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":38,"skipped":817,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:12.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8380
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:29:12.486: INFO: The status of Pod busybox-readonly-fs4620e24d-da8f-40f3-8d9d-2d5692d6881a is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:29:14.491: INFO: The status of Pod busybox-readonly-fs4620e24d-da8f-40f3-8d9d-2d5692d6881a is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  3 14:29:14.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8380" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":828,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:14.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:29:16.639: INFO: Deleting pod "var-expansion-f2908a95-0d88-44fb-943e-569dffee657f" in namespace "var-expansion-8506"
Aug  3 14:29:16.642: INFO: Wait up to 5m0s for pod "var-expansion-f2908a95-0d88-44fb-943e-569dffee657f" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 14:29:18.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8506" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":40,"skipped":838,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:18.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8811
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:29:18.781: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68" in namespace "security-context-test-8811" to be "Succeeded or Failed"
Aug  3 14:29:18.784: INFO: Pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.757298ms
Aug  3 14:29:20.790: INFO: Pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008428677s
Aug  3 14:29:22.794: INFO: Pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012963052s
Aug  3 14:29:22.794: INFO: Pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68" satisfied condition "Succeeded or Failed"
Aug  3 14:29:22.799: INFO: Got logs for pod "busybox-privileged-false-ed645b8c-8506-4825-88b2-35406c363f68": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 14:29:22.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8811" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":41,"skipped":861,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:22.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2858
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-05fab107-7487-4bee-8757-93ac08fca2e1
STEP: Creating a pod to test consume configMaps
Aug  3 14:29:22.931: INFO: Waiting up to 5m0s for pod "pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4" in namespace "configmap-2858" to be "Succeeded or Failed"
Aug  3 14:29:22.933: INFO: Pod "pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.279372ms
Aug  3 14:29:24.937: INFO: Pod "pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005914893s
Aug  3 14:29:26.945: INFO: Pod "pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013978784s
STEP: Saw pod success
Aug  3 14:29:26.945: INFO: Pod "pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4" satisfied condition "Succeeded or Failed"
Aug  3 14:29:26.947: INFO: Trying to get logs from node worker-0 pod pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:29:26.959: INFO: Waiting for pod pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4 to disappear
Aug  3 14:29:26.961: INFO: Pod pod-configmaps-06d3029d-2f35-462a-b012-1350a6e5f6e4 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:29:26.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2858" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":42,"skipped":923,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:26.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-trql
STEP: Creating a pod to test atomic-volume-subpath
Aug  3 14:29:27.098: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-trql" in namespace "subpath-2559" to be "Succeeded or Failed"
Aug  3 14:29:27.101: INFO: Pod "pod-subpath-test-secret-trql": Phase="Pending", Reason="", readiness=false. Elapsed: 2.420128ms
Aug  3 14:29:29.108: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 2.009817049s
Aug  3 14:29:31.114: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 4.015356471s
Aug  3 14:29:33.121: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 6.022948134s
Aug  3 14:29:35.126: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 8.027317631s
Aug  3 14:29:37.133: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 10.0344447s
Aug  3 14:29:39.137: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 12.038754733s
Aug  3 14:29:41.144: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 14.045702585s
Aug  3 14:29:43.151: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 16.052808804s
Aug  3 14:29:45.156: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 18.057317895s
Aug  3 14:29:47.163: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=true. Elapsed: 20.064090087s
Aug  3 14:29:49.170: INFO: Pod "pod-subpath-test-secret-trql": Phase="Running", Reason="", readiness=false. Elapsed: 22.071107907s
Aug  3 14:29:51.176: INFO: Pod "pod-subpath-test-secret-trql": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.077455727s
STEP: Saw pod success
Aug  3 14:29:51.176: INFO: Pod "pod-subpath-test-secret-trql" satisfied condition "Succeeded or Failed"
Aug  3 14:29:51.178: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-secret-trql container test-container-subpath-secret-trql: <nil>
STEP: delete the pod
Aug  3 14:29:51.194: INFO: Waiting for pod pod-subpath-test-secret-trql to disappear
Aug  3 14:29:51.196: INFO: Pod pod-subpath-test-secret-trql no longer exists
STEP: Deleting pod pod-subpath-test-secret-trql
Aug  3 14:29:51.196: INFO: Deleting pod "pod-subpath-test-secret-trql" in namespace "subpath-2559"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  3 14:29:51.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2559" for this suite.

• [SLOW TEST:24.237 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":43,"skipped":938,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:51.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug  3 14:29:51.334: INFO: Waiting up to 5m0s for pod "pod-d27f7741-e21c-479d-8336-b9db65eb69d6" in namespace "emptydir-5396" to be "Succeeded or Failed"
Aug  3 14:29:51.338: INFO: Pod "pod-d27f7741-e21c-479d-8336-b9db65eb69d6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.870675ms
Aug  3 14:29:53.343: INFO: Pod "pod-d27f7741-e21c-479d-8336-b9db65eb69d6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009020438s
Aug  3 14:29:55.348: INFO: Pod "pod-d27f7741-e21c-479d-8336-b9db65eb69d6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014163135s
STEP: Saw pod success
Aug  3 14:29:55.348: INFO: Pod "pod-d27f7741-e21c-479d-8336-b9db65eb69d6" satisfied condition "Succeeded or Failed"
Aug  3 14:29:55.349: INFO: Trying to get logs from node worker-0 pod pod-d27f7741-e21c-479d-8336-b9db65eb69d6 container test-container: <nil>
STEP: delete the pod
Aug  3 14:29:55.361: INFO: Waiting for pod pod-d27f7741-e21c-479d-8336-b9db65eb69d6 to disappear
Aug  3 14:29:55.363: INFO: Pod pod-d27f7741-e21c-479d-8336-b9db65eb69d6 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 14:29:55.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5396" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":44,"skipped":938,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:29:55.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-8505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:29:55.489: INFO: Creating deployment "webserver-deployment"
Aug  3 14:29:55.492: INFO: Waiting for observed generation 1
Aug  3 14:29:57.501: INFO: Waiting for all required pods to come up
Aug  3 14:29:57.504: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug  3 14:29:59.515: INFO: Waiting for deployment "webserver-deployment" to complete
Aug  3 14:29:59.519: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug  3 14:29:59.525: INFO: Updating deployment webserver-deployment
Aug  3 14:29:59.525: INFO: Waiting for observed generation 2
Aug  3 14:30:01.530: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug  3 14:30:01.533: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug  3 14:30:01.535: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug  3 14:30:01.541: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug  3 14:30:01.541: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug  3 14:30:01.542: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug  3 14:30:01.546: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug  3 14:30:01.546: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug  3 14:30:01.550: INFO: Updating deployment webserver-deployment
Aug  3 14:30:01.550: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug  3 14:30:01.557: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug  3 14:30:01.566: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:30:01.583: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-8505  e9f68e0c-522b-4cab-adf1-94be7e747b16 3836 3 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0024227b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-08-03 14:29:59 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-03 14:30:01 +0000 UTC,LastTransitionTime:2022-08-03 14:30:01 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug  3 14:30:01.617: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-8505  e6109dc7-ac0c-4e7d-b970-d518c0278583 3834 3 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment e9f68e0c-522b-4cab-adf1-94be7e747b16 0xc0024d6967 0xc0024d6968}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e9f68e0c-522b-4cab-adf1-94be7e747b16\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0024d6a08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:30:01.617: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug  3 14:30:01.617: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-8505  7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 3831 3 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment e9f68e0c-522b-4cab-adf1-94be7e747b16 0xc0024d6877 0xc0024d6878}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e9f68e0c-522b-4cab-adf1-94be7e747b16\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0024d6908 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:30:01.626: INFO: Pod "webserver-deployment-55df494869-2j5xt" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2j5xt webserver-deployment-55df494869- deployment-8505  f89a936d-fc98-4cbd-ae34-99202261c85b 3849 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc0025f3d20 0xc0025f3d21}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jxl5h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jxl5h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.627: INFO: Pod "webserver-deployment-55df494869-2w5b5" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2w5b5 webserver-deployment-55df494869- deployment-8505  1dabb697-4586-4459-a505-216d38a5bafe 3738 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc0025f3e57 0xc0025f3e58}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hjwrw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hjwrw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.20,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://52a3d95a326fbf451c7ab1460f2f9787b08de0f2fd4849c56c4c874028a9632c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.20,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.627: INFO: Pod "webserver-deployment-55df494869-42m6m" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-42m6m webserver-deployment-55df494869- deployment-8505  52720b14-d3de-4b47-8958-02b97c71e8e9 3848 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18050 0xc002a18051}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-msdfc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-msdfc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.627: INFO: Pod "webserver-deployment-55df494869-9wn97" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9wn97 webserver-deployment-55df494869- deployment-8505  d227e3ff-3a3c-4ba3-90b0-cc904d56c710 3843 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18187 0xc002a18188}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jngq8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jngq8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:30:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.627: INFO: Pod "webserver-deployment-55df494869-bkl48" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bkl48 webserver-deployment-55df494869- deployment-8505  b0f043f2-2349-4e72-89dd-8782f0a29541 3711 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a182f0 0xc002a182f1}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.23\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hsj96,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hsj96,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.23,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://67431ae9ebcace45f59b85e242990ed82c11d8320cc7fba3ba92c8f725e50445,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.23,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.627: INFO: Pod "webserver-deployment-55df494869-bmnqz" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bmnqz webserver-deployment-55df494869- deployment-8505  1b0bd560-ca23-4e3f-aa62-d13eeb3c740d 3845 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a184d0 0xc002a184d1}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-k8vqr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-k8vqr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:30:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.628: INFO: Pod "webserver-deployment-55df494869-d2d6r" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-d2d6r webserver-deployment-55df494869- deployment-8505  8b0564f6-8c08-4673-8e5e-3a2be0a2e82b 3722 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18630 0xc002a18631}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.45\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wrt55,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wrt55,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.45,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://0b0b0148d8aa63ac42cbd53be2559b51c63a4d03c8735f903e6ddbdb197dc1ed,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.45,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.628: INFO: Pod "webserver-deployment-55df494869-f42j7" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-f42j7 webserver-deployment-55df494869- deployment-8505  0e79d5c2-37b0-43bd-96b8-41ef2a04ea0b 3718 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18810 0xc002a18811}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wphr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wphr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.21,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bae5a21b55e2425641b55207590efd1a7ad7990e51ebfdc6b22566f240841e50,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.21,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.628: INFO: Pod "webserver-deployment-55df494869-j2mmv" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-j2mmv webserver-deployment-55df494869- deployment-8505  3e80b3b5-62f4-4f8a-8247-1e35325c744c 3853 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a189f0 0xc002a189f1}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5p7kx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5p7kx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.628: INFO: Pod "webserver-deployment-55df494869-k8wkv" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-k8wkv webserver-deployment-55df494869- deployment-8505  951523d5-a7f3-4a78-a7be-8f7e8bff1e28 3728 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18b27 0xc002a18b28}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.44\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hgbvg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hgbvg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.44,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://3fd1c1666bcb0e839ce56f77194f42295a270a8af67b28745017ab2ac798a1cf,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.44,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.629: INFO: Pod "webserver-deployment-55df494869-mxqx8" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-mxqx8 webserver-deployment-55df494869- deployment-8505  8d8ac90a-8a95-467c-9234-67355f680752 3835 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18d10 0xc002a18d11}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bw25q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bw25q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:30:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.629: INFO: Pod "webserver-deployment-55df494869-vxhk6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vxhk6 webserver-deployment-55df494869- deployment-8505  87dd22ec-54b4-4cf4-9f9a-9b3d5c619857 3846 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18e70 0xc002a18e71}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p6hpl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p6hpl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.629: INFO: Pod "webserver-deployment-55df494869-wgpvz" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-wgpvz webserver-deployment-55df494869- deployment-8505  f7786351-35e9-4c8a-8da2-b9be365324b2 3729 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a18fa7 0xc002a18fa8}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwt92,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwt92,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.24,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://153da84a03108fee20fd618d940986187870a7e44ee0c816fb98ce862f032490,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.24,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.629: INFO: Pod "webserver-deployment-55df494869-whktg" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-whktg webserver-deployment-55df494869- deployment-8505  7e7fafec-cede-48ca-adc4-f92aab1c8d18 3723 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a191a0 0xc002a191a1}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.22\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-65jcj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-65jcj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.22,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://65000657380f294d1f8f41b1613152d2054f12731227573ceb7dfd1eca59becb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.22,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.629: INFO: Pod "webserver-deployment-55df494869-xqbqf" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-xqbqf webserver-deployment-55df494869- deployment-8505  0a488a3b-642c-4d5b-8d56-29f62966e1c8 3716 0 2022-08-03 14:29:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-55df494869 7dba5da7-f0b6-4e3d-a1d8-94148597cdc4 0xc002a19380 0xc002a19381}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dba5da7-f0b6-4e3d-a1d8-94148597cdc4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:57 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.41\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d2fhl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d2fhl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:57 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.41,StartTime:2022-08-03 14:29:55 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:29:56 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://f149fd22880b82386b1d0c9c096a55b0cc13ffd2c1703114e3c1267fa69cd381,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.41,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.630: INFO: Pod "webserver-deployment-57ccb67bb8-2kbhx" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-2kbhx webserver-deployment-57ccb67bb8- deployment-8505  ce6582bd-fbb9-4306-8eb3-f02798cc1c89 3827 0 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19560 0xc002a19561}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.25\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-28jnc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-28jnc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.25,StartTime:2022-08-03 14:29:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.25,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.630: INFO: Pod "webserver-deployment-57ccb67bb8-4gtxp" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-4gtxp webserver-deployment-57ccb67bb8- deployment-8505  4552c35d-a9a0-4ea9-b6d6-e079e3ca59c0 3824 0 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19770 0xc002a19771}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.26\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hr6qv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hr6qv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.26,StartTime:2022-08-03 14:29:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.26,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.630: INFO: Pod "webserver-deployment-57ccb67bb8-4sv6w" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-4sv6w webserver-deployment-57ccb67bb8- deployment-8505  24caf4a0-55c5-4eec-a10c-a84c947cdf57 3851 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19980 0xc002a19981}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7rvcv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7rvcv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.630: INFO: Pod "webserver-deployment-57ccb67bb8-g9n8m" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-g9n8m webserver-deployment-57ccb67bb8- deployment-8505  50dd199c-f297-4989-9871-68990821f70f 3850 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19ac7 0xc002a19ac8}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g5cr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g5cr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.630: INFO: Pod "webserver-deployment-57ccb67bb8-jhnn2" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-jhnn2 webserver-deployment-57ccb67bb8- deployment-8505  f78a3b20-83ba-45f1-b67e-f82dd8e0200d 3765 0 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19c17 0xc002a19c18}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tzxjw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tzxjw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:,StartTime:2022-08-03 14:29:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.631: INFO: Pod "webserver-deployment-57ccb67bb8-pfvhv" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-pfvhv webserver-deployment-57ccb67bb8- deployment-8505  42178b4b-48ba-482e-b435-e24e6b2116cd 3821 0 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002a19e00 0xc002a19e01}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.46\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w62w7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w62w7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.46,StartTime:2022-08-03 14:29:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.46,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.631: INFO: Pod "webserver-deployment-57ccb67bb8-tnk5n" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-tnk5n webserver-deployment-57ccb67bb8- deployment-8505  fe2a950f-8455-4150-be1e-c267399eea7d 3852 0 2022-08-03 14:30:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002cb6010 0xc002cb6011}] []  [{kube-controller-manager Update v1 2022-08-03 14:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-chph8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-chph8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:30:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:30:01.631: INFO: Pod "webserver-deployment-57ccb67bb8-wp7gh" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-wp7gh webserver-deployment-57ccb67bb8- deployment-8505  5fed23ab-b8f3-4bca-adad-baceb72716f6 3815 0 2022-08-03 14:29:59 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 e6109dc7-ac0c-4e7d-b970-d518c0278583 0xc002cb6180 0xc002cb6181}] []  [{kube-controller-manager Update v1 2022-08-03 14:29:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e6109dc7-ac0c-4e7d-b970-d518c0278583\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:30:00 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dbskk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dbskk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:29:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:,StartTime:2022-08-03 14:29:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:30:01.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8505" for this suite.

• [SLOW TEST:6.285 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":45,"skipped":948,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:01.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug  3 14:30:01.901: INFO: Waiting up to 5m0s for pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36" in namespace "emptydir-7257" to be "Succeeded or Failed"
Aug  3 14:30:01.903: INFO: Pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.097153ms
Aug  3 14:30:03.911: INFO: Pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01021262s
Aug  3 14:30:05.916: INFO: Pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015481355s
Aug  3 14:30:07.920: INFO: Pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019097595s
STEP: Saw pod success
Aug  3 14:30:07.920: INFO: Pod "pod-0d020ee8-25c3-42ce-b60c-6a611c074d36" satisfied condition "Succeeded or Failed"
Aug  3 14:30:07.922: INFO: Trying to get logs from node worker-0 pod pod-0d020ee8-25c3-42ce-b60c-6a611c074d36 container test-container: <nil>
STEP: delete the pod
Aug  3 14:30:07.933: INFO: Waiting for pod pod-0d020ee8-25c3-42ce-b60c-6a611c074d36 to disappear
Aug  3 14:30:07.935: INFO: Pod pod-0d020ee8-25c3-42ce-b60c-6a611c074d36 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 14:30:07.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7257" for this suite.

• [SLOW TEST:6.285 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":46,"skipped":979,"failed":0}
SSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:07.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-4494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Aug  3 14:30:08.075: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug  3 14:30:10.083: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug  3 14:30:12.095: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Aug  3 14:30:14.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-4494" for this suite.

• [SLOW TEST:6.167 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":47,"skipped":982,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:14.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:30:14.229: INFO: Got root ca configmap in namespace "svcaccounts-7328"
Aug  3 14:30:14.232: INFO: Deleted root ca configmap in namespace "svcaccounts-7328"
STEP: waiting for a new root ca configmap created
Aug  3 14:30:14.735: INFO: Recreated root ca configmap in namespace "svcaccounts-7328"
Aug  3 14:30:14.738: INFO: Updated root ca configmap in namespace "svcaccounts-7328"
STEP: waiting for the root ca configmap reconciled
Aug  3 14:30:15.242: INFO: Reconciled root ca configmap in namespace "svcaccounts-7328"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 14:30:15.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7328" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":48,"skipped":1007,"failed":0}
SSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:15.248: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug  3 14:30:17.386: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  3 14:30:23.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4600" for this suite.

• [SLOW TEST:8.238 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":49,"skipped":1010,"failed":0}
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:23.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-da521cd3-2653-483e-a67a-487db67fdba0
STEP: Creating a pod to test consume configMaps
Aug  3 14:30:23.614: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77" in namespace "projected-7054" to be "Succeeded or Failed"
Aug  3 14:30:23.615: INFO: Pod "pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77": Phase="Pending", Reason="", readiness=false. Elapsed: 1.821575ms
Aug  3 14:30:25.620: INFO: Pod "pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77": Phase="Running", Reason="", readiness=false. Elapsed: 2.006818135s
Aug  3 14:30:27.627: INFO: Pod "pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013031973s
STEP: Saw pod success
Aug  3 14:30:27.627: INFO: Pod "pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77" satisfied condition "Succeeded or Failed"
Aug  3 14:30:27.629: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:30:27.638: INFO: Waiting for pod pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77 to disappear
Aug  3 14:30:27.640: INFO: Pod pod-projected-configmaps-ab7997a5-851c-45b5-b64a-ee06d5463e77 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 14:30:27.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7054" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":50,"skipped":1010,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:27.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug  3 14:30:27.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 create -f -'
Aug  3 14:30:28.604: INFO: stderr: ""
Aug  3 14:30:28.604: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  3 14:30:28.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 14:30:28.680: INFO: stderr: ""
Aug  3 14:30:28.680: INFO: stdout: "update-demo-nautilus-5r7r6 update-demo-nautilus-hjhqq "
Aug  3 14:30:28.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:28.741: INFO: stderr: ""
Aug  3 14:30:28.741: INFO: stdout: ""
Aug  3 14:30:28.741: INFO: update-demo-nautilus-5r7r6 is created but not running
Aug  3 14:30:33.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 14:30:33.801: INFO: stderr: ""
Aug  3 14:30:33.801: INFO: stdout: "update-demo-nautilus-5r7r6 update-demo-nautilus-hjhqq "
Aug  3 14:30:33.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:33.855: INFO: stderr: ""
Aug  3 14:30:33.855: INFO: stdout: "true"
Aug  3 14:30:33.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 14:30:33.906: INFO: stderr: ""
Aug  3 14:30:33.906: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 14:30:33.906: INFO: validating pod update-demo-nautilus-5r7r6
Aug  3 14:30:33.912: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 14:30:33.912: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 14:30:33.912: INFO: update-demo-nautilus-5r7r6 is verified up and running
Aug  3 14:30:33.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-hjhqq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:33.962: INFO: stderr: ""
Aug  3 14:30:33.962: INFO: stdout: "true"
Aug  3 14:30:33.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-hjhqq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 14:30:34.012: INFO: stderr: ""
Aug  3 14:30:34.012: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 14:30:34.012: INFO: validating pod update-demo-nautilus-hjhqq
Aug  3 14:30:34.017: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 14:30:34.018: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 14:30:34.018: INFO: update-demo-nautilus-hjhqq is verified up and running
STEP: scaling down the replication controller
Aug  3 14:30:34.019: INFO: scanned /root for discovery docs: <nil>
Aug  3 14:30:34.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug  3 14:30:35.082: INFO: stderr: ""
Aug  3 14:30:35.082: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  3 14:30:35.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 14:30:35.135: INFO: stderr: ""
Aug  3 14:30:35.135: INFO: stdout: "update-demo-nautilus-5r7r6 update-demo-nautilus-hjhqq "
STEP: Replicas for name=update-demo: expected=1 actual=2
Aug  3 14:30:40.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 14:30:40.188: INFO: stderr: ""
Aug  3 14:30:40.188: INFO: stdout: "update-demo-nautilus-5r7r6 "
Aug  3 14:30:40.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:40.236: INFO: stderr: ""
Aug  3 14:30:40.236: INFO: stdout: "true"
Aug  3 14:30:40.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 14:30:40.283: INFO: stderr: ""
Aug  3 14:30:40.283: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 14:30:40.283: INFO: validating pod update-demo-nautilus-5r7r6
Aug  3 14:30:40.287: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 14:30:40.287: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 14:30:40.287: INFO: update-demo-nautilus-5r7r6 is verified up and running
STEP: scaling up the replication controller
Aug  3 14:30:40.288: INFO: scanned /root for discovery docs: <nil>
Aug  3 14:30:40.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug  3 14:30:41.350: INFO: stderr: ""
Aug  3 14:30:41.350: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  3 14:30:41.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 14:30:41.401: INFO: stderr: ""
Aug  3 14:30:41.401: INFO: stdout: "update-demo-nautilus-5r7r6 update-demo-nautilus-8fpnz "
Aug  3 14:30:41.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:41.450: INFO: stderr: ""
Aug  3 14:30:41.450: INFO: stdout: "true"
Aug  3 14:30:41.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-5r7r6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 14:30:41.498: INFO: stderr: ""
Aug  3 14:30:41.498: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 14:30:41.498: INFO: validating pod update-demo-nautilus-5r7r6
Aug  3 14:30:41.501: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 14:30:41.501: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 14:30:41.501: INFO: update-demo-nautilus-5r7r6 is verified up and running
Aug  3 14:30:41.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-8fpnz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 14:30:41.550: INFO: stderr: ""
Aug  3 14:30:41.550: INFO: stdout: "true"
Aug  3 14:30:41.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods update-demo-nautilus-8fpnz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 14:30:41.599: INFO: stderr: ""
Aug  3 14:30:41.599: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 14:30:41.599: INFO: validating pod update-demo-nautilus-8fpnz
Aug  3 14:30:41.604: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 14:30:41.604: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 14:30:41.604: INFO: update-demo-nautilus-8fpnz is verified up and running
STEP: using delete to clean up resources
Aug  3 14:30:41.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 delete --grace-period=0 --force -f -'
Aug  3 14:30:41.654: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:30:41.655: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug  3 14:30:41.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get rc,svc -l name=update-demo --no-headers'
Aug  3 14:30:41.718: INFO: stderr: "No resources found in kubectl-1038 namespace.\n"
Aug  3 14:30:41.718: INFO: stdout: ""
Aug  3 14:30:41.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1038 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  3 14:30:41.773: INFO: stderr: ""
Aug  3 14:30:41.773: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 14:30:41.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1038" for this suite.

• [SLOW TEST:14.132 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":51,"skipped":1063,"failed":0}
SSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:41.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-2820
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug  3 14:30:41.910: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug  3 14:30:41.922: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  3 14:30:41.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2820" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":52,"skipped":1068,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:41.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1692
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  3 14:30:42.059: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  3 14:30:42.074: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:30:44.081: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 14:30:46.080: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 14:30:48.082: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 14:30:50.078: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 14:30:52.082: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 14:30:54.083: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  3 14:30:54.086: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Aug  3 14:30:56.105: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Aug  3 14:30:56.105: INFO: Breadth first check of 10.244.0.55 on host 10.0.36.176...
Aug  3 14:30:56.107: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.56:9080/dial?request=hostname&protocol=http&host=10.244.0.55&port=8083&tries=1'] Namespace:pod-network-test-1692 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:30:56.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:30:56.108: INFO: ExecWithOptions: Clientset creation
Aug  3 14:30:56.108: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1692/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.56%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.55%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  3 14:30:56.172: INFO: Waiting for responses: map[]
Aug  3 14:30:56.172: INFO: reached 10.244.0.55 after 0/1 tries
Aug  3 14:30:56.172: INFO: Breadth first check of 10.244.1.30 on host 10.0.36.79...
Aug  3 14:30:56.175: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.56:9080/dial?request=hostname&protocol=http&host=10.244.1.30&port=8083&tries=1'] Namespace:pod-network-test-1692 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:30:56.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:30:56.175: INFO: ExecWithOptions: Clientset creation
Aug  3 14:30:56.175: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1692/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.56%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.30%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  3 14:30:56.236: INFO: Waiting for responses: map[]
Aug  3 14:30:56.236: INFO: reached 10.244.1.30 after 0/1 tries
Aug  3 14:30:56.236: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  3 14:30:56.236: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1692" for this suite.

• [SLOW TEST:14.301 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":1081,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:30:56.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5256
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug  3 14:30:56.368: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 14:31:01.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5256" for this suite.

• [SLOW TEST:5.051 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":54,"skipped":1105,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:31:01.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:31:01.419: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug  3 14:31:06.428: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  3 14:31:06.428: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug  3 14:31:08.435: INFO: Creating deployment "test-rollover-deployment"
Aug  3 14:31:08.443: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug  3 14:31:10.449: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug  3 14:31:10.453: INFO: Ensure that both replica sets have 1 created replica
Aug  3 14:31:10.457: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug  3 14:31:10.462: INFO: Updating deployment test-rollover-deployment
Aug  3 14:31:10.462: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug  3 14:31:12.472: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug  3 14:31:12.476: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug  3 14:31:12.480: INFO: all replica sets need to contain the pod-template-hash label
Aug  3 14:31:12.480: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 11, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 14:31:14.490: INFO: all replica sets need to contain the pod-template-hash label
Aug  3 14:31:14.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 11, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 14:31:16.489: INFO: all replica sets need to contain the pod-template-hash label
Aug  3 14:31:16.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 11, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 14:31:18.491: INFO: all replica sets need to contain the pod-template-hash label
Aug  3 14:31:18.491: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 11, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 14:31:20.486: INFO: all replica sets need to contain the pod-template-hash label
Aug  3 14:31:20.486: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 14, 31, 11, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 14, 31, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 14:31:22.490: INFO: 
Aug  3 14:31:22.490: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:31:22.495: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-4938  e0f98d8b-7c07-49e9-b469-17e3dc3621d6 4771 2 2022-08-03 14:31:08 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-03 14:31:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:31:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0011ddca8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-03 14:31:08 +0000 UTC,LastTransitionTime:2022-08-03 14:31:08 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-08-03 14:31:21 +0000 UTC,LastTransitionTime:2022-08-03 14:31:08 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  3 14:31:22.497: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-4938  1b76cc53-2e78-4a0f-90d6-5383c10c58b2 4761 2 2022-08-03 14:31:10 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment e0f98d8b-7c07-49e9-b469-17e3dc3621d6 0xc0041a3917 0xc0041a3918}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:31:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0f98d8b-7c07-49e9-b469-17e3dc3621d6\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:31:21 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041a39c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:31:22.497: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug  3 14:31:22.497: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-4938  53b0d0e3-6609-47e6-9a15-151ebb906417 4770 2 2022-08-03 14:31:01 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment e0f98d8b-7c07-49e9-b469-17e3dc3621d6 0xc0041a37f7 0xc0041a37f8}] []  [{e2e.test Update apps/v1 2022-08-03 14:31:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:31:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0f98d8b-7c07-49e9-b469-17e3dc3621d6\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:31:21 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0041a38b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:31:22.497: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-4938  793416ab-19ef-4112-827b-50a2f702d23b 4729 2 2022-08-03 14:31:08 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment e0f98d8b-7c07-49e9-b469-17e3dc3621d6 0xc0041a3a20 0xc0041a3a21}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:31:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0f98d8b-7c07-49e9-b469-17e3dc3621d6\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:31:10 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041a3ac8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:31:22.499: INFO: Pod "test-rollover-deployment-779c67f4f8-6skpv" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-6skpv test-rollover-deployment-779c67f4f8- deployment-4938  d2d14eab-3a86-49a5-8bef-26a03625327d 4738 0 2022-08-03 14:31:10 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 1b76cc53-2e78-4a0f-90d6-5383c10c58b2 0xc00381a847 0xc00381a848}] []  [{kube-controller-manager Update v1 2022-08-03 14:31:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1b76cc53-2e78-4a0f-90d6-5383c10c58b2\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:31:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.32\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z764x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z764x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:31:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:31:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:31:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:31:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.32,StartTime:2022-08-03 14:31:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:31:11 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://b1ccc8892ac84e99dc9f90e11499c5612b8dafddac317b14549692ddcd3bc19f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.32,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:31:22.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4938" for this suite.

• [SLOW TEST:21.212 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":55,"skipped":1144,"failed":0}
SSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:31:22.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-1296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  3 14:31:30.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-1296" for this suite.

• [SLOW TEST:8.141 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":56,"skipped":1149,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:31:30.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1891
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-1891
Aug  3 14:31:30.781: INFO: Found 0 stateful pods, waiting for 1
Aug  3 14:31:40.786: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 14:31:40.804: INFO: Deleting all statefulset in ns statefulset-1891
Aug  3 14:31:40.807: INFO: Scaling statefulset ss to 0
Aug  3 14:31:50.821: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:31:50.823: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 14:31:50.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1891" for this suite.

• [SLOW TEST:20.189 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":57,"skipped":1186,"failed":0}
SSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:31:50.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8247
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  3 14:31:54.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8247" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":58,"skipped":1193,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:31:55.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Aug  3 14:31:55.130: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 14:32:55.142: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:32:55.144: INFO: Starting informer...
STEP: Starting pods...
Aug  3 14:32:55.357: INFO: Pod1 is running on worker-0. Tainting Node
Aug  3 14:32:57.573: INFO: Pod2 is running on worker-0. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug  3 14:33:03.552: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug  3 14:33:23.596: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:33:23.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-836" for this suite.

• [SLOW TEST:88.606 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":59,"skipped":1212,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:23.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-307
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug  3 14:33:23.740: INFO: Waiting up to 5m0s for pod "pod-e7993c9a-3642-49ed-a8d5-b825e8768218" in namespace "emptydir-307" to be "Succeeded or Failed"
Aug  3 14:33:23.742: INFO: Pod "pod-e7993c9a-3642-49ed-a8d5-b825e8768218": Phase="Pending", Reason="", readiness=false. Elapsed: 1.840899ms
Aug  3 14:33:25.747: INFO: Pod "pod-e7993c9a-3642-49ed-a8d5-b825e8768218": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007653924s
Aug  3 14:33:27.756: INFO: Pod "pod-e7993c9a-3642-49ed-a8d5-b825e8768218": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015828563s
STEP: Saw pod success
Aug  3 14:33:27.756: INFO: Pod "pod-e7993c9a-3642-49ed-a8d5-b825e8768218" satisfied condition "Succeeded or Failed"
Aug  3 14:33:27.757: INFO: Trying to get logs from node worker-0 pod pod-e7993c9a-3642-49ed-a8d5-b825e8768218 container test-container: <nil>
STEP: delete the pod
Aug  3 14:33:27.776: INFO: Waiting for pod pod-e7993c9a-3642-49ed-a8d5-b825e8768218 to disappear
Aug  3 14:33:27.778: INFO: Pod pod-e7993c9a-3642-49ed-a8d5-b825e8768218 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 14:33:27.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-307" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":60,"skipped":1217,"failed":0}
SS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:27.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4448
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug  3 14:33:27.912: INFO: Waiting up to 5m0s for pod "pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d" in namespace "emptydir-4448" to be "Succeeded or Failed"
Aug  3 14:33:27.914: INFO: Pod "pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d": Phase="Pending", Reason="", readiness=false. Elapsed: 1.823345ms
Aug  3 14:33:29.917: INFO: Pod "pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004464936s
Aug  3 14:33:31.923: INFO: Pod "pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010780501s
STEP: Saw pod success
Aug  3 14:33:31.923: INFO: Pod "pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d" satisfied condition "Succeeded or Failed"
Aug  3 14:33:31.925: INFO: Trying to get logs from node worker-0 pod pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d container test-container: <nil>
STEP: delete the pod
Aug  3 14:33:31.937: INFO: Waiting for pod pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d to disappear
Aug  3 14:33:31.939: INFO: Pod pod-4b67fe3a-6418-4980-bbce-fe6862be5a7d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 14:33:31.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4448" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1219,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:31.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-5276
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:33:32.068: INFO: Waiting up to 5m0s for pod "busybox-user-65534-de3ac639-e75f-4720-9f9c-bf880cea733e" in namespace "security-context-test-5276" to be "Succeeded or Failed"
Aug  3 14:33:32.070: INFO: Pod "busybox-user-65534-de3ac639-e75f-4720-9f9c-bf880cea733e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.140403ms
Aug  3 14:33:34.076: INFO: Pod "busybox-user-65534-de3ac639-e75f-4720-9f9c-bf880cea733e": Phase="Running", Reason="", readiness=false. Elapsed: 2.008523419s
Aug  3 14:33:36.082: INFO: Pod "busybox-user-65534-de3ac639-e75f-4720-9f9c-bf880cea733e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01440355s
Aug  3 14:33:36.082: INFO: Pod "busybox-user-65534-de3ac639-e75f-4720-9f9c-bf880cea733e" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 14:33:36.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-5276" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1240,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:36.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6794
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:33:36.213: INFO: Waiting up to 5m0s for pod "downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547" in namespace "downward-api-6794" to be "Succeeded or Failed"
Aug  3 14:33:36.215: INFO: Pod "downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547": Phase="Pending", Reason="", readiness=false. Elapsed: 1.997799ms
Aug  3 14:33:38.221: INFO: Pod "downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007911902s
Aug  3 14:33:40.225: INFO: Pod "downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011923445s
STEP: Saw pod success
Aug  3 14:33:40.225: INFO: Pod "downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547" satisfied condition "Succeeded or Failed"
Aug  3 14:33:40.227: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547 container client-container: <nil>
STEP: delete the pod
Aug  3 14:33:40.238: INFO: Waiting for pod downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547 to disappear
Aug  3 14:33:40.240: INFO: Pod downwardapi-volume-54e558e0-19dc-4c35-ba0e-2505fef4d547 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 14:33:40.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6794" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":63,"skipped":1270,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:40.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:33:40.374: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d" in namespace "projected-6964" to be "Succeeded or Failed"
Aug  3 14:33:40.376: INFO: Pod "downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.050183ms
Aug  3 14:33:42.382: INFO: Pod "downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008547344s
Aug  3 14:33:44.390: INFO: Pod "downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016028988s
STEP: Saw pod success
Aug  3 14:33:44.390: INFO: Pod "downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d" satisfied condition "Succeeded or Failed"
Aug  3 14:33:44.391: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d container client-container: <nil>
STEP: delete the pod
Aug  3 14:33:44.403: INFO: Waiting for pod downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d to disappear
Aug  3 14:33:44.405: INFO: Pod downwardapi-volume-cd0f1a5d-d3dd-4581-a82a-7a944687579d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 14:33:44.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6964" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":64,"skipped":1279,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:33:44.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-7032, will wait for the garbage collector to delete the pods
Aug  3 14:33:46.600: INFO: Deleting Job.batch foo took: 4.04254ms
Aug  3 14:33:46.700: INFO: Terminating Job.batch foo pods took: 100.70927ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  3 14:34:18.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7032" for this suite.

• [SLOW TEST:34.404 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":65,"skipped":1314,"failed":0}
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:18.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2387
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:34:18.936: INFO: Creating pod...
Aug  3 14:34:20.950: INFO: Creating service...
Aug  3 14:34:20.960: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=DELETE
Aug  3 14:34:20.965: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  3 14:34:20.965: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=OPTIONS
Aug  3 14:34:20.971: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  3 14:34:20.971: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=PATCH
Aug  3 14:34:20.974: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  3 14:34:20.974: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=POST
Aug  3 14:34:20.976: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  3 14:34:20.976: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=PUT
Aug  3 14:34:20.979: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  3 14:34:20.979: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=DELETE
Aug  3 14:34:20.984: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  3 14:34:20.984: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=OPTIONS
Aug  3 14:34:20.987: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  3 14:34:20.987: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=PATCH
Aug  3 14:34:20.990: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  3 14:34:20.990: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=POST
Aug  3 14:34:20.994: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  3 14:34:20.994: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=PUT
Aug  3 14:34:20.997: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  3 14:34:20.997: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=GET
Aug  3 14:34:20.999: INFO: http.Client request:GET StatusCode:301
Aug  3 14:34:20.999: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=GET
Aug  3 14:34:21.001: INFO: http.Client request:GET StatusCode:301
Aug  3 14:34:21.001: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy?method=HEAD
Aug  3 14:34:21.003: INFO: http.Client request:HEAD StatusCode:301
Aug  3 14:34:21.003: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2387/services/e2e-proxy-test-service/proxy?method=HEAD
Aug  3 14:34:21.005: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  3 14:34:21.005: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2387" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":66,"skipped":1314,"failed":0}
SSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:21.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7717
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-a53ff9ca-3170-4529-835c-779c30c07ff4
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:34:21.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7717" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":67,"skipped":1319,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:21.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug  3 14:34:21.261: INFO: Waiting up to 5m0s for pod "pod-ed3a93e0-502a-414d-a64e-6ec38b887118" in namespace "emptydir-7497" to be "Succeeded or Failed"
Aug  3 14:34:21.262: INFO: Pod "pod-ed3a93e0-502a-414d-a64e-6ec38b887118": Phase="Pending", Reason="", readiness=false. Elapsed: 1.840289ms
Aug  3 14:34:23.269: INFO: Pod "pod-ed3a93e0-502a-414d-a64e-6ec38b887118": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008889662s
Aug  3 14:34:25.274: INFO: Pod "pod-ed3a93e0-502a-414d-a64e-6ec38b887118": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013262489s
STEP: Saw pod success
Aug  3 14:34:25.274: INFO: Pod "pod-ed3a93e0-502a-414d-a64e-6ec38b887118" satisfied condition "Succeeded or Failed"
Aug  3 14:34:25.276: INFO: Trying to get logs from node worker-0 pod pod-ed3a93e0-502a-414d-a64e-6ec38b887118 container test-container: <nil>
STEP: delete the pod
Aug  3 14:34:25.287: INFO: Waiting for pod pod-ed3a93e0-502a-414d-a64e-6ec38b887118 to disappear
Aug  3 14:34:25.288: INFO: Pod pod-ed3a93e0-502a-414d-a64e-6ec38b887118 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 14:34:25.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7497" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":68,"skipped":1348,"failed":0}
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:25.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-3587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:34:25.419: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-653c5354-be36-498c-bd1a-77be6ec5c6ea" in namespace "security-context-test-3587" to be "Succeeded or Failed"
Aug  3 14:34:25.421: INFO: Pod "busybox-readonly-false-653c5354-be36-498c-bd1a-77be6ec5c6ea": Phase="Pending", Reason="", readiness=false. Elapsed: 1.906248ms
Aug  3 14:34:27.428: INFO: Pod "busybox-readonly-false-653c5354-be36-498c-bd1a-77be6ec5c6ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009063966s
Aug  3 14:34:29.435: INFO: Pod "busybox-readonly-false-653c5354-be36-498c-bd1a-77be6ec5c6ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015687432s
Aug  3 14:34:29.435: INFO: Pod "busybox-readonly-false-653c5354-be36-498c-bd1a-77be6ec5c6ea" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 14:34:29.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-3587" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":69,"skipped":1349,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:29.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-cb3ca7bd-110c-444e-871b-5990cd1fb939
STEP: Creating configMap with name cm-test-opt-upd-70a490b7-8c34-4e60-b699-7c1651f3f318
STEP: Creating the pod
Aug  3 14:34:29.612: INFO: The status of Pod pod-projected-configmaps-7f960486-4119-4b28-aa86-69cef412fb45 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:34:31.616: INFO: The status of Pod pod-projected-configmaps-7f960486-4119-4b28-aa86-69cef412fb45 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-cb3ca7bd-110c-444e-871b-5990cd1fb939
STEP: Updating configmap cm-test-opt-upd-70a490b7-8c34-4e60-b699-7c1651f3f318
STEP: Creating configMap with name cm-test-opt-create-88cb9034-454d-4907-9fa1-7bfde13e440b
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 14:34:33.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3518" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1366,"failed":0}
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:34:33.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-9650
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Aug  3 14:34:33.784: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 14:35:33.798: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:35:33.800: INFO: Starting informer...
STEP: Starting pod...
Aug  3 14:35:34.010: INFO: Pod is running on worker-0. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug  3 14:35:34.018: INFO: Pod wasn't evicted. Proceeding
Aug  3 14:35:34.018: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug  3 14:36:49.031: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:36:49.031: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-9650" for this suite.

• [SLOW TEST:135.378 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":71,"skipped":1373,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:36:49.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6001
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:36:49.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6001" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":72,"skipped":1382,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:36:49.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug  3 14:36:49.321: INFO: observed Pod pod-test in namespace pods-7116 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug  3 14:36:49.323: INFO: observed Pod pod-test in namespace pods-7116 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC  }]
Aug  3 14:36:49.338: INFO: observed Pod pod-test in namespace pods-7116 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC  }]
Aug  3 14:36:50.010: INFO: Found Pod pod-test in namespace pods-7116 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:50 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:36:49 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug  3 14:36:50.033: INFO: observed event type MODIFIED
Aug  3 14:36:52.014: INFO: observed event type MODIFIED
Aug  3 14:36:53.016: INFO: observed event type MODIFIED
Aug  3 14:36:53.020: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 14:36:53.028: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7116" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":73,"skipped":1401,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:36:53.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Aug  3 14:36:53.159: INFO: created test-event-1
Aug  3 14:36:53.161: INFO: created test-event-2
Aug  3 14:36:53.164: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug  3 14:36:53.166: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug  3 14:36:53.174: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug  3 14:36:53.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-173" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":74,"skipped":1427,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:36:53.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-9486
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  3 14:36:53.299: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  3 14:36:53.303: INFO: Waiting for terminating namespaces to be deleted...
Aug  3 14:36:53.305: INFO: 
Logging pods the apiserver thinks is on node worker-0 before test
Aug  3 14:36:53.309: INFO: konnectivity-agent-8dbdw from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.309: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:36:53.309: INFO: kube-proxy-lqvs2 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.309: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:36:53.309: INFO: kube-router-q22b4 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.309: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:36:53.309: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:36:53.309: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:36:53.309: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  3 14:36:53.309: INFO: taint-eviction-4 from taint-single-pod-9650 started at 2022-08-03 14:35:33 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.309: INFO: 	Container pause ready: true, restart count 0
Aug  3 14:36:53.309: INFO: 
Logging pods the apiserver thinks is on node worker-1 before test
Aug  3 14:36:53.313: INFO: coredns-88b745646-2z8kr from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:36:53.313: INFO: coredns-88b745646-5tt95 from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:36:53.313: INFO: konnectivity-agent-vt5zk from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:36:53.313: INFO: kube-proxy-tlfh2 from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:36:53.313: INFO: kube-router-2jmhg from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:36:53.313: INFO: metrics-server-7d7c4887f4-x8jdn from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container metrics-server ready: true, restart count 0
Aug  3 14:36:53.313: INFO: sonobuoy from sonobuoy started at 2022-08-03 14:24:05 +0000 UTC (1 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  3 14:36:53.313: INFO: sonobuoy-e2e-job-56db34158e2f4c2c from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container e2e ready: true, restart count 0
Aug  3 14:36:53.313: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:36:53.313: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-cqd8v from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:36:53.313: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:36:53.313: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.1707dc7c1cd1cde3], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:36:54.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-9486" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":75,"skipped":1479,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:36:54.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 14:37:05.598: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8363" for this suite.

• [SLOW TEST:11.267 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":76,"skipped":1528,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:05.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-8s9l
STEP: Creating a pod to test atomic-volume-subpath
Aug  3 14:37:05.733: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-8s9l" in namespace "subpath-4777" to be "Succeeded or Failed"
Aug  3 14:37:05.736: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.683522ms
Aug  3 14:37:07.743: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 2.009693732s
Aug  3 14:37:09.746: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 4.013012801s
Aug  3 14:37:11.751: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 6.018274862s
Aug  3 14:37:13.758: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 8.025105743s
Aug  3 14:37:15.764: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 10.030880299s
Aug  3 14:37:17.771: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 12.037786145s
Aug  3 14:37:19.775: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 14.041323003s
Aug  3 14:37:21.782: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 16.049203089s
Aug  3 14:37:23.789: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 18.055938849s
Aug  3 14:37:25.794: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=true. Elapsed: 20.060387816s
Aug  3 14:37:27.801: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Running", Reason="", readiness=false. Elapsed: 22.067990037s
Aug  3 14:37:29.805: INFO: Pod "pod-subpath-test-configmap-8s9l": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.071344991s
STEP: Saw pod success
Aug  3 14:37:29.805: INFO: Pod "pod-subpath-test-configmap-8s9l" satisfied condition "Succeeded or Failed"
Aug  3 14:37:29.806: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-configmap-8s9l container test-container-subpath-configmap-8s9l: <nil>
STEP: delete the pod
Aug  3 14:37:29.827: INFO: Waiting for pod pod-subpath-test-configmap-8s9l to disappear
Aug  3 14:37:29.828: INFO: Pod pod-subpath-test-configmap-8s9l no longer exists
STEP: Deleting pod pod-subpath-test-configmap-8s9l
Aug  3 14:37:29.828: INFO: Deleting pod "pod-subpath-test-configmap-8s9l" in namespace "subpath-4777"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  3 14:37:29.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4777" for this suite.

• [SLOW TEST:24.231 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":77,"skipped":1533,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:29.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-8783
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Aug  3 14:37:29.966: INFO: Waiting up to 5m0s for pod "client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096" in namespace "containers-8783" to be "Succeeded or Failed"
Aug  3 14:37:29.968: INFO: Pod "client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007084ms
Aug  3 14:37:31.975: INFO: Pod "client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00892486s
Aug  3 14:37:33.981: INFO: Pod "client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014317495s
STEP: Saw pod success
Aug  3 14:37:33.981: INFO: Pod "client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096" satisfied condition "Succeeded or Failed"
Aug  3 14:37:33.982: INFO: Trying to get logs from node worker-0 pod client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:37:33.995: INFO: Waiting for pod client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096 to disappear
Aug  3 14:37:33.997: INFO: Pod client-containers-9592b43e-ed90-4d1e-a4e0-fb01791a5096 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  3 14:37:33.997: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-8783" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":78,"skipped":1567,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:34.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2370
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug  3 14:37:36.195: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  3 14:37:38.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2370" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":79,"skipped":1577,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:38.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4663
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:37:38.338: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug  3 14:37:38.346: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:37:38.346: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:37:39.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:37:39.353: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug  3 14:37:39.373: INFO: Wrong image for pod: daemon-set-gpgmx. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  3 14:37:39.373: INFO: Wrong image for pod: daemon-set-mw4zp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  3 14:37:40.381: INFO: Wrong image for pod: daemon-set-gpgmx. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  3 14:37:41.382: INFO: Wrong image for pod: daemon-set-gpgmx. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  3 14:37:42.381: INFO: Wrong image for pod: daemon-set-gpgmx. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug  3 14:37:42.381: INFO: Pod daemon-set-rxrhv is not available
STEP: Check that daemon pods are still running on every node of the cluster.
Aug  3 14:37:44.387: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:37:44.387: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4663, will wait for the garbage collector to delete the pods
Aug  3 14:37:44.452: INFO: Deleting DaemonSet.extensions daemon-set took: 3.13593ms
Aug  3 14:37:44.553: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.066631ms
Aug  3 14:37:47.460: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:37:47.460: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 14:37:47.462: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6563"},"items":null}

Aug  3 14:37:47.464: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6563"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:37:47.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4663" for this suite.

• [SLOW TEST:9.264 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":80,"skipped":1623,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:47.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7190
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:37:47.603: INFO: Waiting up to 5m0s for pod "downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6" in namespace "downward-api-7190" to be "Succeeded or Failed"
Aug  3 14:37:47.605: INFO: Pod "downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6": Phase="Pending", Reason="", readiness=false. Elapsed: 1.640401ms
Aug  3 14:37:49.611: INFO: Pod "downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6": Phase="Running", Reason="", readiness=false. Elapsed: 2.007922335s
Aug  3 14:37:51.617: INFO: Pod "downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014437857s
STEP: Saw pod success
Aug  3 14:37:51.617: INFO: Pod "downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6" satisfied condition "Succeeded or Failed"
Aug  3 14:37:51.619: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6 container client-container: <nil>
STEP: delete the pod
Aug  3 14:37:51.632: INFO: Waiting for pod downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6 to disappear
Aug  3 14:37:51.634: INFO: Pod downwardapi-volume-28fc71fe-910e-4862-b68b-dac812d1a2e6 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 14:37:51.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7190" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1626,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:51.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Aug  3 14:37:52.790: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
W0803 14:37:52.790506      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  3 14:37:52.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6207" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":82,"skipped":1677,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:52.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-9141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Aug  3 14:37:52.918: INFO: Waiting up to 5m0s for pod "client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422" in namespace "containers-9141" to be "Succeeded or Failed"
Aug  3 14:37:52.920: INFO: Pod "client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422": Phase="Pending", Reason="", readiness=false. Elapsed: 1.816326ms
Aug  3 14:37:54.923: INFO: Pod "client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00501457s
Aug  3 14:37:56.930: INFO: Pod "client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011821766s
STEP: Saw pod success
Aug  3 14:37:56.930: INFO: Pod "client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422" satisfied condition "Succeeded or Failed"
Aug  3 14:37:56.932: INFO: Trying to get logs from node worker-0 pod client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:37:56.944: INFO: Waiting for pod client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422 to disappear
Aug  3 14:37:56.946: INFO: Pod client-containers-06a73a40-a1b4-40a3-8d75-e0eeef7a5422 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  3 14:37:56.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-9141" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1699,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:37:56.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-8859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8859
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-8859
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8859
Aug  3 14:37:57.083: INFO: Found 0 stateful pods, waiting for 1
Aug  3 14:38:07.090: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug  3 14:38:07.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:38:07.224: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:38:07.224: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:38:07.224: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:38:07.226: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug  3 14:38:17.234: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:38:17.234: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:38:17.243: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
Aug  3 14:38:17.243: INFO: ss-0  worker-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:37:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:37:57 +0000 UTC  }]
Aug  3 14:38:17.243: INFO: 
Aug  3 14:38:17.243: INFO: StatefulSet ss has not reached scale 3, at 1
Aug  3 14:38:18.248: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997907085s
Aug  3 14:38:19.253: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992522918s
Aug  3 14:38:20.258: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.9872667s
Aug  3 14:38:21.263: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982928769s
Aug  3 14:38:22.268: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978078486s
Aug  3 14:38:23.272: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972557485s
Aug  3 14:38:24.277: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.969307849s
Aug  3 14:38:25.281: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963853468s
Aug  3 14:38:26.287: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.864395ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8859
Aug  3 14:38:27.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:38:27.406: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 14:38:27.406: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:38:27.406: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:38:27.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:38:27.518: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug  3 14:38:27.518: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:38:27.518: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:38:27.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:38:27.629: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug  3 14:38:27.629: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:38:27.629: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:38:27.632: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 14:38:27.632: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 14:38:27.632: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug  3 14:38:27.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:38:27.746: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:38:27.746: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:38:27.746: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:38:27.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:38:27.861: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:38:27.861: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:38:27.861: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:38:27.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-8859 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:38:27.972: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:38:27.972: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:38:27.972: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:38:27.972: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:38:27.975: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug  3 14:38:37.986: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:38:37.986: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:38:37.986: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:38:37.993: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
Aug  3 14:38:37.993: INFO: ss-0  worker-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:37:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:37:57 +0000 UTC  }]
Aug  3 14:38:37.993: INFO: ss-1  worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:17 +0000 UTC  }]
Aug  3 14:38:37.993: INFO: ss-2  worker-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 14:38:17 +0000 UTC  }]
Aug  3 14:38:37.993: INFO: 
Aug  3 14:38:37.993: INFO: StatefulSet ss has not reached scale 0, at 3
Aug  3 14:38:38.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.99747358s
Aug  3 14:38:40.000: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992821397s
Aug  3 14:38:41.005: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990446647s
Aug  3 14:38:42.010: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.985975999s
Aug  3 14:38:43.014: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.980912662s
Aug  3 14:38:44.019: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.977105739s
Aug  3 14:38:45.023: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.97142069s
Aug  3 14:38:46.027: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.968208591s
Aug  3 14:38:47.032: INFO: Verifying statefulset ss doesn't scale past 0 for another 963.875294ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8859
Aug  3 14:38:48.035: INFO: Scaling statefulset ss to 0
Aug  3 14:38:48.042: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 14:38:48.043: INFO: Deleting all statefulset in ns statefulset-8859
Aug  3 14:38:48.045: INFO: Scaling statefulset ss to 0
Aug  3 14:38:48.051: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:38:48.052: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 14:38:48.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8859" for this suite.

• [SLOW TEST:51.116 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":84,"skipped":1712,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:38:48.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7299
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  3 14:38:48.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:38:48.251: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:38:49.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:38:49.257: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:38:50.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:38:50.257: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug  3 14:38:50.271: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:38:50.271: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7299, will wait for the garbage collector to delete the pods
Aug  3 14:38:51.336: INFO: Deleting DaemonSet.extensions daemon-set took: 3.532932ms
Aug  3 14:38:51.437: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.613919ms
Aug  3 14:38:52.539: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:38:52.539: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 14:38:52.541: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7035"},"items":null}

Aug  3 14:38:52.543: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7035"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:38:52.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7299" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":85,"skipped":1716,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:38:52.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Aug  3 14:38:52.672: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3990 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 14:38:52.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3990" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":86,"skipped":1759,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:38:52.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-62
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  3 14:38:55.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-62" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":87,"skipped":1766,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:38:55.728: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-640
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-1fa5bf61-a1ba-4366-baed-6467fcccf147 in namespace container-probe-640
Aug  3 14:38:57.860: INFO: Started pod liveness-1fa5bf61-a1ba-4366-baed-6467fcccf147 in namespace container-probe-640
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 14:38:57.862: INFO: Initial restart count of pod liveness-1fa5bf61-a1ba-4366-baed-6467fcccf147 is 0
Aug  3 14:39:17.923: INFO: Restart count of pod container-probe-640/liveness-1fa5bf61-a1ba-4366-baed-6467fcccf147 is now 1 (20.061048752s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 14:39:17.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-640" for this suite.

• [SLOW TEST:22.208 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":88,"skipped":1780,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:17.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5380
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-2bca2315-a9f4-4add-b880-ff33472ca999
STEP: Creating a pod to test consume configMaps
Aug  3 14:39:18.070: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e" in namespace "projected-5380" to be "Succeeded or Failed"
Aug  3 14:39:18.072: INFO: Pod "pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.939126ms
Aug  3 14:39:20.076: INFO: Pod "pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00596439s
Aug  3 14:39:22.082: INFO: Pod "pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012556273s
STEP: Saw pod success
Aug  3 14:39:22.082: INFO: Pod "pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e" satisfied condition "Succeeded or Failed"
Aug  3 14:39:22.084: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:39:22.099: INFO: Waiting for pod pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e to disappear
Aug  3 14:39:22.101: INFO: Pod pod-projected-configmaps-878733a7-b460-4491-af00-4d2646652f1e no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 14:39:22.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5380" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1808,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:22.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2149
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Aug  3 14:39:24.244: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2149 pod-service-account-413fb079-3d7b-43bd-90ed-cf2b6a098363 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug  3 14:39:24.351: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2149 pod-service-account-413fb079-3d7b-43bd-90ed-cf2b6a098363 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug  3 14:39:24.461: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2149 pod-service-account-413fb079-3d7b-43bd-90ed-cf2b6a098363 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Aug  3 14:39:24.571: INFO: Got root ca configmap in namespace "svcaccounts-2149"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 14:39:24.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2149" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":90,"skipped":1835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:24.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  3 14:39:27.724: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  3 14:39:27.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5755" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":91,"skipped":1868,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:27.739: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4230
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug  3 14:39:27.864: INFO: Pod name pod-release: Found 0 pods out of 1
Aug  3 14:39:32.875: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  3 14:39:33.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4230" for this suite.

• [SLOW TEST:6.168 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":92,"skipped":1918,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:33.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1913
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:39:34.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:39:34.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1913" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":93,"skipped":1946,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:34.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7762
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-ef8f6ca0-79a2-4aad-9cb2-e8ee32d74d6a
STEP: Creating a pod to test consume configMaps
Aug  3 14:39:34.686: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20" in namespace "projected-7762" to be "Succeeded or Failed"
Aug  3 14:39:34.688: INFO: Pod "pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20": Phase="Pending", Reason="", readiness=false. Elapsed: 1.867618ms
Aug  3 14:39:36.693: INFO: Pod "pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007803772s
Aug  3 14:39:38.698: INFO: Pod "pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012627214s
STEP: Saw pod success
Aug  3 14:39:38.698: INFO: Pod "pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20" satisfied condition "Succeeded or Failed"
Aug  3 14:39:38.700: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:39:38.712: INFO: Waiting for pod pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20 to disappear
Aug  3 14:39:38.713: INFO: Pod pod-projected-configmaps-b1ce3fef-5c47-4002-8f22-decc9926aa20 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 14:39:38.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7762" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":94,"skipped":1961,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:38.718: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9972
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:39:38.857: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c82f36c1-8c2c-43f1-8105-e9e05a86d669", Controller:(*bool)(0xc0020f9986), BlockOwnerDeletion:(*bool)(0xc0020f9987)}}
Aug  3 14:39:38.862: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"3db25179-fc48-4f14-bea3-37d0d8fdd970", Controller:(*bool)(0xc002a18d2e), BlockOwnerDeletion:(*bool)(0xc002a18d2f)}}
Aug  3 14:39:38.865: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"92b1e4ff-4386-4a16-8c9e-1cc8cdb94591", Controller:(*bool)(0xc002198dbe), BlockOwnerDeletion:(*bool)(0xc002198dbf)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  3 14:39:43.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9972" for this suite.

• [SLOW TEST:5.198 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":95,"skipped":1963,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:43.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:39:46.061: INFO: DNS probes using dns-8432/dns-test-d4508a72-6e20-4787-b431-0d867bb8e860 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 14:39:46.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8432" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":96,"skipped":1979,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:46.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:39:46.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:39:49.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5694" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":97,"skipped":2061,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:49.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9774
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:39:50.796: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:39:53.816: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:39:53.849: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9774" for this suite.
STEP: Destroying namespace "webhook-9774-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":98,"skipped":2074,"failed":0}
SS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:39:53.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7455
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:39:54.009: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug  3 14:39:54.014: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:54.014: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug  3 14:39:54.029: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:54.029: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:39:55.032: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:55.032: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:39:56.033: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 14:39:56.034: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug  3 14:39:56.046: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 14:39:56.046: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug  3 14:39:57.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:57.050: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug  3 14:39:57.056: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:57.056: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:39:58.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:58.061: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:39:59.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:39:59.061: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:40:00.059: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 14:40:00.059: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7455, will wait for the garbage collector to delete the pods
Aug  3 14:40:00.119: INFO: Deleting DaemonSet.extensions daemon-set took: 3.950969ms
Aug  3 14:40:00.220: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.786234ms
Aug  3 14:40:02.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:40:02.626: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 14:40:02.628: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7798"},"items":null}

Aug  3 14:40:02.630: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7798"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:40:02.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7455" for this suite.

• [SLOW TEST:8.767 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":99,"skipped":2076,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:40:02.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-ccaf9cf8-3346-48de-b0d3-07e1f3ad65f4
STEP: Creating a pod to test consume secrets
Aug  3 14:40:02.777: INFO: Waiting up to 5m0s for pod "pod-secrets-e47308e6-6672-4328-873a-019e58d26d98" in namespace "secrets-519" to be "Succeeded or Failed"
Aug  3 14:40:02.781: INFO: Pod "pod-secrets-e47308e6-6672-4328-873a-019e58d26d98": Phase="Pending", Reason="", readiness=false. Elapsed: 3.767301ms
Aug  3 14:40:04.784: INFO: Pod "pod-secrets-e47308e6-6672-4328-873a-019e58d26d98": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00668407s
Aug  3 14:40:06.791: INFO: Pod "pod-secrets-e47308e6-6672-4328-873a-019e58d26d98": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013968726s
STEP: Saw pod success
Aug  3 14:40:06.791: INFO: Pod "pod-secrets-e47308e6-6672-4328-873a-019e58d26d98" satisfied condition "Succeeded or Failed"
Aug  3 14:40:06.793: INFO: Trying to get logs from node worker-0 pod pod-secrets-e47308e6-6672-4328-873a-019e58d26d98 container secret-env-test: <nil>
STEP: delete the pod
Aug  3 14:40:06.806: INFO: Waiting for pod pod-secrets-e47308e6-6672-4328-873a-019e58d26d98 to disappear
Aug  3 14:40:06.807: INFO: Pod pod-secrets-e47308e6-6672-4328-873a-019e58d26d98 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  3 14:40:06.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-519" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":100,"skipped":2098,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:40:06.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-278
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-278 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-278;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-278 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-278;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-278.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-278.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-278.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-278.svc;check="$$(dig +notcp +noall +answer +search 39.166.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.166.39_udp@PTR;check="$$(dig +tcp +noall +answer +search 39.166.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.166.39_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-278 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-278;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-278 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-278;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-278.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-278.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-278.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-278.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-278.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-278.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-278.svc;check="$$(dig +notcp +noall +answer +search 39.166.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.166.39_udp@PTR;check="$$(dig +tcp +noall +answer +search 39.166.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.166.39_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:40:08.968: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.971: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.973: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.976: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.979: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.981: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.984: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:08.987: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.000: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.003: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.005: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.008: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.011: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.013: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.016: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.019: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:09.029: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:14.034: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.036: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.039: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.042: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.044: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.047: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.050: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.052: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.065: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.068: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.070: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.073: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.076: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.078: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.081: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.083: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:14.094: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:19.035: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.037: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.040: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.043: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.046: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.048: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.050: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.053: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.066: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.069: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.072: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.075: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.078: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.080: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.083: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.085: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:19.096: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:24.037: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.040: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.043: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.046: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.049: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.051: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.054: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.057: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.070: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.073: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.076: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.078: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.081: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.084: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.087: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.089: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:24.100: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:29.037: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.040: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.043: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.046: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.049: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.051: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.054: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.057: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.069: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.072: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.075: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.078: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.089: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.093: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.095: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.098: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:29.119: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:34.033: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.036: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.039: INFO: Unable to read wheezy_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.042: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.044: INFO: Unable to read wheezy_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.047: INFO: Unable to read wheezy_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.050: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.053: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.066: INFO: Unable to read jessie_udp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.069: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.072: INFO: Unable to read jessie_udp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.074: INFO: Unable to read jessie_tcp@dns-test-service.dns-278 from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.077: INFO: Unable to read jessie_udp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.082: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.085: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-278.svc from pod dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58: the server could not find the requested resource (get pods dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58)
Aug  3 14:40:34.095: INFO: Lookups using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-278 wheezy_tcp@dns-test-service.dns-278 wheezy_udp@dns-test-service.dns-278.svc wheezy_tcp@dns-test-service.dns-278.svc wheezy_udp@_http._tcp.dns-test-service.dns-278.svc wheezy_tcp@_http._tcp.dns-test-service.dns-278.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-278 jessie_tcp@dns-test-service.dns-278 jessie_udp@dns-test-service.dns-278.svc jessie_tcp@dns-test-service.dns-278.svc jessie_udp@_http._tcp.dns-test-service.dns-278.svc jessie_tcp@_http._tcp.dns-test-service.dns-278.svc]

Aug  3 14:40:39.098: INFO: DNS probes using dns-278/dns-test-86fabba5-3725-4a6c-ac38-e0c266aedb58 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 14:40:39.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-278" for this suite.

• [SLOW TEST:32.408 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":101,"skipped":2120,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:40:39.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-328.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-328.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-328.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-328.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:40:41.380: INFO: DNS probes using dns-328/dns-test-6a1144f6-eca9-4d7e-84bd-54062f4e9598 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 14:40:41.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-328" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":102,"skipped":2145,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:40:41.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-605
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:40:41.530: INFO: Found 0 stateful pods, waiting for 1
Aug  3 14:40:51.537: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug  3 14:40:51.554: INFO: Found 1 stateful pods, waiting for 2
Aug  3 14:41:01.561: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 14:41:01.561: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 14:41:01.573: INFO: Deleting all statefulset in ns statefulset-605
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 14:41:01.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-605" for this suite.

• [SLOW TEST:20.182 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":103,"skipped":2171,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:01.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  3 14:41:01.715: INFO: The status of Pod pod-update-693407bb-9bf3-4a64-a1ef-b466c32e7ad6 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:41:03.720: INFO: The status of Pod pod-update-693407bb-9bf3-4a64-a1ef-b466c32e7ad6 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug  3 14:41:04.234: INFO: Successfully updated pod "pod-update-693407bb-9bf3-4a64-a1ef-b466c32e7ad6"
STEP: verifying the updated pod is in kubernetes
Aug  3 14:41:04.238: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 14:41:04.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9843" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":104,"skipped":2179,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:04.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1338
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:41:10.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6698" for this suite.
STEP: Destroying namespace "nsdeletetest-1681" for this suite.
Aug  3 14:41:10.621: INFO: Namespace nsdeletetest-1681 was already deleted
STEP: Destroying namespace "nsdeletetest-1338" for this suite.

• [SLOW TEST:6.380 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":105,"skipped":2194,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:10.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-9720-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  3 14:41:10.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9720" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":106,"skipped":2203,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:10.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3814
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  3 14:41:10.883: INFO: Waiting up to 5m0s for pod "downward-api-3f2758d1-3731-4e59-90ee-1718245539b3" in namespace "downward-api-3814" to be "Succeeded or Failed"
Aug  3 14:41:10.885: INFO: Pod "downward-api-3f2758d1-3731-4e59-90ee-1718245539b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.215301ms
Aug  3 14:41:12.893: INFO: Pod "downward-api-3f2758d1-3731-4e59-90ee-1718245539b3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009974404s
Aug  3 14:41:14.896: INFO: Pod "downward-api-3f2758d1-3731-4e59-90ee-1718245539b3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013056696s
STEP: Saw pod success
Aug  3 14:41:14.896: INFO: Pod "downward-api-3f2758d1-3731-4e59-90ee-1718245539b3" satisfied condition "Succeeded or Failed"
Aug  3 14:41:14.898: INFO: Trying to get logs from node worker-0 pod downward-api-3f2758d1-3731-4e59-90ee-1718245539b3 container dapi-container: <nil>
STEP: delete the pod
Aug  3 14:41:14.913: INFO: Waiting for pod downward-api-3f2758d1-3731-4e59-90ee-1718245539b3 to disappear
Aug  3 14:41:14.914: INFO: Pod downward-api-3f2758d1-3731-4e59-90ee-1718245539b3 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  3 14:41:14.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3814" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":2231,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:14.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4838
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4838
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-4838
STEP: Waiting until pod test-pod will start running in namespace statefulset-4838
STEP: Creating statefulset with conflicting port in namespace statefulset-4838
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4838
Aug  3 14:41:17.076: INFO: Observed stateful pod in namespace: statefulset-4838, name: ss-0, uid: 8bdfa171-123f-4d6a-b519-f785f6288283, status phase: Pending. Waiting for statefulset controller to delete.
Aug  3 14:41:17.085: INFO: Observed stateful pod in namespace: statefulset-4838, name: ss-0, uid: 8bdfa171-123f-4d6a-b519-f785f6288283, status phase: Failed. Waiting for statefulset controller to delete.
Aug  3 14:41:17.090: INFO: Observed stateful pod in namespace: statefulset-4838, name: ss-0, uid: 8bdfa171-123f-4d6a-b519-f785f6288283, status phase: Failed. Waiting for statefulset controller to delete.
Aug  3 14:41:17.093: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4838
STEP: Removing pod with conflicting port in namespace statefulset-4838
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4838 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 14:41:19.113: INFO: Deleting all statefulset in ns statefulset-4838
Aug  3 14:41:19.115: INFO: Scaling statefulset ss to 0
Aug  3 14:41:29.133: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:41:29.135: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 14:41:29.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4838" for this suite.

• [SLOW TEST:14.230 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":108,"skipped":2241,"failed":0}
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:29.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3739
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  3 14:41:54.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3739" for this suite.

• [SLOW TEST:25.303 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":109,"skipped":2248,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:54.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-4320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  3 14:41:54.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-4320" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":110,"skipped":2264,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:54.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2839
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:41:54.715: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug  3 14:41:59.718: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug  3 14:41:59.719: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:41:59.733: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-2839  86118801-5f18-48b5-a71e-64e07272dc45 8584 1 2022-08-03 14:41:59 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-08-03 14:41:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00381b238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Aug  3 14:41:59.736: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-2839  a79abcda-e5d2-4e07-8504-d9747cf483fb 8587 1 2022-08-03 14:41:59 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 86118801-5f18-48b5-a71e-64e07272dc45 0xc004014a47 0xc004014a48}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:41:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"86118801-5f18-48b5-a71e-64e07272dc45\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004014ad8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:41:59.736: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Aug  3 14:41:59.736: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-2839  41bbc99f-b0da-4d62-a264-39dc01254b6c 8586 1 2022-08-03 14:41:54 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 86118801-5f18-48b5-a71e-64e07272dc45 0xc004014927 0xc004014928}] []  [{e2e.test Update apps/v1 2022-08-03 14:41:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:41:55 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2022-08-03 14:41:59 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"86118801-5f18-48b5-a71e-64e07272dc45\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0040149e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:41:59.761: INFO: Pod "test-cleanup-controller-8f5km" is available:
&Pod{ObjectMeta:{test-cleanup-controller-8f5km test-cleanup-controller- deployment-2839  e7a7f935-c15c-4035-8007-938a1f376f10 8549 0 2022-08-03 14:41:54 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-cleanup-controller 41bbc99f-b0da-4d62-a264-39dc01254b6c 0xc00381b547 0xc00381b548}] []  [{kube-controller-manager Update v1 2022-08-03 14:41:54 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"41bbc99f-b0da-4d62-a264-39dc01254b6c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:41:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.116\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dzcb6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dzcb6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:41:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:41:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:41:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:41:54 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.116,StartTime:2022-08-03 14:41:54 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:41:55 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://29cd3c70e4a1d622a4f42e12857c3088eca1ea09bea408f5a3386d8fa454ea38,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.116,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:41:59.761: INFO: Pod "test-cleanup-deployment-6755c7b765-vsmn6" is not available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-vsmn6 test-cleanup-deployment-6755c7b765- deployment-2839  9d06956c-182d-41ba-bb89-6c14a4fe879d 8589 0 2022-08-03 14:41:59 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 a79abcda-e5d2-4e07-8504-d9747cf483fb 0xc00381b737 0xc00381b738}] []  [{kube-controller-manager Update v1 2022-08-03 14:41:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a79abcda-e5d2-4e07-8504-d9747cf483fb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b5dsv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b5dsv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:41:59.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2839" for this suite.

• [SLOW TEST:5.179 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":111,"skipped":2278,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:41:59.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4513
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Aug  3 14:41:59.903: INFO: The status of Pod pod-hostip-4d2ab512-74cd-4046-bac6-1ad532d6cc2f is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:42:01.910: INFO: The status of Pod pod-hostip-4d2ab512-74cd-4046-bac6-1ad532d6cc2f is Running (Ready = true)
Aug  3 14:42:01.913: INFO: Pod pod-hostip-4d2ab512-74cd-4046-bac6-1ad532d6cc2f has hostIP: 10.0.36.176
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 14:42:01.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4513" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":2286,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:42:01.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8955
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8955
Aug  3 14:42:02.050: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:42:04.055: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug  3 14:42:04.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug  3 14:42:04.173: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug  3 14:42:04.173: INFO: stdout: "iptables"
Aug  3 14:42:04.173: INFO: proxyMode: iptables
Aug  3 14:42:04.178: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug  3 14:42:04.180: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-8955
STEP: creating replication controller affinity-nodeport-timeout in namespace services-8955
I0803 14:42:04.193926      23 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-8955, replica count: 3
I0803 14:42:07.244741      23 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:42:07.256: INFO: Creating new exec pod
Aug  3 14:42:10.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug  3 14:42:10.388: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug  3 14:42:10.388: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:42:10.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.163.3 80'
Aug  3 14:42:10.497: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.163.3 80\nConnection to 10.105.163.3 80 port [tcp/http] succeeded!\n"
Aug  3 14:42:10.498: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:42:10.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.176 31098'
Aug  3 14:42:10.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.176 31098\nConnection to 10.0.36.176 31098 port [tcp/*] succeeded!\n"
Aug  3 14:42:10.610: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:42:10.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.79 31098'
Aug  3 14:42:10.726: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.79 31098\nConnection to 10.0.36.79 31098 port [tcp/*] succeeded!\n"
Aug  3 14:42:10.726: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:42:10.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.36.176:31098/ ; done'
Aug  3 14:42:10.882: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n"
Aug  3 14:42:10.882: INFO: stdout: "\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7\naffinity-nodeport-timeout-jwtk7"
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Received response from host: affinity-nodeport-timeout-jwtk7
Aug  3 14:42:10.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.36.176:31098/'
Aug  3 14:42:10.987: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n"
Aug  3 14:42:10.987: INFO: stdout: "affinity-nodeport-timeout-jwtk7"
Aug  3 14:42:30.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.36.176:31098/'
Aug  3 14:42:31.096: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n"
Aug  3 14:42:31.096: INFO: stdout: "affinity-nodeport-timeout-jwtk7"
Aug  3 14:42:51.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-8955 exec execpod-affinity9l2tl -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.0.36.176:31098/'
Aug  3 14:42:51.216: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.0.36.176:31098/\n"
Aug  3 14:42:51.216: INFO: stdout: "affinity-nodeport-timeout-w5684"
Aug  3 14:42:51.216: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-8955, will wait for the garbage collector to delete the pods
Aug  3 14:42:51.280: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 3.366082ms
Aug  3 14:42:51.381: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.691315ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:42:53.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8955" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:51.210 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":113,"skipped":2291,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:42:53.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5186
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:42:53.247: INFO: Creating simple deployment test-new-deployment
Aug  3 14:42:53.255: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:42:55.282: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-5186  818986b8-4aaa-493c-937f-7810c03935bb 8890 3 2022-08-03 14:42:53 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041f12b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-03 14:42:53 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-08-03 14:42:53 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  3 14:42:55.286: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-5186  87aac701-8611-4a2e-bbd2-c4bd112857a9 8891 2 2022-08-03 14:42:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 818986b8-4aaa-493c-937f-7810c03935bb 0xc0041f16e7 0xc0041f16e8}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"818986b8-4aaa-493c-937f-7810c03935bb\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041f1778 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:42:55.291: INFO: Pod "test-new-deployment-55df494869-qflvj" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-qflvj test-new-deployment-55df494869- deployment-5186  9ed97918-e3d3-4d41-af2a-52087596975c 8882 0 2022-08-03 14:42:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-new-deployment-55df494869 87aac701-8611-4a2e-bbd2-c4bd112857a9 0xc0035a02e0 0xc0035a02e1}] []  [{kube-controller-manager Update v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"87aac701-8611-4a2e-bbd2-c4bd112857a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:42:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.121\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rcdb6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rcdb6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:42:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.121,StartTime:2022-08-03 14:42:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 14:42:53 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2a269f3e8788d0925e8029e8fc2aeed278b32d27fd29c0565b048b7d112bf820,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.121,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 14:42:55.291: INFO: Pod "test-new-deployment-55df494869-z28d9" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-z28d9 test-new-deployment-55df494869- deployment-5186  dbc3354f-a5a6-44ff-9775-52f2a0c369be 8894 0 2022-08-03 14:42:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-new-deployment-55df494869 87aac701-8611-4a2e-bbd2-c4bd112857a9 0xc0035a04c0 0xc0035a04c1}] []  [{kube-controller-manager Update v1 2022-08-03 14:42:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"87aac701-8611-4a2e-bbd2-c4bd112857a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-86r77,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-86r77,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:42:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:42:55.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5186" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":114,"skipped":2339,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:42:55.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5941
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5941
STEP: creating service affinity-nodeport-transition in namespace services-5941
STEP: creating replication controller affinity-nodeport-transition in namespace services-5941
I0803 14:42:55.435645      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5941, replica count: 3
I0803 14:42:58.487578      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:42:58.498: INFO: Creating new exec pod
Aug  3 14:43:01.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug  3 14:43:01.633: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug  3 14:43:01.633: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:43:01.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.93.116 80'
Aug  3 14:43:01.738: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.93.116 80\nConnection to 10.111.93.116 80 port [tcp/http] succeeded!\n"
Aug  3 14:43:01.738: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:43:01.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.176 30832'
Aug  3 14:43:01.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.176 30832\nConnection to 10.0.36.176 30832 port [tcp/*] succeeded!\n"
Aug  3 14:43:01.851: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:43:01.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.79 30832'
Aug  3 14:43:01.963: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.79 30832\nConnection to 10.0.36.79 30832 port [tcp/*] succeeded!\n"
Aug  3 14:43:01.963: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:43:01.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.36.176:30832/ ; done'
Aug  3 14:43:02.145: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n"
Aug  3 14:43:02.145: INFO: stdout: "\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-tlkhn\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-6fbhc\naffinity-nodeport-transition-6fbhc\naffinity-nodeport-transition-tlkhn"
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-6fbhc
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-6fbhc
Aug  3 14:43:02.146: INFO: Received response from host: affinity-nodeport-transition-tlkhn
Aug  3 14:43:02.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-5941 exec execpod-affinitydc466 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.36.176:30832/ ; done'
Aug  3 14:43:02.321: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30832/\n"
Aug  3 14:43:02.322: INFO: stdout: "\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj\naffinity-nodeport-transition-jszrj"
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Received response from host: affinity-nodeport-transition-jszrj
Aug  3 14:43:02.322: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5941, will wait for the garbage collector to delete the pods
Aug  3 14:43:02.387: INFO: Deleting ReplicationController affinity-nodeport-transition took: 3.297885ms
Aug  3 14:43:02.488: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.436106ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:43:04.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5941" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.809 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":115,"skipped":2353,"failed":0}
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:04.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Aug  3 14:43:04.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-751" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":116,"skipped":2358,"failed":0}
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:04.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-6632
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:43:04.419: INFO: The status of Pod busybox-host-aliases3a8e1c73-fd0c-4ebc-9c9f-e3774db94ab4 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:43:06.426: INFO: The status of Pod busybox-host-aliases3a8e1c73-fd0c-4ebc-9c9f-e3774db94ab4 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  3 14:43:06.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6632" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":2363,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:06.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2391
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug  3 14:43:08.581: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2391 PodName:var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:43:08.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:43:08.581: INFO: ExecWithOptions: Clientset creation
Aug  3 14:43:08.581: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2391/pods/var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Aug  3 14:43:08.646: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2391 PodName:var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 14:43:08.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 14:43:08.647: INFO: ExecWithOptions: Clientset creation
Aug  3 14:43:08.647: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2391/pods/var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Aug  3 14:43:09.217: INFO: Successfully updated pod "var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug  3 14:43:09.219: INFO: Deleting pod "var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4" in namespace "var-expansion-2391"
Aug  3 14:43:09.223: INFO: Wait up to 5m0s for pod "var-expansion-5cf69367-312a-4f4a-8f14-d0207526a5d4" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 14:43:43.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2391" for this suite.

• [SLOW TEST:36.793 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":118,"skipped":2384,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:43.239: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:43:43.365: INFO: Waiting up to 5m0s for pod "downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48" in namespace "projected-5438" to be "Succeeded or Failed"
Aug  3 14:43:43.368: INFO: Pod "downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.612104ms
Aug  3 14:43:45.373: INFO: Pod "downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007388213s
Aug  3 14:43:47.380: INFO: Pod "downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014399012s
STEP: Saw pod success
Aug  3 14:43:47.380: INFO: Pod "downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48" satisfied condition "Succeeded or Failed"
Aug  3 14:43:47.382: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48 container client-container: <nil>
STEP: delete the pod
Aug  3 14:43:47.394: INFO: Waiting for pod downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48 to disappear
Aug  3 14:43:47.397: INFO: Pod downwardapi-volume-22a78afa-59a5-40f4-98cc-a6f2840c7b48 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 14:43:47.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5438" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":119,"skipped":2407,"failed":0}

------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:47.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4272
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:43:47.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4272" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":120,"skipped":2407,"failed":0}
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:43:47.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-2241
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  3 14:43:47.664: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  3 14:43:47.668: INFO: Waiting for terminating namespaces to be deleted...
Aug  3 14:43:47.671: INFO: 
Logging pods the apiserver thinks is on node worker-0 before test
Aug  3 14:43:47.675: INFO: konnectivity-agent-8dbdw from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.675: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:43:47.675: INFO: kube-proxy-lqvs2 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.675: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:43:47.675: INFO: kube-router-q22b4 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.675: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:43:47.675: INFO: pod-qos-class-3ab46ad5-9b8b-4ef2-b244-e4c02e2e0038 from pods-751 started at 2022-08-03 14:43:04 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.675: INFO: 	Container agnhost ready: false, restart count 0
Aug  3 14:43:47.675: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:43:47.675: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:43:47.675: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  3 14:43:47.675: INFO: 
Logging pods the apiserver thinks is on node worker-1 before test
Aug  3 14:43:47.679: INFO: coredns-88b745646-2z8kr from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:43:47.679: INFO: coredns-88b745646-5tt95 from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container coredns ready: true, restart count 0
Aug  3 14:43:47.679: INFO: konnectivity-agent-vt5zk from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 14:43:47.679: INFO: kube-proxy-tlfh2 from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 14:43:47.679: INFO: kube-router-2jmhg from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 14:43:47.679: INFO: metrics-server-7d7c4887f4-x8jdn from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container metrics-server ready: true, restart count 0
Aug  3 14:43:47.679: INFO: sonobuoy from sonobuoy started at 2022-08-03 14:24:05 +0000 UTC (1 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  3 14:43:47.679: INFO: sonobuoy-e2e-job-56db34158e2f4c2c from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container e2e ready: true, restart count 0
Aug  3 14:43:47.679: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:43:47.679: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-cqd8v from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 14:43:47.679: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 14:43:47.679: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-78f60a51-b39c-44a4-996b-de89cbdd3abc 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.36.176 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-78f60a51-b39c-44a4-996b-de89cbdd3abc off the node worker-0
STEP: verifying the node doesn't have the label kubernetes.io/e2e-78f60a51-b39c-44a4-996b-de89cbdd3abc
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:48:51.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-2241" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.209 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":121,"skipped":2415,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:48:51.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-222
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-222
Aug  3 14:48:51.889: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:48:53.897: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug  3 14:48:53.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug  3 14:48:54.033: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug  3 14:48:54.033: INFO: stdout: "iptables"
Aug  3 14:48:54.033: INFO: proxyMode: iptables
Aug  3 14:48:54.038: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug  3 14:48:54.041: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-222
STEP: creating replication controller affinity-clusterip-timeout in namespace services-222
I0803 14:48:54.056840      23 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-222, replica count: 3
I0803 14:48:57.108364      23 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:48:57.113: INFO: Creating new exec pod
Aug  3 14:49:00.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug  3 14:49:00.244: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug  3 14:49:00.244: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:49:00.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.56.22 80'
Aug  3 14:49:00.350: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.56.22 80\nConnection to 10.102.56.22 80 port [tcp/http] succeeded!\n"
Aug  3 14:49:00.350: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:49:00.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.102.56.22:80/ ; done'
Aug  3 14:49:00.513: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n"
Aug  3 14:49:00.513: INFO: stdout: "\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27\naffinity-clusterip-timeout-6sk27"
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Received response from host: affinity-clusterip-timeout-6sk27
Aug  3 14:49:00.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.102.56.22:80/'
Aug  3 14:49:00.620: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n"
Aug  3 14:49:00.620: INFO: stdout: "affinity-clusterip-timeout-6sk27"
Aug  3 14:49:20.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.102.56.22:80/'
Aug  3 14:49:20.740: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n"
Aug  3 14:49:20.740: INFO: stdout: "affinity-clusterip-timeout-6sk27"
Aug  3 14:49:40.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-222 exec execpod-affinitylfxnw -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.102.56.22:80/'
Aug  3 14:49:40.856: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.102.56.22:80/\n"
Aug  3 14:49:40.856: INFO: stdout: "affinity-clusterip-timeout-g42nl"
Aug  3 14:49:40.856: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-222, will wait for the garbage collector to delete the pods
Aug  3 14:49:40.920: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 3.075341ms
Aug  3 14:49:41.021: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 101.015686ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:49:42.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-222" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:51.217 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":122,"skipped":2441,"failed":0}
SSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:49:42.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:49:45.106: INFO: Deleting pod "var-expansion-d2715e55-bc8a-4dde-8060-c4c100d704b3" in namespace "var-expansion-3743"
Aug  3 14:49:45.110: INFO: Wait up to 5m0s for pod "var-expansion-d2715e55-bc8a-4dde-8060-c4c100d704b3" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 14:49:47.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3743" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":123,"skipped":2448,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:49:47.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Aug  3 14:49:47.244: INFO: Creating e2e-svc-a-8nz6t
Aug  3 14:49:47.252: INFO: Creating e2e-svc-b-hsk25
Aug  3 14:49:47.260: INFO: Creating e2e-svc-c-8b6tj
STEP: deleting service collection
Aug  3 14:49:47.322: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:49:47.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6025" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":124,"skipped":2491,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:49:47.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-7528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:49:47.456: INFO: The status of Pod pod-secrets-12190d25-ec45-4810-b986-c2a2ca2b446b is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:49:49.462: INFO: The status of Pod pod-secrets-12190d25-ec45-4810-b986-c2a2ca2b446b is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug  3 14:49:49.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-7528" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":125,"skipped":2503,"failed":0}
SSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:49:49.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:49:49.602: INFO: Creating deployment "test-recreate-deployment"
Aug  3 14:49:49.604: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug  3 14:49:49.609: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Aug  3 14:49:51.618: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug  3 14:49:51.619: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug  3 14:49:51.626: INFO: Updating deployment test-recreate-deployment
Aug  3 14:49:51.626: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 14:49:51.671: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-2025  199a2f61-3600-4ced-9a69-d550e423a984 10276 2 2022-08-03 14:49:49 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0039554b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-03 14:49:51 +0000 UTC,LastTransitionTime:2022-08-03 14:49:51 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-08-03 14:49:51 +0000 UTC,LastTransitionTime:2022-08-03 14:49:49 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug  3 14:49:51.673: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-2025  f09e6966-bebf-497b-8647-f4fd216d5b85 10274 1 2022-08-03 14:49:51 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 199a2f61-3600-4ced-9a69-d550e423a984 0xc00242a440 0xc00242a441}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"199a2f61-3600-4ced-9a69-d550e423a984\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00242a4d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:49:51.674: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug  3 14:49:51.674: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-2025  669ee74b-8d7e-40fe-afd5-bc329bdce162 10264 2 2022-08-03 14:49:49 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 199a2f61-3600-4ced-9a69-d550e423a984 0xc00242a317 0xc00242a318}] []  [{kube-controller-manager Update apps/v1 2022-08-03 14:49:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"199a2f61-3600-4ced-9a69-d550e423a984\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00242a3d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug  3 14:49:51.676: INFO: Pod "test-recreate-deployment-cd8586fc7-vqtzw" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-vqtzw test-recreate-deployment-cd8586fc7- deployment-2025  5c39b877-980b-46e8-9622-6c23fa679414 10275 0 2022-08-03 14:49:51 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 f09e6966-bebf-497b-8647-f4fd216d5b85 0xc0035a1f40 0xc0035a1f41}] []  [{kube-controller-manager Update v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f09e6966-bebf-497b-8647-f4fd216d5b85\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 14:49:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t7hnl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t7hnl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:49:51 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:49:51 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:49:51 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 14:49:51 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:,StartTime:2022-08-03 14:49:51 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 14:49:51.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2025" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":126,"skipped":2507,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:49:51.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-69bcb3ba-342a-47e7-bede-86297099fb19 in namespace container-probe-8491
Aug  3 14:49:53.811: INFO: Started pod test-webserver-69bcb3ba-342a-47e7-bede-86297099fb19 in namespace container-probe-8491
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 14:49:53.813: INFO: Initial restart count of pod test-webserver-69bcb3ba-342a-47e7-bede-86297099fb19 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 14:53:54.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8491" for this suite.

• [SLOW TEST:242.891 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":127,"skipped":2572,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:53:54.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-361f12b1-d00a-487f-b417-9445c9e4643f
STEP: Creating a pod to test consume configMaps
Aug  3 14:53:54.705: INFO: Waiting up to 5m0s for pod "pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d" in namespace "configmap-3315" to be "Succeeded or Failed"
Aug  3 14:53:54.707: INFO: Pod "pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.452488ms
Aug  3 14:53:56.715: INFO: Pod "pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010353178s
Aug  3 14:53:58.720: INFO: Pod "pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01582204s
STEP: Saw pod success
Aug  3 14:53:58.720: INFO: Pod "pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d" satisfied condition "Succeeded or Failed"
Aug  3 14:53:58.722: INFO: Trying to get logs from node worker-0 pod pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:53:58.742: INFO: Waiting for pod pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d to disappear
Aug  3 14:53:58.743: INFO: Pod pod-configmaps-6e077b79-175d-4ef2-adec-65cf52ab2f1d no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:53:58.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3315" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":128,"skipped":2593,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:53:58.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-8897
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Aug  3 14:53:58.881: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Aug  3 14:53:58.895: INFO: waiting for watch events with expected annotations in namespace
Aug  3 14:53:58.895: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Aug  3 14:53:58.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-8897" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":129,"skipped":2602,"failed":0}
SSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:53:58.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7041
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Aug  3 14:53:59.037: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  3 14:53:59.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7041" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":130,"skipped":2605,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:53:59.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6184
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-6184
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6184
Aug  3 14:53:59.178: INFO: Found 0 stateful pods, waiting for 1
Aug  3 14:54:09.185: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug  3 14:54:09.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:54:09.310: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:54:09.310: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:54:09.310: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:54:09.313: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug  3 14:54:19.318: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:54:19.318: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:54:19.328: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999998829s
Aug  3 14:54:20.334: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996365684s
Aug  3 14:54:21.339: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.991971897s
Aug  3 14:54:22.343: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.9869548s
Aug  3 14:54:23.349: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.981580926s
Aug  3 14:54:24.353: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.977051662s
Aug  3 14:54:25.358: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.972178299s
Aug  3 14:54:26.363: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.967696185s
Aug  3 14:54:27.367: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.961529989s
Aug  3 14:54:28.373: INFO: Verifying statefulset ss doesn't scale past 1 for another 957.602155ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6184
Aug  3 14:54:29.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:54:29.494: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 14:54:29.494: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:54:29.494: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:54:29.497: INFO: Found 1 stateful pods, waiting for 3
Aug  3 14:54:39.504: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 14:54:39.504: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 14:54:39.504: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug  3 14:54:39.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:54:39.618: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:54:39.618: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:54:39.618: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:54:39.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:54:39.736: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:54:39.736: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:54:39.736: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:54:39.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 14:54:39.849: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 14:54:39.849: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 14:54:39.849: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 14:54:39.849: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:54:39.852: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug  3 14:54:49.857: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:54:49.857: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:54:49.857: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug  3 14:54:49.865: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998834s
Aug  3 14:54:50.868: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996930945s
Aug  3 14:54:51.872: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993817931s
Aug  3 14:54:52.876: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98956526s
Aug  3 14:54:53.881: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984922383s
Aug  3 14:54:54.885: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.98010733s
Aug  3 14:54:55.889: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976533055s
Aug  3 14:54:56.894: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.972501184s
Aug  3 14:54:57.897: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.96792325s
Aug  3 14:54:58.902: INFO: Verifying statefulset ss doesn't scale past 3 for another 964.349972ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6184
Aug  3 14:54:59.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:55:00.017: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 14:55:00.017: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:55:00.017: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:55:00.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:55:00.142: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 14:55:00.142: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:55:00.142: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:55:00.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-6184 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 14:55:00.249: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 14:55:00.249: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 14:55:00.249: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug  3 14:55:00.249: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 14:55:10.262: INFO: Deleting all statefulset in ns statefulset-6184
Aug  3 14:55:10.264: INFO: Scaling statefulset ss to 0
Aug  3 14:55:10.270: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 14:55:10.272: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 14:55:10.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6184" for this suite.

• [SLOW TEST:71.241 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":131,"skipped":2622,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:10.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-2363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  3 14:55:12.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2363" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":132,"skipped":2641,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:12.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9421
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9421
STEP: creating service affinity-clusterip-transition in namespace services-9421
STEP: creating replication controller affinity-clusterip-transition in namespace services-9421
I0803 14:55:12.570563      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-9421, replica count: 3
I0803 14:55:15.621951      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 14:55:15.627: INFO: Creating new exec pod
Aug  3 14:55:18.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9421 exec execpod-affinitytxqgc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug  3 14:55:18.755: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug  3 14:55:18.755: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:55:18.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9421 exec execpod-affinitytxqgc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.142.117 80'
Aug  3 14:55:18.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.142.117 80\nConnection to 10.107.142.117 80 port [tcp/http] succeeded!\n"
Aug  3 14:55:18.866: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:55:18.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9421 exec execpod-affinitytxqgc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.107.142.117:80/ ; done'
Aug  3 14:55:19.045: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n"
Aug  3 14:55:19.045: INFO: stdout: "\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-g22tl\naffinity-clusterip-transition-g22tl\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-p2msx\naffinity-clusterip-transition-xg89w"
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-g22tl
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-g22tl
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-p2msx
Aug  3 14:55:19.045: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9421 exec execpod-affinitytxqgc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.107.142.117:80/ ; done'
Aug  3 14:55:19.226: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.142.117:80/\n"
Aug  3 14:55:19.226: INFO: stdout: "\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w\naffinity-clusterip-transition-xg89w"
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Received response from host: affinity-clusterip-transition-xg89w
Aug  3 14:55:19.226: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9421, will wait for the garbage collector to delete the pods
Aug  3 14:55:19.291: INFO: Deleting ReplicationController affinity-clusterip-transition took: 3.269095ms
Aug  3 14:55:19.392: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.77894ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:55:21.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9421" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.003 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":133,"skipped":2646,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:21.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5816
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug  3 14:55:21.564: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5816  2da9033b-f8fd-4379-b208-113958af3bc8 11374 0 2022-08-03 14:55:21 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-03 14:55:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:55:21.564: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5816  2da9033b-f8fd-4379-b208-113958af3bc8 11375 0 2022-08-03 14:55:21 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-03 14:55:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug  3 14:55:21.571: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5816  2da9033b-f8fd-4379-b208-113958af3bc8 11376 0 2022-08-03 14:55:21 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-03 14:55:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 14:55:21.572: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5816  2da9033b-f8fd-4379-b208-113958af3bc8 11377 0 2022-08-03 14:55:21 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-03 14:55:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  3 14:55:21.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5816" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":134,"skipped":2661,"failed":0}

------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:21.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-6132
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  3 14:55:33.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-6132" for this suite.

• [SLOW TEST:12.134 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":135,"skipped":2661,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:33.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8883
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  3 14:55:33.848: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:55:33.848: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:55:34.855: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:55:34.855: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status
Aug  3 14:55:34.859: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug  3 14:55:34.864: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug  3 14:55:34.866: INFO: Observed &DaemonSet event: ADDED
Aug  3 14:55:34.866: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.866: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.866: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.867: INFO: Found daemon set daemon-set in namespace daemonsets-8883 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  3 14:55:34.867: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug  3 14:55:34.872: INFO: Observed &DaemonSet event: ADDED
Aug  3 14:55:34.872: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.872: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.872: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.873: INFO: Observed daemon set daemon-set in namespace daemonsets-8883 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  3 14:55:34.873: INFO: Observed &DaemonSet event: MODIFIED
Aug  3 14:55:34.873: INFO: Found daemon set daemon-set in namespace daemonsets-8883 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug  3 14:55:34.873: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8883, will wait for the garbage collector to delete the pods
Aug  3 14:55:34.933: INFO: Deleting DaemonSet.extensions daemon-set took: 3.842848ms
Aug  3 14:55:35.033: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.279527ms
Aug  3 14:55:37.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:55:37.736: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 14:55:37.738: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11558"},"items":null}

Aug  3 14:55:37.740: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11558"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:55:37.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8883" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":136,"skipped":2689,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:37.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1222
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:55:37.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:55:38.883: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1222" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":137,"skipped":2703,"failed":0}
SSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:38.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6594
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-f0c0a8fa-6a00-4fc2-9b00-24d8b0849b50
STEP: Creating a pod to test consume configMaps
Aug  3 14:55:39.014: INFO: Waiting up to 5m0s for pod "pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4" in namespace "configmap-6594" to be "Succeeded or Failed"
Aug  3 14:55:39.016: INFO: Pod "pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.719595ms
Aug  3 14:55:41.021: INFO: Pod "pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007728823s
Aug  3 14:55:43.028: INFO: Pod "pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014378199s
STEP: Saw pod success
Aug  3 14:55:43.028: INFO: Pod "pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4" satisfied condition "Succeeded or Failed"
Aug  3 14:55:43.030: INFO: Trying to get logs from node worker-0 pod pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 14:55:43.048: INFO: Waiting for pod pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4 to disappear
Aug  3 14:55:43.049: INFO: Pod pod-configmaps-d1a41c27-b776-4041-8ff4-c5fabe3f88a4 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 14:55:43.049: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6594" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":138,"skipped":2709,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:43.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5414
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:55:43.408: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:55:46.456: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:55:46.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:55:49.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5414" for this suite.
STEP: Destroying namespace "webhook-5414-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.528 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":139,"skipped":2731,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:49.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2561
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 14:55:56.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2561" for this suite.

• [SLOW TEST:7.144 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":140,"skipped":2741,"failed":0}
S
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:55:56.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2049
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-72193bf3-bc51-491d-842d-a0eee74fa4e7 in namespace container-probe-2049
Aug  3 14:55:58.860: INFO: Started pod busybox-72193bf3-bc51-491d-842d-a0eee74fa4e7 in namespace container-probe-2049
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 14:55:58.862: INFO: Initial restart count of pod busybox-72193bf3-bc51-491d-842d-a0eee74fa4e7 is 0
Aug  3 14:56:48.999: INFO: Restart count of pod container-probe-2049/busybox-72193bf3-bc51-491d-842d-a0eee74fa4e7 is now 1 (50.137249681s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 14:56:49.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2049" for this suite.

• [SLOW TEST:52.284 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":141,"skipped":2742,"failed":0}
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:56:49.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-9370
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug  3 14:57:09.254: INFO: EndpointSlice for Service endpointslice-9370/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  3 14:57:19.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9370" for this suite.

• [SLOW TEST:30.268 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":142,"skipped":2742,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:57:19.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3049
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  3 14:57:23.427: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  3 14:57:23.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3049" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":143,"skipped":2784,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:57:23.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-852
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-rsnz
STEP: Creating a pod to test atomic-volume-subpath
Aug  3 14:57:23.572: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-rsnz" in namespace "subpath-852" to be "Succeeded or Failed"
Aug  3 14:57:23.576: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Pending", Reason="", readiness=false. Elapsed: 3.141607ms
Aug  3 14:57:25.580: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 2.007531443s
Aug  3 14:57:27.588: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 4.015048699s
Aug  3 14:57:29.595: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 6.022264321s
Aug  3 14:57:31.599: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 8.02653932s
Aug  3 14:57:33.605: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 10.032874104s
Aug  3 14:57:35.611: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 12.038643952s
Aug  3 14:57:37.618: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 14.045302805s
Aug  3 14:57:39.623: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 16.05094157s
Aug  3 14:57:41.629: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 18.056759238s
Aug  3 14:57:43.635: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=true. Elapsed: 20.062950483s
Aug  3 14:57:45.641: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Running", Reason="", readiness=false. Elapsed: 22.068487888s
Aug  3 14:57:47.648: INFO: Pod "pod-subpath-test-downwardapi-rsnz": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.075457195s
STEP: Saw pod success
Aug  3 14:57:47.648: INFO: Pod "pod-subpath-test-downwardapi-rsnz" satisfied condition "Succeeded or Failed"
Aug  3 14:57:47.650: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-downwardapi-rsnz container test-container-subpath-downwardapi-rsnz: <nil>
STEP: delete the pod
Aug  3 14:57:47.667: INFO: Waiting for pod pod-subpath-test-downwardapi-rsnz to disappear
Aug  3 14:57:47.669: INFO: Pod pod-subpath-test-downwardapi-rsnz no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-rsnz
Aug  3 14:57:47.669: INFO: Deleting pod "pod-subpath-test-downwardapi-rsnz" in namespace "subpath-852"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  3 14:57:47.671: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-852" for this suite.

• [SLOW TEST:24.235 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":144,"skipped":2789,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:57:47.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-3534
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3534 to expose endpoints map[]
Aug  3 14:57:47.811: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug  3 14:57:48.818: INFO: successfully validated that service multi-endpoint-test in namespace services-3534 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-3534
Aug  3 14:57:48.826: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:57:50.830: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3534 to expose endpoints map[pod1:[100]]
Aug  3 14:57:50.837: INFO: successfully validated that service multi-endpoint-test in namespace services-3534 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-3534
Aug  3 14:57:50.844: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:57:52.848: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3534 to expose endpoints map[pod1:[100] pod2:[101]]
Aug  3 14:57:52.857: INFO: successfully validated that service multi-endpoint-test in namespace services-3534 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug  3 14:57:52.857: INFO: Creating new exec pod
Aug  3 14:57:55.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-3534 exec execpod4tvvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug  3 14:57:55.984: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug  3 14:57:55.984: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:57:55.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-3534 exec execpod4tvvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.114.113 80'
Aug  3 14:57:56.098: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.114.113 80\nConnection to 10.100.114.113 80 port [tcp/http] succeeded!\n"
Aug  3 14:57:56.098: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:57:56.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-3534 exec execpod4tvvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug  3 14:57:56.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug  3 14:57:56.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 14:57:56.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-3534 exec execpod4tvvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.114.113 81'
Aug  3 14:57:56.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.114.113 81\nConnection to 10.100.114.113 81 port [tcp/*] succeeded!\n"
Aug  3 14:57:56.325: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-3534
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3534 to expose endpoints map[pod2:[101]]
Aug  3 14:57:56.344: INFO: successfully validated that service multi-endpoint-test in namespace services-3534 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-3534
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3534 to expose endpoints map[]
Aug  3 14:57:56.359: INFO: successfully validated that service multi-endpoint-test in namespace services-3534 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:57:56.375: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3534" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.735 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":145,"skipped":2792,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:57:56.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5892
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  3 14:57:56.540: INFO: The status of Pod labelsupdate2f0da075-6a5e-4767-9c1a-b043fdbee90e is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:57:58.545: INFO: The status of Pod labelsupdate2f0da075-6a5e-4767-9c1a-b043fdbee90e is Running (Ready = true)
Aug  3 14:57:59.060: INFO: Successfully updated pod "labelsupdate2f0da075-6a5e-4767-9c1a-b043fdbee90e"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 14:58:01.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5892" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:01.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-3172
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Aug  3 14:58:01.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-3172" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":147,"skipped":2875,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:01.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 14:58:01.328: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1410" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":148,"skipped":2895,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:01.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:58:01.459: INFO: The status of Pod busybox-scheduling-6bbfaddd-bdb7-419e-a453-51c02417ae1d is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:58:03.466: INFO: The status of Pod busybox-scheduling-6bbfaddd-bdb7-419e-a453-51c02417ae1d is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  3 14:58:03.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5379" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2906,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:03.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7336
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 14:58:31.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7336" for this suite.

• [SLOW TEST:28.163 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":150,"skipped":2914,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:31.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2242
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 14:58:32.039: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 14:58:35.061: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:58:47.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2242" for this suite.
STEP: Destroying namespace "webhook-2242-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.561 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":151,"skipped":2917,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:47.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8998
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Aug  3 14:58:47.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 create -f -'
Aug  3 14:58:48.195: INFO: stderr: ""
Aug  3 14:58:48.195: INFO: stdout: "pod/pause created\n"
Aug  3 14:58:48.195: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug  3 14:58:48.195: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-8998" to be "running and ready"
Aug  3 14:58:48.200: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 5.279587ms
Aug  3 14:58:50.205: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.010070366s
Aug  3 14:58:50.205: INFO: Pod "pause" satisfied condition "running and ready"
Aug  3 14:58:50.205: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Aug  3 14:58:50.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 label pods pause testing-label=testing-label-value'
Aug  3 14:58:50.262: INFO: stderr: ""
Aug  3 14:58:50.262: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug  3 14:58:50.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 get pod pause -L testing-label'
Aug  3 14:58:50.318: INFO: stderr: ""
Aug  3 14:58:50.318: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug  3 14:58:50.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 label pods pause testing-label-'
Aug  3 14:58:50.376: INFO: stderr: ""
Aug  3 14:58:50.376: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug  3 14:58:50.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 get pod pause -L testing-label'
Aug  3 14:58:50.433: INFO: stderr: ""
Aug  3 14:58:50.433: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Aug  3 14:58:50.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 delete --grace-period=0 --force -f -'
Aug  3 14:58:50.490: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 14:58:50.490: INFO: stdout: "pod \"pause\" force deleted\n"
Aug  3 14:58:50.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 get rc,svc -l name=pause --no-headers'
Aug  3 14:58:50.548: INFO: stderr: "No resources found in kubectl-8998 namespace.\n"
Aug  3 14:58:50.548: INFO: stdout: ""
Aug  3 14:58:50.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-8998 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  3 14:58:50.601: INFO: stderr: ""
Aug  3 14:58:50.601: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 14:58:50.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8998" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":152,"skipped":2922,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:50.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3953
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  3 14:58:50.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:58:50.747: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:58:51.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 14:58:51.754: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 14:58:52.753: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 14:58:52.753: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Aug  3 14:58:52.768: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12579"},"items":null}

Aug  3 14:58:52.772: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12579"},"items":[{"metadata":{"name":"daemon-set-f9kqv","generateName":"daemon-set-","namespace":"daemonsets-3953","uid":"2732eb74-3bc8-4362-90c4-d7d0ff0569f2","resourceVersion":"12559","creationTimestamp":"2022-08-03T14:58:50Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"00-k0s-privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1b1d1d5d-2fff-4e60-a2a5-f7e5baf28b6a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-03T14:58:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1b1d1d5d-2fff-4e60-a2a5-f7e5baf28b6a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-03T14:58:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.161\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9xbkl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9xbkl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:50Z"}],"hostIP":"10.0.36.176","podIP":"10.244.0.161","podIPs":[{"ip":"10.244.0.161"}],"startTime":"2022-08-03T14:58:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-03T14:58:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://d0c9c6e1b171668c20509f4cb1d2db32160907ba7079f2de59be4ee5a063b38c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nd98c","generateName":"daemon-set-","namespace":"daemonsets-3953","uid":"cccad9fc-2861-4e83-8d26-982ce75f9879","resourceVersion":"12561","creationTimestamp":"2022-08-03T14:58:50Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"00-k0s-privileged"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1b1d1d5d-2fff-4e60-a2a5-f7e5baf28b6a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-03T14:58:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1b1d1d5d-2fff-4e60-a2a5-f7e5baf28b6a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-03T14:58:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xpsd6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xpsd6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-03T14:58:50Z"}],"hostIP":"10.0.36.79","podIP":"10.244.1.51","podIPs":[{"ip":"10.244.1.51"}],"startTime":"2022-08-03T14:58:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-03T14:58:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://10611456f8046b69d0bccc8cba47f66fe2949a7c5a78e24cf84a8077ff197ce8","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 14:58:52.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3953" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":153,"skipped":2929,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:52.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5546
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 14:58:52.925: INFO: Waiting up to 5m0s for pod "downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29" in namespace "downward-api-5546" to be "Succeeded or Failed"
Aug  3 14:58:52.927: INFO: Pod "downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.648675ms
Aug  3 14:58:54.930: INFO: Pod "downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005727476s
Aug  3 14:58:56.938: INFO: Pod "downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01304339s
STEP: Saw pod success
Aug  3 14:58:56.938: INFO: Pod "downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29" satisfied condition "Succeeded or Failed"
Aug  3 14:58:56.940: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29 container client-container: <nil>
STEP: delete the pod
Aug  3 14:58:56.956: INFO: Waiting for pod downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29 to disappear
Aug  3 14:58:56.958: INFO: Pod downwardapi-volume-72f85794-7e01-4937-a7d3-a64cf31a8a29 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 14:58:56.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5546" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":154,"skipped":2952,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:58:56.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  3 14:59:00.102: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  3 14:59:00.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6736" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":2975,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:00.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8602
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-43701192-46d8-4eff-a63d-1548b44918a5
STEP: Creating a pod to test consume secrets
Aug  3 14:59:00.244: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1" in namespace "projected-8602" to be "Succeeded or Failed"
Aug  3 14:59:00.245: INFO: Pod "pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.848391ms
Aug  3 14:59:02.251: INFO: Pod "pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007552157s
Aug  3 14:59:04.259: INFO: Pod "pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014954553s
STEP: Saw pod success
Aug  3 14:59:04.259: INFO: Pod "pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1" satisfied condition "Succeeded or Failed"
Aug  3 14:59:04.260: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1 container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 14:59:04.276: INFO: Waiting for pod pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1 to disappear
Aug  3 14:59:04.278: INFO: Pod pod-projected-secrets-b2d0b1e3-db34-493f-b39b-da20c3b4e0f1 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 14:59:04.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8602" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":2999,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:04.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5293
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Aug  3 14:59:04.413: INFO: Waiting up to 5m0s for pod "var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08" in namespace "var-expansion-5293" to be "Succeeded or Failed"
Aug  3 14:59:04.416: INFO: Pod "var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08": Phase="Pending", Reason="", readiness=false. Elapsed: 3.003958ms
Aug  3 14:59:06.422: INFO: Pod "var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009722794s
Aug  3 14:59:08.429: INFO: Pod "var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016733567s
STEP: Saw pod success
Aug  3 14:59:08.429: INFO: Pod "var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08" satisfied condition "Succeeded or Failed"
Aug  3 14:59:08.431: INFO: Trying to get logs from node worker-0 pod var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08 container dapi-container: <nil>
STEP: delete the pod
Aug  3 14:59:08.442: INFO: Waiting for pod var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08 to disappear
Aug  3 14:59:08.444: INFO: Pod var-expansion-9d26fb56-c59f-4d8f-850d-443986c0be08 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 14:59:08.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5293" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":157,"skipped":3003,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:59:08.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  3 14:59:10.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-5769 --namespace=crd-publish-openapi-5769 create -f -'
Aug  3 14:59:11.504: INFO: stderr: ""
Aug  3 14:59:11.504: INFO: stdout: "e2e-test-crd-publish-openapi-1828-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug  3 14:59:11.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-5769 --namespace=crd-publish-openapi-5769 delete e2e-test-crd-publish-openapi-1828-crds test-cr'
Aug  3 14:59:11.557: INFO: stderr: ""
Aug  3 14:59:11.557: INFO: stdout: "e2e-test-crd-publish-openapi-1828-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug  3 14:59:11.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-5769 --namespace=crd-publish-openapi-5769 apply -f -'
Aug  3 14:59:11.712: INFO: stderr: ""
Aug  3 14:59:11.712: INFO: stdout: "e2e-test-crd-publish-openapi-1828-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug  3 14:59:11.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-5769 --namespace=crd-publish-openapi-5769 delete e2e-test-crd-publish-openapi-1828-crds test-cr'
Aug  3 14:59:11.764: INFO: stderr: ""
Aug  3 14:59:11.764: INFO: stdout: "e2e-test-crd-publish-openapi-1828-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug  3 14:59:11.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-5769 explain e2e-test-crd-publish-openapi-1828-crds'
Aug  3 14:59:11.934: INFO: stderr: ""
Aug  3 14:59:11.934: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1828-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 14:59:13.974: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5769" for this suite.

• [SLOW TEST:5.535 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":158,"skipped":3010,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:13.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-423.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-423.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-423.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-423.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 14:59:16.128: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:16.131: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:16.139: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:16.142: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:16.147: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:16.147: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:21.152: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:21.154: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:21.163: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:21.166: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:21.171: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:26.150: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:26.153: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:26.161: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:26.164: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:26.169: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:31.152: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:31.155: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:31.163: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:31.166: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:31.171: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:36.152: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:36.155: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:36.163: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:36.166: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:36.171: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:41.153: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:41.156: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:41.164: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:41.167: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local from pod dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868: the server could not find the requested resource (get pods dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868)
Aug  3 14:59:41.172: INFO: Lookups using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-423.svc.cluster.local]

Aug  3 14:59:46.171: INFO: DNS probes using dns-423/dns-test-dcdd1501-01c5-4f5e-a32e-15b7fd735868 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 14:59:46.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-423" for this suite.

• [SLOW TEST:32.222 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":159,"skipped":3014,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:46.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6229
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:59:46.334: INFO: The status of Pod server-envvars-daf8f509-902d-4cdf-80eb-75074557ee1d is Pending, waiting for it to be Running (with Ready = true)
Aug  3 14:59:48.341: INFO: The status of Pod server-envvars-daf8f509-902d-4cdf-80eb-75074557ee1d is Running (Ready = true)
Aug  3 14:59:48.381: INFO: Waiting up to 5m0s for pod "client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230" in namespace "pods-6229" to be "Succeeded or Failed"
Aug  3 14:59:48.384: INFO: Pod "client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230": Phase="Pending", Reason="", readiness=false. Elapsed: 2.277296ms
Aug  3 14:59:50.388: INFO: Pod "client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006752982s
Aug  3 14:59:52.396: INFO: Pod "client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01404294s
STEP: Saw pod success
Aug  3 14:59:52.396: INFO: Pod "client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230" satisfied condition "Succeeded or Failed"
Aug  3 14:59:52.398: INFO: Trying to get logs from node worker-0 pod client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230 container env3cont: <nil>
STEP: delete the pod
Aug  3 14:59:52.410: INFO: Waiting for pod client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230 to disappear
Aug  3 14:59:52.412: INFO: Pod client-envvars-4227cb91-23fe-4ffb-bb52-bc4a75e29230 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 14:59:52.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6229" for this suite.

• [SLOW TEST:6.209 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":3050,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 14:59:52.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-7195
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 14:59:52.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Creating first CR 
Aug  3 14:59:55.083: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T14:59:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T14:59:55Z]] name:name1 resourceVersion:12946 uid:559656cf-47e4-4f67-8817-1f9b81a22756] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug  3 15:00:05.088: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T15:00:05Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T15:00:05Z]] name:name2 resourceVersion:12988 uid:d2f8c068-aa3c-48b3-936a-16a4d18774fc] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug  3 15:00:15.095: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T14:59:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T15:00:15Z]] name:name1 resourceVersion:13008 uid:559656cf-47e4-4f67-8817-1f9b81a22756] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug  3 15:00:25.102: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T15:00:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T15:00:25Z]] name:name2 resourceVersion:13028 uid:d2f8c068-aa3c-48b3-936a-16a4d18774fc] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug  3 15:00:35.108: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T14:59:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T15:00:15Z]] name:name1 resourceVersion:13048 uid:559656cf-47e4-4f67-8817-1f9b81a22756] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug  3 15:00:45.115: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-03T15:00:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-03T15:00:25Z]] name:name2 resourceVersion:13068 uid:d2f8c068-aa3c-48b3-936a-16a4d18774fc] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:00:55.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-7195" for this suite.

• [SLOW TEST:63.214 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":161,"skipped":3080,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:00:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-6989
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Aug  3 15:00:55.763: INFO: created test-podtemplate-1
Aug  3 15:00:55.765: INFO: created test-podtemplate-2
Aug  3 15:00:55.768: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug  3 15:00:55.770: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug  3 15:00:55.777: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug  3 15:00:55.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-6989" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":162,"skipped":3105,"failed":0}
SSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:00:55.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Aug  3 15:00:55.906: INFO: Waiting up to 5m0s for pod "var-expansion-cf542556-3aa6-454e-a97a-3d3054271526" in namespace "var-expansion-352" to be "Succeeded or Failed"
Aug  3 15:00:55.910: INFO: Pod "var-expansion-cf542556-3aa6-454e-a97a-3d3054271526": Phase="Pending", Reason="", readiness=false. Elapsed: 3.28402ms
Aug  3 15:00:57.917: INFO: Pod "var-expansion-cf542556-3aa6-454e-a97a-3d3054271526": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010781413s
Aug  3 15:00:59.921: INFO: Pod "var-expansion-cf542556-3aa6-454e-a97a-3d3054271526": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015046114s
STEP: Saw pod success
Aug  3 15:00:59.921: INFO: Pod "var-expansion-cf542556-3aa6-454e-a97a-3d3054271526" satisfied condition "Succeeded or Failed"
Aug  3 15:00:59.923: INFO: Trying to get logs from node worker-0 pod var-expansion-cf542556-3aa6-454e-a97a-3d3054271526 container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:00:59.936: INFO: Waiting for pod var-expansion-cf542556-3aa6-454e-a97a-3d3054271526 to disappear
Aug  3 15:00:59.938: INFO: Pod var-expansion-cf542556-3aa6-454e-a97a-3d3054271526 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 15:00:59.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-352" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":3110,"failed":0}
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:00:59.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-4900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  3 15:01:00.069: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 15:02:00.084: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug  3 15:02:00.098: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug  3 15:02:00.103: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug  3 15:02:00.119: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug  3 15:02:00.124: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:02:12.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-4900" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:72.250 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":164,"skipped":3116,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:12.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8679
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  3 15:02:12.314: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 15:02:16.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8679" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":165,"skipped":3153,"failed":0}
SS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:16.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:02:16.401: INFO: Create a RollingUpdate DaemonSet
Aug  3 15:02:16.403: INFO: Check that daemon pods launch on every node of the cluster
Aug  3 15:02:16.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 15:02:16.408: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 15:02:17.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 15:02:17.416: INFO: Node worker-1 is running 0 daemon pod, expected 1
Aug  3 15:02:18.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 15:02:18.416: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Aug  3 15:02:18.416: INFO: Update the DaemonSet to trigger a rollout
Aug  3 15:02:18.421: INFO: Updating DaemonSet daemon-set
Aug  3 15:02:21.432: INFO: Roll back the DaemonSet before rollout is complete
Aug  3 15:02:21.438: INFO: Updating DaemonSet daemon-set
Aug  3 15:02:21.438: INFO: Make sure DaemonSet rollback is complete
Aug  3 15:02:21.441: INFO: Wrong image for pod: daemon-set-g2r5v. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug  3 15:02:21.441: INFO: Pod daemon-set-g2r5v is not available
Aug  3 15:02:24.449: INFO: Pod daemon-set-hnl95 is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8895, will wait for the garbage collector to delete the pods
Aug  3 15:02:24.511: INFO: Deleting DaemonSet.extensions daemon-set took: 3.680404ms
Aug  3 15:02:24.612: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.224069ms
Aug  3 15:02:27.617: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 15:02:27.617: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 15:02:27.619: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13543"},"items":null}

Aug  3 15:02:27.620: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13543"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:02:27.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8895" for this suite.

• [SLOW TEST:11.361 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":166,"skipped":3155,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:27.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:02:28.106: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:02:31.144: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug  3 15:02:33.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=webhook-1738 attach --namespace=webhook-1738 to-be-attached-pod -i -c=container1'
Aug  3 15:02:33.235: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:02:33.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1738" for this suite.
STEP: Destroying namespace "webhook-1738-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.644 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":167,"skipped":3161,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:33.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3503
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:02:33.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  3 15:02:35.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-3503 --namespace=crd-publish-openapi-3503 create -f -'
Aug  3 15:02:36.369: INFO: stderr: ""
Aug  3 15:02:36.369: INFO: stdout: "e2e-test-crd-publish-openapi-9109-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug  3 15:02:36.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-3503 --namespace=crd-publish-openapi-3503 delete e2e-test-crd-publish-openapi-9109-crds test-cr'
Aug  3 15:02:36.420: INFO: stderr: ""
Aug  3 15:02:36.420: INFO: stdout: "e2e-test-crd-publish-openapi-9109-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug  3 15:02:36.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-3503 --namespace=crd-publish-openapi-3503 apply -f -'
Aug  3 15:02:36.587: INFO: stderr: ""
Aug  3 15:02:36.587: INFO: stdout: "e2e-test-crd-publish-openapi-9109-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug  3 15:02:36.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-3503 --namespace=crd-publish-openapi-3503 delete e2e-test-crd-publish-openapi-9109-crds test-cr'
Aug  3 15:02:36.639: INFO: stderr: ""
Aug  3 15:02:36.639: INFO: stdout: "e2e-test-crd-publish-openapi-9109-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug  3 15:02:36.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-3503 explain e2e-test-crd-publish-openapi-9109-crds'
Aug  3 15:02:36.799: INFO: stderr: ""
Aug  3 15:02:36.799: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9109-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:02:38.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3503" for this suite.

• [SLOW TEST:5.561 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":168,"skipped":3171,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:38.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6817
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:02:38.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6817" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":169,"skipped":3186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:38.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3894
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  3 15:02:39.089: INFO: The status of Pod annotationupdateb7b06c5a-635c-473c-8f68-72ed284547ef is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:02:41.093: INFO: The status of Pod annotationupdateb7b06c5a-635c-473c-8f68-72ed284547ef is Running (Ready = true)
Aug  3 15:02:41.614: INFO: Successfully updated pod "annotationupdateb7b06c5a-635c-473c-8f68-72ed284547ef"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:02:45.633: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3894" for this suite.

• [SLOW TEST:6.676 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":170,"skipped":3214,"failed":0}
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:45.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7735
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug  3 15:02:45.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7735" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":171,"skipped":3214,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:45.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1304
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:02:46.691: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:02:49.713: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:02:49.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1304" for this suite.
STEP: Destroying namespace "webhook-1304-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":172,"skipped":3230,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:49.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-809
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:02:50.445: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:02:53.464: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
Aug  3 15:02:58.490: INFO: Waiting for webhook configuration to be ready...
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:02:58.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-809" for this suite.
STEP: Destroying namespace "webhook-809-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:8.858 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":173,"skipped":3251,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:58.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Aug  3 15:02:58.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-4925 api-versions'
Aug  3 15:02:58.856: INFO: stderr: ""
Aug  3 15:02:58.856: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:02:58.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4925" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":174,"skipped":3260,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:02:58.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-53587ffe-8492-4c26-9ebc-20009cc6d4bc
STEP: Creating a pod to test consume configMaps
Aug  3 15:02:58.986: INFO: Waiting up to 5m0s for pod "pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1" in namespace "configmap-1184" to be "Succeeded or Failed"
Aug  3 15:02:58.989: INFO: Pod "pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.33585ms
Aug  3 15:03:00.993: INFO: Pod "pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007367207s
Aug  3 15:03:03.001: INFO: Pod "pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015346572s
STEP: Saw pod success
Aug  3 15:03:03.001: INFO: Pod "pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1" satisfied condition "Succeeded or Failed"
Aug  3 15:03:03.004: INFO: Trying to get logs from node worker-0 pod pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:03:03.015: INFO: Waiting for pod pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1 to disappear
Aug  3 15:03:03.017: INFO: Pod pod-configmaps-6d2fdd4c-eb70-463d-98e5-4814091d4de1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:03:03.017: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1184" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":175,"skipped":3260,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:03:03.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  3 15:03:03.149: INFO: The status of Pod pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:03:05.153: INFO: The status of Pod pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug  3 15:03:05.668: INFO: Successfully updated pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88"
Aug  3 15:03:05.668: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88" in namespace "pods-6126" to be "terminated due to deadline exceeded"
Aug  3 15:03:05.670: INFO: Pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88": Phase="Running", Reason="", readiness=true. Elapsed: 1.919744ms
Aug  3 15:03:07.678: INFO: Pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88": Phase="Running", Reason="", readiness=true. Elapsed: 2.009914318s
Aug  3 15:03:09.685: INFO: Pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88": Phase="Running", Reason="", readiness=false. Elapsed: 4.016780442s
Aug  3 15:03:11.691: INFO: Pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.022817062s
Aug  3 15:03:11.691: INFO: Pod "pod-update-activedeadlineseconds-da5e7d63-45fc-4b4d-ae4f-dd81a80b2c88" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 15:03:11.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6126" for this suite.

• [SLOW TEST:8.675 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:03:11.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5824
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:03:27.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5824" for this suite.

• [SLOW TEST:16.177 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":177,"skipped":3360,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:03:27.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4088
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4088
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug  3 15:03:28.013: INFO: Found 0 stateful pods, waiting for 3
Aug  3 15:03:38.016: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:03:38.016: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:03:38.016: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:03:38.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-4088 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 15:03:38.150: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 15:03:38.150: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 15:03:38.150: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug  3 15:03:48.182: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug  3 15:03:58.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-4088 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 15:03:58.318: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 15:03:58.318: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 15:03:58.318: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Aug  3 15:04:18.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-4088 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug  3 15:04:18.457: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug  3 15:04:18.457: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug  3 15:04:18.457: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug  3 15:04:28.494: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug  3 15:04:38.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=statefulset-4088 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug  3 15:04:38.621: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug  3 15:04:38.622: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug  3 15:04:38.622: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 15:04:48.642: INFO: Deleting all statefulset in ns statefulset-4088
Aug  3 15:04:48.643: INFO: Scaling statefulset ss2 to 0
Aug  3 15:04:58.655: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 15:04:58.657: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 15:04:58.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4088" for this suite.

• [SLOW TEST:90.796 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":178,"skipped":3417,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:04:58.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4631
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug  3 15:04:58.793: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug  3 15:04:58.798: INFO: Waiting for terminating namespaces to be deleted...
Aug  3 15:04:58.800: INFO: 
Logging pods the apiserver thinks is on node worker-0 before test
Aug  3 15:04:58.803: INFO: konnectivity-agent-8dbdw from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.803: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 15:04:58.803: INFO: kube-proxy-lqvs2 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.803: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 15:04:58.803: INFO: kube-router-q22b4 from kube-system started at 2022-08-03 14:23:03 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.803: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 15:04:58.803: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 15:04:58.803: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 15:04:58.803: INFO: 	Container systemd-logs ready: true, restart count 0
Aug  3 15:04:58.803: INFO: 
Logging pods the apiserver thinks is on node worker-1 before test
Aug  3 15:04:58.807: INFO: coredns-88b745646-2z8kr from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container coredns ready: true, restart count 0
Aug  3 15:04:58.807: INFO: coredns-88b745646-5tt95 from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container coredns ready: true, restart count 0
Aug  3 15:04:58.807: INFO: konnectivity-agent-vt5zk from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container konnectivity-agent ready: true, restart count 0
Aug  3 15:04:58.807: INFO: kube-proxy-tlfh2 from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container kube-proxy ready: true, restart count 0
Aug  3 15:04:58.807: INFO: kube-router-2jmhg from kube-system started at 2022-08-03 14:22:59 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container kube-router ready: true, restart count 0
Aug  3 15:04:58.807: INFO: metrics-server-7d7c4887f4-x8jdn from kube-system started at 2022-08-03 14:32:57 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container metrics-server ready: true, restart count 0
Aug  3 15:04:58.807: INFO: sonobuoy from sonobuoy started at 2022-08-03 14:24:05 +0000 UTC (1 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug  3 15:04:58.807: INFO: sonobuoy-e2e-job-56db34158e2f4c2c from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container e2e ready: true, restart count 0
Aug  3 15:04:58.807: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 15:04:58.807: INFO: sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-cqd8v from sonobuoy started at 2022-08-03 14:24:09 +0000 UTC (2 container statuses recorded)
Aug  3 15:04:58.807: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug  3 15:04:58.807: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node worker-0
STEP: verifying the node has the label node worker-1
Aug  3 15:04:58.831: INFO: Pod coredns-88b745646-2z8kr requesting resource cpu=100m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod coredns-88b745646-5tt95 requesting resource cpu=100m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod konnectivity-agent-8dbdw requesting resource cpu=0m on Node worker-0
Aug  3 15:04:58.831: INFO: Pod konnectivity-agent-vt5zk requesting resource cpu=0m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod kube-proxy-lqvs2 requesting resource cpu=0m on Node worker-0
Aug  3 15:04:58.831: INFO: Pod kube-proxy-tlfh2 requesting resource cpu=0m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod kube-router-2jmhg requesting resource cpu=250m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod kube-router-q22b4 requesting resource cpu=250m on Node worker-0
Aug  3 15:04:58.831: INFO: Pod metrics-server-7d7c4887f4-x8jdn requesting resource cpu=10m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod sonobuoy requesting resource cpu=0m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod sonobuoy-e2e-job-56db34158e2f4c2c requesting resource cpu=0m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-cqd8v requesting resource cpu=0m on Node worker-1
Aug  3 15:04:58.831: INFO: Pod sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r requesting resource cpu=0m on Node worker-0
STEP: Starting Pods to consume most of the cluster CPU.
Aug  3 15:04:58.831: INFO: Creating a pod which consumes cpu=2625m on Node worker-0
Aug  3 15:04:58.836: INFO: Creating a pod which consumes cpu=2478m on Node worker-1
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1.1707de048d99620e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4631/filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1 to worker-1]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1.1707de04a7c815ee], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1.1707de04a9203e7a], Reason = [Created], Message = [Created container filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1.1707de04acca2ba0], Reason = [Started], Message = [Started container filler-pod-157235a7-dea2-4d5c-84a6-93ae0520aad1]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4512237-a183-41e2-bb55-27a67af91af2.1707de048d37d3a3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4631/filler-pod-a4512237-a183-41e2-bb55-27a67af91af2 to worker-0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4512237-a183-41e2-bb55-27a67af91af2.1707de04a8326330], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4512237-a183-41e2-bb55-27a67af91af2.1707de04a9b91d3a], Reason = [Created], Message = [Created container filler-pod-a4512237-a183-41e2-bb55-27a67af91af2]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4512237-a183-41e2-bb55-27a67af91af2.1707de04acbce9e7], Reason = [Started], Message = [Started container filler-pod-a4512237-a183-41e2-bb55-27a67af91af2]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.1707de050581387a], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.]
STEP: removing the label node off the node worker-0
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node worker-1
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:05:01.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4631" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":179,"skipped":3422,"failed":0}

------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:05:01.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:05:02.023: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d" in namespace "projected-1007" to be "Succeeded or Failed"
Aug  3 15:05:02.025: INFO: Pod "downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.137611ms
Aug  3 15:05:04.032: INFO: Pod "downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.008634268s
STEP: Saw pod success
Aug  3 15:05:04.032: INFO: Pod "downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d" satisfied condition "Succeeded or Failed"
Aug  3 15:05:04.034: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d container client-container: <nil>
STEP: delete the pod
Aug  3 15:05:04.054: INFO: Waiting for pod downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d to disappear
Aug  3 15:05:04.056: INFO: Pod downwardapi-volume-4b264f1f-3463-4544-b661-aa67619d888d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:05:04.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1007" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3422,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:05:04.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:05:04.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 create -f -'
Aug  3 15:05:04.801: INFO: stderr: ""
Aug  3 15:05:04.801: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug  3 15:05:04.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 create -f -'
Aug  3 15:05:05.082: INFO: stderr: ""
Aug  3 15:05:05.082: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  3 15:05:06.086: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:05:06.086: INFO: Found 1 / 1
Aug  3 15:05:06.086: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug  3 15:05:06.088: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:05:06.088: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  3 15:05:06.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 describe pod agnhost-primary-k2z5k'
Aug  3 15:05:06.143: INFO: stderr: ""
Aug  3 15:05:06.143: INFO: stdout: "Name:         agnhost-primary-k2z5k\nNamespace:    kubectl-3474\nPriority:     0\nNode:         worker-0/10.0.36.176\nStart Time:   Wed, 03 Aug 2022 15:05:04 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: 00-k0s-privileged\nStatus:       Running\nIP:           10.244.0.190\nIPs:\n  IP:           10.244.0.190\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a2cac3745940dfb45159b116eeee034478d46a45b36f2e03bd17d6ac859eed80\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 03 Aug 2022 15:05:05 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-fkzdf (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-fkzdf:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3474/agnhost-primary-k2z5k to worker-0\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Aug  3 15:05:06.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 describe rc agnhost-primary'
Aug  3 15:05:06.201: INFO: stderr: ""
Aug  3 15:05:06.201: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3474\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-k2z5k\n"
Aug  3 15:05:06.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 describe service agnhost-primary'
Aug  3 15:05:06.259: INFO: stderr: ""
Aug  3 15:05:06.259: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3474\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.98.89.167\nIPs:               10.98.89.167\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.0.190:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug  3 15:05:06.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 describe node worker-0'
Aug  3 15:05:06.332: INFO: stderr: ""
Aug  3 15:05:06.332: INFO: stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 03 Aug 2022 14:22:56 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 03 Aug 2022 15:04:57 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Wed, 03 Aug 2022 15:04:16 +0000   Wed, 03 Aug 2022 14:22:55 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 03 Aug 2022 15:04:16 +0000   Wed, 03 Aug 2022 14:22:55 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 03 Aug 2022 15:04:16 +0000   Wed, 03 Aug 2022 14:22:55 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 03 Aug 2022 15:04:16 +0000   Wed, 03 Aug 2022 14:23:26 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.0.36.176\n  Hostname:    worker-0\nCapacity:\n  cpu:                    4\n  ephemeral-storage:      50620216Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7623356Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    4\n  ephemeral-storage:      46651590989\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7520956Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 82ece2e9257b4f969d8527faf87afd70\n  System UUID:                ec29dcb6-f42d-b93a-d98c-d95695cbd040\n  Boot ID:                    099b767e-1c1b-461a-85f1-f026cac8132e\n  Kernel Version:             5.15.0-1015-aws\n  OS Image:                   Ubuntu 22.04 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.6\n  Kubelet Version:            v1.24.3+k0s\n  Kube-Proxy Version:         v1.24.3+k0s\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits   Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------   ---------------  -------------  ---\n  kube-system                 konnectivity-agent-8dbdw                                   0 (0%)        0 (0%)       0 (0%)           0 (0%)         42m\n  kube-system                 kube-proxy-lqvs2                                           0 (0%)        0 (0%)       0 (0%)           0 (0%)         42m\n  kube-system                 kube-router-q22b4                                          250m (6%)     0 (0%)       16Mi (0%)        0 (0%)         42m\n  kubectl-3474                agnhost-primary-k2z5k                                      0 (0%)        0 (0%)       0 (0%)           0 (0%)         2s\n  sched-pred-4631             filler-pod-a4512237-a183-41e2-bb55-27a67af91af2            2625m (65%)   2625m (65%)  0 (0%)           0 (0%)         8s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-04b410f6e2834fe0-vkr8r    0 (0%)        0 (0%)       0 (0%)           0 (0%)         40m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests     Limits\n  --------               --------     ------\n  cpu                    2875m (71%)  2625m (65%)\n  memory                 16Mi (0%)    0 (0%)\n  ephemeral-storage      0 (0%)       0 (0%)\n  hugepages-1Gi          0 (0%)       0 (0%)\n  hugepages-2Mi          0 (0%)       0 (0%)\n  scheduling.k8s.io/foo  0            0\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 41m                kube-proxy       \n  Normal  NodeHasSufficientMemory  42m (x8 over 42m)  kubelet          Node worker-0 status is now: NodeHasSufficientMemory\n  Normal  RegisteredNode           42m                node-controller  Node worker-0 event: Registered Node worker-0 in Controller\n"
Aug  3 15:05:06.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3474 describe namespace kubectl-3474'
Aug  3 15:05:06.386: INFO: stderr: ""
Aug  3 15:05:06.386: INFO: stdout: "Name:         kubectl-3474\nLabels:       e2e-framework=kubectl\n              e2e-run=8dfca170-da49-4e3c-8985-4fbedd5656b3\n              kubernetes.io/metadata.name=kubectl-3474\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:05:06.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3474" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":181,"skipped":3427,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:05:06.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:05:06.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  3 15:05:06.521: INFO: The status of Pod pod-logs-websocket-c8ad69c7-aead-441e-821b-971e0819f83a is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:05:08.528: INFO: The status of Pod pod-logs-websocket-c8ad69c7-aead-441e-821b-971e0819f83a is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 15:05:08.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8177" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":3429,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:05:08.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-8950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug  3 15:05:09.000: INFO: Pod name wrapped-volume-race-1601f32f-0538-4a5c-a60f-56d9c4698f2a: Found 3 pods out of 5
Aug  3 15:05:14.012: INFO: Pod name wrapped-volume-race-1601f32f-0538-4a5c-a60f-56d9c4698f2a: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-1601f32f-0538-4a5c-a60f-56d9c4698f2a in namespace emptydir-wrapper-8950, will wait for the garbage collector to delete the pods
Aug  3 15:05:24.088: INFO: Deleting ReplicationController wrapped-volume-race-1601f32f-0538-4a5c-a60f-56d9c4698f2a took: 3.878459ms
Aug  3 15:05:24.188: INFO: Terminating ReplicationController wrapped-volume-race-1601f32f-0538-4a5c-a60f-56d9c4698f2a pods took: 100.667829ms
STEP: Creating RC which spawns configmap-volume pods
Aug  3 15:05:27.604: INFO: Pod name wrapped-volume-race-54ac4f3a-3fa6-437c-b3f2-d31e0bb99ec4: Found 0 pods out of 5
Aug  3 15:05:32.615: INFO: Pod name wrapped-volume-race-54ac4f3a-3fa6-437c-b3f2-d31e0bb99ec4: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-54ac4f3a-3fa6-437c-b3f2-d31e0bb99ec4 in namespace emptydir-wrapper-8950, will wait for the garbage collector to delete the pods
Aug  3 15:05:42.691: INFO: Deleting ReplicationController wrapped-volume-race-54ac4f3a-3fa6-437c-b3f2-d31e0bb99ec4 took: 3.573766ms
Aug  3 15:05:42.792: INFO: Terminating ReplicationController wrapped-volume-race-54ac4f3a-3fa6-437c-b3f2-d31e0bb99ec4 pods took: 100.861476ms
STEP: Creating RC which spawns configmap-volume pods
Aug  3 15:05:45.707: INFO: Pod name wrapped-volume-race-f6e27f8d-a558-475f-a974-d24b55cd5214: Found 0 pods out of 5
Aug  3 15:05:50.713: INFO: Pod name wrapped-volume-race-f6e27f8d-a558-475f-a974-d24b55cd5214: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f6e27f8d-a558-475f-a974-d24b55cd5214 in namespace emptydir-wrapper-8950, will wait for the garbage collector to delete the pods
Aug  3 15:06:02.795: INFO: Deleting ReplicationController wrapped-volume-race-f6e27f8d-a558-475f-a974-d24b55cd5214 took: 3.625375ms
Aug  3 15:06:02.895: INFO: Terminating ReplicationController wrapped-volume-race-f6e27f8d-a558-475f-a974-d24b55cd5214 pods took: 100.43049ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug  3 15:06:06.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-8950" for this suite.

• [SLOW TEST:57.704 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":183,"skipped":3432,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:06:06.248: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  3 15:06:06.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9521" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":184,"skipped":3454,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:06:06.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9877
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  3 15:08:00.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9877" for this suite.

• [SLOW TEST:114.143 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":185,"skipped":3476,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:00.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8776
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug  3 15:08:02.660: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug  3 15:08:04.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8776" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":186,"skipped":3547,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:04.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug  3 15:08:08.839: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug  3 15:08:08.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6369" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3601,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:08.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:08:09.308: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:08:12.324: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:08:12.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5747" for this suite.
STEP: Destroying namespace "webhook-5747-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":188,"skipped":3625,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:12.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8577
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:08:12.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Aug  3 15:08:15.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 create -f -'
Aug  3 15:08:16.505: INFO: stderr: ""
Aug  3 15:08:16.505: INFO: stdout: "e2e-test-crd-publish-openapi-4878-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug  3 15:08:16.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 delete e2e-test-crd-publish-openapi-4878-crds test-foo'
Aug  3 15:08:16.560: INFO: stderr: ""
Aug  3 15:08:16.560: INFO: stdout: "e2e-test-crd-publish-openapi-4878-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug  3 15:08:16.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 apply -f -'
Aug  3 15:08:16.713: INFO: stderr: ""
Aug  3 15:08:16.713: INFO: stdout: "e2e-test-crd-publish-openapi-4878-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug  3 15:08:16.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 delete e2e-test-crd-publish-openapi-4878-crds test-foo'
Aug  3 15:08:16.765: INFO: stderr: ""
Aug  3 15:08:16.766: INFO: stdout: "e2e-test-crd-publish-openapi-4878-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Aug  3 15:08:16.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 create -f -'
Aug  3 15:08:16.912: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug  3 15:08:16.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 create -f -'
Aug  3 15:08:17.058: INFO: rc: 1
Aug  3 15:08:17.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 apply -f -'
Aug  3 15:08:17.202: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Aug  3 15:08:17.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 create -f -'
Aug  3 15:08:17.351: INFO: rc: 1
Aug  3 15:08:17.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 --namespace=crd-publish-openapi-8577 apply -f -'
Aug  3 15:08:17.493: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug  3 15:08:17.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 explain e2e-test-crd-publish-openapi-4878-crds'
Aug  3 15:08:17.661: INFO: stderr: ""
Aug  3 15:08:17.661: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4878-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug  3 15:08:17.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 explain e2e-test-crd-publish-openapi-4878-crds.metadata'
Aug  3 15:08:17.824: INFO: stderr: ""
Aug  3 15:08:17.824: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4878-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug  3 15:08:17.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 explain e2e-test-crd-publish-openapi-4878-crds.spec'
Aug  3 15:08:17.976: INFO: stderr: ""
Aug  3 15:08:17.976: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4878-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug  3 15:08:17.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 explain e2e-test-crd-publish-openapi-4878-crds.spec.bars'
Aug  3 15:08:18.138: INFO: stderr: ""
Aug  3 15:08:18.138: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4878-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug  3 15:08:18.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-8577 explain e2e-test-crd-publish-openapi-4878-crds.spec.bars2'
Aug  3 15:08:18.291: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:08:20.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8577" for this suite.

• [SLOW TEST:7.821 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":189,"skipped":3635,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:20.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  3 15:08:20.436: INFO: Waiting up to 5m0s for pod "downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00" in namespace "downward-api-474" to be "Succeeded or Failed"
Aug  3 15:08:20.439: INFO: Pod "downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00": Phase="Pending", Reason="", readiness=false. Elapsed: 2.519689ms
Aug  3 15:08:22.442: INFO: Pod "downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005937392s
Aug  3 15:08:24.450: INFO: Pod "downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013844961s
STEP: Saw pod success
Aug  3 15:08:24.450: INFO: Pod "downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00" satisfied condition "Succeeded or Failed"
Aug  3 15:08:24.452: INFO: Trying to get logs from node worker-0 pod downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00 container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:08:24.470: INFO: Waiting for pod downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00 to disappear
Aug  3 15:08:24.472: INFO: Pod downward-api-917ecd74-2c34-45d7-9e72-bfe01ee37a00 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  3 15:08:24.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-474" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":190,"skipped":3654,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:24.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  3 15:08:24.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-2465 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug  3 15:08:24.658: INFO: stderr: ""
Aug  3 15:08:24.658: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug  3 15:08:29.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-2465 get pod e2e-test-httpd-pod -o json'
Aug  3 15:08:29.759: INFO: stderr: ""
Aug  3 15:08:29.759: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"00-k0s-privileged\"\n        },\n        \"creationTimestamp\": \"2022-08-03T15:08:24Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2465\",\n        \"resourceVersion\": \"16265\",\n        \"uid\": \"3e375c4c-f054-4fc5-a180-c0ced8c8cd05\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-kszf2\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-0\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-kszf2\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-03T15:08:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-03T15:08:26Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-03T15:08:26Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-03T15:08:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b8187f113a836b98eb0251c486396c322acc4c8f955cdb7b5568d944b6776f97\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-03T15:08:25Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.0.36.176\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.203\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.203\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-03T15:08:24Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug  3 15:08:29.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-2465 replace -f -'
Aug  3 15:08:30.339: INFO: stderr: ""
Aug  3 15:08:30.339: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Aug  3 15:08:30.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-2465 delete pods e2e-test-httpd-pod'
Aug  3 15:08:32.092: INFO: stderr: ""
Aug  3 15:08:32.092: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:08:32.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2465" for this suite.

• [SLOW TEST:7.622 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":191,"skipped":3656,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:32.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4620
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug  3 15:08:32.227: INFO: Waiting up to 5m0s for pod "pod-880388b4-077b-40b0-b816-31d2a4fa9d2e" in namespace "emptydir-4620" to be "Succeeded or Failed"
Aug  3 15:08:32.229: INFO: Pod "pod-880388b4-077b-40b0-b816-31d2a4fa9d2e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.778058ms
Aug  3 15:08:34.235: INFO: Pod "pod-880388b4-077b-40b0-b816-31d2a4fa9d2e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007560999s
Aug  3 15:08:36.243: INFO: Pod "pod-880388b4-077b-40b0-b816-31d2a4fa9d2e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015697715s
STEP: Saw pod success
Aug  3 15:08:36.243: INFO: Pod "pod-880388b4-077b-40b0-b816-31d2a4fa9d2e" satisfied condition "Succeeded or Failed"
Aug  3 15:08:36.245: INFO: Trying to get logs from node worker-0 pod pod-880388b4-077b-40b0-b816-31d2a4fa9d2e container test-container: <nil>
STEP: delete the pod
Aug  3 15:08:36.255: INFO: Waiting for pod pod-880388b4-077b-40b0-b816-31d2a4fa9d2e to disappear
Aug  3 15:08:36.257: INFO: Pod pod-880388b4-077b-40b0-b816-31d2a4fa9d2e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:08:36.257: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4620" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3657,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:36.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-3021
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Aug  3 15:08:36.383: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Aug  3 15:08:36.387: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-3021" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":193,"skipped":3672,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:36.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-228
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 15:08:40.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-228" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":194,"skipped":3694,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:40.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:08:40.670: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb" in namespace "projected-8659" to be "Succeeded or Failed"
Aug  3 15:08:40.673: INFO: Pod "downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.365086ms
Aug  3 15:08:42.678: INFO: Pod "downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008623664s
Aug  3 15:08:44.685: INFO: Pod "downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015333702s
STEP: Saw pod success
Aug  3 15:08:44.685: INFO: Pod "downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb" satisfied condition "Succeeded or Failed"
Aug  3 15:08:44.687: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb container client-container: <nil>
STEP: delete the pod
Aug  3 15:08:44.698: INFO: Waiting for pod downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb to disappear
Aug  3 15:08:44.700: INFO: Pod downwardapi-volume-2bb4e13d-b811-4e9b-88a9-b1b9d26851cb no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:08:44.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8659" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3707,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:44.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-1751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug  3 15:08:44.833: INFO: Waiting up to 5m0s for pod "security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928" in namespace "security-context-1751" to be "Succeeded or Failed"
Aug  3 15:08:44.837: INFO: Pod "security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928": Phase="Pending", Reason="", readiness=false. Elapsed: 3.635351ms
Aug  3 15:08:46.842: INFO: Pod "security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009005257s
Aug  3 15:08:48.849: INFO: Pod "security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016046162s
STEP: Saw pod success
Aug  3 15:08:48.849: INFO: Pod "security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928" satisfied condition "Succeeded or Failed"
Aug  3 15:08:48.851: INFO: Trying to get logs from node worker-0 pod security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928 container test-container: <nil>
STEP: delete the pod
Aug  3 15:08:48.861: INFO: Waiting for pod security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928 to disappear
Aug  3 15:08:48.862: INFO: Pod security-context-94f9419a-e0ba-4e10-ad0f-f20fed52f928 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 15:08:48.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-1751" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":196,"skipped":3727,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:48.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug  3 15:08:49.009: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 15:08:49.009: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 15:08:50.015: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 15:08:50.016: INFO: Node worker-0 is running 0 daemon pod, expected 1
Aug  3 15:08:51.016: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 15:08:51.016: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug  3 15:08:51.028: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 15:08:51.028: INFO: Node worker-1 is running 0 daemon pod, expected 1
Aug  3 15:08:52.034: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 15:08:52.034: INFO: Node worker-1 is running 0 daemon pod, expected 1
Aug  3 15:08:53.034: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 15:08:53.034: INFO: Node worker-1 is running 0 daemon pod, expected 1
Aug  3 15:08:54.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug  3 15:08:54.036: INFO: Node worker-1 is running 0 daemon pod, expected 1
Aug  3 15:08:55.035: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug  3 15:08:55.035: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4992, will wait for the garbage collector to delete the pods
Aug  3 15:08:55.093: INFO: Deleting DaemonSet.extensions daemon-set took: 3.891947ms
Aug  3 15:08:55.193: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.305044ms
Aug  3 15:08:57.500: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug  3 15:08:57.500: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug  3 15:08:57.502: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16533"},"items":null}

Aug  3 15:08:57.504: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16533"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:08:57.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4992" for this suite.

• [SLOW TEST:8.647 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":197,"skipped":3736,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:08:57.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-3075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-3075
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-3075
STEP: Deleting pre-stop pod
Aug  3 15:09:06.673: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Aug  3 15:09:06.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-3075" for this suite.

• [SLOW TEST:9.174 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":198,"skipped":3755,"failed":0}
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:06.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2825
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-458418be-2c8b-4f34-91de-454b23dde859
STEP: Creating a pod to test consume secrets
Aug  3 15:09:06.819: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33" in namespace "projected-2825" to be "Succeeded or Failed"
Aug  3 15:09:06.821: INFO: Pod "pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33": Phase="Pending", Reason="", readiness=false. Elapsed: 2.244384ms
Aug  3 15:09:08.828: INFO: Pod "pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009748532s
Aug  3 15:09:10.834: INFO: Pod "pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015636611s
STEP: Saw pod success
Aug  3 15:09:10.834: INFO: Pod "pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33" satisfied condition "Succeeded or Failed"
Aug  3 15:09:10.836: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:09:10.847: INFO: Waiting for pod pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33 to disappear
Aug  3 15:09:10.849: INFO: Pod pod-projected-secrets-45e6d6a0-7540-4811-84ba-25b65283dc33 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 15:09:10.849: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2825" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":3755,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:10.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8297
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-08c44498-2f97-487c-8c94-8771cf200ed6
STEP: Creating the pod
Aug  3 15:09:10.991: INFO: The status of Pod pod-configmaps-5788613a-5f92-4e67-8448-78f11b085dfb is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:09:12.997: INFO: The status of Pod pod-configmaps-5788613a-5f92-4e67-8448-78f11b085dfb is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-08c44498-2f97-487c-8c94-8771cf200ed6
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:09:15.017: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8297" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":200,"skipped":3766,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:15.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3780
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug  3 15:09:15.160: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  3 15:09:20.164: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug  3 15:09:20.167: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug  3 15:09:20.174: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug  3 15:09:20.176: INFO: Observed &ReplicaSet event: ADDED
Aug  3 15:09:20.176: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.177: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.177: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.177: INFO: Found replicaset test-rs in namespace replicaset-3780 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  3 15:09:20.177: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug  3 15:09:20.177: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  3 15:09:20.181: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug  3 15:09:20.182: INFO: Observed &ReplicaSet event: ADDED
Aug  3 15:09:20.182: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.183: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.183: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.183: INFO: Observed replicaset test-rs in namespace replicaset-3780 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  3 15:09:20.183: INFO: Observed &ReplicaSet event: MODIFIED
Aug  3 15:09:20.183: INFO: Found replicaset test-rs in namespace replicaset-3780 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug  3 15:09:20.183: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 15:09:20.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3780" for this suite.

• [SLOW TEST:5.163 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":201,"skipped":3819,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:20.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3300
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-3300/configmap-test-7d94ad33-fedd-4b3e-b6f1-64b73b989cf6
STEP: Creating a pod to test consume configMaps
Aug  3 15:09:20.315: INFO: Waiting up to 5m0s for pod "pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553" in namespace "configmap-3300" to be "Succeeded or Failed"
Aug  3 15:09:20.317: INFO: Pod "pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553": Phase="Pending", Reason="", readiness=false. Elapsed: 1.78499ms
Aug  3 15:09:22.322: INFO: Pod "pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006435598s
Aug  3 15:09:24.329: INFO: Pod "pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01330521s
STEP: Saw pod success
Aug  3 15:09:24.329: INFO: Pod "pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553" satisfied condition "Succeeded or Failed"
Aug  3 15:09:24.331: INFO: Trying to get logs from node worker-0 pod pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553 container env-test: <nil>
STEP: delete the pod
Aug  3 15:09:24.343: INFO: Waiting for pod pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553 to disappear
Aug  3 15:09:24.344: INFO: Pod pod-configmaps-6d05ee5e-9f46-4eb2-83f5-cd8cb8500553 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:09:24.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3300" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":202,"skipped":3848,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:24.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-8877
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  3 15:09:24.481: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:09:26.488: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  3 15:09:26.496: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:09:28.502: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug  3 15:09:28.509: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug  3 15:09:28.511: INFO: Pod pod-with-prestop-exec-hook still exists
Aug  3 15:09:30.511: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug  3 15:09:30.514: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  3 15:09:30.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-8877" for this suite.

• [SLOW TEST:6.174 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3871,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:30.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-6104
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Aug  3 15:09:30.651: INFO: Waiting up to 5m0s for pod "client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed" in namespace "containers-6104" to be "Succeeded or Failed"
Aug  3 15:09:30.654: INFO: Pod "client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.177568ms
Aug  3 15:09:32.659: INFO: Pod "client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007752778s
Aug  3 15:09:34.665: INFO: Pod "client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013861372s
STEP: Saw pod success
Aug  3 15:09:34.665: INFO: Pod "client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed" satisfied condition "Succeeded or Failed"
Aug  3 15:09:34.667: INFO: Trying to get logs from node worker-0 pod client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:09:34.678: INFO: Waiting for pod client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed to disappear
Aug  3 15:09:34.683: INFO: Pod client-containers-fab9c9e6-5c7f-4b71-bc03-87ff2247feed no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  3 15:09:34.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-6104" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":204,"skipped":3884,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:34.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1600
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1600
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  3 15:09:34.811: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  3 15:09:34.827: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:09:36.834: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:09:38.836: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:09:40.831: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:09:42.833: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:09:44.831: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:09:46.835: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  3 15:09:46.838: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Aug  3 15:09:48.858: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Aug  3 15:09:48.858: INFO: Going to poll 10.244.0.218 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Aug  3 15:09:48.860: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.218:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1600 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:09:48.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:09:48.860: INFO: ExecWithOptions: Clientset creation
Aug  3 15:09:48.861: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1600/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.218%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  3 15:09:48.931: INFO: Found all 1 expected endpoints: [netserver-0]
Aug  3 15:09:48.931: INFO: Going to poll 10.244.1.73 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Aug  3 15:09:48.933: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.73:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1600 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:09:48.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:09:48.934: INFO: ExecWithOptions: Clientset creation
Aug  3 15:09:48.934: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1600/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.73%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  3 15:09:48.995: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  3 15:09:48.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1600" for this suite.

• [SLOW TEST:14.308 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":205,"skipped":3892,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:49.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1050
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  3 15:09:49.124: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 15:09:52.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1050" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":206,"skipped":3915,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:09:52.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-2237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  3 15:15:00.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-2237" for this suite.

• [SLOW TEST:308.148 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":207,"skipped":3930,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:15:00.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4739
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-0992f0ee-9615-4850-8b29-4cc7b1c4e0b7
STEP: Creating a pod to test consume secrets
Aug  3 15:15:00.607: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908" in namespace "projected-4739" to be "Succeeded or Failed"
Aug  3 15:15:00.610: INFO: Pod "pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908": Phase="Pending", Reason="", readiness=false. Elapsed: 2.828155ms
Aug  3 15:15:02.617: INFO: Pod "pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009720135s
Aug  3 15:15:04.622: INFO: Pod "pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015385592s
STEP: Saw pod success
Aug  3 15:15:04.623: INFO: Pod "pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908" satisfied condition "Succeeded or Failed"
Aug  3 15:15:04.624: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:15:04.645: INFO: Waiting for pod pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908 to disappear
Aug  3 15:15:04.647: INFO: Pod pod-projected-secrets-84204dcf-ed21-4829-9b3d-fb8d9fe1a908 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 15:15:04.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4739" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":208,"skipped":4008,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:15:04.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-91
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  3 15:15:04.781: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 15:16:04.795: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug  3 15:16:04.809: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug  3 15:16:04.816: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug  3 15:16:04.828: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug  3 15:16:04.833: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:16:12.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-91" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:68.240 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":209,"skipped":4021,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:16:12.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-858
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug  3 15:16:13.018: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:16:15.021: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  3 15:16:16.034: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-858" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":210,"skipped":4040,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:16:16.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1065
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:16:16.164: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4" in namespace "downward-api-1065" to be "Succeeded or Failed"
Aug  3 15:16:16.167: INFO: Pod "downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.953537ms
Aug  3 15:16:18.176: INFO: Pod "downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011502727s
Aug  3 15:16:20.180: INFO: Pod "downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015439209s
STEP: Saw pod success
Aug  3 15:16:20.180: INFO: Pod "downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4" satisfied condition "Succeeded or Failed"
Aug  3 15:16:20.181: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4 container client-container: <nil>
STEP: delete the pod
Aug  3 15:16:20.193: INFO: Waiting for pod downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4 to disappear
Aug  3 15:16:20.194: INFO: Pod downwardapi-volume-1f643bb8-d8e9-4fc1-b07b-ef2d7cd816c4 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:16:20.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1065" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":211,"skipped":4065,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:16:20.200: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  3 15:21:20.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9214" for this suite.

• [SLOW TEST:300.141 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":212,"skipped":4076,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:20.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8288
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  3 15:21:20.482: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  3 15:21:20.484: INFO: starting watch
STEP: patching
STEP: updating
Aug  3 15:21:20.493: INFO: waiting for watch events with expected annotations
Aug  3 15:21:20.493: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  3 15:21:20.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8288" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":213,"skipped":4137,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:20.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6947
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  3 15:21:20.636: INFO: The status of Pod annotationupdate8fa59f98-2526-4aae-95b8-317f3d39b788 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:21:22.643: INFO: The status of Pod annotationupdate8fa59f98-2526-4aae-95b8-317f3d39b788 is Running (Ready = true)
Aug  3 15:21:23.169: INFO: Successfully updated pod "annotationupdate8fa59f98-2526-4aae-95b8-317f3d39b788"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:21:25.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6947" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":214,"skipped":4140,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:25.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7415
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:21:25.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug  3 15:21:28.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-7415 --namespace=crd-publish-openapi-7415 create -f -'
Aug  3 15:21:29.165: INFO: stderr: ""
Aug  3 15:21:29.165: INFO: stdout: "e2e-test-crd-publish-openapi-6413-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug  3 15:21:29.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-7415 --namespace=crd-publish-openapi-7415 delete e2e-test-crd-publish-openapi-6413-crds test-cr'
Aug  3 15:21:29.217: INFO: stderr: ""
Aug  3 15:21:29.217: INFO: stdout: "e2e-test-crd-publish-openapi-6413-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug  3 15:21:29.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-7415 --namespace=crd-publish-openapi-7415 apply -f -'
Aug  3 15:21:29.368: INFO: stderr: ""
Aug  3 15:21:29.368: INFO: stdout: "e2e-test-crd-publish-openapi-6413-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug  3 15:21:29.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-7415 --namespace=crd-publish-openapi-7415 delete e2e-test-crd-publish-openapi-6413-crds test-cr'
Aug  3 15:21:29.419: INFO: stderr: ""
Aug  3 15:21:29.419: INFO: stdout: "e2e-test-crd-publish-openapi-6413-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug  3 15:21:29.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=crd-publish-openapi-7415 explain e2e-test-crd-publish-openapi-6413-crds'
Aug  3 15:21:29.571: INFO: stderr: ""
Aug  3 15:21:29.571: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6413-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:21:31.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7415" for this suite.

• [SLOW TEST:6.392 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":215,"skipped":4151,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:31.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-1092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:21:31.728: INFO: Creating ReplicaSet my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d
Aug  3 15:21:31.733: INFO: Pod name my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d: Found 0 pods out of 1
Aug  3 15:21:36.739: INFO: Pod name my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d: Found 1 pods out of 1
Aug  3 15:21:36.739: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d" is running
Aug  3 15:21:36.741: INFO: Pod "my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d-zgtxm" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:21:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:21:32 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:21:32 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:21:31 +0000 UTC Reason: Message:}])
Aug  3 15:21:36.741: INFO: Trying to dial the pod
Aug  3 15:21:41.751: INFO: Controller my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d: Got expected result from replica 1 [my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d-zgtxm]: "my-hostname-basic-da0d0cf1-83da-4658-bef8-81e997ade24d-zgtxm", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 15:21:41.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-1092" for this suite.

• [SLOW TEST:10.148 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":216,"skipped":4184,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:41.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6539
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug  3 15:21:47.910: INFO: 80 pods remaining
Aug  3 15:21:47.910: INFO: 80 pods has nil DeletionTimestamp
Aug  3 15:21:47.910: INFO: 
Aug  3 15:21:48.913: INFO: 73 pods remaining
Aug  3 15:21:48.913: INFO: 73 pods has nil DeletionTimestamp
Aug  3 15:21:48.913: INFO: 
Aug  3 15:21:49.912: INFO: 59 pods remaining
Aug  3 15:21:49.912: INFO: 59 pods has nil DeletionTimestamp
Aug  3 15:21:49.912: INFO: 
Aug  3 15:21:50.909: INFO: 40 pods remaining
Aug  3 15:21:50.909: INFO: 40 pods has nil DeletionTimestamp
Aug  3 15:21:50.910: INFO: 
Aug  3 15:21:51.909: INFO: 33 pods remaining
Aug  3 15:21:51.910: INFO: 33 pods has nil DeletionTimestamp
Aug  3 15:21:51.910: INFO: 
Aug  3 15:21:52.937: INFO: 19 pods remaining
Aug  3 15:21:52.939: INFO: 18 pods has nil DeletionTimestamp
Aug  3 15:21:52.939: INFO: 
STEP: Gathering metrics
Aug  3 15:21:53.911: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0803 15:21:53.911101      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  3 15:21:53.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6539" for this suite.

• [SLOW TEST:12.160 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":217,"skipped":4215,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:21:53.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-692
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug  3 15:21:54.047: INFO: Found 0 stateful pods, waiting for 3
Aug  3 15:22:04.051: INFO: Found 1 stateful pods, waiting for 3
Aug  3 15:22:14.055: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:14.055: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:14.055: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
Aug  3 15:22:24.053: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:24.054: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:24.054: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug  3 15:22:24.075: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug  3 15:22:34.109: INFO: Updating stateful set ss2
Aug  3 15:22:34.114: INFO: Waiting for Pod statefulset-692/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug  3 15:22:44.144: INFO: Found 1 stateful pods, waiting for 3
Aug  3 15:22:54.155: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:54.155: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug  3 15:22:54.155: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug  3 15:22:54.174: INFO: Updating stateful set ss2
Aug  3 15:22:54.179: INFO: Waiting for Pod statefulset-692/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug  3 15:23:04.208: INFO: Updating stateful set ss2
Aug  3 15:23:04.212: INFO: Waiting for StatefulSet statefulset-692/ss2 to complete update
Aug  3 15:23:04.212: INFO: Waiting for Pod statefulset-692/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug  3 15:23:14.222: INFO: Waiting for StatefulSet statefulset-692/ss2 to complete update
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 15:23:24.222: INFO: Deleting all statefulset in ns statefulset-692
Aug  3 15:23:24.224: INFO: Scaling statefulset ss2 to 0
Aug  3 15:23:34.239: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 15:23:34.242: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 15:23:34.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-692" for this suite.

• [SLOW TEST:100.336 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":218,"skipped":4227,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:23:34.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-5310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Aug  3 15:23:34.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Aug  3 15:23:35.152: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Aug  3 15:23:37.181: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:23:39.186: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:23:41.187: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:23:43.189: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 23, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:23:47.205: INFO: Waited 2.016458212s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug  3 15:23:47.257: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Aug  3 15:23:47.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-5310" for this suite.

• [SLOW TEST:13.639 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":219,"skipped":4232,"failed":0}
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:23:47.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-8956
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  3 15:23:48.029: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:23:50.032: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:23:52.034: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  3 15:23:52.042: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:23:54.048: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:23:56.049: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:23:58.048: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:00.046: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:02.046: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:04.051: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:06.047: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:08.046: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:24:10.045: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug  3 15:24:10.063: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug  3 15:24:10.065: INFO: Pod pod-with-poststart-http-hook still exists
Aug  3 15:24:12.066: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug  3 15:24:12.070: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  3 15:24:12.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-8956" for this suite.

• [SLOW TEST:24.183 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":220,"skipped":4236,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:24:12.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4623
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:24:12.205: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7" in namespace "projected-4623" to be "Succeeded or Failed"
Aug  3 15:24:12.208: INFO: Pod "downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.992754ms
Aug  3 15:24:14.215: INFO: Pod "downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009413052s
Aug  3 15:24:16.220: INFO: Pod "downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015063402s
STEP: Saw pod success
Aug  3 15:24:16.220: INFO: Pod "downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7" satisfied condition "Succeeded or Failed"
Aug  3 15:24:16.222: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7 container client-container: <nil>
STEP: delete the pod
Aug  3 15:24:16.234: INFO: Waiting for pod downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7 to disappear
Aug  3 15:24:16.235: INFO: Pod downwardapi-volume-2ad5466d-2226-47b0-8084-95ab18abafe7 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:24:16.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4623" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":221,"skipped":4251,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:24:16.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-3792
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-7brgw in namespace proxy-3792
I0803 15:24:16.378716      23 runners.go:193] Created replication controller with name: proxy-service-7brgw, namespace: proxy-3792, replica count: 1
I0803 15:24:17.429829      23 runners.go:193] proxy-service-7brgw Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0803 15:24:18.430079      23 runners.go:193] proxy-service-7brgw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 15:24:18.435: INFO: setup took 2.069351869s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug  3 15:24:18.447: INFO: (0) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 11.196856ms)
Aug  3 15:24:18.449: INFO: (0) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 13.124037ms)
Aug  3 15:24:18.449: INFO: (0) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 12.86078ms)
Aug  3 15:24:18.449: INFO: (0) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 12.967877ms)
Aug  3 15:24:18.449: INFO: (0) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 13.771342ms)
Aug  3 15:24:18.450: INFO: (0) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 13.874977ms)
Aug  3 15:24:18.450: INFO: (0) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 13.993725ms)
Aug  3 15:24:18.450: INFO: (0) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 14.861059ms)
Aug  3 15:24:18.451: INFO: (0) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 15.801759ms)
Aug  3 15:24:18.452: INFO: (0) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 17.059698ms)
Aug  3 15:24:18.458: INFO: (0) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 22.038886ms)
Aug  3 15:24:18.458: INFO: (0) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 21.901464ms)
Aug  3 15:24:18.458: INFO: (0) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 22.201409ms)
Aug  3 15:24:18.458: INFO: (0) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 22.115572ms)
Aug  3 15:24:18.459: INFO: (0) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 23.647399ms)
Aug  3 15:24:18.459: INFO: (0) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 23.600619ms)
Aug  3 15:24:18.466: INFO: (1) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 7.012693ms)
Aug  3 15:24:18.467: INFO: (1) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 7.51416ms)
Aug  3 15:24:18.467: INFO: (1) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 7.487443ms)
Aug  3 15:24:18.467: INFO: (1) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 7.705183ms)
Aug  3 15:24:18.472: INFO: (1) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 12.080381ms)
Aug  3 15:24:18.472: INFO: (1) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 12.201712ms)
Aug  3 15:24:18.472: INFO: (1) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 12.313782ms)
Aug  3 15:24:18.472: INFO: (1) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 13.047525ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 13.310882ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 13.178756ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 13.404624ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 13.494412ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 13.351373ms)
Aug  3 15:24:18.473: INFO: (1) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 13.641913ms)
Aug  3 15:24:18.474: INFO: (1) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 14.560068ms)
Aug  3 15:24:18.474: INFO: (1) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 14.584831ms)
Aug  3 15:24:18.478: INFO: (2) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 3.91104ms)
Aug  3 15:24:18.482: INFO: (2) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 7.24438ms)
Aug  3 15:24:18.482: INFO: (2) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 7.688015ms)
Aug  3 15:24:18.482: INFO: (2) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 7.697691ms)
Aug  3 15:24:18.483: INFO: (2) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.926098ms)
Aug  3 15:24:18.483: INFO: (2) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.818007ms)
Aug  3 15:24:18.484: INFO: (2) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 9.355673ms)
Aug  3 15:24:18.484: INFO: (2) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 9.402376ms)
Aug  3 15:24:18.484: INFO: (2) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.542931ms)
Aug  3 15:24:18.485: INFO: (2) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 10.809098ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.411278ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 11.423659ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 11.291618ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 10.656735ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 11.877504ms)
Aug  3 15:24:18.486: INFO: (2) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.700822ms)
Aug  3 15:24:18.494: INFO: (3) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 7.681695ms)
Aug  3 15:24:18.495: INFO: (3) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 7.568887ms)
Aug  3 15:24:18.495: INFO: (3) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 7.815163ms)
Aug  3 15:24:18.496: INFO: (3) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 9.028837ms)
Aug  3 15:24:18.496: INFO: (3) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.638177ms)
Aug  3 15:24:18.496: INFO: (3) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 8.546575ms)
Aug  3 15:24:18.496: INFO: (3) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 9.982652ms)
Aug  3 15:24:18.496: INFO: (3) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 9.320117ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 9.266885ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.456471ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 9.834237ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 9.896474ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 9.373866ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 10.582144ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 10.060708ms)
Aug  3 15:24:18.497: INFO: (3) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.85941ms)
Aug  3 15:24:18.503: INFO: (4) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 5.029046ms)
Aug  3 15:24:18.503: INFO: (4) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 5.695691ms)
Aug  3 15:24:18.505: INFO: (4) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.897791ms)
Aug  3 15:24:18.506: INFO: (4) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.07613ms)
Aug  3 15:24:18.507: INFO: (4) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 9.14396ms)
Aug  3 15:24:18.507: INFO: (4) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.445537ms)
Aug  3 15:24:18.507: INFO: (4) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 9.378273ms)
Aug  3 15:24:18.508: INFO: (4) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 9.858876ms)
Aug  3 15:24:18.508: INFO: (4) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.673739ms)
Aug  3 15:24:18.508: INFO: (4) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 9.902373ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 11.833203ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 11.594631ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 11.534156ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 11.401029ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 11.514211ms)
Aug  3 15:24:18.510: INFO: (4) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 11.085285ms)
Aug  3 15:24:18.514: INFO: (5) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 3.821027ms)
Aug  3 15:24:18.515: INFO: (5) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 5.109492ms)
Aug  3 15:24:18.516: INFO: (5) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 5.349363ms)
Aug  3 15:24:18.516: INFO: (5) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 5.721306ms)
Aug  3 15:24:18.516: INFO: (5) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 5.806161ms)
Aug  3 15:24:18.520: INFO: (5) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 9.300935ms)
Aug  3 15:24:18.520: INFO: (5) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 9.795835ms)
Aug  3 15:24:18.521: INFO: (5) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 10.737968ms)
Aug  3 15:24:18.521: INFO: (5) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 10.677913ms)
Aug  3 15:24:18.521: INFO: (5) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 10.826948ms)
Aug  3 15:24:18.521: INFO: (5) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 11.156298ms)
Aug  3 15:24:18.522: INFO: (5) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.511568ms)
Aug  3 15:24:18.522: INFO: (5) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.631623ms)
Aug  3 15:24:18.522: INFO: (5) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 11.653273ms)
Aug  3 15:24:18.522: INFO: (5) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 11.749394ms)
Aug  3 15:24:18.522: INFO: (5) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 11.805892ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.618273ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 8.80887ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 8.677913ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.586369ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 8.84086ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 8.690868ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 8.915344ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 8.706387ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.887631ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.650012ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.655956ms)
Aug  3 15:24:18.531: INFO: (6) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 8.668486ms)
Aug  3 15:24:18.533: INFO: (6) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 10.368908ms)
Aug  3 15:24:18.533: INFO: (6) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.861429ms)
Aug  3 15:24:18.534: INFO: (6) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.085046ms)
Aug  3 15:24:18.534: INFO: (6) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 11.518611ms)
Aug  3 15:24:18.537: INFO: (7) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 2.861063ms)
Aug  3 15:24:18.540: INFO: (7) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 6.059856ms)
Aug  3 15:24:18.540: INFO: (7) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.126155ms)
Aug  3 15:24:18.541: INFO: (7) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 6.834419ms)
Aug  3 15:24:18.544: INFO: (7) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 9.466378ms)
Aug  3 15:24:18.544: INFO: (7) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 9.625312ms)
Aug  3 15:24:18.544: INFO: (7) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.973877ms)
Aug  3 15:24:18.544: INFO: (7) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 9.927411ms)
Aug  3 15:24:18.544: INFO: (7) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 9.968039ms)
Aug  3 15:24:18.545: INFO: (7) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 10.425512ms)
Aug  3 15:24:18.545: INFO: (7) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.989578ms)
Aug  3 15:24:18.545: INFO: (7) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.929616ms)
Aug  3 15:24:18.545: INFO: (7) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 10.97801ms)
Aug  3 15:24:18.546: INFO: (7) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.577358ms)
Aug  3 15:24:18.546: INFO: (7) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 11.682356ms)
Aug  3 15:24:18.547: INFO: (7) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 12.410491ms)
Aug  3 15:24:18.553: INFO: (8) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 6.018472ms)
Aug  3 15:24:18.554: INFO: (8) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 7.01778ms)
Aug  3 15:24:18.555: INFO: (8) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.128235ms)
Aug  3 15:24:18.555: INFO: (8) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 8.52881ms)
Aug  3 15:24:18.556: INFO: (8) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.855416ms)
Aug  3 15:24:18.556: INFO: (8) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 9.070039ms)
Aug  3 15:24:18.556: INFO: (8) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 9.11683ms)
Aug  3 15:24:18.556: INFO: (8) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 9.139313ms)
Aug  3 15:24:18.556: INFO: (8) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.603161ms)
Aug  3 15:24:18.558: INFO: (8) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 10.61651ms)
Aug  3 15:24:18.558: INFO: (8) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.722056ms)
Aug  3 15:24:18.558: INFO: (8) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.568383ms)
Aug  3 15:24:18.559: INFO: (8) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 12.217377ms)
Aug  3 15:24:18.560: INFO: (8) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 12.484861ms)
Aug  3 15:24:18.560: INFO: (8) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 12.508714ms)
Aug  3 15:24:18.560: INFO: (8) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 12.799616ms)
Aug  3 15:24:18.565: INFO: (9) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 5.011414ms)
Aug  3 15:24:18.565: INFO: (9) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 5.364914ms)
Aug  3 15:24:18.567: INFO: (9) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 6.314574ms)
Aug  3 15:24:18.567: INFO: (9) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.741576ms)
Aug  3 15:24:18.568: INFO: (9) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 7.460359ms)
Aug  3 15:24:18.568: INFO: (9) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 8.061351ms)
Aug  3 15:24:18.569: INFO: (9) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.837543ms)
Aug  3 15:24:18.570: INFO: (9) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 9.102025ms)
Aug  3 15:24:18.570: INFO: (9) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 9.554311ms)
Aug  3 15:24:18.570: INFO: (9) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 9.915865ms)
Aug  3 15:24:18.570: INFO: (9) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.796952ms)
Aug  3 15:24:18.570: INFO: (9) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 9.734696ms)
Aug  3 15:24:18.571: INFO: (9) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.339063ms)
Aug  3 15:24:18.571: INFO: (9) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.013028ms)
Aug  3 15:24:18.572: INFO: (9) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 11.298578ms)
Aug  3 15:24:18.572: INFO: (9) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 11.944559ms)
Aug  3 15:24:18.580: INFO: (10) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 7.817631ms)
Aug  3 15:24:18.580: INFO: (10) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 7.769214ms)
Aug  3 15:24:18.583: INFO: (10) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 10.227303ms)
Aug  3 15:24:18.583: INFO: (10) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 10.12875ms)
Aug  3 15:24:18.583: INFO: (10) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.528197ms)
Aug  3 15:24:18.584: INFO: (10) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 11.043426ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 12.422413ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 12.517633ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 12.482782ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 12.728561ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 12.999931ms)
Aug  3 15:24:18.585: INFO: (10) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 12.885819ms)
Aug  3 15:24:18.586: INFO: (10) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 13.010629ms)
Aug  3 15:24:18.586: INFO: (10) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 12.914428ms)
Aug  3 15:24:18.586: INFO: (10) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 13.182166ms)
Aug  3 15:24:18.586: INFO: (10) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 13.104024ms)
Aug  3 15:24:18.593: INFO: (11) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 6.815874ms)
Aug  3 15:24:18.593: INFO: (11) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.682591ms)
Aug  3 15:24:18.594: INFO: (11) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 7.140759ms)
Aug  3 15:24:18.594: INFO: (11) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 7.243615ms)
Aug  3 15:24:18.594: INFO: (11) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 7.230535ms)
Aug  3 15:24:18.594: INFO: (11) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 7.379133ms)
Aug  3 15:24:18.595: INFO: (11) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 8.949157ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 9.108138ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 9.096869ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.826551ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.194863ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 10.311925ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 9.968966ms)
Aug  3 15:24:18.596: INFO: (11) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 10.325605ms)
Aug  3 15:24:18.598: INFO: (11) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.141699ms)
Aug  3 15:24:18.598: INFO: (11) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 11.794309ms)
Aug  3 15:24:18.603: INFO: (12) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 4.893412ms)
Aug  3 15:24:18.605: INFO: (12) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 7.038765ms)
Aug  3 15:24:18.605: INFO: (12) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.768919ms)
Aug  3 15:24:18.606: INFO: (12) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.150399ms)
Aug  3 15:24:18.607: INFO: (12) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 8.51839ms)
Aug  3 15:24:18.607: INFO: (12) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.409771ms)
Aug  3 15:24:18.608: INFO: (12) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 8.962126ms)
Aug  3 15:24:18.608: INFO: (12) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 9.52143ms)
Aug  3 15:24:18.608: INFO: (12) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 9.495503ms)
Aug  3 15:24:18.608: INFO: (12) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 9.972504ms)
Aug  3 15:24:18.609: INFO: (12) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 10.362263ms)
Aug  3 15:24:18.609: INFO: (12) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 9.689288ms)
Aug  3 15:24:18.609: INFO: (12) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 9.8449ms)
Aug  3 15:24:18.609: INFO: (12) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 9.725549ms)
Aug  3 15:24:18.609: INFO: (12) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 10.928225ms)
Aug  3 15:24:18.610: INFO: (12) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 10.785405ms)
Aug  3 15:24:18.614: INFO: (13) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 4.545705ms)
Aug  3 15:24:18.615: INFO: (13) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 4.946814ms)
Aug  3 15:24:18.616: INFO: (13) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 5.873537ms)
Aug  3 15:24:18.618: INFO: (13) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 7.715788ms)
Aug  3 15:24:18.618: INFO: (13) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 7.678296ms)
Aug  3 15:24:18.618: INFO: (13) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.178011ms)
Aug  3 15:24:18.618: INFO: (13) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 8.060769ms)
Aug  3 15:24:18.618: INFO: (13) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 8.088723ms)
Aug  3 15:24:18.619: INFO: (13) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 8.481939ms)
Aug  3 15:24:18.620: INFO: (13) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 9.481939ms)
Aug  3 15:24:18.620: INFO: (13) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 10.058191ms)
Aug  3 15:24:18.620: INFO: (13) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.053266ms)
Aug  3 15:24:18.620: INFO: (13) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 9.812201ms)
Aug  3 15:24:18.622: INFO: (13) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.881669ms)
Aug  3 15:24:18.622: INFO: (13) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 12.012225ms)
Aug  3 15:24:18.623: INFO: (13) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 12.776149ms)
Aug  3 15:24:18.630: INFO: (14) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 6.486ms)
Aug  3 15:24:18.631: INFO: (14) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 7.122895ms)
Aug  3 15:24:18.632: INFO: (14) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 8.491784ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 9.719359ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 9.927321ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 9.650344ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 9.762743ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 10.077472ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 10.167824ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 10.045262ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 9.778787ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 9.958568ms)
Aug  3 15:24:18.633: INFO: (14) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 10.07611ms)
Aug  3 15:24:18.634: INFO: (14) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 10.17615ms)
Aug  3 15:24:18.634: INFO: (14) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 10.762707ms)
Aug  3 15:24:18.635: INFO: (14) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 11.436075ms)
Aug  3 15:24:18.640: INFO: (15) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 4.675076ms)
Aug  3 15:24:18.642: INFO: (15) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 6.797092ms)
Aug  3 15:24:18.642: INFO: (15) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 7.098797ms)
Aug  3 15:24:18.642: INFO: (15) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 6.997567ms)
Aug  3 15:24:18.643: INFO: (15) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.295678ms)
Aug  3 15:24:18.644: INFO: (15) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.466616ms)
Aug  3 15:24:18.646: INFO: (15) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 10.252662ms)
Aug  3 15:24:18.646: INFO: (15) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 10.442005ms)
Aug  3 15:24:18.646: INFO: (15) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 10.658853ms)
Aug  3 15:24:18.646: INFO: (15) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 10.519193ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 11.34925ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 11.144177ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 11.215883ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 11.414203ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 11.507323ms)
Aug  3 15:24:18.647: INFO: (15) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 11.683198ms)
Aug  3 15:24:18.652: INFO: (16) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 4.306205ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 11.16137ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 11.290566ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 11.237882ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 11.217388ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 11.340054ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 11.420128ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 11.50287ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 11.614349ms)
Aug  3 15:24:18.659: INFO: (16) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.716995ms)
Aug  3 15:24:18.660: INFO: (16) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 12.660274ms)
Aug  3 15:24:18.661: INFO: (16) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 13.016435ms)
Aug  3 15:24:18.661: INFO: (16) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 13.457767ms)
Aug  3 15:24:18.661: INFO: (16) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 13.977155ms)
Aug  3 15:24:18.661: INFO: (16) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 13.934301ms)
Aug  3 15:24:18.663: INFO: (16) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 15.262823ms)
Aug  3 15:24:18.668: INFO: (17) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 5.369487ms)
Aug  3 15:24:18.669: INFO: (17) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 5.765563ms)
Aug  3 15:24:18.669: INFO: (17) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 5.815073ms)
Aug  3 15:24:18.669: INFO: (17) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 6.008961ms)
Aug  3 15:24:18.670: INFO: (17) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 6.381874ms)
Aug  3 15:24:18.672: INFO: (17) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.114352ms)
Aug  3 15:24:18.672: INFO: (17) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 8.736307ms)
Aug  3 15:24:18.672: INFO: (17) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 8.936815ms)
Aug  3 15:24:18.674: INFO: (17) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 10.145227ms)
Aug  3 15:24:18.674: INFO: (17) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 10.104156ms)
Aug  3 15:24:18.674: INFO: (17) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.497078ms)
Aug  3 15:24:18.675: INFO: (17) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.573417ms)
Aug  3 15:24:18.676: INFO: (17) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 13.204995ms)
Aug  3 15:24:18.677: INFO: (17) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 13.283462ms)
Aug  3 15:24:18.677: INFO: (17) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 13.517703ms)
Aug  3 15:24:18.677: INFO: (17) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 13.663325ms)
Aug  3 15:24:18.681: INFO: (18) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 4.367646ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 8.43459ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 8.318411ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.442718ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 8.832183ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 8.702637ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 9.032053ms)
Aug  3 15:24:18.686: INFO: (18) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 8.495295ms)
Aug  3 15:24:18.687: INFO: (18) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 9.147266ms)
Aug  3 15:24:18.687: INFO: (18) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 9.394907ms)
Aug  3 15:24:18.687: INFO: (18) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 10.131273ms)
Aug  3 15:24:18.687: INFO: (18) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 9.817876ms)
Aug  3 15:24:18.687: INFO: (18) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 9.353891ms)
Aug  3 15:24:18.688: INFO: (18) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 11.092745ms)
Aug  3 15:24:18.688: INFO: (18) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 11.027111ms)
Aug  3 15:24:18.689: INFO: (18) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 10.811829ms)
Aug  3 15:24:18.694: INFO: (19) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 5.455255ms)
Aug  3 15:24:18.694: INFO: (19) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:462/proxy/: tls qux (200; 5.357593ms)
Aug  3 15:24:18.695: INFO: (19) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf/proxy/rewriteme">test</a> (200; 5.561569ms)
Aug  3 15:24:18.695: INFO: (19) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:443/proxy/tlsrewritem... (200; 5.501214ms)
Aug  3 15:24:18.695: INFO: (19) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">... (200; 5.543324ms)
Aug  3 15:24:18.698: INFO: (19) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname1/proxy/: foo (200; 8.974678ms)
Aug  3 15:24:18.699: INFO: (19) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname2/proxy/: tls qux (200; 9.499181ms)
Aug  3 15:24:18.699: INFO: (19) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:160/proxy/: foo (200; 10.052977ms)
Aug  3 15:24:18.699: INFO: (19) /api/v1/namespaces/proxy-3792/services/https:proxy-service-7brgw:tlsportname1/proxy/: tls baz (200; 10.24671ms)
Aug  3 15:24:18.699: INFO: (19) /api/v1/namespaces/proxy-3792/pods/https:proxy-service-7brgw-bw6hf:460/proxy/: tls baz (200; 9.878495ms)
Aug  3 15:24:18.700: INFO: (19) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:1080/proxy/rewriteme">test<... (200; 10.322145ms)
Aug  3 15:24:18.700: INFO: (19) /api/v1/namespaces/proxy-3792/pods/http:proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 10.464729ms)
Aug  3 15:24:18.700: INFO: (19) /api/v1/namespaces/proxy-3792/pods/proxy-service-7brgw-bw6hf:162/proxy/: bar (200; 10.54054ms)
Aug  3 15:24:18.701: INFO: (19) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname1/proxy/: foo (200; 11.441433ms)
Aug  3 15:24:18.701: INFO: (19) /api/v1/namespaces/proxy-3792/services/http:proxy-service-7brgw:portname2/proxy/: bar (200; 11.898989ms)
Aug  3 15:24:18.701: INFO: (19) /api/v1/namespaces/proxy-3792/services/proxy-service-7brgw:portname2/proxy/: bar (200; 11.978159ms)
STEP: deleting ReplicationController proxy-service-7brgw in namespace proxy-3792, will wait for the garbage collector to delete the pods
Aug  3 15:24:18.758: INFO: Deleting ReplicationController proxy-service-7brgw took: 3.687007ms
Aug  3 15:24:18.858: INFO: Terminating ReplicationController proxy-service-7brgw pods took: 100.339894ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  3 15:24:21.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-3792" for this suite.

• [SLOW TEST:5.324 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":222,"skipped":4262,"failed":0}
SSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:24:21.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-77e94cdc-a6c1-4ee1-a1dd-e16b6e02bfce in namespace container-probe-4483
Aug  3 15:24:23.694: INFO: Started pod busybox-77e94cdc-a6c1-4ee1-a1dd-e16b6e02bfce in namespace container-probe-4483
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 15:24:23.696: INFO: Initial restart count of pod busybox-77e94cdc-a6c1-4ee1-a1dd-e16b6e02bfce is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 15:28:24.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4483" for this suite.

• [SLOW TEST:242.774 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":223,"skipped":4268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:24.340: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-7840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug  3 15:28:28.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-7840" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4326,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-8211
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:28:28.607: INFO: Creating pod...
Aug  3 15:28:30.620: INFO: Creating service...
Aug  3 15:28:30.629: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/DELETE
Aug  3 15:28:30.635: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  3 15:28:30.635: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/GET
Aug  3 15:28:30.640: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug  3 15:28:30.640: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/HEAD
Aug  3 15:28:30.642: INFO: http.Client request:HEAD | StatusCode:200
Aug  3 15:28:30.642: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/OPTIONS
Aug  3 15:28:30.645: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  3 15:28:30.645: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/PATCH
Aug  3 15:28:30.647: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  3 15:28:30.648: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/POST
Aug  3 15:28:30.650: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  3 15:28:30.650: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/pods/agnhost/proxy/some/path/with/PUT
Aug  3 15:28:30.653: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug  3 15:28:30.653: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/DELETE
Aug  3 15:28:30.656: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug  3 15:28:30.656: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/GET
Aug  3 15:28:30.659: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug  3 15:28:30.659: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/HEAD
Aug  3 15:28:30.662: INFO: http.Client request:HEAD | StatusCode:200
Aug  3 15:28:30.662: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/OPTIONS
Aug  3 15:28:30.666: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug  3 15:28:30.666: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/PATCH
Aug  3 15:28:30.669: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug  3 15:28:30.669: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/POST
Aug  3 15:28:30.672: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug  3 15:28:30.672: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8211/services/test-service/proxy/some/path/with/PUT
Aug  3 15:28:30.675: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug  3 15:28:30.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-8211" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":225,"skipped":4335,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:30.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug  3 15:28:30.804: INFO: Waiting up to 5m0s for pod "pod-72937d00-4798-46ae-983e-8bd9c1e19128" in namespace "emptydir-1583" to be "Succeeded or Failed"
Aug  3 15:28:30.806: INFO: Pod "pod-72937d00-4798-46ae-983e-8bd9c1e19128": Phase="Pending", Reason="", readiness=false. Elapsed: 2.160881ms
Aug  3 15:28:32.812: INFO: Pod "pod-72937d00-4798-46ae-983e-8bd9c1e19128": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008560937s
Aug  3 15:28:34.816: INFO: Pod "pod-72937d00-4798-46ae-983e-8bd9c1e19128": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012101438s
STEP: Saw pod success
Aug  3 15:28:34.816: INFO: Pod "pod-72937d00-4798-46ae-983e-8bd9c1e19128" satisfied condition "Succeeded or Failed"
Aug  3 15:28:34.817: INFO: Trying to get logs from node worker-0 pod pod-72937d00-4798-46ae-983e-8bd9c1e19128 container test-container: <nil>
STEP: delete the pod
Aug  3 15:28:34.836: INFO: Waiting for pod pod-72937d00-4798-46ae-983e-8bd9c1e19128 to disappear
Aug  3 15:28:34.838: INFO: Pod pod-72937d00-4798-46ae-983e-8bd9c1e19128 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:28:34.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1583" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":226,"skipped":4341,"failed":0}
SSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:34.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Aug  3 15:28:34.965: INFO: created test-pod-1
Aug  3 15:28:34.970: INFO: created test-pod-2
Aug  3 15:28:34.974: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Aug  3 15:28:34.974: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-2647' to be running and ready
Aug  3 15:28:34.983: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  3 15:28:34.983: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  3 15:28:34.983: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug  3 15:28:34.983: INFO: 0 / 3 pods in namespace 'pods-2647' are running and ready (0 seconds elapsed)
Aug  3 15:28:34.983: INFO: expected 0 pod replicas in namespace 'pods-2647', 0 are Running and Ready.
Aug  3 15:28:34.983: INFO: POD         NODE      PHASE    GRACE  CONDITIONS
Aug  3 15:28:34.983: INFO: test-pod-1  worker-0  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC  }]
Aug  3 15:28:34.983: INFO: test-pod-2  worker-0  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC  }]
Aug  3 15:28:34.983: INFO: test-pod-3  worker-0  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-03 15:28:34 +0000 UTC  }]
Aug  3 15:28:34.983: INFO: 
Aug  3 15:28:36.993: INFO: 3 / 3 pods in namespace 'pods-2647' are running and ready (2 seconds elapsed)
Aug  3 15:28:36.993: INFO: expected 0 pod replicas in namespace 'pods-2647', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Aug  3 15:28:37.007: INFO: Pod quantity 3 is different from expected quantity 0
Aug  3 15:28:38.010: INFO: Pod quantity 3 is different from expected quantity 0
Aug  3 15:28:39.012: INFO: Pod quantity 2 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 15:28:40.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2647" for this suite.

• [SLOW TEST:5.172 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":227,"skipped":4345,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:40.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2654
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:28:40.721: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  3 15:28:42.731: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:28:44.735: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:28:46.735: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:28:48.736: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:28:50.736: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 28, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:28:53.747: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug  3 15:28:53.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:28:53.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2654" for this suite.
STEP: Destroying namespace "webhook-2654-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.810 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":228,"skipped":4365,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:53.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3715
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:28:53.990: INFO: Waiting up to 5m0s for pod "downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b" in namespace "projected-3715" to be "Succeeded or Failed"
Aug  3 15:28:53.992: INFO: Pod "downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.443583ms
Aug  3 15:28:55.997: INFO: Pod "downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007457429s
Aug  3 15:28:58.001: INFO: Pod "downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011520433s
STEP: Saw pod success
Aug  3 15:28:58.001: INFO: Pod "downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b" satisfied condition "Succeeded or Failed"
Aug  3 15:28:58.003: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b container client-container: <nil>
STEP: delete the pod
Aug  3 15:28:58.013: INFO: Waiting for pod downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b to disappear
Aug  3 15:28:58.015: INFO: Pod downwardapi-volume-12764950-0043-4420-89f1-2c2913ba192b no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:28:58.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3715" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":229,"skipped":4393,"failed":0}
SSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:28:58.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4924
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Aug  3 15:29:38.180: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug  3 15:29:38.180: INFO: Deleting pod "simpletest.rc-2j2nq" in namespace "gc-4924"
W0803 15:29:38.180699      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  3 15:29:38.188: INFO: Deleting pod "simpletest.rc-2rfnk" in namespace "gc-4924"
Aug  3 15:29:38.195: INFO: Deleting pod "simpletest.rc-2sqls" in namespace "gc-4924"
Aug  3 15:29:38.211: INFO: Deleting pod "simpletest.rc-4mxh8" in namespace "gc-4924"
Aug  3 15:29:38.219: INFO: Deleting pod "simpletest.rc-4xxqn" in namespace "gc-4924"
Aug  3 15:29:38.227: INFO: Deleting pod "simpletest.rc-4z6rz" in namespace "gc-4924"
Aug  3 15:29:38.237: INFO: Deleting pod "simpletest.rc-54pl9" in namespace "gc-4924"
Aug  3 15:29:38.245: INFO: Deleting pod "simpletest.rc-55tf7" in namespace "gc-4924"
Aug  3 15:29:38.255: INFO: Deleting pod "simpletest.rc-5gdjd" in namespace "gc-4924"
Aug  3 15:29:38.271: INFO: Deleting pod "simpletest.rc-5jf67" in namespace "gc-4924"
Aug  3 15:29:38.277: INFO: Deleting pod "simpletest.rc-5jn5x" in namespace "gc-4924"
Aug  3 15:29:38.287: INFO: Deleting pod "simpletest.rc-5mxxd" in namespace "gc-4924"
Aug  3 15:29:38.297: INFO: Deleting pod "simpletest.rc-5p6m9" in namespace "gc-4924"
Aug  3 15:29:38.304: INFO: Deleting pod "simpletest.rc-5p958" in namespace "gc-4924"
Aug  3 15:29:38.310: INFO: Deleting pod "simpletest.rc-5tt7c" in namespace "gc-4924"
Aug  3 15:29:38.321: INFO: Deleting pod "simpletest.rc-5vh9h" in namespace "gc-4924"
Aug  3 15:29:38.328: INFO: Deleting pod "simpletest.rc-5whbg" in namespace "gc-4924"
Aug  3 15:29:38.336: INFO: Deleting pod "simpletest.rc-6m5hm" in namespace "gc-4924"
Aug  3 15:29:38.344: INFO: Deleting pod "simpletest.rc-6zpgv" in namespace "gc-4924"
Aug  3 15:29:38.360: INFO: Deleting pod "simpletest.rc-7jgzg" in namespace "gc-4924"
Aug  3 15:29:38.373: INFO: Deleting pod "simpletest.rc-7jlw4" in namespace "gc-4924"
Aug  3 15:29:38.379: INFO: Deleting pod "simpletest.rc-7wj8m" in namespace "gc-4924"
Aug  3 15:29:38.385: INFO: Deleting pod "simpletest.rc-82rxs" in namespace "gc-4924"
Aug  3 15:29:38.392: INFO: Deleting pod "simpletest.rc-8864z" in namespace "gc-4924"
Aug  3 15:29:38.399: INFO: Deleting pod "simpletest.rc-8m5qx" in namespace "gc-4924"
Aug  3 15:29:38.405: INFO: Deleting pod "simpletest.rc-8p9cp" in namespace "gc-4924"
Aug  3 15:29:38.411: INFO: Deleting pod "simpletest.rc-8q975" in namespace "gc-4924"
Aug  3 15:29:38.418: INFO: Deleting pod "simpletest.rc-8qkfs" in namespace "gc-4924"
Aug  3 15:29:38.424: INFO: Deleting pod "simpletest.rc-8wt2c" in namespace "gc-4924"
Aug  3 15:29:38.431: INFO: Deleting pod "simpletest.rc-94gs2" in namespace "gc-4924"
Aug  3 15:29:38.436: INFO: Deleting pod "simpletest.rc-952jw" in namespace "gc-4924"
Aug  3 15:29:38.443: INFO: Deleting pod "simpletest.rc-bblhc" in namespace "gc-4924"
Aug  3 15:29:38.450: INFO: Deleting pod "simpletest.rc-bckvq" in namespace "gc-4924"
Aug  3 15:29:38.455: INFO: Deleting pod "simpletest.rc-bctmd" in namespace "gc-4924"
Aug  3 15:29:38.462: INFO: Deleting pod "simpletest.rc-c894z" in namespace "gc-4924"
Aug  3 15:29:38.470: INFO: Deleting pod "simpletest.rc-c8kx2" in namespace "gc-4924"
Aug  3 15:29:38.476: INFO: Deleting pod "simpletest.rc-chjkq" in namespace "gc-4924"
Aug  3 15:29:38.483: INFO: Deleting pod "simpletest.rc-cll9p" in namespace "gc-4924"
Aug  3 15:29:38.488: INFO: Deleting pod "simpletest.rc-djflj" in namespace "gc-4924"
Aug  3 15:29:38.493: INFO: Deleting pod "simpletest.rc-dt52m" in namespace "gc-4924"
Aug  3 15:29:38.499: INFO: Deleting pod "simpletest.rc-f2q5k" in namespace "gc-4924"
Aug  3 15:29:38.509: INFO: Deleting pod "simpletest.rc-fdcjx" in namespace "gc-4924"
Aug  3 15:29:38.522: INFO: Deleting pod "simpletest.rc-fn7wm" in namespace "gc-4924"
Aug  3 15:29:38.529: INFO: Deleting pod "simpletest.rc-fqgps" in namespace "gc-4924"
Aug  3 15:29:38.534: INFO: Deleting pod "simpletest.rc-fs5jq" in namespace "gc-4924"
Aug  3 15:29:38.542: INFO: Deleting pod "simpletest.rc-ft4vz" in namespace "gc-4924"
Aug  3 15:29:38.548: INFO: Deleting pod "simpletest.rc-g2znb" in namespace "gc-4924"
Aug  3 15:29:38.554: INFO: Deleting pod "simpletest.rc-g5z6x" in namespace "gc-4924"
Aug  3 15:29:38.575: INFO: Deleting pod "simpletest.rc-g8ksd" in namespace "gc-4924"
Aug  3 15:29:38.585: INFO: Deleting pod "simpletest.rc-gdc2t" in namespace "gc-4924"
Aug  3 15:29:38.592: INFO: Deleting pod "simpletest.rc-gplp5" in namespace "gc-4924"
Aug  3 15:29:38.597: INFO: Deleting pod "simpletest.rc-h7qpd" in namespace "gc-4924"
Aug  3 15:29:38.606: INFO: Deleting pod "simpletest.rc-h8wfp" in namespace "gc-4924"
Aug  3 15:29:38.614: INFO: Deleting pod "simpletest.rc-hdhxf" in namespace "gc-4924"
Aug  3 15:29:38.620: INFO: Deleting pod "simpletest.rc-hm89n" in namespace "gc-4924"
Aug  3 15:29:38.625: INFO: Deleting pod "simpletest.rc-htk9z" in namespace "gc-4924"
Aug  3 15:29:38.631: INFO: Deleting pod "simpletest.rc-j8b8n" in namespace "gc-4924"
Aug  3 15:29:38.639: INFO: Deleting pod "simpletest.rc-jjc4m" in namespace "gc-4924"
Aug  3 15:29:38.681: INFO: Deleting pod "simpletest.rc-jmb79" in namespace "gc-4924"
Aug  3 15:29:38.722: INFO: Deleting pod "simpletest.rc-jqbg5" in namespace "gc-4924"
Aug  3 15:29:38.772: INFO: Deleting pod "simpletest.rc-khp5t" in namespace "gc-4924"
Aug  3 15:29:38.826: INFO: Deleting pod "simpletest.rc-khtvb" in namespace "gc-4924"
Aug  3 15:29:38.937: INFO: Deleting pod "simpletest.rc-krbqq" in namespace "gc-4924"
Aug  3 15:29:38.944: INFO: Deleting pod "simpletest.rc-ktfwr" in namespace "gc-4924"
Aug  3 15:29:38.976: INFO: Deleting pod "simpletest.rc-kw2lj" in namespace "gc-4924"
Aug  3 15:29:39.019: INFO: Deleting pod "simpletest.rc-kzcxr" in namespace "gc-4924"
Aug  3 15:29:39.069: INFO: Deleting pod "simpletest.rc-l6cw5" in namespace "gc-4924"
Aug  3 15:29:39.121: INFO: Deleting pod "simpletest.rc-lhq7t" in namespace "gc-4924"
Aug  3 15:29:39.169: INFO: Deleting pod "simpletest.rc-lqbjg" in namespace "gc-4924"
Aug  3 15:29:39.219: INFO: Deleting pod "simpletest.rc-lrb87" in namespace "gc-4924"
Aug  3 15:29:39.270: INFO: Deleting pod "simpletest.rc-lx7vt" in namespace "gc-4924"
Aug  3 15:29:39.320: INFO: Deleting pod "simpletest.rc-m8nlq" in namespace "gc-4924"
Aug  3 15:29:39.372: INFO: Deleting pod "simpletest.rc-mkcqw" in namespace "gc-4924"
Aug  3 15:29:39.419: INFO: Deleting pod "simpletest.rc-mkw6d" in namespace "gc-4924"
Aug  3 15:29:39.479: INFO: Deleting pod "simpletest.rc-mmt9w" in namespace "gc-4924"
Aug  3 15:29:39.520: INFO: Deleting pod "simpletest.rc-mxhnr" in namespace "gc-4924"
Aug  3 15:29:39.569: INFO: Deleting pod "simpletest.rc-nrw5q" in namespace "gc-4924"
Aug  3 15:29:39.618: INFO: Deleting pod "simpletest.rc-p6lgb" in namespace "gc-4924"
Aug  3 15:29:39.684: INFO: Deleting pod "simpletest.rc-qglsl" in namespace "gc-4924"
Aug  3 15:29:39.721: INFO: Deleting pod "simpletest.rc-qrnvn" in namespace "gc-4924"
Aug  3 15:29:39.770: INFO: Deleting pod "simpletest.rc-rlrpr" in namespace "gc-4924"
Aug  3 15:29:39.826: INFO: Deleting pod "simpletest.rc-spr4j" in namespace "gc-4924"
Aug  3 15:29:39.869: INFO: Deleting pod "simpletest.rc-ssbwl" in namespace "gc-4924"
Aug  3 15:29:39.919: INFO: Deleting pod "simpletest.rc-tgjvt" in namespace "gc-4924"
Aug  3 15:29:39.973: INFO: Deleting pod "simpletest.rc-tnd2m" in namespace "gc-4924"
Aug  3 15:29:40.019: INFO: Deleting pod "simpletest.rc-tr8zh" in namespace "gc-4924"
Aug  3 15:29:40.072: INFO: Deleting pod "simpletest.rc-tsmhc" in namespace "gc-4924"
Aug  3 15:29:40.121: INFO: Deleting pod "simpletest.rc-v2r4c" in namespace "gc-4924"
Aug  3 15:29:40.175: INFO: Deleting pod "simpletest.rc-v4v8m" in namespace "gc-4924"
Aug  3 15:29:40.223: INFO: Deleting pod "simpletest.rc-vjkdd" in namespace "gc-4924"
Aug  3 15:29:40.270: INFO: Deleting pod "simpletest.rc-vns9t" in namespace "gc-4924"
Aug  3 15:29:40.320: INFO: Deleting pod "simpletest.rc-w529k" in namespace "gc-4924"
Aug  3 15:29:40.373: INFO: Deleting pod "simpletest.rc-w7fzt" in namespace "gc-4924"
Aug  3 15:29:40.419: INFO: Deleting pod "simpletest.rc-wpr6c" in namespace "gc-4924"
Aug  3 15:29:40.472: INFO: Deleting pod "simpletest.rc-wtd9t" in namespace "gc-4924"
Aug  3 15:29:40.518: INFO: Deleting pod "simpletest.rc-wth5z" in namespace "gc-4924"
Aug  3 15:29:40.570: INFO: Deleting pod "simpletest.rc-x8p9h" in namespace "gc-4924"
Aug  3 15:29:40.621: INFO: Deleting pod "simpletest.rc-z7vvp" in namespace "gc-4924"
Aug  3 15:29:40.672: INFO: Deleting pod "simpletest.rc-zjzhl" in namespace "gc-4924"
Aug  3 15:29:40.731: INFO: Deleting pod "simpletest.rc-zwr9d" in namespace "gc-4924"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  3 15:29:40.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4924" for this suite.

• [SLOW TEST:42.846 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":230,"skipped":4396,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:40.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5972
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Aug  3 15:29:40.999: INFO: Waiting up to 5m0s for pod "pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75" in namespace "emptydir-5972" to be "Succeeded or Failed"
Aug  3 15:29:41.001: INFO: Pod "pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.249902ms
Aug  3 15:29:43.007: INFO: Pod "pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007747003s
Aug  3 15:29:45.010: INFO: Pod "pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01130777s
STEP: Saw pod success
Aug  3 15:29:45.010: INFO: Pod "pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75" satisfied condition "Succeeded or Failed"
Aug  3 15:29:45.012: INFO: Trying to get logs from node worker-0 pod pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75 container test-container: <nil>
STEP: delete the pod
Aug  3 15:29:45.023: INFO: Waiting for pod pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75 to disappear
Aug  3 15:29:45.025: INFO: Pod pod-fabdbff0-fe80-424b-90cd-a6efcb96ca75 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:29:45.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5972" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4406,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:45.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8582
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  3 15:29:47.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8582" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":232,"skipped":4419,"failed":0}
S
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:47.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-6781
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  3 15:29:47.325: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  3 15:29:47.327: INFO: starting watch
STEP: patching
STEP: updating
Aug  3 15:29:47.336: INFO: waiting for watch events with expected annotations
Aug  3 15:29:47.336: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  3 15:29:47.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-6781" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":233,"skipped":4420,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:47.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1641
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug  3 15:29:47.497: INFO: The status of Pod labelsupdate70f68347-c557-4e02-ac04-12c6633f2bcb is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:29:49.504: INFO: The status of Pod labelsupdate70f68347-c557-4e02-ac04-12c6633f2bcb is Running (Ready = true)
Aug  3 15:29:50.021: INFO: Successfully updated pod "labelsupdate70f68347-c557-4e02-ac04-12c6633f2bcb"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:29:52.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1641" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":234,"skipped":4440,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:52.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7005
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Aug  3 15:29:52.164: INFO: Waiting up to 5m0s for pod "test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51" in namespace "svcaccounts-7005" to be "Succeeded or Failed"
Aug  3 15:29:52.166: INFO: Pod "test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.18858ms
Aug  3 15:29:54.172: INFO: Pod "test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008077932s
Aug  3 15:29:56.178: INFO: Pod "test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013455544s
STEP: Saw pod success
Aug  3 15:29:56.178: INFO: Pod "test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51" satisfied condition "Succeeded or Failed"
Aug  3 15:29:56.180: INFO: Trying to get logs from node worker-0 pod test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:29:56.189: INFO: Waiting for pod test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51 to disappear
Aug  3 15:29:56.191: INFO: Pod test-pod-e0fb912b-ea35-4939-90e9-e6b5a77fbf51 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 15:29:56.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7005" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":235,"skipped":4516,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:29:56.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5925
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-eb2c70de-7794-49f5-b2f2-095b46f697ef
STEP: Creating a pod to test consume secrets
Aug  3 15:29:56.326: INFO: Waiting up to 5m0s for pod "pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890" in namespace "secrets-5925" to be "Succeeded or Failed"
Aug  3 15:29:56.328: INFO: Pod "pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890": Phase="Pending", Reason="", readiness=false. Elapsed: 2.217267ms
Aug  3 15:29:58.331: INFO: Pod "pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005186302s
Aug  3 15:30:00.336: INFO: Pod "pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009960633s
STEP: Saw pod success
Aug  3 15:30:00.336: INFO: Pod "pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890" satisfied condition "Succeeded or Failed"
Aug  3 15:30:00.338: INFO: Trying to get logs from node worker-0 pod pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890 container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:30:00.349: INFO: Waiting for pod pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890 to disappear
Aug  3 15:30:00.351: INFO: Pod pod-secrets-f2673caf-a59e-4c57-90d8-9ffdc4d53890 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:30:00.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5925" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":236,"skipped":4529,"failed":0}

------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:00.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1477
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-1477
STEP: creating replication controller externalsvc in namespace services-1477
I0803 15:30:00.532103      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1477, replica count: 2
I0803 15:30:03.583529      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug  3 15:30:03.601: INFO: Creating new exec pod
Aug  3 15:30:05.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-1477 exec execpodzg9kj -- /bin/sh -x -c nslookup clusterip-service.services-1477.svc.cluster.local'
Aug  3 15:30:05.752: INFO: stderr: "+ nslookup clusterip-service.services-1477.svc.cluster.local\n"
Aug  3 15:30:05.752: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-1477.svc.cluster.local\tcanonical name = externalsvc.services-1477.svc.cluster.local.\nName:\texternalsvc.services-1477.svc.cluster.local\nAddress: 10.106.21.250\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-1477, will wait for the garbage collector to delete the pods
Aug  3 15:30:05.809: INFO: Deleting ReplicationController externalsvc took: 3.693382ms
Aug  3 15:30:05.910: INFO: Terminating ReplicationController externalsvc pods took: 100.707967ms
Aug  3 15:30:07.424: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:30:07.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1477" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.139 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":237,"skipped":4529,"failed":0}
SSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:07.496: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-7606
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7606.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7606.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7606.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7606.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 15:30:09.690: INFO: DNS probes using dns-7606/dns-test-834434a3-21fa-4cf6-8b03-b640eb8afb32 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 15:30:09.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7606" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":238,"skipped":4534,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:09.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1277
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:30:09.824: INFO: Waiting up to 5m0s for pod "downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c" in namespace "downward-api-1277" to be "Succeeded or Failed"
Aug  3 15:30:09.827: INFO: Pod "downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.283459ms
Aug  3 15:30:11.829: INFO: Pod "downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005011112s
Aug  3 15:30:13.837: INFO: Pod "downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012500606s
STEP: Saw pod success
Aug  3 15:30:13.837: INFO: Pod "downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c" satisfied condition "Succeeded or Failed"
Aug  3 15:30:13.839: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c container client-container: <nil>
STEP: delete the pod
Aug  3 15:30:13.851: INFO: Waiting for pod downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c to disappear
Aug  3 15:30:13.852: INFO: Pod downwardapi-volume-565b00ba-5e4c-4eee-9740-ec22b8d4754c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:30:13.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1277" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4541,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:13.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2240
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Aug  3 15:30:24.001: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0803 15:30:24.001019      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  3 15:30:24.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2240" for this suite.

• [SLOW TEST:10.148 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":240,"skipped":4545,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:24.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:30:24.141: INFO: created pod
Aug  3 15:30:24.141: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-3075" to be "Succeeded or Failed"
Aug  3 15:30:24.143: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.163587ms
Aug  3 15:30:26.149: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008334366s
Aug  3 15:30:28.157: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015613667s
STEP: Saw pod success
Aug  3 15:30:28.157: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug  3 15:30:58.160: INFO: polling logs
Aug  3 15:30:58.165: INFO: Pod logs: 
I0803 15:30:24.661806       1 log.go:195] OK: Got token
I0803 15:30:24.661845       1 log.go:195] validating with in-cluster discovery
I0803 15:30:24.662179       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0803 15:30:24.662222       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3075:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659541224, NotBefore:1659540624, IssuedAt:1659540624, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3075", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"56740773-265e-427c-9e0a-971fbd772608"}}}
I0803 15:30:24.671212       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0803 15:30:24.672376       1 log.go:195] OK: Validated signature on JWT
I0803 15:30:24.672478       1 log.go:195] OK: Got valid claims from token!
I0803 15:30:24.672529       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3075:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659541224, NotBefore:1659540624, IssuedAt:1659540624, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3075", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"56740773-265e-427c-9e0a-971fbd772608"}}}

Aug  3 15:30:58.165: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 15:30:58.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3075" for this suite.

• [SLOW TEST:34.174 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":241,"skipped":4560,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:30:58.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-098b3bf7-0d9a-4def-ba27-68805c2aee9b
STEP: Creating a pod to test consume configMaps
Aug  3 15:30:58.312: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568" in namespace "projected-9565" to be "Succeeded or Failed"
Aug  3 15:30:58.315: INFO: Pod "pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568": Phase="Pending", Reason="", readiness=false. Elapsed: 2.73398ms
Aug  3 15:31:00.320: INFO: Pod "pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008089829s
Aug  3 15:31:02.325: INFO: Pod "pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013036351s
STEP: Saw pod success
Aug  3 15:31:02.325: INFO: Pod "pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568" satisfied condition "Succeeded or Failed"
Aug  3 15:31:02.327: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug  3 15:31:02.348: INFO: Waiting for pod pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568 to disappear
Aug  3 15:31:02.349: INFO: Pod pod-projected-configmaps-ccebc4c5-0c82-42ff-b1e5-b01e2e83b568 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 15:31:02.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9565" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":242,"skipped":4580,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:31:02.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-204
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug  3 15:31:02.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 create -f -'
Aug  3 15:31:03.228: INFO: stderr: ""
Aug  3 15:31:03.228: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug  3 15:31:03.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 15:31:03.292: INFO: stderr: ""
Aug  3 15:31:03.292: INFO: stdout: "update-demo-nautilus-6v88p update-demo-nautilus-8q4hj "
Aug  3 15:31:03.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods update-demo-nautilus-6v88p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 15:31:03.344: INFO: stderr: ""
Aug  3 15:31:03.344: INFO: stdout: ""
Aug  3 15:31:03.344: INFO: update-demo-nautilus-6v88p is created but not running
Aug  3 15:31:08.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug  3 15:31:08.406: INFO: stderr: ""
Aug  3 15:31:08.406: INFO: stdout: "update-demo-nautilus-6v88p update-demo-nautilus-8q4hj "
Aug  3 15:31:08.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods update-demo-nautilus-6v88p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 15:31:08.455: INFO: stderr: ""
Aug  3 15:31:08.455: INFO: stdout: "true"
Aug  3 15:31:08.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods update-demo-nautilus-6v88p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 15:31:08.505: INFO: stderr: ""
Aug  3 15:31:08.505: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 15:31:08.505: INFO: validating pod update-demo-nautilus-6v88p
Aug  3 15:31:08.510: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 15:31:08.510: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 15:31:08.510: INFO: update-demo-nautilus-6v88p is verified up and running
Aug  3 15:31:08.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods update-demo-nautilus-8q4hj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug  3 15:31:08.558: INFO: stderr: ""
Aug  3 15:31:08.558: INFO: stdout: "true"
Aug  3 15:31:08.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods update-demo-nautilus-8q4hj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug  3 15:31:08.606: INFO: stderr: ""
Aug  3 15:31:08.606: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug  3 15:31:08.606: INFO: validating pod update-demo-nautilus-8q4hj
Aug  3 15:31:08.611: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug  3 15:31:08.611: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug  3 15:31:08.611: INFO: update-demo-nautilus-8q4hj is verified up and running
STEP: using delete to clean up resources
Aug  3 15:31:08.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 delete --grace-period=0 --force -f -'
Aug  3 15:31:08.663: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug  3 15:31:08.663: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug  3 15:31:08.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get rc,svc -l name=update-demo --no-headers'
Aug  3 15:31:08.730: INFO: stderr: "No resources found in kubectl-204 namespace.\n"
Aug  3 15:31:08.730: INFO: stdout: ""
Aug  3 15:31:08.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-204 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug  3 15:31:08.792: INFO: stderr: ""
Aug  3 15:31:08.792: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:31:08.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-204" for this suite.

• [SLOW TEST:6.442 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":243,"skipped":4626,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:31:08.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2260
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug  3 15:31:08.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug  3 15:31:19.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:31:21.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:31:30.200: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2260" for this suite.

• [SLOW TEST:21.416 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":244,"skipped":4636,"failed":0}
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:31:30.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5824
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Aug  3 15:33:30.864: INFO: Successfully updated pod "var-expansion-627a401e-d281-4091-a794-63da77d66e78"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug  3 15:33:32.872: INFO: Deleting pod "var-expansion-627a401e-d281-4091-a794-63da77d66e78" in namespace "var-expansion-5824"
Aug  3 15:33:32.877: INFO: Wait up to 5m0s for pod "var-expansion-627a401e-d281-4091-a794-63da77d66e78" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 15:34:04.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5824" for this suite.

• [SLOW TEST:154.673 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":245,"skipped":4636,"failed":0}
S
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:34:04.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2084
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d in namespace container-probe-2084
Aug  3 15:34:07.025: INFO: Started pod liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d in namespace container-probe-2084
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 15:34:07.027: INFO: Initial restart count of pod liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is 0
Aug  3 15:34:17.057: INFO: Restart count of pod container-probe-2084/liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is now 1 (10.029966697s elapsed)
Aug  3 15:34:37.116: INFO: Restart count of pod container-probe-2084/liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is now 2 (30.088959385s elapsed)
Aug  3 15:34:57.177: INFO: Restart count of pod container-probe-2084/liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is now 3 (50.14983861s elapsed)
Aug  3 15:35:17.244: INFO: Restart count of pod container-probe-2084/liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is now 4 (1m10.216838799s elapsed)
Aug  3 15:36:21.453: INFO: Restart count of pod container-probe-2084/liveness-73fa44fc-293b-400a-bb79-4c2aed84d82d is now 5 (2m14.426321209s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 15:36:21.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2084" for this suite.

• [SLOW TEST:136.579 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":246,"skipped":4637,"failed":0}
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:21.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-9461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  3 15:36:21.598: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:36:23.604: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  3 15:36:23.613: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:36:25.618: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug  3 15:36:25.623: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug  3 15:36:25.625: INFO: Pod pod-with-prestop-http-hook still exists
Aug  3 15:36:27.626: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug  3 15:36:27.630: INFO: Pod pod-with-prestop-http-hook still exists
Aug  3 15:36:29.627: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug  3 15:36:29.634: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  3 15:36:29.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-9461" for this suite.

• [SLOW TEST:8.188 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":247,"skipped":4639,"failed":0}
SSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:29.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-7037
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Aug  3 15:36:29.780: INFO: Major version: 1
STEP: Confirm minor version
Aug  3 15:36:29.780: INFO: cleanMinorVersion: 24
Aug  3 15:36:29.780: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Aug  3 15:36:29.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-7037" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":248,"skipped":4643,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:29.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5842
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:36:30.346: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:36:33.362: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:36:33.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-351-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:36:36.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5842" for this suite.
STEP: Destroying namespace "webhook-5842-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.767 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":249,"skipped":4654,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:36.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3042
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug  3 15:36:36.679: INFO: Waiting up to 5m0s for pod "pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9" in namespace "emptydir-3042" to be "Succeeded or Failed"
Aug  3 15:36:36.684: INFO: Pod "pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.140563ms
Aug  3 15:36:38.690: INFO: Pod "pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010455248s
Aug  3 15:36:40.694: INFO: Pod "pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014271586s
STEP: Saw pod success
Aug  3 15:36:40.694: INFO: Pod "pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9" satisfied condition "Succeeded or Failed"
Aug  3 15:36:40.695: INFO: Trying to get logs from node worker-0 pod pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9 container test-container: <nil>
STEP: delete the pod
Aug  3 15:36:40.707: INFO: Waiting for pod pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9 to disappear
Aug  3 15:36:40.708: INFO: Pod pod-d497e9f7-bd62-4b8f-bbc8-6b7f2f2171e9 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:36:40.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3042" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":250,"skipped":4658,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:40.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-8762
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:36:41.357: INFO: Checking APIGroup: apiregistration.k8s.io
Aug  3 15:36:41.358: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug  3 15:36:41.358: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug  3 15:36:41.358: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug  3 15:36:41.358: INFO: Checking APIGroup: apps
Aug  3 15:36:41.358: INFO: PreferredVersion.GroupVersion: apps/v1
Aug  3 15:36:41.358: INFO: Versions found [{apps/v1 v1}]
Aug  3 15:36:41.358: INFO: apps/v1 matches apps/v1
Aug  3 15:36:41.358: INFO: Checking APIGroup: events.k8s.io
Aug  3 15:36:41.359: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug  3 15:36:41.359: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.359: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug  3 15:36:41.359: INFO: Checking APIGroup: authentication.k8s.io
Aug  3 15:36:41.360: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug  3 15:36:41.360: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug  3 15:36:41.360: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug  3 15:36:41.360: INFO: Checking APIGroup: authorization.k8s.io
Aug  3 15:36:41.361: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug  3 15:36:41.361: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug  3 15:36:41.361: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug  3 15:36:41.361: INFO: Checking APIGroup: autoscaling
Aug  3 15:36:41.362: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug  3 15:36:41.362: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug  3 15:36:41.362: INFO: autoscaling/v2 matches autoscaling/v2
Aug  3 15:36:41.362: INFO: Checking APIGroup: batch
Aug  3 15:36:41.362: INFO: PreferredVersion.GroupVersion: batch/v1
Aug  3 15:36:41.362: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug  3 15:36:41.362: INFO: batch/v1 matches batch/v1
Aug  3 15:36:41.362: INFO: Checking APIGroup: certificates.k8s.io
Aug  3 15:36:41.363: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug  3 15:36:41.363: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug  3 15:36:41.363: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug  3 15:36:41.363: INFO: Checking APIGroup: networking.k8s.io
Aug  3 15:36:41.364: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug  3 15:36:41.364: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug  3 15:36:41.364: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug  3 15:36:41.364: INFO: Checking APIGroup: policy
Aug  3 15:36:41.365: INFO: PreferredVersion.GroupVersion: policy/v1
Aug  3 15:36:41.365: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug  3 15:36:41.365: INFO: policy/v1 matches policy/v1
Aug  3 15:36:41.365: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug  3 15:36:41.365: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug  3 15:36:41.365: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug  3 15:36:41.365: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug  3 15:36:41.365: INFO: Checking APIGroup: storage.k8s.io
Aug  3 15:36:41.366: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug  3 15:36:41.366: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.366: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug  3 15:36:41.366: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug  3 15:36:41.367: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug  3 15:36:41.367: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug  3 15:36:41.367: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug  3 15:36:41.367: INFO: Checking APIGroup: apiextensions.k8s.io
Aug  3 15:36:41.368: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug  3 15:36:41.368: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug  3 15:36:41.368: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug  3 15:36:41.368: INFO: Checking APIGroup: scheduling.k8s.io
Aug  3 15:36:41.369: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug  3 15:36:41.369: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug  3 15:36:41.369: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug  3 15:36:41.369: INFO: Checking APIGroup: coordination.k8s.io
Aug  3 15:36:41.369: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug  3 15:36:41.369: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug  3 15:36:41.369: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug  3 15:36:41.369: INFO: Checking APIGroup: node.k8s.io
Aug  3 15:36:41.370: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug  3 15:36:41.370: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.370: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug  3 15:36:41.370: INFO: Checking APIGroup: discovery.k8s.io
Aug  3 15:36:41.371: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug  3 15:36:41.371: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.371: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug  3 15:36:41.371: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug  3 15:36:41.372: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug  3 15:36:41.372: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.372: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug  3 15:36:41.372: INFO: Checking APIGroup: helm.k0sproject.io
Aug  3 15:36:41.372: INFO: PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
Aug  3 15:36:41.372: INFO: Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
Aug  3 15:36:41.373: INFO: helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
Aug  3 15:36:41.373: INFO: Checking APIGroup: autopilot.k0sproject.io
Aug  3 15:36:41.373: INFO: PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
Aug  3 15:36:41.373: INFO: Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
Aug  3 15:36:41.373: INFO: autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
Aug  3 15:36:41.373: INFO: Checking APIGroup: metrics.k8s.io
Aug  3 15:36:41.374: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug  3 15:36:41.374: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug  3 15:36:41.374: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Aug  3 15:36:41.374: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-8762" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":251,"skipped":4665,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:41.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug  3 15:36:41.511: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24594 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 15:36:41.511: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24595 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 15:36:41.511: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24596 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug  3 15:36:51.533: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24648 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 15:36:51.533: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24649 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 15:36:51.533: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4090  e02ed8ae-a437-4b90-8716-1338e9eedbff 24650 0 2022-08-03 15:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-03 15:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  3 15:36:51.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4090" for this suite.

• [SLOW TEST:10.158 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":252,"skipped":4666,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:51.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4579
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-5cd1cef9-12a2-4e66-911e-2b65d0438d09
STEP: Creating a pod to test consume secrets
Aug  3 15:36:51.667: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52" in namespace "projected-4579" to be "Succeeded or Failed"
Aug  3 15:36:51.669: INFO: Pod "pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004469ms
Aug  3 15:36:53.675: INFO: Pod "pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007722736s
Aug  3 15:36:55.679: INFO: Pod "pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012320805s
STEP: Saw pod success
Aug  3 15:36:55.679: INFO: Pod "pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52" satisfied condition "Succeeded or Failed"
Aug  3 15:36:55.681: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:36:55.693: INFO: Waiting for pod pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52 to disappear
Aug  3 15:36:55.695: INFO: Pod pod-projected-secrets-2c3e3436-9dc9-4aee-9f4a-0a362740ad52 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 15:36:55.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4579" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4680,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:55.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7858
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-3f6c55b2-331b-4ced-8cab-96050ad364e0
STEP: Creating a pod to test consume configMaps
Aug  3 15:36:55.825: INFO: Waiting up to 5m0s for pod "pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf" in namespace "configmap-7858" to be "Succeeded or Failed"
Aug  3 15:36:55.827: INFO: Pod "pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.219689ms
Aug  3 15:36:57.835: INFO: Pod "pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00953423s
Aug  3 15:36:59.838: INFO: Pod "pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012878364s
STEP: Saw pod success
Aug  3 15:36:59.838: INFO: Pod "pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf" satisfied condition "Succeeded or Failed"
Aug  3 15:36:59.840: INFO: Trying to get logs from node worker-0 pod pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:36:59.852: INFO: Waiting for pod pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf to disappear
Aug  3 15:36:59.853: INFO: Pod pod-configmaps-4ac8b403-fb59-4c6f-b68f-0bd53722efcf no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:36:59.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7858" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":254,"skipped":4726,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:36:59.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Aug  3 15:36:59.988: INFO: Found Service test-service-b4n85 in namespace services-3017 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug  3 15:36:59.988: INFO: Service test-service-b4n85 created
STEP: Getting /status
Aug  3 15:36:59.991: INFO: Service test-service-b4n85 has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug  3 15:36:59.995: INFO: observed Service test-service-b4n85 in namespace services-3017 with annotations: map[] & LoadBalancer: {[]}
Aug  3 15:36:59.995: INFO: Found Service test-service-b4n85 in namespace services-3017 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug  3 15:36:59.995: INFO: Service test-service-b4n85 has service status patched
STEP: updating the ServiceStatus
Aug  3 15:37:00.000: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug  3 15:37:00.002: INFO: Observed Service test-service-b4n85 in namespace services-3017 with annotations: map[] & Conditions: {[]}
Aug  3 15:37:00.002: INFO: Observed event: &Service{ObjectMeta:{test-service-b4n85  services-3017  84270b7c-c8ff-464d-b064-a55498a5698f 24716 0 2022-08-03 15:36:59 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-03 15:36:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-03 15:36:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.99.64.109,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.99.64.109],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug  3 15:37:00.002: INFO: Found Service test-service-b4n85 in namespace services-3017 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug  3 15:37:00.002: INFO: Service test-service-b4n85 has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug  3 15:37:00.013: INFO: observed Service test-service-b4n85 in namespace services-3017 with labels: map[test-service-static:true]
Aug  3 15:37:00.013: INFO: observed Service test-service-b4n85 in namespace services-3017 with labels: map[test-service-static:true]
Aug  3 15:37:00.013: INFO: observed Service test-service-b4n85 in namespace services-3017 with labels: map[test-service-static:true]
Aug  3 15:37:00.013: INFO: Found Service test-service-b4n85 in namespace services-3017 with labels: map[test-service:patched test-service-static:true]
Aug  3 15:37:00.013: INFO: Service test-service-b4n85 patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug  3 15:37:00.022: INFO: Observed event: ADDED
Aug  3 15:37:00.022: INFO: Observed event: MODIFIED
Aug  3 15:37:00.022: INFO: Observed event: MODIFIED
Aug  3 15:37:00.022: INFO: Observed event: MODIFIED
Aug  3 15:37:00.022: INFO: Found Service test-service-b4n85 in namespace services-3017 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug  3 15:37:00.022: INFO: Service test-service-b4n85 deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:37:00.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3017" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":255,"skipped":4730,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:00.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-331
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Aug  3 15:37:00.153: INFO: Creating simple deployment test-deployment-rlsxv
Aug  3 15:37:00.160: INFO: deployment "test-deployment-rlsxv" doesn't have the required revision set
STEP: Getting /status
Aug  3 15:37:02.171: INFO: Deployment test-deployment-rlsxv has Conditions: [{Available True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rlsxv-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Aug  3 15:37:02.177: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 37, 1, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 37, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 37, 1, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 37, 0, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-rlsxv-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug  3 15:37:02.179: INFO: Observed &Deployment event: ADDED
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rlsxv-688c4d6789"}
Aug  3 15:37:02.179: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rlsxv-688c4d6789"}
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  3 15:37:02.179: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-rlsxv-688c4d6789" is progressing.}
Aug  3 15:37:02.179: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  3 15:37:02.179: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rlsxv-688c4d6789" has successfully progressed.}
Aug  3 15:37:02.180: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.180: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  3 15:37:02.180: INFO: Observed Deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rlsxv-688c4d6789" has successfully progressed.}
Aug  3 15:37:02.180: INFO: Found Deployment test-deployment-rlsxv in namespace deployment-331 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  3 15:37:02.180: INFO: Deployment test-deployment-rlsxv has an updated status
STEP: patching the Statefulset Status
Aug  3 15:37:02.180: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  3 15:37:02.184: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug  3 15:37:02.185: INFO: Observed &Deployment event: ADDED
Aug  3 15:37:02.185: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rlsxv-688c4d6789"}
Aug  3 15:37:02.185: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.185: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-rlsxv-688c4d6789"}
Aug  3 15:37:02.185: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  3 15:37:02.185: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.185: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug  3 15:37:02.185: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:00 +0000 UTC 2022-08-03 15:37:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-rlsxv-688c4d6789" is progressing.}
Aug  3 15:37:02.186: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.186: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  3 15:37:02.186: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rlsxv-688c4d6789" has successfully progressed.}
Aug  3 15:37:02.186: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.186: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug  3 15:37:02.186: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-03 15:37:01 +0000 UTC 2022-08-03 15:37:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-rlsxv-688c4d6789" has successfully progressed.}
Aug  3 15:37:02.186: INFO: Observed deployment test-deployment-rlsxv in namespace deployment-331 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  3 15:37:02.186: INFO: Observed &Deployment event: MODIFIED
Aug  3 15:37:02.186: INFO: Found deployment test-deployment-rlsxv in namespace deployment-331 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug  3 15:37:02.186: INFO: Deployment test-deployment-rlsxv has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 15:37:02.189: INFO: Deployment "test-deployment-rlsxv":
&Deployment{ObjectMeta:{test-deployment-rlsxv  deployment-331  449fc0f4-356c-4605-be4a-656dbcd7f9ff 24759 1 2022-08-03 15:37:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-03 15:37:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 15:37:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2022-08-03 15:37:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0029f4378 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug  3 15:37:02.191: INFO: New ReplicaSet "test-deployment-rlsxv-688c4d6789" of Deployment "test-deployment-rlsxv":
&ReplicaSet{ObjectMeta:{test-deployment-rlsxv-688c4d6789  deployment-331  6318af0d-929d-47e9-88e7-085c1db0c7ec 24755 1 2022-08-03 15:37:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-rlsxv 449fc0f4-356c-4605-be4a-656dbcd7f9ff 0xc00451b177 0xc00451b178}] []  [{kube-controller-manager Update apps/v1 2022-08-03 15:37:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"449fc0f4-356c-4605-be4a-656dbcd7f9ff\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 15:37:01 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00451b228 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug  3 15:37:02.194: INFO: Pod "test-deployment-rlsxv-688c4d6789-lqjvm" is available:
&Pod{ObjectMeta:{test-deployment-rlsxv-688c4d6789-lqjvm test-deployment-rlsxv-688c4d6789- deployment-331  42d5dcc7-ff6e-44f7-8104-6395a95c1735 24754 0 2022-08-03 15:37:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-deployment-rlsxv-688c4d6789 6318af0d-929d-47e9-88e7-085c1db0c7ec 0xc0041f0900 0xc0041f0901}] []  [{kube-controller-manager Update v1 2022-08-03 15:37:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6318af0d-929d-47e9-88e7-085c1db0c7ec\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 15:37:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.107\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p66g5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p66g5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:37:00 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:37:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:37:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:37:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.107,StartTime:2022-08-03 15:37:00 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 15:37:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://d0d5256c01f858d9873ff6c5374f958926dccbaef0b67aac3851fbbe6bad9c45,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.107,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 15:37:02.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-331" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":256,"skipped":4751,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:02.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:37:02.780: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:37:05.848: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:37:05.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:37:09.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6647" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.834 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":257,"skipped":4762,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:09.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-6812
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug  3 15:37:09.162: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug  3 15:37:09.166: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug  3 15:37:09.166: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug  3 15:37:09.172: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug  3 15:37:09.172: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug  3 15:37:09.179: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug  3 15:37:09.179: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug  3 15:37:16.208: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Aug  3 15:37:16.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-6812" for this suite.

• [SLOW TEST:7.184 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":258,"skipped":4781,"failed":0}
S
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:16.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-4136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug  3 15:37:18.858: INFO: Successfully updated pod "adopt-release-94jkc"
STEP: Checking that the Job readopts the Pod
Aug  3 15:37:18.858: INFO: Waiting up to 15m0s for pod "adopt-release-94jkc" in namespace "job-4136" to be "adopted"
Aug  3 15:37:18.860: INFO: Pod "adopt-release-94jkc": Phase="Running", Reason="", readiness=true. Elapsed: 2.074035ms
Aug  3 15:37:20.865: INFO: Pod "adopt-release-94jkc": Phase="Running", Reason="", readiness=true. Elapsed: 2.00721333s
Aug  3 15:37:20.865: INFO: Pod "adopt-release-94jkc" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug  3 15:37:21.377: INFO: Successfully updated pod "adopt-release-94jkc"
STEP: Checking that the Job releases the Pod
Aug  3 15:37:21.377: INFO: Waiting up to 15m0s for pod "adopt-release-94jkc" in namespace "job-4136" to be "released"
Aug  3 15:37:21.378: INFO: Pod "adopt-release-94jkc": Phase="Running", Reason="", readiness=true. Elapsed: 1.873325ms
Aug  3 15:37:23.384: INFO: Pod "adopt-release-94jkc": Phase="Running", Reason="", readiness=true. Elapsed: 2.007873212s
Aug  3 15:37:23.384: INFO: Pod "adopt-release-94jkc" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug  3 15:37:23.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-4136" for this suite.

• [SLOW TEST:7.172 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":259,"skipped":4782,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:23.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-8671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  3 15:37:23.524: INFO: starting watch
STEP: patching
STEP: updating
Aug  3 15:37:23.530: INFO: waiting for watch events with expected annotations
Aug  3 15:37:23.530: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Aug  3 15:37:23.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-8671" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":260,"skipped":4803,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:23.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2048
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-aa7911ec-b823-41ef-b398-a29ba5ae25ad
STEP: Creating a pod to test consume secrets
Aug  3 15:37:23.673: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af" in namespace "projected-2048" to be "Succeeded or Failed"
Aug  3 15:37:23.676: INFO: Pod "pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.29868ms
Aug  3 15:37:25.681: INFO: Pod "pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007771362s
Aug  3 15:37:27.689: INFO: Pod "pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015209884s
STEP: Saw pod success
Aug  3 15:37:27.689: INFO: Pod "pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af" satisfied condition "Succeeded or Failed"
Aug  3 15:37:27.690: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:37:27.701: INFO: Waiting for pod pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af to disappear
Aug  3 15:37:27.702: INFO: Pod pod-projected-secrets-88145a1b-371b-4410-b1cf-f62bf30dc4af no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 15:37:27.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2048" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":261,"skipped":4811,"failed":0}
S
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:27.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3524
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-5210fa49-316e-4002-b45e-ac6f34f42467
STEP: Creating a pod to test consume secrets
Aug  3 15:37:27.844: INFO: Waiting up to 5m0s for pod "pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c" in namespace "secrets-3524" to be "Succeeded or Failed"
Aug  3 15:37:27.846: INFO: Pod "pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.445325ms
Aug  3 15:37:29.849: INFO: Pod "pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005089036s
Aug  3 15:37:31.853: INFO: Pod "pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009270276s
STEP: Saw pod success
Aug  3 15:37:31.853: INFO: Pod "pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c" satisfied condition "Succeeded or Failed"
Aug  3 15:37:31.855: INFO: Trying to get logs from node worker-0 pod pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:37:31.866: INFO: Waiting for pod pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c to disappear
Aug  3 15:37:31.868: INFO: Pod pod-secrets-75e6b087-1c7c-4477-96ef-a26ee033e09c no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:37:31.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3524" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":262,"skipped":4812,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:31.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4989
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Aug  3 15:37:31.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-4989 create -f -'
Aug  3 15:37:32.723: INFO: stderr: ""
Aug  3 15:37:32.723: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug  3 15:37:32.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-4989 diff -f -'
Aug  3 15:37:32.892: INFO: rc: 1
Aug  3 15:37:32.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-4989 delete -f -'
Aug  3 15:37:32.944: INFO: stderr: ""
Aug  3 15:37:32.944: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:37:32.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4989" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":263,"skipped":4819,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:32.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-760
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-e9ae474d-f95d-4a1a-9ef6-259a3a1db469
STEP: Creating a pod to test consume secrets
Aug  3 15:37:33.078: INFO: Waiting up to 5m0s for pod "pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f" in namespace "secrets-760" to be "Succeeded or Failed"
Aug  3 15:37:33.082: INFO: Pod "pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.612067ms
Aug  3 15:37:35.086: INFO: Pod "pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00788406s
Aug  3 15:37:37.092: INFO: Pod "pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013904977s
STEP: Saw pod success
Aug  3 15:37:37.092: INFO: Pod "pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f" satisfied condition "Succeeded or Failed"
Aug  3 15:37:37.094: INFO: Trying to get logs from node worker-0 pod pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:37:37.106: INFO: Waiting for pod pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f to disappear
Aug  3 15:37:37.107: INFO: Pod pod-secrets-2ac87748-54eb-4442-be42-cb0f1bb2f98f no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:37:37.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-760" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":4828,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:37.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-6681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-6681
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  3 15:37:37.231: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  3 15:37:37.251: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:37:39.257: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:37:41.256: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:37:43.256: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:37:45.255: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:37:47.255: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:37:49.259: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  3 15:37:49.263: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Aug  3 15:37:51.286: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Aug  3 15:37:51.286: INFO: Going to poll 10.244.0.115 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Aug  3 15:37:51.288: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.115 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:37:51.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:37:51.288: INFO: ExecWithOptions: Clientset creation
Aug  3 15:37:51.289: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.115+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  3 15:37:52.361: INFO: Found all 1 expected endpoints: [netserver-0]
Aug  3 15:37:52.361: INFO: Going to poll 10.244.1.166 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Aug  3 15:37:52.364: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.166 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:37:52.364: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:37:52.365: INFO: ExecWithOptions: Clientset creation
Aug  3 15:37:52.365: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.166+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  3 15:37:53.429: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  3 15:37:53.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-6681" for this suite.

• [SLOW TEST:16.326 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":4872,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:37:53.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7952
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7952
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-7952
Aug  3 15:37:53.574: INFO: Found 0 stateful pods, waiting for 1
Aug  3 15:38:03.579: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug  3 15:38:03.590: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug  3 15:38:03.595: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug  3 15:38:03.596: INFO: Observed &StatefulSet event: ADDED
Aug  3 15:38:03.596: INFO: Found Statefulset ss in namespace statefulset-7952 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug  3 15:38:03.596: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug  3 15:38:03.596: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug  3 15:38:03.600: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug  3 15:38:03.601: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug  3 15:38:03.602: INFO: Deleting all statefulset in ns statefulset-7952
Aug  3 15:38:03.603: INFO: Scaling statefulset ss to 0
Aug  3 15:38:13.621: INFO: Waiting for statefulset status.replicas updated to 0
Aug  3 15:38:13.623: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug  3 15:38:13.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7952" for this suite.

• [SLOW TEST:20.197 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":266,"skipped":4905,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:13.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  3 15:38:13.763: INFO: Waiting up to 5m0s for pod "downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779" in namespace "downward-api-962" to be "Succeeded or Failed"
Aug  3 15:38:13.766: INFO: Pod "downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779": Phase="Pending", Reason="", readiness=false. Elapsed: 2.766786ms
Aug  3 15:38:15.770: INFO: Pod "downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006063334s
Aug  3 15:38:17.777: INFO: Pod "downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013069994s
STEP: Saw pod success
Aug  3 15:38:17.777: INFO: Pod "downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779" satisfied condition "Succeeded or Failed"
Aug  3 15:38:17.778: INFO: Trying to get logs from node worker-0 pod downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779 container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:38:17.790: INFO: Waiting for pod downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779 to disappear
Aug  3 15:38:17.792: INFO: Pod downward-api-eab90e2b-417a-4b6a-b6a1-d7ecdf85b779 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  3 15:38:17.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-962" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":267,"skipped":4924,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:17.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:38:34.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7432" for this suite.

• [SLOW TEST:16.215 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":268,"skipped":4933,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:34.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Aug  3 15:38:34.133: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-9662 proxy --unix-socket=/tmp/kubectl-proxy-unix3846614099/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:38:34.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9662" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":269,"skipped":4943,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:34.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:38:34.983: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:38:38.052: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:38:38.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9867-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:38:41.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4312" for this suite.
STEP: Destroying namespace "webhook-4312-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.964 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":270,"skipped":5001,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:41.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7473
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  3 15:38:43.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7473" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":271,"skipped":5009,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:43.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7676
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug  3 15:38:45.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7676" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":272,"skipped":5037,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:45.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:38:45.994: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug  3 15:38:48.005: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:38:50.008: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:38:52.010: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:38:54.010: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug  3 15:38:56.011: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 3, 15, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 3, 15, 38, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:38:59.089: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:38:59.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8477" for this suite.
STEP: Destroying namespace "webhook-8477-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.440 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":273,"skipped":5079,"failed":0}
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:38:59.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-f17314af-c9f7-4226-9dff-e1e6fff48c3c
STEP: Creating a pod to test consume secrets
Aug  3 15:38:59.263: INFO: Waiting up to 5m0s for pod "pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11" in namespace "secrets-4341" to be "Succeeded or Failed"
Aug  3 15:38:59.265: INFO: Pod "pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.036867ms
Aug  3 15:39:01.268: INFO: Pod "pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005937389s
Aug  3 15:39:03.275: INFO: Pod "pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012752852s
STEP: Saw pod success
Aug  3 15:39:03.275: INFO: Pod "pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11" satisfied condition "Succeeded or Failed"
Aug  3 15:39:03.277: INFO: Trying to get logs from node worker-0 pod pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11 container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:39:03.289: INFO: Waiting for pod pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11 to disappear
Aug  3 15:39:03.291: INFO: Pod pod-secrets-f2b50876-8c34-4599-bff4-dde126954a11 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:39:03.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4341" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":274,"skipped":5079,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:03.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  3 15:39:03.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-7967 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug  3 15:39:03.471: INFO: stderr: ""
Aug  3 15:39:03.471: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Aug  3 15:39:03.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-7967 delete pods e2e-test-httpd-pod'
Aug  3 15:39:05.351: INFO: stderr: ""
Aug  3 15:39:05.351: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:39:05.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7967" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":275,"skipped":5083,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:05.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug  3 15:39:05.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:39:09.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:39:17.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7313" for this suite.

• [SLOW TEST:12.431 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":276,"skipped":5101,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:17.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-f20807df-9896-48c5-8ec0-0ddf5dd0525b
STEP: Creating a pod to test consume configMaps
Aug  3 15:39:17.921: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385" in namespace "projected-7420" to be "Succeeded or Failed"
Aug  3 15:39:17.924: INFO: Pod "pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385": Phase="Pending", Reason="", readiness=false. Elapsed: 2.209616ms
Aug  3 15:39:19.927: INFO: Pod "pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005354917s
Aug  3 15:39:21.932: INFO: Pod "pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010723351s
STEP: Saw pod success
Aug  3 15:39:21.932: INFO: Pod "pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385" satisfied condition "Succeeded or Failed"
Aug  3 15:39:21.934: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:39:21.947: INFO: Waiting for pod pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385 to disappear
Aug  3 15:39:21.949: INFO: Pod pod-projected-configmaps-37aba6b7-1854-4d45-80b4-de989b293385 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 15:39:21.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7420" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5111,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:21.955: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3951
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:39:22.079: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2" in namespace "projected-3951" to be "Succeeded or Failed"
Aug  3 15:39:22.082: INFO: Pod "downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.202509ms
Aug  3 15:39:24.088: INFO: Pod "downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008338077s
Aug  3 15:39:26.094: INFO: Pod "downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014852536s
STEP: Saw pod success
Aug  3 15:39:26.094: INFO: Pod "downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2" satisfied condition "Succeeded or Failed"
Aug  3 15:39:26.096: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2 container client-container: <nil>
STEP: delete the pod
Aug  3 15:39:26.108: INFO: Waiting for pod downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2 to disappear
Aug  3 15:39:26.110: INFO: Pod downwardapi-volume-6d7f8839-ff17-4417-bab5-94fa94cc1bc2 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug  3 15:39:26.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3951" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":278,"skipped":5118,"failed":0}
SSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:26.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9361
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-0477e6e4-a130-44a5-8e03-250c22f8dfa0
STEP: Creating a pod to test consume configMaps
Aug  3 15:39:26.241: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c" in namespace "projected-9361" to be "Succeeded or Failed"
Aug  3 15:39:26.244: INFO: Pod "pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.669851ms
Aug  3 15:39:28.252: INFO: Pod "pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010482377s
Aug  3 15:39:30.256: INFO: Pod "pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014424627s
STEP: Saw pod success
Aug  3 15:39:30.256: INFO: Pod "pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c" satisfied condition "Succeeded or Failed"
Aug  3 15:39:30.258: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:39:30.270: INFO: Waiting for pod pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c to disappear
Aug  3 15:39:30.272: INFO: Pod pod-projected-configmaps-74df9bee-6310-42d0-a8c2-2be65e42a57c no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 15:39:30.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9361" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":279,"skipped":5122,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:30.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1853
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Aug  3 15:39:30.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug  3 15:39:30.457: INFO: stderr: ""
Aug  3 15:39:30.457: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Aug  3 15:39:30.457: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug  3 15:39:30.457: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-1853" to be "running and ready, or succeeded"
Aug  3 15:39:30.460: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.627125ms
Aug  3 15:39:32.464: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.006929303s
Aug  3 15:39:32.464: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug  3 15:39:32.464: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug  3 15:39:32.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator'
Aug  3 15:39:32.518: INFO: stderr: ""
Aug  3 15:39:32.518: INFO: stdout: "I0803 15:39:30.981179       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/lskh 577\nI0803 15:39:31.181666       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/drp 249\nI0803 15:39:31.382010       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/rpg 592\nI0803 15:39:31.581270       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/w8k5 438\nI0803 15:39:31.781692       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/km67 342\nI0803 15:39:31.981978       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/qkfd 389\nI0803 15:39:32.181245       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xbz5 503\nI0803 15:39:32.381610       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/lj4n 552\n"
Aug  3 15:39:34.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator'
Aug  3 15:39:34.577: INFO: stderr: ""
Aug  3 15:39:34.577: INFO: stdout: "I0803 15:39:30.981179       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/lskh 577\nI0803 15:39:31.181666       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/drp 249\nI0803 15:39:31.382010       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/rpg 592\nI0803 15:39:31.581270       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/w8k5 438\nI0803 15:39:31.781692       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/km67 342\nI0803 15:39:31.981978       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/qkfd 389\nI0803 15:39:32.181245       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xbz5 503\nI0803 15:39:32.381610       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/lj4n 552\nI0803 15:39:32.582015       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/wgr4 598\nI0803 15:39:32.781277       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/dz7b 412\nI0803 15:39:32.981630       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/m4ls 588\nI0803 15:39:33.182012       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/lw2 426\nI0803 15:39:33.381301       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/8nf 297\nI0803 15:39:33.581655       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/kr2m 564\nI0803 15:39:33.782077       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/x5cx 413\nI0803 15:39:33.981351       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/vk6 279\nI0803 15:39:34.181684       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/rmn 406\nI0803 15:39:34.382125       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/q5v 590\n"
STEP: limiting log lines
Aug  3 15:39:34.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator --tail=1'
Aug  3 15:39:34.631: INFO: stderr: ""
Aug  3 15:39:34.631: INFO: stdout: "I0803 15:39:34.581383       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/6rgj 299\n"
Aug  3 15:39:34.631: INFO: got output "I0803 15:39:34.581383       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/6rgj 299\n"
STEP: limiting log bytes
Aug  3 15:39:34.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator --limit-bytes=1'
Aug  3 15:39:34.682: INFO: stderr: ""
Aug  3 15:39:34.683: INFO: stdout: "I"
Aug  3 15:39:34.683: INFO: got output "I"
STEP: exposing timestamps
Aug  3 15:39:34.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator --tail=1 --timestamps'
Aug  3 15:39:34.735: INFO: stderr: ""
Aug  3 15:39:34.735: INFO: stdout: "2022-08-03T15:39:34.581502873Z I0803 15:39:34.581383       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/6rgj 299\n"
Aug  3 15:39:34.735: INFO: got output "2022-08-03T15:39:34.581502873Z I0803 15:39:34.581383       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/6rgj 299\n"
STEP: restricting to a time range
Aug  3 15:39:37.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator --since=1s'
Aug  3 15:39:37.294: INFO: stderr: ""
Aug  3 15:39:37.294: INFO: stdout: "I0803 15:39:36.381360       1 logs_generator.go:76] 27 GET /api/v1/namespaces/ns/pods/cx7 239\nI0803 15:39:36.581792       1 logs_generator.go:76] 28 GET /api/v1/namespaces/default/pods/xpwb 200\nI0803 15:39:36.782242       1 logs_generator.go:76] 29 POST /api/v1/namespaces/default/pods/f9nh 415\nI0803 15:39:36.981593       1 logs_generator.go:76] 30 POST /api/v1/namespaces/ns/pods/9jf7 441\nI0803 15:39:37.181961       1 logs_generator.go:76] 31 GET /api/v1/namespaces/default/pods/bmfx 429\n"
Aug  3 15:39:37.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 logs logs-generator logs-generator --since=24h'
Aug  3 15:39:37.350: INFO: stderr: ""
Aug  3 15:39:37.350: INFO: stdout: "I0803 15:39:30.981179       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/lskh 577\nI0803 15:39:31.181666       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/drp 249\nI0803 15:39:31.382010       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/rpg 592\nI0803 15:39:31.581270       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/w8k5 438\nI0803 15:39:31.781692       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/km67 342\nI0803 15:39:31.981978       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/qkfd 389\nI0803 15:39:32.181245       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xbz5 503\nI0803 15:39:32.381610       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/lj4n 552\nI0803 15:39:32.582015       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/wgr4 598\nI0803 15:39:32.781277       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/dz7b 412\nI0803 15:39:32.981630       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/m4ls 588\nI0803 15:39:33.182012       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/lw2 426\nI0803 15:39:33.381301       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/8nf 297\nI0803 15:39:33.581655       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/kr2m 564\nI0803 15:39:33.782077       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/x5cx 413\nI0803 15:39:33.981351       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/vk6 279\nI0803 15:39:34.181684       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/rmn 406\nI0803 15:39:34.382125       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/q5v 590\nI0803 15:39:34.581383       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/6rgj 299\nI0803 15:39:34.781724       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/5j9 571\nI0803 15:39:34.982057       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/lcq9 264\nI0803 15:39:35.181390       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/mbw 535\nI0803 15:39:35.381741       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/mcnv 454\nI0803 15:39:35.582089       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/jz67 228\nI0803 15:39:35.781385       1 logs_generator.go:76] 24 POST /api/v1/namespaces/default/pods/f97 570\nI0803 15:39:35.981586       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/t7vm 562\nI0803 15:39:36.182022       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/xks 422\nI0803 15:39:36.381360       1 logs_generator.go:76] 27 GET /api/v1/namespaces/ns/pods/cx7 239\nI0803 15:39:36.581792       1 logs_generator.go:76] 28 GET /api/v1/namespaces/default/pods/xpwb 200\nI0803 15:39:36.782242       1 logs_generator.go:76] 29 POST /api/v1/namespaces/default/pods/f9nh 415\nI0803 15:39:36.981593       1 logs_generator.go:76] 30 POST /api/v1/namespaces/ns/pods/9jf7 441\nI0803 15:39:37.181961       1 logs_generator.go:76] 31 GET /api/v1/namespaces/default/pods/bmfx 429\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Aug  3 15:39:37.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1853 delete pod logs-generator'
Aug  3 15:39:38.429: INFO: stderr: ""
Aug  3 15:39:38.429: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:39:38.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1853" for this suite.

• [SLOW TEST:8.159 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":280,"skipped":5123,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:38.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:39:38.560: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-4686fc88-9564-4942-9826-24aa77e6a272" in namespace "security-context-test-720" to be "Succeeded or Failed"
Aug  3 15:39:38.563: INFO: Pod "alpine-nnp-false-4686fc88-9564-4942-9826-24aa77e6a272": Phase="Pending", Reason="", readiness=false. Elapsed: 2.947631ms
Aug  3 15:39:40.568: INFO: Pod "alpine-nnp-false-4686fc88-9564-4942-9826-24aa77e6a272": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008027547s
Aug  3 15:39:42.571: INFO: Pod "alpine-nnp-false-4686fc88-9564-4942-9826-24aa77e6a272": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010987082s
Aug  3 15:39:42.571: INFO: Pod "alpine-nnp-false-4686fc88-9564-4942-9826-24aa77e6a272" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug  3 15:39:42.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-720" for this suite.
•{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5135,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:42.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6695
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:39:42.704: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug  3 15:39:44.724: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  3 15:39:44.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6695" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":282,"skipped":5155,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:39:44.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-2428
STEP: creating service affinity-clusterip in namespace services-2428
STEP: creating replication controller affinity-clusterip in namespace services-2428
I0803 15:39:44.864829      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-2428, replica count: 3
I0803 15:39:47.916938      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 15:39:47.926: INFO: Creating new exec pod
Aug  3 15:39:50.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug  3 15:39:53.061: INFO: rc: 1
Aug  3 15:39:53.061: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 affinity-clusterip 80
nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  3 15:39:54.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug  3 15:39:56.181: INFO: rc: 1
Aug  3 15:39:56.181: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 affinity-clusterip 80
nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  3 15:39:57.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug  3 15:39:59.185: INFO: rc: 1
Aug  3 15:39:59.185: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
Command stdout:

stderr:
+ echo hostName
+ nc -v -t -w 2 affinity-clusterip 80
nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
command terminated with exit code 1

error:
exit status 1
Retrying...
Aug  3 15:40:00.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug  3 15:40:00.167: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug  3 15:40:00.167: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:40:00.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.106.203 80'
Aug  3 15:40:00.275: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.106.203 80\nConnection to 10.108.106.203 80 port [tcp/http] succeeded!\n"
Aug  3 15:40:00.275: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:40:00.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-2428 exec execpod-affinitygqw55 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.108.106.203:80/ ; done'
Aug  3 15:40:00.448: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.106.203:80/\n"
Aug  3 15:40:00.448: INFO: stdout: "\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd\naffinity-clusterip-c22kd"
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Received response from host: affinity-clusterip-c22kd
Aug  3 15:40:00.448: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-2428, will wait for the garbage collector to delete the pods
Aug  3 15:40:00.512: INFO: Deleting ReplicationController affinity-clusterip took: 3.503492ms
Aug  3 15:40:00.613: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.223346ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:40:02.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2428" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:17.998 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":283,"skipped":5175,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:40:02.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-131
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:40:02.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-131" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":284,"skipped":5206,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:40:02.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7504
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-66
STEP: Creating secret with name secret-test-8a8965bb-af3d-4c74-a7db-20ae20b9e3e4
STEP: Creating a pod to test consume secrets
Aug  3 15:40:03.116: INFO: Waiting up to 5m0s for pod "pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e" in namespace "secrets-7504" to be "Succeeded or Failed"
Aug  3 15:40:03.118: INFO: Pod "pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.981721ms
Aug  3 15:40:05.121: INFO: Pod "pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005101626s
Aug  3 15:40:07.126: INFO: Pod "pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010669742s
STEP: Saw pod success
Aug  3 15:40:07.127: INFO: Pod "pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e" satisfied condition "Succeeded or Failed"
Aug  3 15:40:07.128: INFO: Trying to get logs from node worker-0 pod pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:40:07.138: INFO: Waiting for pod pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e to disappear
Aug  3 15:40:07.140: INFO: Pod pod-secrets-e2478021-58aa-4237-91c2-f26a7fb0a25e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:40:07.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7504" for this suite.
STEP: Destroying namespace "secret-namespace-66" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5214,"failed":0}
SS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:40:07.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-7082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-7082
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug  3 15:40:07.266: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug  3 15:40:07.282: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:40:09.288: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:40:11.286: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:40:13.287: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:40:15.286: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:40:17.288: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug  3 15:40:19.286: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug  3 15:40:19.291: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Aug  3 15:40:21.304: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Aug  3 15:40:21.304: INFO: Breadth first check of 10.244.0.135 on host 10.0.36.176...
Aug  3 15:40:21.306: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.136:9080/dial?request=hostname&protocol=udp&host=10.244.0.135&port=8081&tries=1'] Namespace:pod-network-test-7082 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:40:21.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:40:21.306: INFO: ExecWithOptions: Clientset creation
Aug  3 15:40:21.306: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7082/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.135%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  3 15:40:21.371: INFO: Waiting for responses: map[]
Aug  3 15:40:21.371: INFO: reached 10.244.0.135 after 0/1 tries
Aug  3 15:40:21.371: INFO: Breadth first check of 10.244.1.170 on host 10.0.36.79...
Aug  3 15:40:21.373: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.136:9080/dial?request=hostname&protocol=udp&host=10.244.1.170&port=8081&tries=1'] Namespace:pod-network-test-7082 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:40:21.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:40:21.374: INFO: ExecWithOptions: Clientset creation
Aug  3 15:40:21.374: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7082/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.170%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug  3 15:40:21.443: INFO: Waiting for responses: map[]
Aug  3 15:40:21.443: INFO: reached 10.244.1.170 after 0/1 tries
Aug  3 15:40:21.443: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug  3 15:40:21.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-7082" for this suite.

• [SLOW TEST:14.300 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":286,"skipped":5216,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:40:21.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9188
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-674ba799-162b-4c09-9078-aefbfa129a12 in namespace container-probe-9188
Aug  3 15:40:23.579: INFO: Started pod liveness-674ba799-162b-4c09-9078-aefbfa129a12 in namespace container-probe-9188
STEP: checking the pod's current state and verifying that restartCount is present
Aug  3 15:40:23.581: INFO: Initial restart count of pod liveness-674ba799-162b-4c09-9078-aefbfa129a12 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 15:44:24.251: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9188" for this suite.

• [SLOW TEST:242.810 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5236,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:44:24.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2384
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:44:24.389: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:44:26.396: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:28.393: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:30.394: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:32.392: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:34.392: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:36.396: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:38.397: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:40.394: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:42.392: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:44.397: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = false)
Aug  3 15:44:46.395: INFO: The status of Pod test-webserver-c7c22f23-b5ee-48c5-9180-8df5325e8432 is Running (Ready = true)
Aug  3 15:44:46.397: INFO: Container started at 2022-08-03 15:44:24 +0000 UTC, pod became ready at 2022-08-03 15:44:44 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 15:44:46.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2384" for this suite.

• [SLOW TEST:22.145 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5304,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:44:46.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-9507
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:44:46.531: INFO: created pod pod-service-account-defaultsa
Aug  3 15:44:46.531: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug  3 15:44:46.535: INFO: created pod pod-service-account-mountsa
Aug  3 15:44:46.535: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug  3 15:44:46.540: INFO: created pod pod-service-account-nomountsa
Aug  3 15:44:46.540: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug  3 15:44:46.549: INFO: created pod pod-service-account-defaultsa-mountspec
Aug  3 15:44:46.549: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug  3 15:44:46.555: INFO: created pod pod-service-account-mountsa-mountspec
Aug  3 15:44:46.555: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug  3 15:44:46.560: INFO: created pod pod-service-account-nomountsa-mountspec
Aug  3 15:44:46.560: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug  3 15:44:46.566: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug  3 15:44:46.566: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug  3 15:44:46.572: INFO: created pod pod-service-account-mountsa-nomountspec
Aug  3 15:44:46.573: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug  3 15:44:46.580: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug  3 15:44:46.580: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug  3 15:44:46.580: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-9507" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":289,"skipped":5321,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:44:46.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2810
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug  3 15:45:46.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2810" for this suite.

• [SLOW TEST:60.145 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":290,"skipped":5323,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:45:46.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4158
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-2604b674-ca58-4cea-b959-e83b8df16f9d
STEP: Creating a pod to test consume configMaps
Aug  3 15:45:46.864: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d" in namespace "projected-4158" to be "Succeeded or Failed"
Aug  3 15:45:46.866: INFO: Pod "pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.34684ms
Aug  3 15:45:48.872: INFO: Pod "pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008557435s
Aug  3 15:45:50.876: INFO: Pod "pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012449592s
STEP: Saw pod success
Aug  3 15:45:50.876: INFO: Pod "pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d" satisfied condition "Succeeded or Failed"
Aug  3 15:45:50.878: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:45:50.897: INFO: Waiting for pod pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d to disappear
Aug  3 15:45:50.898: INFO: Pod pod-projected-configmaps-b97087a7-1c67-49ee-adca-458bbed6ff2d no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 15:45:50.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4158" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5343,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:45:50.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7850
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug  3 15:45:51.038: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.038: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.043: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.043: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.055: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.055: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.067: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:51.067: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug  3 15:45:52.165: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug  3 15:45:52.165: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug  3 15:45:52.416: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug  3 15:45:52.422: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 0
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.423: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.424: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.424: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.430: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.430: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.441: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.441: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:52.447: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:52.447: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:52.454: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:52.454: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:53.161: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:53.161: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:53.169: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
STEP: listing Deployments
Aug  3 15:45:53.172: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug  3 15:45:53.184: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug  3 15:45:53.192: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:53.192: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:53.286: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:53.304: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:53.309: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:54.168: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:54.181: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:54.188: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:54.200: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug  3 15:45:55.460: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 1
Aug  3 15:45:55.480: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:55.481: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:55.481: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:55.481: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 2
Aug  3 15:45:55.481: INFO: observed Deployment test-deployment in namespace deployment-7850 with ReadyReplicas 3
STEP: deleting the Deployment
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
Aug  3 15:45:55.486: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug  3 15:45:55.489: INFO: Log out all the ReplicaSets if there is no deployment created
Aug  3 15:45:55.492: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-7850  fb46ef15-6f7b-4ae9-a795-48acf94245cd 27371 3 2022-08-03 15:45:51 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment a9d9492d-8e26-4e37-8af9-888b9ac25142 0xc003955f77 0xc003955f78}] []  [{kube-controller-manager Update apps/v1 2022-08-03 15:45:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a9d9492d-8e26-4e37-8af9-888b9ac25142\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 15:45:53 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002d30050 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug  3 15:45:55.495: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-7850  9f543e5a-446c-4aea-ade1-44549b52a41a 27444 2 2022-08-03 15:45:53 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment a9d9492d-8e26-4e37-8af9-888b9ac25142 0xc002d300b7 0xc002d300b8}] []  [{kube-controller-manager Update apps/v1 2022-08-03 15:45:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a9d9492d-8e26-4e37-8af9-888b9ac25142\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 15:45:54 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002d30230 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug  3 15:45:55.497: INFO: pod: "test-deployment-74c6dd549b-rhcc2":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-rhcc2 test-deployment-74c6dd549b- deployment-7850  e060e6c1-8329-4e8a-a406-c2796a1b3079 27403 0 2022-08-03 15:45:53 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 9f543e5a-446c-4aea-ade1-44549b52a41a 0xc003d96077 0xc003d96078}] []  [{kube-controller-manager Update v1 2022-08-03 15:45:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9f543e5a-446c-4aea-ade1-44549b52a41a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 15:45:54 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.145\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9fq6l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9fq6l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.145,StartTime:2022-08-03 15:45:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 15:45:53 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://8efc15ba846f6326db5b679392a75b2d48912d2d97b58d52a85615e7ac5d5e1e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.145,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  3 15:45:55.498: INFO: pod: "test-deployment-74c6dd549b-s7g8k":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-s7g8k test-deployment-74c6dd549b- deployment-7850  ec5e283a-6bf0-4fcd-8dee-4a66a383ed54 27443 0 2022-08-03 15:45:54 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 9f543e5a-446c-4aea-ade1-44549b52a41a 0xc003d96277 0xc003d96278}] []  [{kube-controller-manager Update v1 2022-08-03 15:45:54 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9f543e5a-446c-4aea-ade1-44549b52a41a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 15:45:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.175\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4qjvk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4qjvk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:54 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.79,PodIP:10.244.1.175,StartTime:2022-08-03 15:45:54 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 15:45:54 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://030ff6ca0361e58344eadb317f1a57f9a8f448645060bde4090473fc64b9233a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.175,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug  3 15:45:55.498: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-7850  ea48a053-35eb-4d14-b0bf-b4cc783507a6 27452 4 2022-08-03 15:45:52 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment a9d9492d-8e26-4e37-8af9-888b9ac25142 0xc002d30327 0xc002d30328}] []  [{kube-controller-manager Update apps/v1 2022-08-03 15:45:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a9d9492d-8e26-4e37-8af9-888b9ac25142\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-03 15:45:55 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002d303d0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug  3 15:45:55.501: INFO: pod: "test-deployment-84b949bdfc-wtqsj":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-wtqsj test-deployment-84b949bdfc- deployment-7850  789c4143-6f3d-4fe5-baa5-6f066931fc94 27448 0 2022-08-03 15:45:52 +0000 UTC 2022-08-03 15:45:56 +0000 UTC 0xc003d97648 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:00-k0s-privileged] [{apps/v1 ReplicaSet test-deployment-84b949bdfc ea48a053-35eb-4d14-b0bf-b4cc783507a6 0xc003d97677 0xc003d97678}] []  [{kube-controller-manager Update v1 2022-08-03 15:45:52 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ea48a053-35eb-4d14-b0bf-b4cc783507a6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-03 15:45:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.144\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wnr7f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wnr7f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:worker-0,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-03 15:45:52 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.0.36.176,PodIP:10.244.0.144,StartTime:2022-08-03 15:45:52 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-03 15:45:52 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://790ad2b23cc6285d73604e0c2d59ebafd4c1cb5572da9c540f20810415c1fd67,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.0.144,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug  3 15:45:55.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7850" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":292,"skipped":5355,"failed":0}
SSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:45:55.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-6474/configmap-test-69432f67-0961-4831-b726-a0552c783b0e
STEP: Creating a pod to test consume configMaps
Aug  3 15:45:55.641: INFO: Waiting up to 5m0s for pod "pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f" in namespace "configmap-6474" to be "Succeeded or Failed"
Aug  3 15:45:55.644: INFO: Pod "pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.191068ms
Aug  3 15:45:57.650: INFO: Pod "pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009105575s
Aug  3 15:45:59.657: INFO: Pod "pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016380454s
STEP: Saw pod success
Aug  3 15:45:59.657: INFO: Pod "pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f" satisfied condition "Succeeded or Failed"
Aug  3 15:45:59.659: INFO: Trying to get logs from node worker-0 pod pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f container env-test: <nil>
STEP: delete the pod
Aug  3 15:45:59.670: INFO: Waiting for pod pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f to disappear
Aug  3 15:45:59.672: INFO: Pod pod-configmaps-0110b036-c826-4538-b33c-69e22edccc8f no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:45:59.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6474" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":293,"skipped":5358,"failed":0}
SSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:45:59.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9144
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-9ab0588d-6f3d-41a8-928a-39d3482614dc
STEP: Creating a pod to test consume secrets
Aug  3 15:45:59.807: INFO: Waiting up to 5m0s for pod "pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f" in namespace "secrets-9144" to be "Succeeded or Failed"
Aug  3 15:45:59.809: INFO: Pod "pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.304907ms
Aug  3 15:46:01.816: INFO: Pod "pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008568688s
Aug  3 15:46:03.821: INFO: Pod "pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013864196s
STEP: Saw pod success
Aug  3 15:46:03.821: INFO: Pod "pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f" satisfied condition "Succeeded or Failed"
Aug  3 15:46:03.823: INFO: Trying to get logs from node worker-0 pod pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f container secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:46:03.835: INFO: Waiting for pod pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f to disappear
Aug  3 15:46:03.836: INFO: Pod pod-secrets-c817d2f9-2edf-48e0-ad85-03e0f7e7717f no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:46:03.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9144" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":294,"skipped":5364,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:03.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug  3 15:46:03.965: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 15:46:09.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8092" for this suite.

• [SLOW TEST:5.380 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":295,"skipped":5416,"failed":0}
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:09.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9744
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:46:25.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9744" for this suite.

• [SLOW TEST:16.203 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":296,"skipped":5416,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:25.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5958
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug  3 15:46:25.557: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5958  fb16a8d8-734b-4c9c-b0a6-fc04b4dc6ac5 27716 0 2022-08-03 15:46:25 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:00-k0s-privileged] [] []  [{e2e.test Update v1 2022-08-03 15:46:25 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7hrm4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7hrm4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug  3 15:46:25.560: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:46:27.567: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug  3 15:46:27.567: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5958 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:46:27.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:46:27.567: INFO: ExecWithOptions: Clientset creation
Aug  3 15:46:27.567: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5958/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Aug  3 15:46:27.651: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5958 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:46:27.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:46:27.652: INFO: ExecWithOptions: Clientset creation
Aug  3 15:46:27.652: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5958/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug  3 15:46:27.721: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 15:46:27.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5958" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":297,"skipped":5438,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:27.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug  3 15:46:29.866: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4902 PodName:pod-sharedvolume-03d0b481-e10c-443a-8ee7-4b80c52f33b9 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:46:29.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:46:29.866: INFO: ExecWithOptions: Clientset creation
Aug  3 15:46:29.866: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-4902/pods/pod-sharedvolume-03d0b481-e10c-443a-8ee7-4b80c52f33b9/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Aug  3 15:46:29.938: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:46:29.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4902" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":298,"skipped":5445,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:29.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2002
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug  3 15:46:30.071: INFO: Waiting up to 5m0s for pod "pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c" in namespace "emptydir-2002" to be "Succeeded or Failed"
Aug  3 15:46:30.073: INFO: Pod "pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.072706ms
Aug  3 15:46:32.079: INFO: Pod "pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008901371s
Aug  3 15:46:34.085: INFO: Pod "pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014373464s
STEP: Saw pod success
Aug  3 15:46:34.085: INFO: Pod "pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c" satisfied condition "Succeeded or Failed"
Aug  3 15:46:34.087: INFO: Trying to get logs from node worker-1 pod pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c container test-container: <nil>
STEP: delete the pod
Aug  3 15:46:34.108: INFO: Waiting for pod pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c to disappear
Aug  3 15:46:34.110: INFO: Pod pod-c25e2602-a5e4-4a26-a739-cfa86fdc4b8c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:46:34.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2002" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5486,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:34.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8098
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:46:34.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8098" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":300,"skipped":5497,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:34.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-6410
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6410 to expose endpoints map[]
Aug  3 15:46:34.447: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug  3 15:46:35.454: INFO: successfully validated that service endpoint-test2 in namespace services-6410 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-6410
Aug  3 15:46:35.462: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:46:37.470: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6410 to expose endpoints map[pod1:[80]]
Aug  3 15:46:37.478: INFO: successfully validated that service endpoint-test2 in namespace services-6410 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug  3 15:46:37.478: INFO: Creating new exec pod
Aug  3 15:46:40.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  3 15:46:40.604: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:40.604: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:46:40.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.254.226 80'
Aug  3 15:46:40.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.254.226 80\nConnection to 10.101.254.226 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:40.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-6410
Aug  3 15:46:40.723: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:46:42.726: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6410 to expose endpoints map[pod1:[80] pod2:[80]]
Aug  3 15:46:42.736: INFO: successfully validated that service endpoint-test2 in namespace services-6410 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug  3 15:46:43.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  3 15:46:43.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:43.851: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:46:43.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.254.226 80'
Aug  3 15:46:43.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.254.226 80\nConnection to 10.101.254.226 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:43.957: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-6410
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6410 to expose endpoints map[pod2:[80]]
Aug  3 15:46:43.976: INFO: successfully validated that service endpoint-test2 in namespace services-6410 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug  3 15:46:44.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug  3 15:46:45.091: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:45.091: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:46:45.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-6410 exec execpodmp8qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.254.226 80'
Aug  3 15:46:45.194: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.254.226 80\nConnection to 10.101.254.226 80 port [tcp/http] succeeded!\n"
Aug  3 15:46:45.194: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-6410
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6410 to expose endpoints map[]
Aug  3 15:46:46.211: INFO: successfully validated that service endpoint-test2 in namespace services-6410 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:46:46.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6410" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.973 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":301,"skipped":5506,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:46.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9388
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:46:46.355: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9388" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":302,"skipped":5516,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:46.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug  3 15:46:46.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:46:48.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:46:57.374: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3915" for this suite.

• [SLOW TEST:11.025 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":303,"skipped":5529,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:46:57.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9269
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug  3 15:46:57.515: INFO: Waiting up to 5m0s for pod "pod-ad41fecc-7816-450d-bd69-62991172e50a" in namespace "emptydir-9269" to be "Succeeded or Failed"
Aug  3 15:46:57.518: INFO: Pod "pod-ad41fecc-7816-450d-bd69-62991172e50a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.625945ms
Aug  3 15:46:59.526: INFO: Pod "pod-ad41fecc-7816-450d-bd69-62991172e50a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010568073s
Aug  3 15:47:01.532: INFO: Pod "pod-ad41fecc-7816-450d-bd69-62991172e50a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016980822s
STEP: Saw pod success
Aug  3 15:47:01.532: INFO: Pod "pod-ad41fecc-7816-450d-bd69-62991172e50a" satisfied condition "Succeeded or Failed"
Aug  3 15:47:01.534: INFO: Trying to get logs from node worker-0 pod pod-ad41fecc-7816-450d-bd69-62991172e50a container test-container: <nil>
STEP: delete the pod
Aug  3 15:47:01.545: INFO: Waiting for pod pod-ad41fecc-7816-450d-bd69-62991172e50a to disappear
Aug  3 15:47:01.547: INFO: Pod pod-ad41fecc-7816-450d-bd69-62991172e50a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:47:01.547: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9269" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5570,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:47:01.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug  3 15:49:01.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9348" for this suite.

• [SLOW TEST:120.143 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":305,"skipped":5590,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:01.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-782
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-a08111fd-671e-4f77-b3cd-d01c31fbb740
STEP: Creating a pod to test consume configMaps
Aug  3 15:49:01.831: INFO: Waiting up to 5m0s for pod "pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d" in namespace "configmap-782" to be "Succeeded or Failed"
Aug  3 15:49:01.833: INFO: Pod "pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d": Phase="Pending", Reason="", readiness=false. Elapsed: 1.909568ms
Aug  3 15:49:03.836: INFO: Pod "pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004984889s
Aug  3 15:49:05.842: INFO: Pod "pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010834257s
STEP: Saw pod success
Aug  3 15:49:05.842: INFO: Pod "pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d" satisfied condition "Succeeded or Failed"
Aug  3 15:49:05.844: INFO: Trying to get logs from node worker-0 pod pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d container configmap-volume-test: <nil>
STEP: delete the pod
Aug  3 15:49:05.862: INFO: Waiting for pod pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d to disappear
Aug  3 15:49:05.864: INFO: Pod pod-configmaps-80cee1cf-fb35-49f9-b1ec-4046ae73269d no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:49:05.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-782" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":306,"skipped":5599,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:05.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3024
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-d3bfbd6c-75a4-442a-baeb-12c682b3776d
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:49:05.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3024" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":307,"skipped":5621,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:05.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8336
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c
Aug  3 15:49:06.122: INFO: Pod name my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c: Found 0 pods out of 1
Aug  3 15:49:11.129: INFO: Pod name my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c: Found 1 pods out of 1
Aug  3 15:49:11.129: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c" are running
Aug  3 15:49:11.130: INFO: Pod "my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c-dz4t6" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:49:06 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:49:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:49:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-03 15:49:06 +0000 UTC Reason: Message:}])
Aug  3 15:49:11.131: INFO: Trying to dial the pod
Aug  3 15:49:16.143: INFO: Controller my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c: Got expected result from replica 1 [my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c-dz4t6]: "my-hostname-basic-9e25e6f5-4cbc-4859-8b0d-f3675f59a45c-dz4t6", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug  3 15:49:16.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8336" for this suite.

• [SLOW TEST:10.150 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":308,"skipped":5643,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:16.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-04948d84-d045-49ba-bf88-fc416c83d316
STEP: Creating the pod
Aug  3 15:49:16.283: INFO: The status of Pod pod-projected-configmaps-2d965afb-90dd-4a17-8e1e-cf4517a64065 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:49:18.290: INFO: The status of Pod pod-projected-configmaps-2d965afb-90dd-4a17-8e1e-cf4517a64065 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-04948d84-d045-49ba-bf88-fc416c83d316
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug  3 15:49:20.311: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5840" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5658,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:20.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5030
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-70353e70-2737-4ffa-841d-a6098d25a047
STEP: Creating secret with name secret-projected-all-test-volume-5a1f1661-0f25-44d9-aecd-912f4ad5a464
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug  3 15:49:20.445: INFO: Waiting up to 5m0s for pod "projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051" in namespace "projected-5030" to be "Succeeded or Failed"
Aug  3 15:49:20.448: INFO: Pod "projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051": Phase="Pending", Reason="", readiness=false. Elapsed: 2.288811ms
Aug  3 15:49:22.451: INFO: Pod "projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005782505s
Aug  3 15:49:24.455: INFO: Pod "projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00926234s
STEP: Saw pod success
Aug  3 15:49:24.455: INFO: Pod "projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051" satisfied condition "Succeeded or Failed"
Aug  3 15:49:24.456: INFO: Trying to get logs from node worker-0 pod projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug  3 15:49:24.468: INFO: Waiting for pod projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051 to disappear
Aug  3 15:49:24.472: INFO: Pod projected-volume-5d1783ea-a275-459b-b365-f47ffcfdd051 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Aug  3 15:49:24.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5030" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":310,"skipped":5677,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:24.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8391
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:49:35.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8391" for this suite.

• [SLOW TEST:11.164 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":311,"skipped":5682,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:35.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5255
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:49:46.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5255" for this suite.

• [SLOW TEST:11.158 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":312,"skipped":5695,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:46.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-1561
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:49:47.123: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:49:50.187: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:49:50.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:49:53.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-1561" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.504 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":313,"skipped":5746,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:53.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7114
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Aug  3 15:49:53.438: INFO: Waiting up to 5m0s for pod "var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e" in namespace "var-expansion-7114" to be "Succeeded or Failed"
Aug  3 15:49:53.440: INFO: Pod "var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034982ms
Aug  3 15:49:55.446: INFO: Pod "var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007114782s
Aug  3 15:49:57.452: INFO: Pod "var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013708346s
STEP: Saw pod success
Aug  3 15:49:57.452: INFO: Pod "var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e" satisfied condition "Succeeded or Failed"
Aug  3 15:49:57.454: INFO: Trying to get logs from node worker-0 pod var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:49:57.465: INFO: Waiting for pod var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e to disappear
Aug  3 15:49:57.467: INFO: Pod var-expansion-c3ce89a1-4d1e-4f8f-9252-9a96f390553e no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug  3 15:49:57.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7114" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":314,"skipped":5761,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:57.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug  3 15:49:58.631: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
W0803 15:49:58.631289      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  3 15:49:58.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5481" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":315,"skipped":5768,"failed":0}
SSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:58.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-2773
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug  3 15:49:58.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2773" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":316,"skipped":5773,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:49:58.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:49:58.898: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667" in namespace "downward-api-2670" to be "Succeeded or Failed"
Aug  3 15:49:58.900: INFO: Pod "downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667": Phase="Pending", Reason="", readiness=false. Elapsed: 2.070684ms
Aug  3 15:50:00.906: INFO: Pod "downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007982071s
Aug  3 15:50:02.910: INFO: Pod "downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012545907s
STEP: Saw pod success
Aug  3 15:50:02.910: INFO: Pod "downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667" satisfied condition "Succeeded or Failed"
Aug  3 15:50:02.912: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667 container client-container: <nil>
STEP: delete the pod
Aug  3 15:50:02.930: INFO: Waiting for pod downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667 to disappear
Aug  3 15:50:02.932: INFO: Pod downwardapi-volume-9f52abd0-2a72-41b2-b820-b8747a7dc667 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:50:02.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2670" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":317,"skipped":5818,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:50:02.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3344
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:50:03.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-3344 version'
Aug  3 15:50:03.114: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Aug  3 15:50:03.114: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:30:46Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3+k0s\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-08-03T14:03:10Z\", GoVersion:\"go1.18.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:50:03.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3344" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":318,"skipped":5826,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:50:03.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-175
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug  3 15:50:03.253: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-175  51370dd4-db99-4762-9e0b-f81ce80c39db 28783 0 2022-08-03 15:50:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-03 15:50:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug  3 15:50:03.253: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-175  51370dd4-db99-4762-9e0b-f81ce80c39db 28784 0 2022-08-03 15:50:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-03 15:50:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug  3 15:50:03.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-175" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":319,"skipped":5872,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:50:03.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-3177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-2632
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1571
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:50:16.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-3177" for this suite.
STEP: Destroying namespace "nsdeletetest-2632" for this suite.
Aug  3 15:50:16.633: INFO: Namespace nsdeletetest-2632 was already deleted
STEP: Destroying namespace "nsdeletetest-1571" for this suite.

• [SLOW TEST:13.378 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":320,"skipped":5884,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:50:16.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7139
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-8d914bd5-2fea-41c2-8cde-82ee3ae71ffe
STEP: Creating secret with name s-test-opt-upd-59993b6c-eb51-426b-92b1-2510561c7c7d
STEP: Creating the pod
Aug  3 15:50:16.768: INFO: The status of Pod pod-secrets-9ce36d9a-37c3-4870-a435-7fadb519c497 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:50:18.775: INFO: The status of Pod pod-secrets-9ce36d9a-37c3-4870-a435-7fadb519c497 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-8d914bd5-2fea-41c2-8cde-82ee3ae71ffe
STEP: Updating secret s-test-opt-upd-59993b6c-eb51-426b-92b1-2510561c7c7d
STEP: Creating secret with name s-test-opt-create-ee83ccaf-da94-489e-9bf4-8bcc58dc6090
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug  3 15:51:37.090: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7139" for this suite.

• [SLOW TEST:80.464 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":5940,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:51:37.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5193
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  3 15:51:37.252: INFO: Waiting up to 5m0s for pod "downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c" in namespace "downward-api-5193" to be "Succeeded or Failed"
Aug  3 15:51:37.255: INFO: Pod "downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.699055ms
Aug  3 15:51:39.261: INFO: Pod "downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009369693s
Aug  3 15:51:41.266: INFO: Pod "downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014352973s
STEP: Saw pod success
Aug  3 15:51:41.266: INFO: Pod "downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c" satisfied condition "Succeeded or Failed"
Aug  3 15:51:41.268: INFO: Trying to get logs from node worker-0 pod downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:51:41.282: INFO: Waiting for pod downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c to disappear
Aug  3 15:51:41.283: INFO: Pod downward-api-73ab0501-667f-4c62-a7a6-e0a57764563c no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  3 15:51:41.283: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5193" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":322,"skipped":5955,"failed":0}

------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:51:41.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7823
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:51:41.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug  3 15:51:41.419: INFO: The status of Pod pod-exec-websocket-a2af2234-f5ea-47ce-a2cb-cce27e7add8e is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:51:43.424: INFO: The status of Pod pod-exec-websocket-a2af2234-f5ea-47ce-a2cb-cce27e7add8e is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug  3 15:51:43.476: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7823" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":323,"skipped":5955,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:51:43.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3247
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug  3 15:51:56.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3247" for this suite.

• [SLOW TEST:13.188 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":324,"skipped":5970,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:51:56.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1682
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-365975b3-43dd-462a-b965-fa0208e93a21
STEP: Creating a pod to test consume secrets
Aug  3 15:51:56.798: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d" in namespace "projected-1682" to be "Succeeded or Failed"
Aug  3 15:51:56.801: INFO: Pod "pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.469577ms
Aug  3 15:51:58.808: INFO: Pod "pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009441472s
Aug  3 15:52:00.813: INFO: Pod "pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014765566s
STEP: Saw pod success
Aug  3 15:52:00.813: INFO: Pod "pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d" satisfied condition "Succeeded or Failed"
Aug  3 15:52:00.815: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug  3 15:52:00.824: INFO: Waiting for pod pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d to disappear
Aug  3 15:52:00.826: INFO: Pod pod-projected-secrets-af7d6be4-2924-4715-af72-f3891b64017d no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug  3 15:52:00.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1682" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":325,"skipped":6013,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:00.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3187
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug  3 15:52:00.958: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:52:02.963: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug  3 15:52:03.977: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 15:52:04.990: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3187" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":326,"skipped":6039,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:04.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1829
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug  3 15:52:05.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1829 create -f -'
Aug  3 15:52:05.820: INFO: stderr: ""
Aug  3 15:52:05.820: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  3 15:52:06.824: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:52:06.824: INFO: Found 0 / 1
Aug  3 15:52:07.823: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:52:07.823: INFO: Found 1 / 1
Aug  3 15:52:07.823: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug  3 15:52:07.826: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:52:07.826: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  3 15:52:07.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1829 patch pod agnhost-primary-kggh4 -p {"metadata":{"annotations":{"x":"y"}}}'
Aug  3 15:52:07.881: INFO: stderr: ""
Aug  3 15:52:07.881: INFO: stdout: "pod/agnhost-primary-kggh4 patched\n"
STEP: checking annotations
Aug  3 15:52:07.883: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:52:07.883: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:52:07.883: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1829" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":327,"skipped":6057,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:07.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8087
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug  3 15:52:08.019: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug  3 15:52:08.029: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8087" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":328,"skipped":6133,"failed":0}
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:08.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-9802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  3 15:52:09.089: INFO: starting watch
STEP: patching
STEP: updating
Aug  3 15:52:09.095: INFO: waiting for watch events with expected annotations
Aug  3 15:52:09.095: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:52:09.129: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-9802" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":329,"skipped":6135,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:09.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug  3 15:52:09.259: INFO: Waiting up to 5m0s for pod "pod-fbdaf051-6005-44de-b6db-339a211c39e3" in namespace "emptydir-5677" to be "Succeeded or Failed"
Aug  3 15:52:09.261: INFO: Pod "pod-fbdaf051-6005-44de-b6db-339a211c39e3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.816071ms
Aug  3 15:52:11.267: INFO: Pod "pod-fbdaf051-6005-44de-b6db-339a211c39e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00840806s
Aug  3 15:52:13.271: INFO: Pod "pod-fbdaf051-6005-44de-b6db-339a211c39e3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012192603s
STEP: Saw pod success
Aug  3 15:52:13.271: INFO: Pod "pod-fbdaf051-6005-44de-b6db-339a211c39e3" satisfied condition "Succeeded or Failed"
Aug  3 15:52:13.273: INFO: Trying to get logs from node worker-0 pod pod-fbdaf051-6005-44de-b6db-339a211c39e3 container test-container: <nil>
STEP: delete the pod
Aug  3 15:52:13.285: INFO: Waiting for pod pod-fbdaf051-6005-44de-b6db-339a211c39e3 to disappear
Aug  3 15:52:13.287: INFO: Pod pod-fbdaf051-6005-44de-b6db-339a211c39e3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:52:13.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5677" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6139,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:13.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-v2xq
STEP: Creating a pod to test atomic-volume-subpath
Aug  3 15:52:13.419: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-v2xq" in namespace "subpath-425" to be "Succeeded or Failed"
Aug  3 15:52:13.421: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Pending", Reason="", readiness=false. Elapsed: 2.037944ms
Aug  3 15:52:15.425: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 2.006500111s
Aug  3 15:52:17.431: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 4.011931397s
Aug  3 15:52:19.438: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 6.019643051s
Aug  3 15:52:21.446: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 8.027453146s
Aug  3 15:52:23.450: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 10.031252432s
Aug  3 15:52:25.453: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 12.034794655s
Aug  3 15:52:27.462: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 14.042975133s
Aug  3 15:52:29.470: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 16.051165611s
Aug  3 15:52:31.477: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 18.058028559s
Aug  3 15:52:33.482: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=true. Elapsed: 20.063588033s
Aug  3 15:52:35.486: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Running", Reason="", readiness=false. Elapsed: 22.067865222s
Aug  3 15:52:37.493: INFO: Pod "pod-subpath-test-configmap-v2xq": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.07454763s
STEP: Saw pod success
Aug  3 15:52:37.493: INFO: Pod "pod-subpath-test-configmap-v2xq" satisfied condition "Succeeded or Failed"
Aug  3 15:52:37.495: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-configmap-v2xq container test-container-subpath-configmap-v2xq: <nil>
STEP: delete the pod
Aug  3 15:52:37.508: INFO: Waiting for pod pod-subpath-test-configmap-v2xq to disappear
Aug  3 15:52:37.510: INFO: Pod pod-subpath-test-configmap-v2xq no longer exists
STEP: Deleting pod pod-subpath-test-configmap-v2xq
Aug  3 15:52:37.510: INFO: Deleting pod "pod-subpath-test-configmap-v2xq" in namespace "subpath-425"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  3 15:52:37.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-425" for this suite.

• [SLOW TEST:24.225 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":331,"skipped":6144,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:37.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9224
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:52:38.441: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:52:41.459: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:52:41.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9224" for this suite.
STEP: Destroying namespace "webhook-9224-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":332,"skipped":6148,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:41.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9831
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9831
STEP: creating service affinity-nodeport in namespace services-9831
STEP: creating replication controller affinity-nodeport in namespace services-9831
I0803 15:52:41.738348      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-9831, replica count: 3
I0803 15:52:44.789331      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 15:52:44.795: INFO: Creating new exec pod
Aug  3 15:52:47.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9831 exec execpod-affinitys6929 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug  3 15:52:47.928: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug  3 15:52:47.928: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:52:47.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9831 exec execpod-affinitys6929 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.182.155 80'
Aug  3 15:52:48.041: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.182.155 80\nConnection to 10.102.182.155 80 port [tcp/http] succeeded!\n"
Aug  3 15:52:48.041: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:52:48.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9831 exec execpod-affinitys6929 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.176 30424'
Aug  3 15:52:48.149: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.176 30424\nConnection to 10.0.36.176 30424 port [tcp/*] succeeded!\n"
Aug  3 15:52:48.149: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:52:48.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9831 exec execpod-affinitys6929 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.36.79 30424'
Aug  3 15:52:48.262: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.36.79 30424\nConnection to 10.0.36.79 30424 port [tcp/*] succeeded!\n"
Aug  3 15:52:48.262: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug  3 15:52:48.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=services-9831 exec execpod-affinitys6929 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.36.176:30424/ ; done'
Aug  3 15:52:48.421: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.36.176:30424/\n"
Aug  3 15:52:48.421: INFO: stdout: "\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v\naffinity-nodeport-mqp6v"
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Received response from host: affinity-nodeport-mqp6v
Aug  3 15:52:48.421: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-9831, will wait for the garbage collector to delete the pods
Aug  3 15:52:48.483: INFO: Deleting ReplicationController affinity-nodeport took: 3.132071ms
Aug  3 15:52:48.584: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.017385ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug  3 15:52:50.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9831" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.877 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":333,"skipped":6185,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:52:50.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 52.161.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.161.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.161.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.161.52_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-950.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-950.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-950.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-950.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 52.161.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.161.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.161.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.161.52_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug  3 15:52:52.572: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.575: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.578: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.580: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.593: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.596: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.599: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.601: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:52.612: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:52:57.618: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.621: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.623: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.626: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.640: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.642: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.645: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.648: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:52:57.658: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:53:02.617: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.620: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.623: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.626: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.639: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.642: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.645: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.647: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:02.659: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:53:07.615: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.618: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.621: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.623: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.637: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.640: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.642: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.645: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:07.656: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:53:12.618: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.621: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.624: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.627: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.640: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.643: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.645: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.648: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:12.659: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:53:17.618: INFO: Unable to read wheezy_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.621: INFO: Unable to read wheezy_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.624: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.627: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.640: INFO: Unable to read jessie_udp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.643: INFO: Unable to read jessie_tcp@dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.646: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.648: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local from pod dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56: the server could not find the requested resource (get pods dns-test-c3364474-b097-4e2d-8812-c20481ef4a56)
Aug  3 15:53:17.659: INFO: Lookups using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 failed for: [wheezy_udp@dns-test-service.dns-950.svc.cluster.local wheezy_tcp@dns-test-service.dns-950.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_udp@dns-test-service.dns-950.svc.cluster.local jessie_tcp@dns-test-service.dns-950.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-950.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-950.svc.cluster.local]

Aug  3 15:53:22.662: INFO: DNS probes using dns-950/dns-test-c3364474-b097-4e2d-8812-c20481ef4a56 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug  3 15:53:22.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-950" for this suite.

• [SLOW TEST:32.306 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":334,"skipped":6208,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:53:22.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug  3 15:53:33.112: INFO: 69 pods remaining
Aug  3 15:53:33.112: INFO: 69 pods has nil DeletionTimestamp
Aug  3 15:53:33.112: INFO: 
STEP: Gathering metrics
Aug  3 15:53:38.121: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0803 15:53:38.121052      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug  3 15:53:38.121: INFO: Deleting pod "simpletest-rc-to-be-deleted-27xl7" in namespace "gc-6929"
Aug  3 15:53:38.128: INFO: Deleting pod "simpletest-rc-to-be-deleted-2kpbh" in namespace "gc-6929"
Aug  3 15:53:38.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-2t25p" in namespace "gc-6929"
Aug  3 15:53:38.139: INFO: Deleting pod "simpletest-rc-to-be-deleted-42fx9" in namespace "gc-6929"
Aug  3 15:53:38.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d6dx" in namespace "gc-6929"
Aug  3 15:53:38.150: INFO: Deleting pod "simpletest-rc-to-be-deleted-5frdz" in namespace "gc-6929"
Aug  3 15:53:38.157: INFO: Deleting pod "simpletest-rc-to-be-deleted-6c5gj" in namespace "gc-6929"
Aug  3 15:53:38.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jz4d" in namespace "gc-6929"
Aug  3 15:53:38.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nqgv" in namespace "gc-6929"
Aug  3 15:53:38.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pv9z" in namespace "gc-6929"
Aug  3 15:53:38.181: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v85g" in namespace "gc-6929"
Aug  3 15:53:38.187: INFO: Deleting pod "simpletest-rc-to-be-deleted-74wm9" in namespace "gc-6929"
Aug  3 15:53:38.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-77gxs" in namespace "gc-6929"
Aug  3 15:53:38.199: INFO: Deleting pod "simpletest-rc-to-be-deleted-7gbsw" in namespace "gc-6929"
Aug  3 15:53:38.205: INFO: Deleting pod "simpletest-rc-to-be-deleted-7h59j" in namespace "gc-6929"
Aug  3 15:53:38.217: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bjtn" in namespace "gc-6929"
Aug  3 15:53:38.222: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g5rr" in namespace "gc-6929"
Aug  3 15:53:38.231: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g7fd" in namespace "gc-6929"
Aug  3 15:53:38.244: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jg9s" in namespace "gc-6929"
Aug  3 15:53:38.257: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kwtw" in namespace "gc-6929"
Aug  3 15:53:38.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-8z8ks" in namespace "gc-6929"
Aug  3 15:53:38.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-8z8zt" in namespace "gc-6929"
Aug  3 15:53:38.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dwz5" in namespace "gc-6929"
Aug  3 15:53:38.287: INFO: Deleting pod "simpletest-rc-to-be-deleted-9gw46" in namespace "gc-6929"
Aug  3 15:53:38.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-9njt4" in namespace "gc-6929"
Aug  3 15:53:38.303: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qrd8" in namespace "gc-6929"
Aug  3 15:53:38.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s4h6" in namespace "gc-6929"
Aug  3 15:53:38.329: INFO: Deleting pod "simpletest-rc-to-be-deleted-b47x7" in namespace "gc-6929"
Aug  3 15:53:38.334: INFO: Deleting pod "simpletest-rc-to-be-deleted-bkgcs" in namespace "gc-6929"
Aug  3 15:53:38.342: INFO: Deleting pod "simpletest-rc-to-be-deleted-brrlh" in namespace "gc-6929"
Aug  3 15:53:38.348: INFO: Deleting pod "simpletest-rc-to-be-deleted-brw5d" in namespace "gc-6929"
Aug  3 15:53:38.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-c69ts" in namespace "gc-6929"
Aug  3 15:53:38.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-chznr" in namespace "gc-6929"
Aug  3 15:53:38.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqpxs" in namespace "gc-6929"
Aug  3 15:53:38.372: INFO: Deleting pod "simpletest-rc-to-be-deleted-dfhsn" in namespace "gc-6929"
Aug  3 15:53:38.386: INFO: Deleting pod "simpletest-rc-to-be-deleted-dn2sq" in namespace "gc-6929"
Aug  3 15:53:38.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqswq" in namespace "gc-6929"
Aug  3 15:53:38.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-frjwd" in namespace "gc-6929"
Aug  3 15:53:38.402: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsxd9" in namespace "gc-6929"
Aug  3 15:53:38.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2mlc" in namespace "gc-6929"
Aug  3 15:53:38.411: INFO: Deleting pod "simpletest-rc-to-be-deleted-g987k" in namespace "gc-6929"
Aug  3 15:53:38.417: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9qc9" in namespace "gc-6929"
Aug  3 15:53:38.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfxf7" in namespace "gc-6929"
Aug  3 15:53:38.429: INFO: Deleting pod "simpletest-rc-to-be-deleted-gl59f" in namespace "gc-6929"
Aug  3 15:53:38.433: INFO: Deleting pod "simpletest-rc-to-be-deleted-gr7fq" in namespace "gc-6929"
Aug  3 15:53:38.440: INFO: Deleting pod "simpletest-rc-to-be-deleted-h9c6h" in namespace "gc-6929"
Aug  3 15:53:38.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-hbsr4" in namespace "gc-6929"
Aug  3 15:53:38.454: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfkf2" in namespace "gc-6929"
Aug  3 15:53:38.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpdmh" in namespace "gc-6929"
Aug  3 15:53:38.468: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpvgz" in namespace "gc-6929"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug  3 15:53:38.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6929" for this suite.

• [SLOW TEST:15.769 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":335,"skipped":6228,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:53:38.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-90
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:53:38.621: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2" in namespace "downward-api-90" to be "Succeeded or Failed"
Aug  3 15:53:38.623: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.216141ms
Aug  3 15:53:40.628: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006944372s
Aug  3 15:53:42.635: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013855747s
Aug  3 15:53:44.641: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.019589948s
Aug  3 15:53:46.647: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.026414312s
Aug  3 15:53:48.654: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.032539874s
Aug  3 15:53:50.659: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 12.037705356s
STEP: Saw pod success
Aug  3 15:53:50.659: INFO: Pod "downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2" satisfied condition "Succeeded or Failed"
Aug  3 15:53:50.661: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2 container client-container: <nil>
STEP: delete the pod
Aug  3 15:53:50.673: INFO: Waiting for pod downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2 to disappear
Aug  3 15:53:50.675: INFO: Pod downwardapi-volume-0c5eb28f-df7a-4561-8ec9-2569229a6ac2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:53:50.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-90" for this suite.

• [SLOW TEST:12.192 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":336,"skipped":6241,"failed":0}
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:53:50.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-8320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:53:50.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: creating replication controller svc-latency-rc in namespace svc-latency-8320
I0803 15:53:50.805077      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8320, replica count: 1
I0803 15:53:51.856628      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug  3 15:53:51.966: INFO: Created: latency-svc-8mnpw
Aug  3 15:53:51.969: INFO: Got endpoints: latency-svc-8mnpw [12.133926ms]
Aug  3 15:53:51.982: INFO: Created: latency-svc-pktc9
Aug  3 15:53:51.987: INFO: Got endpoints: latency-svc-pktc9 [17.547033ms]
Aug  3 15:53:51.988: INFO: Created: latency-svc-h5q9n
Aug  3 15:53:52.050: INFO: Got endpoints: latency-svc-h5q9n [79.655639ms]
Aug  3 15:53:52.050: INFO: Created: latency-svc-b6g79
Aug  3 15:53:52.055: INFO: Got endpoints: latency-svc-b6g79 [84.92168ms]
Aug  3 15:53:52.056: INFO: Created: latency-svc-7fhg6
Aug  3 15:53:52.062: INFO: Created: latency-svc-fqfpv
Aug  3 15:53:52.064: INFO: Got endpoints: latency-svc-7fhg6 [94.285401ms]
Aug  3 15:53:52.065: INFO: Got endpoints: latency-svc-fqfpv [95.018094ms]
Aug  3 15:53:52.072: INFO: Created: latency-svc-27tq6
Aug  3 15:53:52.075: INFO: Got endpoints: latency-svc-27tq6 [104.593328ms]
Aug  3 15:53:52.081: INFO: Created: latency-svc-w4vg4
Aug  3 15:53:52.146: INFO: Got endpoints: latency-svc-w4vg4 [175.367349ms]
Aug  3 15:53:52.147: INFO: Created: latency-svc-4g76v
Aug  3 15:53:52.154: INFO: Created: latency-svc-d95qr
Aug  3 15:53:52.155: INFO: Got endpoints: latency-svc-4g76v [184.398593ms]
Aug  3 15:53:52.159: INFO: Got endpoints: latency-svc-d95qr [187.966924ms]
Aug  3 15:53:52.163: INFO: Created: latency-svc-5g6fm
Aug  3 15:53:52.167: INFO: Got endpoints: latency-svc-5g6fm [196.460228ms]
Aug  3 15:53:52.170: INFO: Created: latency-svc-gf9dg
Aug  3 15:53:52.249: INFO: Got endpoints: latency-svc-gf9dg [278.627251ms]
Aug  3 15:53:52.250: INFO: Created: latency-svc-hgqf7
Aug  3 15:53:52.257: INFO: Created: latency-svc-5264q
Aug  3 15:53:52.258: INFO: Got endpoints: latency-svc-hgqf7 [287.202775ms]
Aug  3 15:53:52.263: INFO: Got endpoints: latency-svc-5264q [291.979137ms]
Aug  3 15:53:52.267: INFO: Created: latency-svc-2t56p
Aug  3 15:53:52.270: INFO: Got endpoints: latency-svc-2t56p [298.572665ms]
Aug  3 15:53:52.273: INFO: Created: latency-svc-r7mw4
Aug  3 15:53:52.277: INFO: Got endpoints: latency-svc-r7mw4 [306.532588ms]
Aug  3 15:53:52.282: INFO: Created: latency-svc-fknqf
Aug  3 15:53:52.287: INFO: Got endpoints: latency-svc-fknqf [299.124755ms]
Aug  3 15:53:52.318: INFO: Created: latency-svc-5jfh4
Aug  3 15:53:52.321: INFO: Got endpoints: latency-svc-5jfh4 [270.993756ms]
Aug  3 15:53:52.327: INFO: Created: latency-svc-zw7j5
Aug  3 15:53:52.333: INFO: Got endpoints: latency-svc-zw7j5 [277.917654ms]
Aug  3 15:53:52.335: INFO: Created: latency-svc-rcs6w
Aug  3 15:53:52.341: INFO: Got endpoints: latency-svc-rcs6w [276.712897ms]
Aug  3 15:53:52.344: INFO: Created: latency-svc-xd7q5
Aug  3 15:53:52.347: INFO: Got endpoints: latency-svc-xd7q5 [281.920458ms]
Aug  3 15:53:52.414: INFO: Created: latency-svc-gdmzw
Aug  3 15:53:52.417: INFO: Got endpoints: latency-svc-gdmzw [341.863031ms]
Aug  3 15:53:52.422: INFO: Created: latency-svc-5d86l
Aug  3 15:53:52.431: INFO: Got endpoints: latency-svc-5d86l [284.557602ms]
Aug  3 15:53:52.432: INFO: Created: latency-svc-xb2pt
Aug  3 15:53:52.436: INFO: Got endpoints: latency-svc-xb2pt [280.84964ms]
Aug  3 15:53:52.441: INFO: Created: latency-svc-zxs7r
Aug  3 15:53:52.443: INFO: Got endpoints: latency-svc-zxs7r [283.962881ms]
Aug  3 15:53:52.449: INFO: Created: latency-svc-jp2m5
Aug  3 15:53:52.452: INFO: Got endpoints: latency-svc-jp2m5 [284.974639ms]
Aug  3 15:53:52.532: INFO: Created: latency-svc-plbt5
Aug  3 15:53:52.539: INFO: Got endpoints: latency-svc-plbt5 [289.689783ms]
Aug  3 15:53:52.540: INFO: Created: latency-svc-5qvp5
Aug  3 15:53:52.548: INFO: Created: latency-svc-42cxh
Aug  3 15:53:52.548: INFO: Got endpoints: latency-svc-5qvp5 [289.371525ms]
Aug  3 15:53:52.552: INFO: Got endpoints: latency-svc-42cxh [288.666166ms]
Aug  3 15:53:52.555: INFO: Created: latency-svc-cpdsc
Aug  3 15:53:52.627: INFO: Got endpoints: latency-svc-cpdsc [357.521813ms]
Aug  3 15:53:52.629: INFO: Created: latency-svc-swf2t
Aug  3 15:53:52.707: INFO: Got endpoints: latency-svc-swf2t [429.645996ms]
Aug  3 15:53:52.708: INFO: Created: latency-svc-s6z8n
Aug  3 15:53:52.712: INFO: Got endpoints: latency-svc-s6z8n [425.253085ms]
Aug  3 15:53:52.716: INFO: Created: latency-svc-mcdmw
Aug  3 15:53:52.724: INFO: Got endpoints: latency-svc-mcdmw [402.627723ms]
Aug  3 15:53:52.724: INFO: Created: latency-svc-8jgf2
Aug  3 15:53:52.861: INFO: Created: latency-svc-594dw
Aug  3 15:53:52.863: INFO: Got endpoints: latency-svc-8jgf2 [530.226447ms]
Aug  3 15:53:52.869: INFO: Got endpoints: latency-svc-594dw [527.831689ms]
Aug  3 15:53:52.870: INFO: Created: latency-svc-xk7jl
Aug  3 15:53:52.872: INFO: Got endpoints: latency-svc-xk7jl [524.816056ms]
Aug  3 15:53:52.877: INFO: Created: latency-svc-zw7f7
Aug  3 15:53:52.880: INFO: Got endpoints: latency-svc-zw7f7 [462.845973ms]
Aug  3 15:53:52.884: INFO: Created: latency-svc-9ftrm
Aug  3 15:53:52.888: INFO: Got endpoints: latency-svc-9ftrm [457.830222ms]
Aug  3 15:53:52.935: INFO: Created: latency-svc-4k7gw
Aug  3 15:53:52.938: INFO: Got endpoints: latency-svc-4k7gw [502.591764ms]
Aug  3 15:53:52.942: INFO: Created: latency-svc-xg9fr
Aug  3 15:53:52.945: INFO: Got endpoints: latency-svc-xg9fr [501.697198ms]
Aug  3 15:53:52.952: INFO: Created: latency-svc-hws65
Aug  3 15:53:52.954: INFO: Got endpoints: latency-svc-hws65 [502.018843ms]
Aug  3 15:53:52.959: INFO: Created: latency-svc-86pkq
Aug  3 15:53:53.034: INFO: Got endpoints: latency-svc-86pkq [494.665932ms]
Aug  3 15:53:53.037: INFO: Created: latency-svc-xgl2p
Aug  3 15:53:53.040: INFO: Got endpoints: latency-svc-xgl2p [492.301179ms]
Aug  3 15:53:53.045: INFO: Created: latency-svc-dxv2l
Aug  3 15:53:53.049: INFO: Got endpoints: latency-svc-dxv2l [496.919372ms]
Aug  3 15:53:53.052: INFO: Created: latency-svc-49z4n
Aug  3 15:53:53.059: INFO: Got endpoints: latency-svc-49z4n [431.224532ms]
Aug  3 15:53:53.062: INFO: Created: latency-svc-6np7h
Aug  3 15:53:53.063: INFO: Got endpoints: latency-svc-6np7h [355.766055ms]
Aug  3 15:53:53.088: INFO: Created: latency-svc-l8rc7
Aug  3 15:53:53.096: INFO: Got endpoints: latency-svc-l8rc7 [383.622715ms]
Aug  3 15:53:53.097: INFO: Created: latency-svc-fr5xv
Aug  3 15:53:53.103: INFO: Got endpoints: latency-svc-fr5xv [378.651822ms]
Aug  3 15:53:53.103: INFO: Created: latency-svc-x9vcx
Aug  3 15:53:53.106: INFO: Got endpoints: latency-svc-x9vcx [242.636961ms]
Aug  3 15:53:53.111: INFO: Created: latency-svc-6wnwz
Aug  3 15:53:53.115: INFO: Got endpoints: latency-svc-6wnwz [245.381006ms]
Aug  3 15:53:53.212: INFO: Created: latency-svc-g6dnt
Aug  3 15:53:53.213: INFO: Got endpoints: latency-svc-g6dnt [340.306702ms]
Aug  3 15:53:53.218: INFO: Created: latency-svc-lptvr
Aug  3 15:53:53.221: INFO: Got endpoints: latency-svc-lptvr [340.76466ms]
Aug  3 15:53:53.227: INFO: Created: latency-svc-fcqnl
Aug  3 15:53:53.229: INFO: Got endpoints: latency-svc-fcqnl [340.529607ms]
Aug  3 15:53:53.237: INFO: Created: latency-svc-9zqx9
Aug  3 15:53:53.282: INFO: Created: latency-svc-65jj6
Aug  3 15:53:53.282: INFO: Got endpoints: latency-svc-9zqx9 [343.8967ms]
Aug  3 15:53:53.288: INFO: Created: latency-svc-mjtf9
Aug  3 15:53:53.288: INFO: Got endpoints: latency-svc-65jj6 [342.873488ms]
Aug  3 15:53:53.291: INFO: Got endpoints: latency-svc-mjtf9 [336.515466ms]
Aug  3 15:53:53.297: INFO: Created: latency-svc-4lmk8
Aug  3 15:53:53.304: INFO: Created: latency-svc-nhk9r
Aug  3 15:53:53.386: INFO: Got endpoints: latency-svc-nhk9r [345.936379ms]
Aug  3 15:53:53.386: INFO: Got endpoints: latency-svc-4lmk8 [352.585722ms]
Aug  3 15:53:53.388: INFO: Created: latency-svc-9wh5l
Aug  3 15:53:53.393: INFO: Created: latency-svc-bqz45
Aug  3 15:53:53.399: INFO: Created: latency-svc-7qk9f
Aug  3 15:53:53.405: INFO: Created: latency-svc-bkgkt
Aug  3 15:53:53.620: INFO: Got endpoints: latency-svc-bqz45 [561.11156ms]
Aug  3 15:53:53.620: INFO: Got endpoints: latency-svc-9wh5l [570.78322ms]
Aug  3 15:53:53.621: INFO: Got endpoints: latency-svc-7qk9f [557.663564ms]
Aug  3 15:53:53.624: INFO: Created: latency-svc-z54hx
Aug  3 15:53:53.627: INFO: Got endpoints: latency-svc-bkgkt [531.674414ms]
Aug  3 15:53:53.636: INFO: Created: latency-svc-bptmk
Aug  3 15:53:53.638: INFO: Got endpoints: latency-svc-z54hx [535.455172ms]
Aug  3 15:53:53.650: INFO: Created: latency-svc-jdsmm
Aug  3 15:53:53.658: INFO: Created: latency-svc-lzdfr
Aug  3 15:53:53.720: INFO: Created: latency-svc-4wjxk
Aug  3 15:53:53.720: INFO: Got endpoints: latency-svc-bptmk [614.307842ms]
Aug  3 15:53:53.798: INFO: Got endpoints: latency-svc-jdsmm [682.999321ms]
Aug  3 15:53:53.798: INFO: Got endpoints: latency-svc-lzdfr [584.849005ms]
Aug  3 15:53:53.800: INFO: Created: latency-svc-l5bgk
Aug  3 15:53:53.807: INFO: Created: latency-svc-7lnkk
Aug  3 15:53:53.812: INFO: Created: latency-svc-rwn5z
Aug  3 15:53:53.881: INFO: Created: latency-svc-fpdxt
Aug  3 15:53:53.884: INFO: Got endpoints: latency-svc-l5bgk [654.536788ms]
Aug  3 15:53:53.884: INFO: Got endpoints: latency-svc-4wjxk [663.146023ms]
Aug  3 15:53:53.889: INFO: Created: latency-svc-6ld6r
Aug  3 15:53:53.909: INFO: Created: latency-svc-m2nzl
Aug  3 15:53:53.915: INFO: Created: latency-svc-7s9vq
Aug  3 15:53:53.970: INFO: Created: latency-svc-pc7ps
Aug  3 15:53:53.971: INFO: Got endpoints: latency-svc-7lnkk [688.145681ms]
Aug  3 15:53:53.976: INFO: Got endpoints: latency-svc-rwn5z [688.273915ms]
Aug  3 15:53:53.977: INFO: Created: latency-svc-hw9xz
Aug  3 15:53:53.983: INFO: Created: latency-svc-pfw26
Aug  3 15:53:53.989: INFO: Created: latency-svc-m4pkw
Aug  3 15:53:54.093: INFO: Created: latency-svc-crrk9
Aug  3 15:53:54.094: INFO: Got endpoints: latency-svc-6ld6r [707.729607ms]
Aug  3 15:53:54.094: INFO: Got endpoints: latency-svc-fpdxt [803.641149ms]
Aug  3 15:53:54.101: INFO: Created: latency-svc-6ghnw
Aug  3 15:53:54.157: INFO: Got endpoints: latency-svc-m2nzl [770.980557ms]
Aug  3 15:53:54.171: INFO: Got endpoints: latency-svc-7s9vq [543.649082ms]
Aug  3 15:53:54.261: INFO: Got endpoints: latency-svc-pc7ps [640.485503ms]
Aug  3 15:53:54.273: INFO: Created: latency-svc-gxktx
Aug  3 15:53:54.274: INFO: Created: latency-svc-4zz9z
Aug  3 15:53:54.274: INFO: Created: latency-svc-vx9r6
Aug  3 15:53:54.274: INFO: Created: latency-svc-f2qzc
Aug  3 15:53:54.274: INFO: Created: latency-svc-bbxq6
Aug  3 15:53:54.274: INFO: Created: latency-svc-xb4c7
Aug  3 15:53:54.275: INFO: Got endpoints: latency-svc-hw9xz [654.625397ms]
Aug  3 15:53:54.282: INFO: Created: latency-svc-sg8lf
Aug  3 15:53:54.282: INFO: Created: latency-svc-j2vpj
Aug  3 15:53:54.282: INFO: Created: latency-svc-b527l
Aug  3 15:53:54.283: INFO: Created: latency-svc-2w52c
Aug  3 15:53:54.337: INFO: Created: latency-svc-5c67q
Aug  3 15:53:54.337: INFO: Got endpoints: latency-svc-pfw26 [716.706618ms]
Aug  3 15:53:54.347: INFO: Created: latency-svc-jrqd8
Aug  3 15:53:54.532: INFO: Got endpoints: latency-svc-m4pkw [893.911681ms]
Aug  3 15:53:54.536: INFO: Got endpoints: latency-svc-crrk9 [815.164677ms]
Aug  3 15:53:54.536: INFO: Got endpoints: latency-svc-xb4c7 [738.029536ms]
Aug  3 15:53:54.536: INFO: Got endpoints: latency-svc-6ghnw [738.180513ms]
Aug  3 15:53:54.543: INFO: Created: latency-svc-r7dd4
Aug  3 15:53:54.549: INFO: Created: latency-svc-9rft9
Aug  3 15:53:54.605: INFO: Got endpoints: latency-svc-gxktx [721.224785ms]
Aug  3 15:53:54.605: INFO: Created: latency-svc-xfh85
Aug  3 15:53:54.611: INFO: Created: latency-svc-bsmr4
Aug  3 15:53:54.621: INFO: Created: latency-svc-vszfv
Aug  3 15:53:54.621: INFO: Got endpoints: latency-svc-bbxq6 [526.838628ms]
Aug  3 15:53:54.630: INFO: Created: latency-svc-4sggn
Aug  3 15:53:54.699: INFO: Got endpoints: latency-svc-4zz9z [815.031859ms]
Aug  3 15:53:54.808: INFO: Created: latency-svc-d8sjs
Aug  3 15:53:54.812: INFO: Got endpoints: latency-svc-vx9r6 [841.318371ms]
Aug  3 15:53:54.812: INFO: Got endpoints: latency-svc-f2qzc [835.419541ms]
Aug  3 15:53:54.821: INFO: Created: latency-svc-dhgnp
Aug  3 15:53:54.822: INFO: Got endpoints: latency-svc-j2vpj [561.681523ms]
Aug  3 15:53:54.841: INFO: Created: latency-svc-c4l62
Aug  3 15:53:54.841: INFO: Created: latency-svc-wdb7q
Aug  3 15:53:54.872: INFO: Got endpoints: latency-svc-sg8lf [700.40849ms]
Aug  3 15:53:54.953: INFO: Got endpoints: latency-svc-b527l [795.708988ms]
Aug  3 15:53:54.954: INFO: Created: latency-svc-v6hpg
Aug  3 15:53:54.962: INFO: Created: latency-svc-w56rk
Aug  3 15:53:54.970: INFO: Got endpoints: latency-svc-2w52c [875.689412ms]
Aug  3 15:53:54.978: INFO: Created: latency-svc-hf99h
Aug  3 15:53:55.019: INFO: Got endpoints: latency-svc-5c67q [744.246799ms]
Aug  3 15:53:55.028: INFO: Created: latency-svc-dr8bf
Aug  3 15:53:55.083: INFO: Got endpoints: latency-svc-jrqd8 [745.770705ms]
Aug  3 15:53:55.149: INFO: Got endpoints: latency-svc-r7dd4 [617.169191ms]
Aug  3 15:53:55.150: INFO: Created: latency-svc-z6r78
Aug  3 15:53:55.158: INFO: Created: latency-svc-7jzbc
Aug  3 15:53:55.168: INFO: Got endpoints: latency-svc-9rft9 [632.599483ms]
Aug  3 15:53:55.179: INFO: Created: latency-svc-hqkcm
Aug  3 15:53:55.225: INFO: Got endpoints: latency-svc-xfh85 [689.424648ms]
Aug  3 15:53:55.237: INFO: Created: latency-svc-ggjjz
Aug  3 15:53:55.269: INFO: Got endpoints: latency-svc-bsmr4 [732.91821ms]
Aug  3 15:53:55.334: INFO: Got endpoints: latency-svc-vszfv [729.219293ms]
Aug  3 15:53:55.336: INFO: Created: latency-svc-hbv42
Aug  3 15:53:55.400: INFO: Got endpoints: latency-svc-4sggn [778.902179ms]
Aug  3 15:53:55.402: INFO: Created: latency-svc-ztnw7
Aug  3 15:53:55.414: INFO: Created: latency-svc-8jnrh
Aug  3 15:53:55.419: INFO: Got endpoints: latency-svc-d8sjs [719.778787ms]
Aug  3 15:53:55.444: INFO: Created: latency-svc-84rzk
Aug  3 15:53:55.469: INFO: Got endpoints: latency-svc-dhgnp [657.253697ms]
Aug  3 15:53:55.478: INFO: Created: latency-svc-zpkpq
Aug  3 15:53:55.519: INFO: Got endpoints: latency-svc-wdb7q [696.66784ms]
Aug  3 15:53:55.609: INFO: Created: latency-svc-txrj9
Aug  3 15:53:55.610: INFO: Got endpoints: latency-svc-c4l62 [798.14157ms]
Aug  3 15:53:55.619: INFO: Created: latency-svc-kqlfn
Aug  3 15:53:55.620: INFO: Got endpoints: latency-svc-v6hpg [748.734606ms]
Aug  3 15:53:55.630: INFO: Created: latency-svc-kwzwz
Aug  3 15:53:55.669: INFO: Got endpoints: latency-svc-w56rk [715.628675ms]
Aug  3 15:53:55.678: INFO: Created: latency-svc-5v4ft
Aug  3 15:53:55.719: INFO: Got endpoints: latency-svc-hf99h [748.57509ms]
Aug  3 15:53:55.797: INFO: Got endpoints: latency-svc-dr8bf [777.555624ms]
Aug  3 15:53:55.798: INFO: Created: latency-svc-svcfz
Aug  3 15:53:55.807: INFO: Created: latency-svc-2gj92
Aug  3 15:53:55.854: INFO: Got endpoints: latency-svc-z6r78 [770.879442ms]
Aug  3 15:53:55.864: INFO: Created: latency-svc-gdbvv
Aug  3 15:53:55.869: INFO: Got endpoints: latency-svc-7jzbc [719.986309ms]
Aug  3 15:53:55.879: INFO: Created: latency-svc-ctrz9
Aug  3 15:53:55.919: INFO: Got endpoints: latency-svc-hqkcm [751.241947ms]
Aug  3 15:53:55.934: INFO: Created: latency-svc-xp4d2
Aug  3 15:53:56.004: INFO: Got endpoints: latency-svc-ggjjz [778.920492ms]
Aug  3 15:53:56.015: INFO: Created: latency-svc-zbskx
Aug  3 15:53:56.020: INFO: Got endpoints: latency-svc-hbv42 [750.917944ms]
Aug  3 15:53:56.029: INFO: Created: latency-svc-nzwrz
Aug  3 15:53:56.069: INFO: Got endpoints: latency-svc-ztnw7 [735.128772ms]
Aug  3 15:53:56.079: INFO: Created: latency-svc-nnhdz
Aug  3 15:53:56.119: INFO: Got endpoints: latency-svc-8jnrh [719.008582ms]
Aug  3 15:53:56.198: INFO: Got endpoints: latency-svc-84rzk [779.337723ms]
Aug  3 15:53:56.200: INFO: Created: latency-svc-qz84f
Aug  3 15:53:56.208: INFO: Created: latency-svc-7tctd
Aug  3 15:53:56.261: INFO: Got endpoints: latency-svc-zpkpq [791.948888ms]
Aug  3 15:53:56.276: INFO: Got endpoints: latency-svc-txrj9 [756.421573ms]
Aug  3 15:53:56.276: INFO: Created: latency-svc-lbs82
Aug  3 15:53:56.285: INFO: Created: latency-svc-4gcdj
Aug  3 15:53:56.320: INFO: Got endpoints: latency-svc-kqlfn [709.34691ms]
Aug  3 15:53:56.458: INFO: Created: latency-svc-76fdz
Aug  3 15:53:56.458: INFO: Got endpoints: latency-svc-5v4ft [789.157012ms]
Aug  3 15:53:56.458: INFO: Got endpoints: latency-svc-kwzwz [837.609364ms]
Aug  3 15:53:56.467: INFO: Created: latency-svc-wz64r
Aug  3 15:53:56.471: INFO: Got endpoints: latency-svc-svcfz [752.362578ms]
Aug  3 15:53:56.475: INFO: Created: latency-svc-9cmlp
Aug  3 15:53:56.481: INFO: Created: latency-svc-6f49x
Aug  3 15:53:56.519: INFO: Got endpoints: latency-svc-2gj92 [722.487128ms]
Aug  3 15:53:56.604: INFO: Got endpoints: latency-svc-gdbvv [750.100671ms]
Aug  3 15:53:56.605: INFO: Created: latency-svc-rqfrf
Aug  3 15:53:56.613: INFO: Created: latency-svc-zl726
Aug  3 15:53:56.620: INFO: Got endpoints: latency-svc-ctrz9 [750.103129ms]
Aug  3 15:53:56.628: INFO: Created: latency-svc-r824x
Aug  3 15:53:56.669: INFO: Got endpoints: latency-svc-xp4d2 [749.696141ms]
Aug  3 15:53:56.679: INFO: Created: latency-svc-wd4v6
Aug  3 15:53:56.719: INFO: Got endpoints: latency-svc-zbskx [714.625453ms]
Aug  3 15:53:56.786: INFO: Created: latency-svc-lx4bj
Aug  3 15:53:56.787: INFO: Got endpoints: latency-svc-nzwrz [767.189335ms]
Aug  3 15:53:56.796: INFO: Created: latency-svc-8tfqn
Aug  3 15:53:56.885: INFO: Got endpoints: latency-svc-qz84f [765.380016ms]
Aug  3 15:53:56.885: INFO: Got endpoints: latency-svc-nnhdz [815.679736ms]
Aug  3 15:53:56.894: INFO: Created: latency-svc-8l2pp
Aug  3 15:53:56.901: INFO: Created: latency-svc-4pgmp
Aug  3 15:53:56.920: INFO: Got endpoints: latency-svc-7tctd [721.265658ms]
Aug  3 15:53:56.983: INFO: Created: latency-svc-m7vxs
Aug  3 15:53:56.984: INFO: Got endpoints: latency-svc-lbs82 [722.165077ms]
Aug  3 15:53:57.036: INFO: Got endpoints: latency-svc-4gcdj [760.244573ms]
Aug  3 15:53:57.042: INFO: Created: latency-svc-pwxsx
Aug  3 15:53:57.050: INFO: Created: latency-svc-t7csb
Aug  3 15:53:57.070: INFO: Got endpoints: latency-svc-76fdz [750.49464ms]
Aug  3 15:53:57.079: INFO: Created: latency-svc-d2wm5
Aug  3 15:53:57.120: INFO: Got endpoints: latency-svc-wz64r [662.46142ms]
Aug  3 15:53:57.187: INFO: Created: latency-svc-cdvv9
Aug  3 15:53:57.188: INFO: Got endpoints: latency-svc-9cmlp [729.67747ms]
Aug  3 15:53:57.197: INFO: Created: latency-svc-pzlwp
Aug  3 15:53:57.220: INFO: Got endpoints: latency-svc-6f49x [748.220752ms]
Aug  3 15:53:57.230: INFO: Created: latency-svc-h5v6b
Aug  3 15:53:57.270: INFO: Got endpoints: latency-svc-rqfrf [750.395819ms]
Aug  3 15:53:57.279: INFO: Created: latency-svc-62gsd
Aug  3 15:53:57.320: INFO: Got endpoints: latency-svc-zl726 [715.895462ms]
Aug  3 15:53:57.389: INFO: Got endpoints: latency-svc-r824x [769.571558ms]
Aug  3 15:53:57.390: INFO: Created: latency-svc-25w7r
Aug  3 15:53:57.460: INFO: Got endpoints: latency-svc-wd4v6 [790.374926ms]
Aug  3 15:53:57.462: INFO: Created: latency-svc-tb82p
Aug  3 15:53:57.470: INFO: Created: latency-svc-88crr
Aug  3 15:53:57.471: INFO: Got endpoints: latency-svc-lx4bj [751.91278ms]
Aug  3 15:53:57.480: INFO: Created: latency-svc-8d76n
Aug  3 15:53:57.533: INFO: Got endpoints: latency-svc-8tfqn [745.294736ms]
Aug  3 15:53:57.631: INFO: Created: latency-svc-6dkbl
Aug  3 15:53:57.632: INFO: Got endpoints: latency-svc-4pgmp [746.770326ms]
Aug  3 15:53:57.632: INFO: Got endpoints: latency-svc-8l2pp [747.070832ms]
Aug  3 15:53:57.641: INFO: Created: latency-svc-26kgr
Aug  3 15:53:57.655: INFO: Created: latency-svc-s2b5f
Aug  3 15:53:57.671: INFO: Got endpoints: latency-svc-m7vxs [751.174718ms]
Aug  3 15:53:57.679: INFO: Created: latency-svc-2r5kb
Aug  3 15:53:57.720: INFO: Got endpoints: latency-svc-pwxsx [736.145111ms]
Aug  3 15:53:57.810: INFO: Created: latency-svc-gv98t
Aug  3 15:53:57.810: INFO: Got endpoints: latency-svc-t7csb [773.611902ms]
Aug  3 15:53:57.818: INFO: Created: latency-svc-97gbx
Aug  3 15:53:57.821: INFO: Got endpoints: latency-svc-d2wm5 [750.680865ms]
Aug  3 15:53:57.828: INFO: Created: latency-svc-2phch
Aug  3 15:53:57.869: INFO: Got endpoints: latency-svc-cdvv9 [748.860062ms]
Aug  3 15:53:57.878: INFO: Created: latency-svc-2v7sp
Aug  3 15:53:57.920: INFO: Got endpoints: latency-svc-pzlwp [731.932327ms]
Aug  3 15:53:57.932: INFO: Created: latency-svc-plxwv
Aug  3 15:53:57.970: INFO: Got endpoints: latency-svc-h5v6b [749.854592ms]
Aug  3 15:53:57.979: INFO: Created: latency-svc-mcz74
Aug  3 15:53:58.052: INFO: Got endpoints: latency-svc-62gsd [782.721577ms]
Aug  3 15:53:58.062: INFO: Created: latency-svc-jdr57
Aug  3 15:53:58.070: INFO: Got endpoints: latency-svc-25w7r [749.001461ms]
Aug  3 15:53:58.078: INFO: Created: latency-svc-pbdvx
Aug  3 15:53:58.119: INFO: Got endpoints: latency-svc-tb82p [729.930396ms]
Aug  3 15:53:58.232: INFO: Created: latency-svc-4fcxh
Aug  3 15:53:58.234: INFO: Got endpoints: latency-svc-8d76n [762.990263ms]
Aug  3 15:53:58.234: INFO: Got endpoints: latency-svc-88crr [774.134308ms]
Aug  3 15:53:58.243: INFO: Created: latency-svc-ftk6r
Aug  3 15:53:58.248: INFO: Created: latency-svc-zk69b
Aug  3 15:53:58.269: INFO: Got endpoints: latency-svc-6dkbl [736.423819ms]
Aug  3 15:53:58.277: INFO: Created: latency-svc-hdcnz
Aug  3 15:53:58.319: INFO: Got endpoints: latency-svc-26kgr [686.926891ms]
Aug  3 15:53:58.374: INFO: Got endpoints: latency-svc-s2b5f [741.922502ms]
Aug  3 15:53:58.375: INFO: Created: latency-svc-xhkk2
Aug  3 15:53:58.383: INFO: Created: latency-svc-xsb7c
Aug  3 15:53:58.418: INFO: Got endpoints: latency-svc-2r5kb [747.348435ms]
Aug  3 15:53:58.427: INFO: Created: latency-svc-sgnnx
Aug  3 15:53:58.469: INFO: Got endpoints: latency-svc-gv98t [748.868613ms]
Aug  3 15:53:58.483: INFO: Created: latency-svc-4bwjl
Aug  3 15:53:58.522: INFO: Got endpoints: latency-svc-97gbx [711.94364ms]
Aug  3 15:53:58.657: INFO: Got endpoints: latency-svc-2v7sp [787.851966ms]
Aug  3 15:53:58.657: INFO: Got endpoints: latency-svc-2phch [836.323554ms]
Aug  3 15:53:58.659: INFO: Created: latency-svc-dqxpl
Aug  3 15:53:58.667: INFO: Created: latency-svc-7dc7r
Aug  3 15:53:58.674: INFO: Got endpoints: latency-svc-plxwv [753.807496ms]
Aug  3 15:53:58.675: INFO: Created: latency-svc-x9gx6
Aug  3 15:53:58.683: INFO: Created: latency-svc-sd4m8
Aug  3 15:53:58.721: INFO: Got endpoints: latency-svc-mcz74 [751.530988ms]
Aug  3 15:53:58.816: INFO: Created: latency-svc-gwt4f
Aug  3 15:53:58.816: INFO: Got endpoints: latency-svc-jdr57 [763.092381ms]
Aug  3 15:53:58.821: INFO: Got endpoints: latency-svc-pbdvx [751.737978ms]
Aug  3 15:53:58.826: INFO: Created: latency-svc-qcbvb
Aug  3 15:53:58.831: INFO: Created: latency-svc-wtpf9
Aug  3 15:53:58.869: INFO: Got endpoints: latency-svc-4fcxh [749.988341ms]
Aug  3 15:53:58.878: INFO: Created: latency-svc-gsppn
Aug  3 15:53:58.959: INFO: Got endpoints: latency-svc-ftk6r [725.470537ms]
Aug  3 15:53:59.025: INFO: Created: latency-svc-c5jr6
Aug  3 15:53:59.026: INFO: Got endpoints: latency-svc-hdcnz [757.197473ms]
Aug  3 15:53:59.027: INFO: Got endpoints: latency-svc-zk69b [792.912739ms]
Aug  3 15:53:59.035: INFO: Created: latency-svc-65qlf
Aug  3 15:53:59.043: INFO: Created: latency-svc-wr8vm
Aug  3 15:53:59.071: INFO: Got endpoints: latency-svc-xhkk2 [751.812239ms]
Aug  3 15:53:59.126: INFO: Got endpoints: latency-svc-xsb7c [751.901577ms]
Aug  3 15:53:59.127: INFO: Created: latency-svc-nnkgb
Aug  3 15:53:59.135: INFO: Created: latency-svc-6qfzg
Aug  3 15:53:59.235: INFO: Got endpoints: latency-svc-dqxpl [713.374965ms]
Aug  3 15:53:59.235: INFO: Got endpoints: latency-svc-sgnnx [816.748125ms]
Aug  3 15:53:59.244: INFO: Created: latency-svc-rrf2v
Aug  3 15:53:59.250: INFO: Created: latency-svc-66g7j
Aug  3 15:53:59.270: INFO: Got endpoints: latency-svc-4bwjl [800.604773ms]
Aug  3 15:53:59.395: INFO: Got endpoints: latency-svc-x9gx6 [737.389469ms]
Aug  3 15:53:59.395: INFO: Got endpoints: latency-svc-7dc7r [737.483897ms]
Aug  3 15:53:59.397: INFO: Created: latency-svc-2zwwq
Aug  3 15:53:59.405: INFO: Created: latency-svc-lcc4k
Aug  3 15:53:59.410: INFO: Created: latency-svc-qrnrg
Aug  3 15:53:59.420: INFO: Got endpoints: latency-svc-sd4m8 [746.035302ms]
Aug  3 15:53:59.429: INFO: Created: latency-svc-mbrmv
Aug  3 15:53:59.471: INFO: Got endpoints: latency-svc-gwt4f [749.445094ms]
Aug  3 15:53:59.486: INFO: Created: latency-svc-lgtqg
Aug  3 15:53:59.562: INFO: Got endpoints: latency-svc-qcbvb [746.779358ms]
Aug  3 15:53:59.572: INFO: Got endpoints: latency-svc-wtpf9 [750.119743ms]
Aug  3 15:53:59.572: INFO: Created: latency-svc-k2ngj
Aug  3 15:53:59.580: INFO: Created: latency-svc-m5zxl
Aug  3 15:53:59.620: INFO: Got endpoints: latency-svc-gsppn [750.783592ms]
Aug  3 15:53:59.629: INFO: Created: latency-svc-bsc5l
Aug  3 15:53:59.669: INFO: Got endpoints: latency-svc-c5jr6 [709.854872ms]
Aug  3 15:53:59.747: INFO: Created: latency-svc-jm97h
Aug  3 15:53:59.747: INFO: Got endpoints: latency-svc-65qlf [720.437534ms]
Aug  3 15:53:59.756: INFO: Created: latency-svc-hfp26
Aug  3 15:53:59.848: INFO: Got endpoints: latency-svc-wr8vm [820.962158ms]
Aug  3 15:53:59.850: INFO: Got endpoints: latency-svc-nnkgb [779.288779ms]
Aug  3 15:53:59.860: INFO: Created: latency-svc-ghb9l
Aug  3 15:53:59.869: INFO: Got endpoints: latency-svc-6qfzg [742.725205ms]
Aug  3 15:53:59.920: INFO: Got endpoints: latency-svc-rrf2v [685.137387ms]
Aug  3 15:53:59.971: INFO: Got endpoints: latency-svc-66g7j [736.251971ms]
Aug  3 15:54:00.021: INFO: Got endpoints: latency-svc-2zwwq [751.099085ms]
Aug  3 15:54:00.070: INFO: Got endpoints: latency-svc-lcc4k [675.177607ms]
Aug  3 15:54:00.119: INFO: Got endpoints: latency-svc-qrnrg [723.878881ms]
Aug  3 15:54:00.172: INFO: Got endpoints: latency-svc-mbrmv [752.251187ms]
Aug  3 15:54:00.220: INFO: Got endpoints: latency-svc-lgtqg [748.793273ms]
Aug  3 15:54:00.270: INFO: Got endpoints: latency-svc-k2ngj [707.098943ms]
Aug  3 15:54:00.318: INFO: Got endpoints: latency-svc-m5zxl [746.527561ms]
Aug  3 15:54:00.369: INFO: Got endpoints: latency-svc-bsc5l [749.287037ms]
Aug  3 15:54:00.419: INFO: Got endpoints: latency-svc-jm97h [749.855841ms]
Aug  3 15:54:00.469: INFO: Got endpoints: latency-svc-hfp26 [722.119664ms]
Aug  3 15:54:00.520: INFO: Got endpoints: latency-svc-ghb9l [671.688495ms]
Aug  3 15:54:00.520: INFO: Latencies: [17.547033ms 79.655639ms 84.92168ms 94.285401ms 95.018094ms 104.593328ms 175.367349ms 184.398593ms 187.966924ms 196.460228ms 242.636961ms 245.381006ms 270.993756ms 276.712897ms 277.917654ms 278.627251ms 280.84964ms 281.920458ms 283.962881ms 284.557602ms 284.974639ms 287.202775ms 288.666166ms 289.371525ms 289.689783ms 291.979137ms 298.572665ms 299.124755ms 306.532588ms 336.515466ms 340.306702ms 340.529607ms 340.76466ms 341.863031ms 342.873488ms 343.8967ms 345.936379ms 352.585722ms 355.766055ms 357.521813ms 378.651822ms 383.622715ms 402.627723ms 425.253085ms 429.645996ms 431.224532ms 457.830222ms 462.845973ms 492.301179ms 494.665932ms 496.919372ms 501.697198ms 502.018843ms 502.591764ms 524.816056ms 526.838628ms 527.831689ms 530.226447ms 531.674414ms 535.455172ms 543.649082ms 557.663564ms 561.11156ms 561.681523ms 570.78322ms 584.849005ms 614.307842ms 617.169191ms 632.599483ms 640.485503ms 654.536788ms 654.625397ms 657.253697ms 662.46142ms 663.146023ms 671.688495ms 675.177607ms 682.999321ms 685.137387ms 686.926891ms 688.145681ms 688.273915ms 689.424648ms 696.66784ms 700.40849ms 707.098943ms 707.729607ms 709.34691ms 709.854872ms 711.94364ms 713.374965ms 714.625453ms 715.628675ms 715.895462ms 716.706618ms 719.008582ms 719.778787ms 719.986309ms 720.437534ms 721.224785ms 721.265658ms 722.119664ms 722.165077ms 722.487128ms 723.878881ms 725.470537ms 729.219293ms 729.67747ms 729.930396ms 731.932327ms 732.91821ms 735.128772ms 736.145111ms 736.251971ms 736.423819ms 737.389469ms 737.483897ms 738.029536ms 738.180513ms 741.922502ms 742.725205ms 744.246799ms 745.294736ms 745.770705ms 746.035302ms 746.527561ms 746.770326ms 746.779358ms 747.070832ms 747.348435ms 748.220752ms 748.57509ms 748.734606ms 748.793273ms 748.860062ms 748.868613ms 749.001461ms 749.287037ms 749.445094ms 749.696141ms 749.854592ms 749.855841ms 749.988341ms 750.100671ms 750.103129ms 750.119743ms 750.395819ms 750.49464ms 750.680865ms 750.783592ms 750.917944ms 751.099085ms 751.174718ms 751.241947ms 751.530988ms 751.737978ms 751.812239ms 751.901577ms 751.91278ms 752.251187ms 752.362578ms 753.807496ms 756.421573ms 757.197473ms 760.244573ms 762.990263ms 763.092381ms 765.380016ms 767.189335ms 769.571558ms 770.879442ms 770.980557ms 773.611902ms 774.134308ms 777.555624ms 778.902179ms 778.920492ms 779.288779ms 779.337723ms 782.721577ms 787.851966ms 789.157012ms 790.374926ms 791.948888ms 792.912739ms 795.708988ms 798.14157ms 800.604773ms 803.641149ms 815.031859ms 815.164677ms 815.679736ms 816.748125ms 820.962158ms 835.419541ms 836.323554ms 837.609364ms 841.318371ms 875.689412ms 893.911681ms]
Aug  3 15:54:00.520: INFO: 50 %ile: 721.265658ms
Aug  3 15:54:00.520: INFO: 90 %ile: 787.851966ms
Aug  3 15:54:00.520: INFO: 99 %ile: 875.689412ms
Aug  3 15:54:00.520: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Aug  3 15:54:00.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-8320" for this suite.

• [SLOW TEST:9.848 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":337,"skipped":6241,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:00.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1573
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  3 15:54:00.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1573 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug  3 15:54:00.699: INFO: stderr: ""
Aug  3 15:54:00.699: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug  3 15:54:00.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1573 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug  3 15:54:00.852: INFO: stderr: ""
Aug  3 15:54:00.852: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug  3 15:54:00.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-1573 delete pods e2e-test-httpd-pod'
Aug  3 15:54:02.575: INFO: stderr: ""
Aug  3 15:54:02.575: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:54:02.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1573" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":338,"skipped":6242,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:02.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7204
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug  3 15:54:02.715: INFO: Waiting up to 5m0s for pod "pod-a8f6ba83-d21b-4cda-8920-c2435506725e" in namespace "emptydir-7204" to be "Succeeded or Failed"
Aug  3 15:54:02.717: INFO: Pod "pod-a8f6ba83-d21b-4cda-8920-c2435506725e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.882375ms
Aug  3 15:54:04.719: INFO: Pod "pod-a8f6ba83-d21b-4cda-8920-c2435506725e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004156319s
Aug  3 15:54:06.791: INFO: Pod "pod-a8f6ba83-d21b-4cda-8920-c2435506725e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.075296385s
STEP: Saw pod success
Aug  3 15:54:06.791: INFO: Pod "pod-a8f6ba83-d21b-4cda-8920-c2435506725e" satisfied condition "Succeeded or Failed"
Aug  3 15:54:06.853: INFO: Trying to get logs from node worker-0 pod pod-a8f6ba83-d21b-4cda-8920-c2435506725e container test-container: <nil>
STEP: delete the pod
Aug  3 15:54:06.875: INFO: Waiting for pod pod-a8f6ba83-d21b-4cda-8920-c2435506725e to disappear
Aug  3 15:54:06.878: INFO: Pod pod-a8f6ba83-d21b-4cda-8920-c2435506725e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:54:06.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7204" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6266,"failed":0}
SS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:06.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-6450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug  3 15:54:07.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-6450" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":340,"skipped":6268,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:07.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-1481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-wl76
STEP: Creating a pod to test atomic-volume-subpath
Aug  3 15:54:07.430: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-wl76" in namespace "subpath-1481" to be "Succeeded or Failed"
Aug  3 15:54:07.435: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Pending", Reason="", readiness=false. Elapsed: 4.833527ms
Aug  3 15:54:09.473: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 2.043213696s
Aug  3 15:54:11.561: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 4.13128903s
Aug  3 15:54:13.566: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 6.135765558s
Aug  3 15:54:15.569: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 8.13931431s
Aug  3 15:54:17.576: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 10.145447363s
Aug  3 15:54:19.583: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 12.152593878s
Aug  3 15:54:21.590: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 14.159434276s
Aug  3 15:54:23.595: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 16.164491282s
Aug  3 15:54:25.598: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 18.168069812s
Aug  3 15:54:27.604: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=true. Elapsed: 20.174180298s
Aug  3 15:54:29.610: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Running", Reason="", readiness=false. Elapsed: 22.180186033s
Aug  3 15:54:31.616: INFO: Pod "pod-subpath-test-projected-wl76": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.186391735s
STEP: Saw pod success
Aug  3 15:54:31.617: INFO: Pod "pod-subpath-test-projected-wl76" satisfied condition "Succeeded or Failed"
Aug  3 15:54:31.618: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-projected-wl76 container test-container-subpath-projected-wl76: <nil>
STEP: delete the pod
Aug  3 15:54:31.631: INFO: Waiting for pod pod-subpath-test-projected-wl76 to disappear
Aug  3 15:54:31.633: INFO: Pod pod-subpath-test-projected-wl76 no longer exists
STEP: Deleting pod pod-subpath-test-projected-wl76
Aug  3 15:54:31.633: INFO: Deleting pod "pod-subpath-test-projected-wl76" in namespace "subpath-1481"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug  3 15:54:31.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1481" for this suite.

• [SLOW TEST:24.511 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":341,"skipped":6278,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:31.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5950
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:54:31.770: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug  3 15:54:36.779: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug  3 15:54:36.786: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug  3 15:54:36.793: INFO: observed ReplicaSet test-rs in namespace replicaset-5950 with ReadyReplicas 1, AvailableReplicas 1
Aug  3 15:54:36.803: INFO: observed ReplicaSet test-rs in namespace replicaset-5950 with ReadyReplicas 1, AvailableReplicas 1
Aug  3 15:54:36.814: INFO: observed ReplicaSet test-rs in namespace replicaset-5950 with ReadyReplicas 1, AvailableReplicas 1
Aug  3 15:54:36.818: INFO: observed ReplicaSet test-rs in namespace replicaset-5950 with ReadyReplicas 1, AvailableReplicas 1
Aug  3 15:54:37.658: INFO: observed ReplicaSet test-rs in namespace replicaset-5950 with ReadyReplicas 2, AvailableReplicas 2
Aug  3 15:54:38.151: INFO: observed Replicaset test-rs in namespace replicaset-5950 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug  3 15:54:38.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5950" for this suite.

• [SLOW TEST:6.513 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":342,"skipped":6343,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:54:38.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5002
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  3 15:54:38.285: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 15:55:38.301: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:55:38.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-8130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug  3 15:55:40.444: INFO: found a healthy node: worker-0
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:55:56.498: INFO: pods created so far: [1 1 1]
Aug  3 15:55:56.498: INFO: length of pods created so far: 3
Aug  3 15:55:58.508: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Aug  3 15:56:05.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-8130" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:56:05.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5002" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:87.395 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":343,"skipped":6359,"failed":0}
SSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:56:05.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9091
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-af3fd3aa-b695-4756-bb64-bed7d1a2dca9
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:56:07.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9091" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6363,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:56:07.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-7065
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug  3 15:56:07.859: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug  3 15:56:07.861: INFO: starting watch
STEP: patching
STEP: updating
Aug  3 15:56:07.869: INFO: waiting for watch events with expected annotations
Aug  3 15:56:07.869: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Aug  3 15:56:07.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-7065" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":345,"skipped":6405,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:56:07.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1421
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug  3 15:56:08.516: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug  3 15:56:11.543: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:56:11.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3045-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug  3 15:56:14.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1421" for this suite.
STEP: Destroying namespace "webhook-1421-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.733 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":346,"skipped":6417,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:56:14.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-7607
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug  3 15:56:14.759: INFO: Waiting up to 1m0s for all nodes to be ready
Aug  3 15:57:14.774: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:14.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-3069
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:57:14.904: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug  3 15:57:14.906: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Aug  3 15:57:14.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-3069" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug  3 15:57:14.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-7607" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.316 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":347,"skipped":6422,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:14.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7758
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug  3 15:57:15.071: INFO: Waiting up to 5m0s for pod "downward-api-d4cced13-8819-45ca-9153-d823b98fe145" in namespace "downward-api-7758" to be "Succeeded or Failed"
Aug  3 15:57:15.073: INFO: Pod "downward-api-d4cced13-8819-45ca-9153-d823b98fe145": Phase="Pending", Reason="", readiness=false. Elapsed: 1.946363ms
Aug  3 15:57:17.079: INFO: Pod "downward-api-d4cced13-8819-45ca-9153-d823b98fe145": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007590185s
Aug  3 15:57:19.085: INFO: Pod "downward-api-d4cced13-8819-45ca-9153-d823b98fe145": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013652988s
STEP: Saw pod success
Aug  3 15:57:19.085: INFO: Pod "downward-api-d4cced13-8819-45ca-9153-d823b98fe145" satisfied condition "Succeeded or Failed"
Aug  3 15:57:19.087: INFO: Trying to get logs from node worker-0 pod downward-api-d4cced13-8819-45ca-9153-d823b98fe145 container dapi-container: <nil>
STEP: delete the pod
Aug  3 15:57:19.100: INFO: Waiting for pod downward-api-d4cced13-8819-45ca-9153-d823b98fe145 to disappear
Aug  3 15:57:19.102: INFO: Pod downward-api-d4cced13-8819-45ca-9153-d823b98fe145 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug  3 15:57:19.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7758" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6438,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:19.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-ecdb1f4c-4245-4a01-b251-d7751a259515
STEP: Creating a pod to test consume configMaps
Aug  3 15:57:19.238: INFO: Waiting up to 5m0s for pod "pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2" in namespace "configmap-3348" to be "Succeeded or Failed"
Aug  3 15:57:19.240: INFO: Pod "pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.482269ms
Aug  3 15:57:21.247: INFO: Pod "pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00890926s
Aug  3 15:57:23.251: INFO: Pod "pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012808117s
STEP: Saw pod success
Aug  3 15:57:23.251: INFO: Pod "pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2" satisfied condition "Succeeded or Failed"
Aug  3 15:57:23.252: INFO: Trying to get logs from node worker-0 pod pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2 container agnhost-container: <nil>
STEP: delete the pod
Aug  3 15:57:23.266: INFO: Waiting for pod pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2 to disappear
Aug  3 15:57:23.268: INFO: Pod pod-configmaps-78edd6f2-d77d-4ddf-b175-fa27c6ad22b2 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug  3 15:57:23.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3348" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":349,"skipped":6440,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:23.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-5649
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug  3 15:57:23.401: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:25.406: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.36.79 on the node which pod1 resides and expect scheduled
Aug  3 15:57:25.412: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:27.419: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.36.79 but use UDP protocol on the node which pod2 resides
Aug  3 15:57:27.425: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:29.433: INFO: The status of Pod pod3 is Running (Ready = false)
Aug  3 15:57:31.432: INFO: The status of Pod pod3 is Running (Ready = true)
Aug  3 15:57:31.439: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:33.443: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug  3 15:57:33.445: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.36.79 http://127.0.0.1:54323/hostname] Namespace:hostport-5649 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:57:33.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:57:33.446: INFO: ExecWithOptions: Clientset creation
Aug  3 15:57:33.446: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5649/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.36.79+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.36.79, port: 54323
Aug  3 15:57:33.516: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.36.79:54323/hostname] Namespace:hostport-5649 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:57:33.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:57:33.517: INFO: ExecWithOptions: Clientset creation
Aug  3 15:57:33.517: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5649/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.36.79%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.36.79, port: 54323 UDP
Aug  3 15:57:33.583: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.0.36.79 54323] Namespace:hostport-5649 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug  3 15:57:33.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
Aug  3 15:57:33.584: INFO: ExecWithOptions: Clientset creation
Aug  3 15:57:33.584: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5649/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.0.36.79+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Aug  3 15:57:38.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-5649" for this suite.

• [SLOW TEST:15.362 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":350,"skipped":6451,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:38.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-7461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug  3 15:57:38.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-7461" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":351,"skipped":6459,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:38.768: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-7441
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Aug  3 15:57:38.890: INFO: Endpoints addresses: [10.0.52.114] , ports: [6443]
Aug  3 15:57:38.890: INFO: EndpointSlices addresses: [10.0.52.114] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug  3 15:57:38.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-7441" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":352,"skipped":6497,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:38.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug  3 15:57:39.014: INFO: namespace kubectl-9987
Aug  3 15:57:39.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-9987 create -f -'
Aug  3 15:57:39.822: INFO: stderr: ""
Aug  3 15:57:39.822: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug  3 15:57:40.827: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:57:40.827: INFO: Found 0 / 1
Aug  3 15:57:41.827: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:57:41.827: INFO: Found 1 / 1
Aug  3 15:57:41.827: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug  3 15:57:41.831: INFO: Selector matched 1 pods for map[app:agnhost]
Aug  3 15:57:41.831: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug  3 15:57:41.831: INFO: wait on agnhost-primary startup in kubectl-9987 
Aug  3 15:57:41.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-9987 logs agnhost-primary-7g44w agnhost-primary'
Aug  3 15:57:41.885: INFO: stderr: ""
Aug  3 15:57:41.885: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug  3 15:57:41.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-9987 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug  3 15:57:41.947: INFO: stderr: ""
Aug  3 15:57:41.947: INFO: stdout: "service/rm2 exposed\n"
Aug  3 15:57:41.950: INFO: Service rm2 in namespace kubectl-9987 found.
STEP: exposing service
Aug  3 15:57:43.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3167797958 --namespace=kubectl-9987 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug  3 15:57:44.064: INFO: stderr: ""
Aug  3 15:57:44.064: INFO: stdout: "service/rm3 exposed\n"
Aug  3 15:57:44.067: INFO: Service rm3 in namespace kubectl-9987 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug  3 15:57:46.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9987" for this suite.

• [SLOW TEST:7.181 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":353,"skipped":6520,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:46.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2440
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug  3 15:57:46.205: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc" in namespace "downward-api-2440" to be "Succeeded or Failed"
Aug  3 15:57:46.207: INFO: Pod "downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.072117ms
Aug  3 15:57:48.214: INFO: Pod "downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009637983s
Aug  3 15:57:50.219: INFO: Pod "downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013969256s
STEP: Saw pod success
Aug  3 15:57:50.219: INFO: Pod "downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc" satisfied condition "Succeeded or Failed"
Aug  3 15:57:50.220: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc container client-container: <nil>
STEP: delete the pod
Aug  3 15:57:50.232: INFO: Waiting for pod downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc to disappear
Aug  3 15:57:50.234: INFO: Pod downwardapi-volume-e776c315-2d70-4486-a189-29d60a5eafbc no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug  3 15:57:50.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2440" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":354,"skipped":6526,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:50.239: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug  3 15:57:50.371: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:52.378: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug  3 15:57:52.386: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug  3 15:57:54.392: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug  3 15:57:54.418: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug  3 15:57:54.420: INFO: Pod pod-with-poststart-exec-hook still exists
Aug  3 15:57:56.421: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug  3 15:57:56.425: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug  3 15:57:56.425: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4352" for this suite.

• [SLOW TEST:6.191 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":355,"skipped":6544,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug  3 15:57:56.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3167797958
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug  3 15:57:56.553: INFO: Waiting up to 5m0s for pod "pod-346f05e2-4b9f-46d7-af67-610b7184f038" in namespace "emptydir-5161" to be "Succeeded or Failed"
Aug  3 15:57:56.556: INFO: Pod "pod-346f05e2-4b9f-46d7-af67-610b7184f038": Phase="Pending", Reason="", readiness=false. Elapsed: 2.534082ms
Aug  3 15:57:58.563: INFO: Pod "pod-346f05e2-4b9f-46d7-af67-610b7184f038": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00961162s
Aug  3 15:58:00.568: INFO: Pod "pod-346f05e2-4b9f-46d7-af67-610b7184f038": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014735837s
STEP: Saw pod success
Aug  3 15:58:00.568: INFO: Pod "pod-346f05e2-4b9f-46d7-af67-610b7184f038" satisfied condition "Succeeded or Failed"
Aug  3 15:58:00.570: INFO: Trying to get logs from node worker-0 pod pod-346f05e2-4b9f-46d7-af67-610b7184f038 container test-container: <nil>
STEP: delete the pod
Aug  3 15:58:00.581: INFO: Waiting for pod pod-346f05e2-4b9f-46d7-af67-610b7184f038 to disappear
Aug  3 15:58:00.582: INFO: Pod pod-346f05e2-4b9f-46d7-af67-610b7184f038 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug  3 15:58:00.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5161" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6587,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSAug  3 15:58:00.589: INFO: Running AfterSuite actions on all nodes
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug  3 15:58:00.589: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug  3 15:58:00.589: INFO: Running AfterSuite actions on node 1
Aug  3 15:58:00.589: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5614.337 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h33m36.055486618s
Test Suite Passed
