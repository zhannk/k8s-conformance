I0130 07:50:24.800415      22 e2e.go:129] Starting e2e run "90002b43-9a44-44e0-bb36-a4b647f8f813" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1675065024 - Will randomize all specs
Will run 356 of 6973 specs

Jan 30 07:50:26.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
E0130 07:50:26.258716      22 progress.go:119] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
Jan 30 07:50:26.260: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jan 30 07:50:26.302: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jan 30 07:50:26.365: INFO: 28 / 28 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jan 30 07:50:26.365: INFO: expected 9 pod replicas in namespace 'kube-system', 9 are Running and Ready.
Jan 30 07:50:26.365: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jan 30 07:50:26.371: INFO: 7 / 7 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
Jan 30 07:50:26.371: INFO: e2e test version: v1.24.7
Jan 30 07:50:26.373: INFO: kube-apiserver version: v1.24.7
Jan 30 07:50:26.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 07:50:26.379: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:50:26.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
W0130 07:50:26.403260      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jan 30 07:50:26.403: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Jan 30 07:50:26.413: INFO: No PSP annotation exists on dry run pod; assuming PodSecurityPolicy is disabled
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 30 07:50:26.430: INFO: Waiting up to 5m0s for pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d" in namespace "downward-api-9952" to be "Succeeded or Failed"
Jan 30 07:50:26.435: INFO: Pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.449235ms
Jan 30 07:50:28.451: INFO: Pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020754707s
Jan 30 07:50:30.465: INFO: Pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034687068s
Jan 30 07:50:32.485: INFO: Pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.054184443s
STEP: Saw pod success
Jan 30 07:50:32.485: INFO: Pod "downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d" satisfied condition "Succeeded or Failed"
Jan 30 07:50:32.490: INFO: Trying to get logs from node conoa-prod01-wk004 pod downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d container dapi-container: <nil>
STEP: delete the pod
Jan 30 07:50:32.520: INFO: Waiting for pod downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d to disappear
Jan 30 07:50:32.525: INFO: Pod downward-api-62c248de-7048-4bd2-9b4e-9a5b08c47b3d no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 30 07:50:32.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9952" for this suite.

• [SLOW TEST:6.164 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":1,"skipped":26,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:50:32.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename events
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Jan 30 07:50:32.589: INFO: created test-event-1
Jan 30 07:50:32.595: INFO: created test-event-2
Jan 30 07:50:32.602: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Jan 30 07:50:32.607: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Jan 30 07:50:32.630: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 30 07:50:32.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-1317" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":2,"skipped":100,"failed":0}
SSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:50:32.650: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:50:32.690: INFO: created pod
Jan 30 07:50:32.690: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-5843" to be "Succeeded or Failed"
Jan 30 07:50:32.695: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 5.066432ms
Jan 30 07:50:34.710: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020359327s
Jan 30 07:50:36.722: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032126395s
Jan 30 07:50:38.736: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 6.045995478s
Jan 30 07:50:40.744: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.054563696s
STEP: Saw pod success
Jan 30 07:50:40.745: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jan 30 07:51:10.745: INFO: polling logs
Jan 30 07:51:10.764: INFO: Pod logs: 
I0130 07:50:37.162736       1 log.go:195] OK: Got token
I0130 07:50:37.162770       1 log.go:195] validating with in-cluster discovery
I0130 07:50:37.163037       1 log.go:195] OK: got issuer https://kubernetes.default.svc.cluster.local
I0130 07:50:37.163054       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5843:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675065632, NotBefore:1675065032, IssuedAt:1675065032, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5843", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d37c849a-e148-4ecc-9d5d-1693cb12fcb9"}}}
I0130 07:50:37.194781       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0130 07:50:37.205790       1 log.go:195] OK: Validated signature on JWT
I0130 07:50:37.205961       1 log.go:195] OK: Got valid claims from token!
I0130 07:50:37.206010       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5843:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675065632, NotBefore:1675065032, IssuedAt:1675065032, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5843", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d37c849a-e148-4ecc-9d5d-1693cb12fcb9"}}}

Jan 30 07:51:10.764: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 07:51:10.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5843" for this suite.

• [SLOW TEST:38.152 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":3,"skipped":105,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:10.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-2188
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-2188
I0130 07:51:10.862062      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2188, replica count: 2
I0130 07:51:13.914401      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 07:51:16.915: INFO: Creating new exec pod
I0130 07:51:16.915885      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 07:51:19.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 30 07:51:20.224: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 30 07:51:20.224: INFO: stdout: "externalname-service-gjvsd"
Jan 30 07:51:20.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.173.131 80'
Jan 30 07:51:20.433: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.173.131 80\nConnection to 10.108.173.131 80 port [tcp/http] succeeded!\n"
Jan 30 07:51:20.433: INFO: stdout: "externalname-service-6zdw9"
Jan 30 07:51:20.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 31028'
Jan 30 07:51:20.651: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 31028\nConnection to 10.55.210.16 31028 port [tcp/*] succeeded!\n"
Jan 30 07:51:20.651: INFO: stdout: ""
Jan 30 07:51:21.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 31028'
Jan 30 07:51:21.883: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 31028\nConnection to 10.55.210.16 31028 port [tcp/*] succeeded!\n"
Jan 30 07:51:21.883: INFO: stdout: "externalname-service-gjvsd"
Jan 30 07:51:21.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.13 31028'
Jan 30 07:51:22.079: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.13 31028\nConnection to 10.55.210.13 31028 port [tcp/*] succeeded!\n"
Jan 30 07:51:22.079: INFO: stdout: ""
Jan 30 07:51:23.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2188 exec execpodg55c6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.13 31028'
Jan 30 07:51:23.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.13 31028\nConnection to 10.55.210.13 31028 port [tcp/*] succeeded!\n"
Jan 30 07:51:23.317: INFO: stdout: "externalname-service-gjvsd"
Jan 30 07:51:23.317: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 07:51:23.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2188" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.561 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":4,"skipped":112,"failed":0}
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:23.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-pred
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 30 07:51:23.388: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 07:51:23.399: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 07:51:23.403: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk001 before test
Jan 30 07:51:23.435: INFO: argocd-server-77b58f79dc-hj98w from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container server ready: true, restart count 0
Jan 30 07:51:23.435: INFO: node-collector-container-metrics-dg55g from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 07:51:23.435: INFO: node-collector-machine-sections-jrhk5 from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 07:51:23.435: INFO: cmk-redirect-5c548ffd54-bj69z from cmk-redirect started at 2022-12-07 15:38:18 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container cmk-redirect ready: true, restart count 0
Jan 30 07:51:23.435: INFO: k8s-tuesday-static-5d79d6b47f-xl2cf from k8s-tuesday started at 2022-11-25 09:46:55 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 07:51:23.435: INFO: mypostgres-3-0 from k8s-tuesday started at 2022-11-23 14:43:19 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container mypostgres-3 ready: true, restart count 0
Jan 30 07:51:23.435: INFO: cilium-zpx6l from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 07:51:23.435: INFO: sealed-secrets-6c9cb56ffb-8qpbb from kube-system started at 2022-10-19 12:47:55 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container controller ready: true, restart count 2
Jan 30 07:51:23.435: INFO: fluent-bit-79bn9 from loki started at 2023-01-25 08:24:01 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 07:51:23.435: INFO: loki-0 from loki started at 2023-01-26 11:30:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container single-binary ready: true, restart count 0
Jan 30 07:51:23.435: INFO: loki-canary-lnmdz from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 07:51:23.435: INFO: loki-logs-rth4m from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 07:51:23.435: INFO: alertmanager-conoa-prod01-alertmanager-0 from monitoring started at 2022-12-16 07:28:11 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container alertmanager ready: true, restart count 1
Jan 30 07:51:23.435: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.435: INFO: kube-prometheus-stack-kube-state-metrics-75b97d7857-sk9xz from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jan 30 07:51:23.435: INFO: kube-prometheus-stack-prometheus-node-exporter-xzswd from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 07:51:23.435: INFO: sonobuoy-e2e-job-bdc8027a22bb485c from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container e2e ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 07:51:23.435: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-5vfkz from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 07:51:23.435: INFO: trident-csi-7c4cd7bbcb-mkm5j from trident started at 2022-11-28 14:09:24 +0000 UTC (6 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container csi-attacher ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container csi-provisioner ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container csi-resizer ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container csi-snapshotter ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container trident-autosupport ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 07:51:23.435: INFO: trident-csi-f6mmx from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.435: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 07:51:23.435: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk002 before test
Jan 30 07:51:23.459: INFO: argocd-application-controller-0 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container application-controller ready: true, restart count 0
Jan 30 07:51:23.459: INFO: argocd-applicationset-controller-54bb64dbb5-7brsg from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container applicationset-controller ready: true, restart count 0
Jan 30 07:51:23.459: INFO: argocd-dex-server-5585d7cbd9-qzbv5 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container dex-server ready: true, restart count 0
Jan 30 07:51:23.459: INFO: argocd-repo-server-6ff8bdf59f-fkmxn from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container repo-server ready: true, restart count 0
Jan 30 07:51:23.459: INFO: cert-manager-cainjector-7f694c4c58-mgcqx from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
Jan 30 07:51:23.459: INFO: node-collector-container-metrics-h6m9f from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 07:51:23.459: INFO: node-collector-machine-sections-8q5tz from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 07:51:23.459: INFO: ingress-nginx-controller-647d54b58b-twn6k from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container controller ready: true, restart count 0
Jan 30 07:51:23.459: INFO: k8s-status-8584c5d96d-dwhms from k8s-status started at 2022-12-02 08:33:48 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 07:51:23.459: INFO: k8s-tuesday-static-5d79d6b47f-wphmx from k8s-tuesday started at 2022-11-25 09:46:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 07:51:23.459: INFO: mypostgres-5-0 from k8s-tuesday started at 2022-12-05 10:12:37 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container mypostgres-5 ready: true, restart count 0
Jan 30 07:51:23.459: INFO: mypostgres-6-0 from k8s-tuesday started at 2022-12-15 14:39:35 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container mypostgres-6 ready: true, restart count 0
Jan 30 07:51:23.459: INFO: cilium-lblbj from kube-system started at 2022-10-19 12:37:54 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 07:51:23.459: INFO: metrics-server-7cd9d56884-5cr4h from kube-system started at 2022-11-16 17:38:11 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container metrics-server ready: true, restart count 10
Jan 30 07:51:23.459: INFO: kubegres-controller-manager-8495978cb9-vhhtq from kubegres-system started at 2022-11-08 09:55:48 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container kube-rbac-proxy ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container manager ready: true, restart count 0
Jan 30 07:51:23.459: INFO: fluent-bit-cwdz7 from loki started at 2023-01-25 08:23:43 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 07:51:23.459: INFO: grafana-674c6bb94d-lv6gl from loki started at 2022-12-16 07:22:53 +0000 UTC (3 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container grafana ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container grafana-sc-dashboard ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container grafana-sc-datasources ready: true, restart count 0
Jan 30 07:51:23.459: INFO: loki-canary-8xx7v from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 07:51:23.459: INFO: loki-grafana-agent-operator-5555fc45d8-qjcgg from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container grafana-agent-operator ready: true, restart count 0
Jan 30 07:51:23.459: INFO: loki-logs-pt9jp from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 07:51:23.459: INFO: kube-prometheus-stack-prometheus-node-exporter-j955v from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 07:51:23.459: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-844qc from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 07:51:23.459: INFO: trident-csi-2gb6l from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 07:51:23.459: INFO: trident-operator-5f4988667c-ww7fk from trident started at 2022-12-15 15:49:06 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.459: INFO: 	Container trident-operator ready: true, restart count 0
Jan 30 07:51:23.459: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk003 before test
Jan 30 07:51:23.488: INFO: cert-manager-85945b75d4-ljqvw from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container cert-manager-controller ready: true, restart count 0
Jan 30 07:51:23.488: INFO: cluster-collector-658c4444c4-s8qzs from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container cluster-collector ready: true, restart count 0
Jan 30 07:51:23.488: INFO: node-collector-container-metrics-v8x9j from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 07:51:23.488: INFO: node-collector-machine-sections-ft6g4 from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 07:51:23.488: INFO: init-demo from deleteme started at 2022-10-20 07:50:21 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container deleteme ready: true, restart count 0
Jan 30 07:51:23.488: INFO: k8s-status-8584c5d96d-thg7f from k8s-status started at 2022-12-02 08:33:42 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 07:51:23.488: INFO: k8s-tuesday-6576b5dbdf-r74hd from k8s-tuesday started at 2022-11-25 12:32:47 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container k8s-tuesday ready: true, restart count 0
Jan 30 07:51:23.488: INFO: cilium-mnm26 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 07:51:23.488: INFO: cilium-operator-746975c47c-4g5b9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container cilium-operator ready: true, restart count 14
Jan 30 07:51:23.488: INFO: hubble-relay-768858c54c-bss8j from kube-system started at 2022-10-19 12:38:02 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container hubble-relay ready: true, restart count 0
Jan 30 07:51:23.488: INFO: hubble-ui-64bd8dcbf5-xmgzp from kube-system started at 2022-10-19 12:38:02 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container backend ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container frontend ready: true, restart count 0
Jan 30 07:51:23.488: INFO: fluent-bit-gnnc4 from loki started at 2023-01-25 08:23:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 07:51:23.488: INFO: loki-canary-hlvzt from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 07:51:23.488: INFO: loki-logs-8pwsm from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 07:51:23.488: INFO: conoa-prod01-operator-5b7996ffd-v9ntf from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
Jan 30 07:51:23.488: INFO: kube-prometheus-stack-prometheus-node-exporter-vnkjb from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 07:51:23.488: INFO: prometheus-conoa-prod01-prometheus-0 from monitoring started at 2022-12-16 07:28:11 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container prometheus ready: true, restart count 0
Jan 30 07:51:23.488: INFO: execpodg55c6 from services-2188 started at 2023-01-30 07:51:16 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container agnhost-container ready: true, restart count 0
Jan 30 07:51:23.488: INFO: externalname-service-6zdw9 from services-2188 started at 2023-01-30 07:51:10 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container externalname-service ready: true, restart count 0
Jan 30 07:51:23.488: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-rl4mv from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 07:51:23.488: INFO: trident-csi-jq2pf from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.488: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 07:51:23.488: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk004 before test
Jan 30 07:51:23.522: INFO: argocd-notifications-controller-59b986f5cb-c8wk6 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container notifications-controller ready: true, restart count 0
Jan 30 07:51:23.522: INFO: argocd-redis-56bcf8f58d-wqh45 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container redis ready: true, restart count 0
Jan 30 07:51:23.522: INFO: cert-manager-webhook-7cd8c769bb-dfsm6 from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container cert-manager-webhook ready: true, restart count 0
Jan 30 07:51:23.522: INFO: node-collector-container-metrics-bw8zr from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 07:51:23.522: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 07:51:23.522: INFO: node-collector-machine-sections-pmhpf from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 07:51:23.522: INFO: ingress-nginx-controller-647d54b58b-p9ppz from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container controller ready: true, restart count 0
Jan 30 07:51:23.522: INFO: init-demo from jonas started at 2022-10-20 14:11:25 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container nginx ready: true, restart count 0
Jan 30 07:51:23.522: INFO: k8s-status-8584c5d96d-tpq7j from k8s-status started at 2022-12-02 08:33:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 07:51:23.522: INFO: k8s-tuesday-static-5d79d6b47f-xgfgq from k8s-tuesday started at 2022-11-25 09:46:59 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 07:51:23.522: INFO: cilium-56rw9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 07:51:23.522: INFO: kubernetes-dashboard-7bcd8f7c6d-p7nzq from kubernetes-dashboard started at 2022-10-19 12:47:15 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jan 30 07:51:23.522: INFO: fluent-bit-c5vmh from loki started at 2023-01-25 08:24:09 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 07:51:23.522: INFO: loki-canary-gjffw from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 07:51:23.522: INFO: loki-logs-9h6jm from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 07:51:23.522: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 07:51:23.522: INFO: kube-prometheus-stack-prometheus-node-exporter-cd45h from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 07:51:23.522: INFO: externalname-service-gjvsd from services-2188 started at 2023-01-30 07:51:10 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container externalname-service ready: true, restart count 0
Jan 30 07:51:23.522: INFO: sonobuoy from sonobuoy started at 2023-01-30 07:50:08 +0000 UTC (1 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 07:51:23.522: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-mtd4x from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 07:51:23.522: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 07:51:23.522: INFO: trident-csi-vhc58 from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 07:51:23.522: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 07:51:23.522: INFO: 	Container trident-main ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.173f06d192fba37a], Reason = [FailedScheduling], Message = [0/7 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/master: }, 7 node(s) didn't match Pod's node affinity/selector. preemption: 0/7 nodes are available: 7 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 30 07:51:24.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-658" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":5,"skipped":121,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:24.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:51:24.680: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 07:51:29.688: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Jan 30 07:51:31.719: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Jan 30 07:51:31.737: INFO: observed ReplicaSet test-rs in namespace replicaset-8152 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 07:51:31.746: INFO: observed ReplicaSet test-rs in namespace replicaset-8152 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 07:51:31.757: INFO: observed ReplicaSet test-rs in namespace replicaset-8152 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 07:51:31.764: INFO: observed ReplicaSet test-rs in namespace replicaset-8152 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 07:51:36.812: INFO: observed ReplicaSet test-rs in namespace replicaset-8152 with ReadyReplicas 2, AvailableReplicas 2
Jan 30 07:51:38.753: INFO: observed Replicaset test-rs in namespace replicaset-8152 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 07:51:38.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8152" for this suite.

• [SLOW TEST:14.146 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":6,"skipped":138,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:38.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename cronjob
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 30 07:51:38.813: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 30 07:51:38.819: INFO: starting watch
STEP: patching
STEP: updating
Jan 30 07:51:38.839: INFO: waiting for watch events with expected annotations
Jan 30 07:51:38.839: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 30 07:51:38.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4237" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":7,"skipped":147,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:38.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:51:38.941: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572" in namespace "security-context-test-6844" to be "Succeeded or Failed"
Jan 30 07:51:38.946: INFO: Pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572": Phase="Pending", Reason="", readiness=false. Elapsed: 4.510489ms
Jan 30 07:51:40.959: INFO: Pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018043446s
Jan 30 07:51:42.975: INFO: Pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03395318s
Jan 30 07:51:44.989: INFO: Pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.047707267s
Jan 30 07:51:44.989: INFO: Pod "alpine-nnp-false-13b802f0-c39c-4208-86dc-226bb445d572" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 07:51:45.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6844" for this suite.

• [SLOW TEST:6.117 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":159,"failed":0}
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:51:45.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 30 07:51:45.063: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 07:52:45.236: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:52:45.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:52:45.293: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Jan 30 07:52:45.298: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Jan 30 07:52:45.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-6321" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 30 07:52:45.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-6411" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.400 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":9,"skipped":160,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:52:45.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 30 07:52:45.457: INFO: Waiting up to 5m0s for pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9" in namespace "emptydir-4784" to be "Succeeded or Failed"
Jan 30 07:52:45.462: INFO: Pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.207922ms
Jan 30 07:52:47.470: INFO: Pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012960692s
Jan 30 07:52:49.487: INFO: Pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029667816s
Jan 30 07:52:51.499: INFO: Pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.041316006s
STEP: Saw pod success
Jan 30 07:52:51.499: INFO: Pod "pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9" satisfied condition "Succeeded or Failed"
Jan 30 07:52:51.503: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9 container test-container: <nil>
STEP: delete the pod
Jan 30 07:52:51.526: INFO: Waiting for pod pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9 to disappear
Jan 30 07:52:51.530: INFO: Pod pod-0bcbc016-eff5-4687-b00a-13bfa871ccd9 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 07:52:51.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4784" for this suite.

• [SLOW TEST:6.123 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":10,"skipped":169,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:52:51.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 30 07:52:51.584: INFO: Waiting up to 5m0s for pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf" in namespace "emptydir-5160" to be "Succeeded or Failed"
Jan 30 07:52:51.590: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Pending", Reason="", readiness=false. Elapsed: 5.635085ms
Jan 30 07:52:53.596: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012213529s
Jan 30 07:52:55.602: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017822447s
Jan 30 07:52:57.615: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.030574677s
Jan 30 07:52:59.624: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Pending", Reason="", readiness=false. Elapsed: 8.04005633s
Jan 30 07:53:01.640: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.055933265s
STEP: Saw pod success
Jan 30 07:53:01.641: INFO: Pod "pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf" satisfied condition "Succeeded or Failed"
Jan 30 07:53:01.647: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf container test-container: <nil>
STEP: delete the pod
Jan 30 07:53:01.672: INFO: Waiting for pod pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf to disappear
Jan 30 07:53:01.676: INFO: Pod pod-7a3cf177-849a-44b9-a661-9e9557e4ceaf no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 07:53:01.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5160" for this suite.

• [SLOW TEST:10.144 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":190,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:53:01.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename subpath
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-zbh2
STEP: Creating a pod to test atomic-volume-subpath
Jan 30 07:53:01.740: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-zbh2" in namespace "subpath-3881" to be "Succeeded or Failed"
Jan 30 07:53:01.744: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.892731ms
Jan 30 07:53:03.754: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01374409s
Jan 30 07:53:05.764: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 4.02382246s
Jan 30 07:53:07.775: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 6.034506546s
Jan 30 07:53:09.792: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 8.051555289s
Jan 30 07:53:11.806: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 10.066066771s
Jan 30 07:53:13.815: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 12.075202362s
Jan 30 07:53:15.826: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 14.086004302s
Jan 30 07:53:17.836: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 16.095497748s
Jan 30 07:53:19.853: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 18.112475799s
Jan 30 07:53:21.870: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 20.129452762s
Jan 30 07:53:23.880: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=true. Elapsed: 22.139423893s
Jan 30 07:53:25.890: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Running", Reason="", readiness=false. Elapsed: 24.149866544s
Jan 30 07:53:27.907: INFO: Pod "pod-subpath-test-configmap-zbh2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.166980474s
STEP: Saw pod success
Jan 30 07:53:27.907: INFO: Pod "pod-subpath-test-configmap-zbh2" satisfied condition "Succeeded or Failed"
Jan 30 07:53:27.912: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-subpath-test-configmap-zbh2 container test-container-subpath-configmap-zbh2: <nil>
STEP: delete the pod
Jan 30 07:53:27.939: INFO: Waiting for pod pod-subpath-test-configmap-zbh2 to disappear
Jan 30 07:53:27.943: INFO: Pod pod-subpath-test-configmap-zbh2 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-zbh2
Jan 30 07:53:27.943: INFO: Deleting pod "pod-subpath-test-configmap-zbh2" in namespace "subpath-3881"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 30 07:53:27.947: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3881" for this suite.

• [SLOW TEST:26.271 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":12,"skipped":242,"failed":0}
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:53:27.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9485.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9485.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9485.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9485.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 07:53:38.048: INFO: DNS probes using dns-9485/dns-test-2d342fb9-10bb-47df-9df2-293d92ef9364 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 07:53:38.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9485" for this suite.

• [SLOW TEST:10.127 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":13,"skipped":242,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:53:38.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 07:53:49.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8183" for this suite.

• [SLOW TEST:11.103 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":14,"skipped":264,"failed":0}
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:53:49.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 07:53:49.232: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e" in namespace "projected-2764" to be "Succeeded or Failed"
Jan 30 07:53:49.236: INFO: Pod "downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.346115ms
Jan 30 07:53:51.253: INFO: Pod "downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02142541s
Jan 30 07:53:53.270: INFO: Pod "downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.037664492s
STEP: Saw pod success
Jan 30 07:53:53.270: INFO: Pod "downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e" satisfied condition "Succeeded or Failed"
Jan 30 07:53:53.274: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e container client-container: <nil>
STEP: delete the pod
Jan 30 07:53:53.295: INFO: Waiting for pod downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e to disappear
Jan 30 07:53:53.300: INFO: Pod downwardapi-volume-5cbb3cbf-acd6-47b6-9bd6-defdd09cd25e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 07:53:53.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2764" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":264,"failed":0}

------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:53:53.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-76ddd815-bac5-477f-a3c4-1776c33e59fa
STEP: Creating a pod to test consume secrets
Jan 30 07:53:53.348: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386" in namespace "projected-5266" to be "Succeeded or Failed"
Jan 30 07:53:53.351: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Pending", Reason="", readiness=false. Elapsed: 2.908223ms
Jan 30 07:53:55.359: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010591306s
Jan 30 07:53:57.369: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02068693s
Jan 30 07:53:59.381: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Pending", Reason="", readiness=false. Elapsed: 6.032335957s
Jan 30 07:54:01.389: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Pending", Reason="", readiness=false. Elapsed: 8.040865082s
Jan 30 07:54:03.401: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.052996991s
STEP: Saw pod success
Jan 30 07:54:03.401: INFO: Pod "pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386" satisfied condition "Succeeded or Failed"
Jan 30 07:54:03.412: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386 container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 07:54:03.453: INFO: Waiting for pod pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386 to disappear
Jan 30 07:54:03.462: INFO: Pod pod-projected-secrets-d99f29ee-b7c5-449d-ac22-c8cdbe4d2386 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 07:54:03.462: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5266" for this suite.

• [SLOW TEST:10.161 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":16,"skipped":264,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:54:03.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:54:03.502: INFO: Creating simple deployment test-new-deployment
Jan 30 07:54:03.512: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
Jan 30 07:54:05.527: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 7, 54, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 7, 54, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 7, 54, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 7, 54, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-55df494869\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 07:54:07.574: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-7180  2de92ef6-d7ea-40d0-ba97-c5bdb4fa494c 37356263 3 2023-01-30 07:54:03 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-30 07:54:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 07:54:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002e81ee8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 07:54:06 +0000 UTC,LastTransitionTime:2023-01-30 07:54:06 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2023-01-30 07:54:06 +0000 UTC,LastTransitionTime:2023-01-30 07:54:03 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 07:54:07.580: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-7180  fbfabfc2-8efd-4c97-a128-2df0a5e9d1d6 37356270 3 2023-01-30 07:54:03 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 2de92ef6-d7ea-40d0-ba97-c5bdb4fa494c 0xc00356e337 0xc00356e338}] []  [{kube-controller-manager Update apps/v1 2023-01-30 07:54:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2de92ef6-d7ea-40d0-ba97-c5bdb4fa494c\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 07:54:06 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00356e3c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 07:54:07.586: INFO: Pod "test-new-deployment-55df494869-djms4" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-djms4 test-new-deployment-55df494869- deployment-7180  669f5f69-28ea-4b19-8aaa-369f6a5e9ba5 37356266 0 2023-01-30 07:54:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet test-new-deployment-55df494869 fbfabfc2-8efd-4c97-a128-2df0a5e9d1d6 0xc0031ab057 0xc0031ab058}] []  [{kube-controller-manager Update v1 2023-01-30 07:54:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbfabfc2-8efd-4c97-a128-2df0a5e9d1d6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vvhld,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vvhld,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 07:54:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 07:54:07.586: INFO: Pod "test-new-deployment-55df494869-htxt7" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-htxt7 test-new-deployment-55df494869- deployment-7180  498c903e-b3f3-4b5e-8ee0-df004c99d255 37356254 0 2023-01-30 07:54:03 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet test-new-deployment-55df494869 fbfabfc2-8efd-4c97-a128-2df0a5e9d1d6 0xc0031ab1a7 0xc0031ab1a8}] []  [{kube-controller-manager Update v1 2023-01-30 07:54:03 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fbfabfc2-8efd-4c97-a128-2df0a5e9d1d6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 07:54:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.251\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kl7cn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kl7cn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 07:54:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 07:54:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 07:54:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 07:54:03 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.251,StartTime:2023-01-30 07:54:03 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 07:54:05 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://45bb42430d90c08809144b829aa6944d0a47d06faaf5a22d1e854176d71cfe71,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.251,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 07:54:07.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7180" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":17,"skipped":323,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:54:07.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename cronjob
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 30 07:59:07.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7506" for this suite.

• [SLOW TEST:300.072 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":18,"skipped":347,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:07.675: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-cfe2c71e-095e-4a88-8d4a-1d61e3ed10c0
STEP: Creating a pod to test consume configMaps
Jan 30 07:59:07.719: INFO: Waiting up to 5m0s for pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c" in namespace "configmap-9105" to be "Succeeded or Failed"
Jan 30 07:59:07.726: INFO: Pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.677515ms
Jan 30 07:59:09.735: INFO: Pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016037555s
Jan 30 07:59:11.752: INFO: Pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032788496s
Jan 30 07:59:13.759: INFO: Pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.04032671s
STEP: Saw pod success
Jan 30 07:59:13.759: INFO: Pod "pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c" satisfied condition "Succeeded or Failed"
Jan 30 07:59:13.765: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c container agnhost-container: <nil>
STEP: delete the pod
Jan 30 07:59:13.799: INFO: Waiting for pod pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c to disappear
Jan 30 07:59:13.804: INFO: Pod pod-configmaps-d59b54a2-72d2-4b3f-8458-52368fff478c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 07:59:13.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9105" for this suite.

• [SLOW TEST:6.144 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":19,"skipped":357,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:13.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jan 30 07:59:13.856: INFO: Waiting up to 5m0s for pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf" in namespace "emptydir-2750" to be "Succeeded or Failed"
Jan 30 07:59:13.861: INFO: Pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.712581ms
Jan 30 07:59:15.871: INFO: Pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014895496s
Jan 30 07:59:17.876: INFO: Pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020475222s
Jan 30 07:59:19.890: INFO: Pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.033835437s
STEP: Saw pod success
Jan 30 07:59:19.890: INFO: Pod "pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf" satisfied condition "Succeeded or Failed"
Jan 30 07:59:19.894: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf container test-container: <nil>
STEP: delete the pod
Jan 30 07:59:19.921: INFO: Waiting for pod pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf to disappear
Jan 30 07:59:19.925: INFO: Pod pod-33199f67-eb7b-4ed1-80f8-5ff173b89fbf no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 07:59:19.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2750" for this suite.

• [SLOW TEST:6.120 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":20,"skipped":358,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:19.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename tables
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Jan 30 07:59:19.977: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-7283" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":21,"skipped":387,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:19.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 07:59:20.319: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 07:59:22.345: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 7, 59, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 7, 59, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 7, 59, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 7, 59, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 07:59:25.372: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 07:59:25.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7524-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 07:59:28.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8516" for this suite.
STEP: Destroying namespace "webhook-8516-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:8.599 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":22,"skipped":413,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:28.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-c4d2c83a-cb75-4638-b201-9a64b1a95126
STEP: Creating a pod to test consume configMaps
Jan 30 07:59:28.624: INFO: Waiting up to 5m0s for pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40" in namespace "configmap-4846" to be "Succeeded or Failed"
Jan 30 07:59:28.627: INFO: Pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40": Phase="Pending", Reason="", readiness=false. Elapsed: 3.05712ms
Jan 30 07:59:30.638: INFO: Pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014038641s
Jan 30 07:59:32.652: INFO: Pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027618361s
Jan 30 07:59:34.662: INFO: Pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.038059429s
STEP: Saw pod success
Jan 30 07:59:34.662: INFO: Pod "pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40" satisfied condition "Succeeded or Failed"
Jan 30 07:59:34.668: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 07:59:34.695: INFO: Waiting for pod pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40 to disappear
Jan 30 07:59:34.699: INFO: Pod pod-configmaps-c0516b6d-7e3a-4830-b5f1-2ff4f0422e40 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 07:59:34.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4846" for this suite.

• [SLOW TEST:6.117 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":502,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:34.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 07:59:47.871: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4953" for this suite.

• [SLOW TEST:13.173 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":24,"skipped":609,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 07:59:47.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9454
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-9454
STEP: Waiting until pod test-pod will start running in namespace statefulset-9454
STEP: Creating statefulset with conflicting port in namespace statefulset-9454
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9454
Jan 30 07:59:53.998: INFO: Observed stateful pod in namespace: statefulset-9454, name: ss-0, uid: d480e938-fd79-4d89-87c9-b246fd48b39d, status phase: Pending. Waiting for statefulset controller to delete.
Jan 30 07:59:54.016: INFO: Observed stateful pod in namespace: statefulset-9454, name: ss-0, uid: d480e938-fd79-4d89-87c9-b246fd48b39d, status phase: Failed. Waiting for statefulset controller to delete.
Jan 30 07:59:54.025: INFO: Observed stateful pod in namespace: statefulset-9454, name: ss-0, uid: d480e938-fd79-4d89-87c9-b246fd48b39d, status phase: Failed. Waiting for statefulset controller to delete.
Jan 30 07:59:54.027: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9454
STEP: Removing pod with conflicting port in namespace statefulset-9454
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9454 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:00:08.122: INFO: Deleting all statefulset in ns statefulset-9454
Jan 30 08:00:08.127: INFO: Scaling statefulset ss to 0
Jan 30 08:00:18.156: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:00:18.161: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:00:18.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9454" for this suite.

• [SLOW TEST:30.307 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":25,"skipped":635,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:18.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Jan 30 08:00:18.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jan 30 08:00:18.327: INFO: stderr: ""
Jan 30 08:00:18.327: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Jan 30 08:00:18.327: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jan 30 08:00:18.327: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-9482" to be "running and ready, or succeeded"
Jan 30 08:00:18.332: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 5.076196ms
Jan 30 08:00:20.344: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016820971s
Jan 30 08:00:22.361: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 4.033590385s
Jan 30 08:00:22.361: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jan 30 08:00:22.361: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Jan 30 08:00:22.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator'
Jan 30 08:00:22.453: INFO: stderr: ""
Jan 30 08:00:22.453: INFO: stdout: "I0130 08:00:20.158789       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/9c2 477\nI0130 08:00:20.359086       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/7c5 351\nI0130 08:00:20.559734       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/sfwf 587\nI0130 08:00:20.759267       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/5c4g 508\nI0130 08:00:20.959865       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/mnrs 241\nI0130 08:00:21.159434       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/s9v2 516\nI0130 08:00:21.358898       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/twc4 554\nI0130 08:00:21.559446       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/hd9 433\nI0130 08:00:21.758980       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/r26 498\nI0130 08:00:21.959526       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/ktf 576\nI0130 08:00:22.158994       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/64db 456\nI0130 08:00:22.359531       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/w4c2 433\n"
STEP: limiting log lines
Jan 30 08:00:22.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator --tail=1'
Jan 30 08:00:22.533: INFO: stderr: ""
Jan 30 08:00:22.533: INFO: stdout: "I0130 08:00:22.359531       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/w4c2 433\n"
Jan 30 08:00:22.533: INFO: got output "I0130 08:00:22.359531       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/w4c2 433\n"
STEP: limiting log bytes
Jan 30 08:00:22.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator --limit-bytes=1'
Jan 30 08:00:22.634: INFO: stderr: ""
Jan 30 08:00:22.634: INFO: stdout: "I"
Jan 30 08:00:22.634: INFO: got output "I"
STEP: exposing timestamps
Jan 30 08:00:22.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator --tail=1 --timestamps'
Jan 30 08:00:22.719: INFO: stderr: ""
Jan 30 08:00:22.719: INFO: stdout: "2023-01-30T09:00:22.559069499+01:00 I0130 08:00:22.558886       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/4qmp 277\n"
Jan 30 08:00:22.719: INFO: got output "2023-01-30T09:00:22.559069499+01:00 I0130 08:00:22.558886       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/4qmp 277\n"
STEP: restricting to a time range
Jan 30 08:00:25.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator --since=1s'
Jan 30 08:00:25.328: INFO: stderr: ""
Jan 30 08:00:25.328: INFO: stdout: "I0130 08:00:24.358823       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/5ml9 453\nI0130 08:00:24.559356       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/v6v 350\nI0130 08:00:24.759777       1 logs_generator.go:76] 23 GET /api/v1/namespaces/kube-system/pods/xs4 306\nI0130 08:00:24.959267       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/hvvq 211\nI0130 08:00:25.159713       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/kube-system/pods/vg8 243\n"
Jan 30 08:00:25.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 logs logs-generator logs-generator --since=24h'
Jan 30 08:00:25.430: INFO: stderr: ""
Jan 30 08:00:25.430: INFO: stdout: "I0130 08:00:20.158789       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/9c2 477\nI0130 08:00:20.359086       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/7c5 351\nI0130 08:00:20.559734       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/sfwf 587\nI0130 08:00:20.759267       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/5c4g 508\nI0130 08:00:20.959865       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/mnrs 241\nI0130 08:00:21.159434       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/s9v2 516\nI0130 08:00:21.358898       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/twc4 554\nI0130 08:00:21.559446       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/hd9 433\nI0130 08:00:21.758980       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/r26 498\nI0130 08:00:21.959526       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/ktf 576\nI0130 08:00:22.158994       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/64db 456\nI0130 08:00:22.359531       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/w4c2 433\nI0130 08:00:22.558886       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/4qmp 277\nI0130 08:00:22.759442       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/h7kw 490\nI0130 08:00:22.959804       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/hl2 241\nI0130 08:00:23.159244       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/xtnt 533\nI0130 08:00:23.359731       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/mvn 481\nI0130 08:00:23.558986       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/bhv 376\nI0130 08:00:23.759435       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/kkdf 448\nI0130 08:00:23.959964       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/wkfw 415\nI0130 08:00:24.159385       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/7xj4 386\nI0130 08:00:24.358823       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/5ml9 453\nI0130 08:00:24.559356       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/v6v 350\nI0130 08:00:24.759777       1 logs_generator.go:76] 23 GET /api/v1/namespaces/kube-system/pods/xs4 306\nI0130 08:00:24.959267       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/hvvq 211\nI0130 08:00:25.159713       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/kube-system/pods/vg8 243\nI0130 08:00:25.359196       1 logs_generator.go:76] 26 POST /api/v1/namespaces/default/pods/8ftj 331\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Jan 30 08:00:25.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9482 delete pod logs-generator'
Jan 30 08:00:26.682: INFO: stderr: ""
Jan 30 08:00:26.682: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:00:26.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9482" for this suite.

• [SLOW TEST:8.513 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":26,"skipped":641,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:26.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename runtimeclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 30 08:00:28.772: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4403" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":662,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:28.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-b98dcb55-f309-420e-bec5-511052f8523a
STEP: Creating secret with name secret-projected-all-test-volume-bfa05597-ebda-4730-bd4f-f6d5440f73eb
STEP: Creating a pod to test Check all projections for projected volume plugin
Jan 30 08:00:28.829: INFO: Waiting up to 5m0s for pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68" in namespace "projected-7200" to be "Succeeded or Failed"
Jan 30 08:00:28.831: INFO: Pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.727057ms
Jan 30 08:00:30.848: INFO: Pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019419287s
Jan 30 08:00:32.868: INFO: Pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68": Phase="Pending", Reason="", readiness=false. Elapsed: 4.039627119s
Jan 30 08:00:34.880: INFO: Pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.051361315s
STEP: Saw pod success
Jan 30 08:00:34.880: INFO: Pod "projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68" satisfied condition "Succeeded or Failed"
Jan 30 08:00:34.885: INFO: Trying to get logs from node conoa-prod01-wk004 pod projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68 container projected-all-volume-test: <nil>
STEP: delete the pod
Jan 30 08:00:34.911: INFO: Waiting for pod projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68 to disappear
Jan 30 08:00:34.916: INFO: Pod projected-volume-70f9cdd3-8094-47a0-b4c0-ca060b6c7b68 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Jan 30 08:00:34.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7200" for this suite.

• [SLOW TEST:6.146 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":28,"skipped":670,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:34.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename prestop
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-1
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-1
STEP: Deleting pre-stop pod
Jan 30 08:00:48.036: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Jan 30 08:00:48.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-1" for this suite.

• [SLOW TEST:13.134 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":29,"skipped":685,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:48.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:00:48.464: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Jan 30 08:00:50.482: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 0, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 0, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 0, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 0, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:00:53.518: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:00:53.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6847" for this suite.
STEP: Destroying namespace "webhook-6847-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.590 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":30,"skipped":702,"failed":0}
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:00:53.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1050
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-1050
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1050
Jan 30 08:00:53.695: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:01:03.717: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Jan 30 08:01:03.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:01:03.991: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:01:03.991: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:01:03.991: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:01:03.997: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 30 08:01:14.011: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:01:14.011: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:01:14.032: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999534s
Jan 30 08:01:15.040: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994435281s
Jan 30 08:01:16.050: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.987178646s
Jan 30 08:01:17.061: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.977180384s
Jan 30 08:01:18.066: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.96617021s
Jan 30 08:01:19.077: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.960520149s
Jan 30 08:01:20.085: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.950249096s
Jan 30 08:01:21.096: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.94196991s
Jan 30 08:01:22.106: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.931276038s
Jan 30 08:01:23.118: INFO: Verifying statefulset ss doesn't scale past 1 for another 920.878494ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1050
Jan 30 08:01:24.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:01:24.343: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:01:24.343: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:01:24.343: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:01:24.348: INFO: Found 1 stateful pods, waiting for 3
Jan 30 08:01:34.357: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:01:34.357: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:01:34.357: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Jan 30 08:01:34.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:01:34.577: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:01:34.577: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:01:34.577: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:01:34.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:01:34.795: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:01:34.795: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:01:34.795: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:01:34.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:01:35.017: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:01:35.017: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:01:35.017: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:01:35.017: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:01:35.026: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jan 30 08:01:45.040: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:01:45.040: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:01:45.040: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:01:45.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999532s
Jan 30 08:01:46.068: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994424829s
Jan 30 08:01:47.081: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.984405426s
Jan 30 08:01:48.093: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.973169545s
Jan 30 08:01:49.104: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.959654786s
Jan 30 08:01:50.117: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.948651805s
Jan 30 08:01:51.130: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.936598173s
Jan 30 08:01:52.142: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.923779531s
Jan 30 08:01:53.152: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.912144301s
Jan 30 08:01:54.165: INFO: Verifying statefulset ss doesn't scale past 3 for another 901.883609ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1050
Jan 30 08:01:55.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:01:55.384: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:01:55.384: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:01:55.384: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:01:55.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:01:55.582: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:01:55.582: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:01:55.582: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:01:55.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-1050 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:01:55.810: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:01:55.810: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:01:55.810: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:01:55.810: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:02:05.843: INFO: Deleting all statefulset in ns statefulset-1050
Jan 30 08:02:05.849: INFO: Scaling statefulset ss to 0
Jan 30 08:02:05.867: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:02:05.872: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:02:05.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1050" for this suite.

• [SLOW TEST:72.247 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":31,"skipped":707,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:02:05.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Jan 30 08:02:09.958: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3748 PodName:var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:02:09.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:02:09.959: INFO: ExecWithOptions: Clientset creation
Jan 30 08:02:09.959: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3748/pods/var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Jan 30 08:02:10.097: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3748 PodName:var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:02:10.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:02:10.098: INFO: ExecWithOptions: Clientset creation
Jan 30 08:02:10.098: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3748/pods/var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Jan 30 08:02:10.753: INFO: Successfully updated pod "var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Jan 30 08:02:10.757: INFO: Deleting pod "var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc" in namespace "var-expansion-3748"
Jan 30 08:02:10.765: INFO: Wait up to 5m0s for pod "var-expansion-40fe0d54-d9bd-4dba-8cef-13479ad295dc" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:02:42.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3748" for this suite.

• [SLOW TEST:36.895 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":32,"skipped":723,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:02:42.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:02:42.858: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Jan 30 08:02:42.868: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:42.868: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:42.868: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:42.872: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:02:42.872: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:02:43.884: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:43.884: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:43.884: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:43.889: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:02:43.889: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:02:44.882: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:44.882: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:44.882: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:44.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:02:44.887: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:02:45.881: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:45.881: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:45.881: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:45.886: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 08:02:45.886: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Jan 30 08:02:45.924: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:45.924: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:45.924: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:45.924: INFO: Wrong image for pod: daemon-set-w4shf. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:45.930: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:45.930: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:45.930: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:46.936: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:46.936: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:46.936: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:46.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:46.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:46.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:47.939: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:47.939: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:47.939: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:47.945: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:47.945: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:47.945: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:48.938: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:48.938: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:48.938: INFO: Pod daemon-set-bfskq is not available
Jan 30 08:02:48.938: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:48.943: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:48.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:48.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:49.943: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:49.943: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:49.943: INFO: Pod daemon-set-bfskq is not available
Jan 30 08:02:49.943: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:49.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:49.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:49.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:50.943: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:50.943: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:50.943: INFO: Pod daemon-set-bfskq is not available
Jan 30 08:02:50.943: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:50.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:50.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:50.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:51.942: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:51.942: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:51.942: INFO: Pod daemon-set-bfskq is not available
Jan 30 08:02:51.942: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:51.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:51.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:51.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:52.939: INFO: Wrong image for pod: daemon-set-9lm4s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:52.939: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:52.939: INFO: Pod daemon-set-bfskq is not available
Jan 30 08:02:52.939: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:52.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:52.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:52.944: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:53.944: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:53.944: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:53.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:53.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:53.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:54.940: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:54.940: INFO: Pod daemon-set-jg6vh is not available
Jan 30 08:02:54.940: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:54.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:54.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:54.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:55.941: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:55.941: INFO: Pod daemon-set-jg6vh is not available
Jan 30 08:02:55.941: INFO: Wrong image for pod: daemon-set-r9tfp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:55.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:55.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:55.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:56.942: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:56.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:56.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:56.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:57.940: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:57.940: INFO: Pod daemon-set-rx8nm is not available
Jan 30 08:02:57.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:57.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:57.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:58.943: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:58.944: INFO: Pod daemon-set-rx8nm is not available
Jan 30 08:02:58.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:58.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:58.951: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:59.940: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:02:59.940: INFO: Pod daemon-set-rx8nm is not available
Jan 30 08:02:59.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:59.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:02:59.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:00.941: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:03:00.941: INFO: Pod daemon-set-rx8nm is not available
Jan 30 08:03:00.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:00.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:00.949: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:01.939: INFO: Wrong image for pod: daemon-set-b9jtw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jan 30 08:03:01.939: INFO: Pod daemon-set-rx8nm is not available
Jan 30 08:03:01.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:01.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:01.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:02.954: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:02.954: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:02.955: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.943: INFO: Pod daemon-set-7hnrj is not available
Jan 30 08:03:03.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.950: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Jan 30 08:03:03.957: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.957: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.958: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:03.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:03:03.962: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:03:04.976: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:04.976: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:04.976: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:04.983: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:03:04.983: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:03:05.977: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:05.977: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:05.977: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:03:05.983: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 08:03:05.984: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6091, will wait for the garbage collector to delete the pods
Jan 30 08:03:06.073: INFO: Deleting DaemonSet.extensions daemon-set took: 11.034675ms
Jan 30 08:03:06.174: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.881453ms
Jan 30 08:03:08.383: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:03:08.383: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:03:08.387: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37359006"},"items":null}

Jan 30 08:03:08.392: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37359006"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:03:08.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6091" for this suite.

• [SLOW TEST:25.626 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":33,"skipped":736,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:03:08.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-55
STEP: creating service affinity-clusterip in namespace services-55
STEP: creating replication controller affinity-clusterip in namespace services-55
I0130 08:03:08.483672      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-55, replica count: 3
I0130 08:03:11.534988      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:03:14.535359      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:03:17.537232      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:03:17.552: INFO: Creating new exec pod
Jan 30 08:03:20.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-55 exec execpod-affinityh6mst -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Jan 30 08:03:20.800: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jan 30 08:03:20.800: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:03:20.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-55 exec execpod-affinityh6mst -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.225.178 80'
Jan 30 08:03:21.022: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.225.178 80\nConnection to 10.105.225.178 80 port [tcp/http] succeeded!\n"
Jan 30 08:03:21.022: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:03:21.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-55 exec execpod-affinityh6mst -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.225.178:80/ ; done'
Jan 30 08:03:21.331: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.225.178:80/\n"
Jan 30 08:03:21.331: INFO: stdout: "\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf\naffinity-clusterip-sbrqf"
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Received response from host: affinity-clusterip-sbrqf
Jan 30 08:03:21.331: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-55, will wait for the garbage collector to delete the pods
Jan 30 08:03:21.408: INFO: Deleting ReplicationController affinity-clusterip took: 8.265155ms
Jan 30 08:03:21.508: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.708369ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:03:23.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-55" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:15.112 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":34,"skipped":747,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:03:23.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 30 08:03:23.574: INFO: The status of Pod annotationupdateafa3bbc1-4e53-47ab-8dfb-9c393656cf72 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:03:25.584: INFO: The status of Pod annotationupdateafa3bbc1-4e53-47ab-8dfb-9c393656cf72 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:03:27.587: INFO: The status of Pod annotationupdateafa3bbc1-4e53-47ab-8dfb-9c393656cf72 is Running (Ready = true)
Jan 30 08:03:28.123: INFO: Successfully updated pod "annotationupdateafa3bbc1-4e53-47ab-8dfb-9c393656cf72"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:03:30.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1669" for this suite.

• [SLOW TEST:6.626 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":35,"skipped":804,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:03:30.169: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 30 08:03:30.209: INFO: Waiting up to 5m0s for pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85" in namespace "security-context-423" to be "Succeeded or Failed"
Jan 30 08:03:30.214: INFO: Pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85": Phase="Pending", Reason="", readiness=false. Elapsed: 5.049022ms
Jan 30 08:03:32.229: INFO: Pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019441593s
Jan 30 08:03:34.244: INFO: Pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034677689s
Jan 30 08:03:36.255: INFO: Pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.046256103s
STEP: Saw pod success
Jan 30 08:03:36.255: INFO: Pod "security-context-840bd661-5d0a-434a-893c-eb508601ff85" satisfied condition "Succeeded or Failed"
Jan 30 08:03:36.260: INFO: Trying to get logs from node conoa-prod01-wk003 pod security-context-840bd661-5d0a-434a-893c-eb508601ff85 container test-container: <nil>
STEP: delete the pod
Jan 30 08:03:36.281: INFO: Waiting for pod security-context-840bd661-5d0a-434a-893c-eb508601ff85 to disappear
Jan 30 08:03:36.285: INFO: Pod security-context-840bd661-5d0a-434a-893c-eb508601ff85 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 08:03:36.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-423" for this suite.

• [SLOW TEST:6.130 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":36,"skipped":830,"failed":0}
S
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:03:36.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename job
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 30 08:03:52.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-3561" for this suite.

• [SLOW TEST:16.065 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":37,"skipped":831,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:03:52.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename subpath
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-hj55
STEP: Creating a pod to test atomic-volume-subpath
Jan 30 08:03:52.413: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-hj55" in namespace "subpath-7540" to be "Succeeded or Failed"
Jan 30 08:03:52.418: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Pending", Reason="", readiness=false. Elapsed: 4.965899ms
Jan 30 08:03:54.424: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011524342s
Jan 30 08:03:56.436: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 4.022877757s
Jan 30 08:03:58.447: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 6.034641857s
Jan 30 08:04:00.458: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 8.04490515s
Jan 30 08:04:02.473: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 10.059960617s
Jan 30 08:04:04.480: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 12.067684154s
Jan 30 08:04:06.494: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 14.081241955s
Jan 30 08:04:08.508: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 16.095656203s
Jan 30 08:04:10.520: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 18.107522633s
Jan 30 08:04:12.531: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 20.117780812s
Jan 30 08:04:14.537: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=true. Elapsed: 22.124529732s
Jan 30 08:04:16.547: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Running", Reason="", readiness=false. Elapsed: 24.13436366s
Jan 30 08:04:18.559: INFO: Pod "pod-subpath-test-downwardapi-hj55": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.146106097s
STEP: Saw pod success
Jan 30 08:04:18.559: INFO: Pod "pod-subpath-test-downwardapi-hj55" satisfied condition "Succeeded or Failed"
Jan 30 08:04:18.564: INFO: Trying to get logs from node conoa-prod01-wk002 pod pod-subpath-test-downwardapi-hj55 container test-container-subpath-downwardapi-hj55: <nil>
STEP: delete the pod
Jan 30 08:04:18.584: INFO: Waiting for pod pod-subpath-test-downwardapi-hj55 to disappear
Jan 30 08:04:18.587: INFO: Pod pod-subpath-test-downwardapi-hj55 no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-hj55
Jan 30 08:04:18.588: INFO: Deleting pod "pod-subpath-test-downwardapi-hj55" in namespace "subpath-7540"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 30 08:04:18.591: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7540" for this suite.

• [SLOW TEST:26.240 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":38,"skipped":840,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:04:18.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename runtimeclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Jan 30 08:04:18.659: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Jan 30 08:04:18.685: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 30 08:04:18.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4155" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":39,"skipped":850,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:04:18.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:04:18.758: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8" in namespace "projected-7909" to be "Succeeded or Failed"
Jan 30 08:04:18.765: INFO: Pod "downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.410919ms
Jan 30 08:04:20.776: INFO: Pod "downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017236966s
Jan 30 08:04:22.790: INFO: Pod "downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032153533s
STEP: Saw pod success
Jan 30 08:04:22.791: INFO: Pod "downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8" satisfied condition "Succeeded or Failed"
Jan 30 08:04:22.796: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8 container client-container: <nil>
STEP: delete the pod
Jan 30 08:04:22.823: INFO: Waiting for pod downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8 to disappear
Jan 30 08:04:22.826: INFO: Pod downwardapi-volume-9274f791-d202-4cf4-822b-74acac1e7aa8 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:04:22.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7909" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":40,"skipped":868,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:04:22.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Jan 30 08:04:22.876: INFO: Creating simple deployment test-deployment-89fvv
Jan 30 08:04:22.893: INFO: deployment "test-deployment-89fvv" doesn't have the required revision set
Jan 30 08:04:24.911: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 4, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 4, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-89fvv-688c4d6789\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Getting /status
Jan 30 08:04:26.934: INFO: Deployment test-deployment-89fvv has Conditions: [{Available True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-89fvv-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Jan 30 08:04:26.950: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 4, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 4, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 4, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 4, 22, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-89fvv-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Jan 30 08:04:26.952: INFO: Observed &Deployment event: ADDED
Jan 30 08:04:26.952: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-89fvv-688c4d6789"}
Jan 30 08:04:26.953: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-89fvv-688c4d6789"}
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:04:26.953: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-89fvv-688c4d6789" is progressing.}
Jan 30 08:04:26.953: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:04:26.953: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-89fvv-688c4d6789" has successfully progressed.}
Jan 30 08:04:26.954: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.954: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:04:26.954: INFO: Observed Deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-89fvv-688c4d6789" has successfully progressed.}
Jan 30 08:04:26.954: INFO: Found Deployment test-deployment-89fvv in namespace deployment-2230 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:04:26.954: INFO: Deployment test-deployment-89fvv has an updated status
STEP: patching the Statefulset Status
Jan 30 08:04:26.954: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 08:04:26.963: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Jan 30 08:04:26.966: INFO: Observed &Deployment event: ADDED
Jan 30 08:04:26.966: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-89fvv-688c4d6789"}
Jan 30 08:04:26.966: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.966: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-89fvv-688c4d6789"}
Jan 30 08:04:26.966: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:04:26.966: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.967: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:04:26.967: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:22 +0000 UTC 2023-01-30 08:04:22 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-89fvv-688c4d6789" is progressing.}
Jan 30 08:04:26.967: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.967: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:04:26.967: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-89fvv-688c4d6789" has successfully progressed.}
Jan 30 08:04:26.968: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.968: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:04:26.968: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:04:25 +0000 UTC 2023-01-30 08:04:22 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-89fvv-688c4d6789" has successfully progressed.}
Jan 30 08:04:26.968: INFO: Observed deployment test-deployment-89fvv in namespace deployment-2230 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:04:26.968: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:04:26.968: INFO: Found deployment test-deployment-89fvv in namespace deployment-2230 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jan 30 08:04:26.968: INFO: Deployment test-deployment-89fvv has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:04:26.972: INFO: Deployment "test-deployment-89fvv":
&Deployment{ObjectMeta:{test-deployment-89fvv  deployment-2230  7e1e06f7-1249-4127-916a-6aa3c91804f5 37359738 1 2023-01-30 08:04:22 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2023-01-30 08:04:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:04:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2023-01-30 08:04:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000076628 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 08:04:26.976: INFO: New ReplicaSet "test-deployment-89fvv-688c4d6789" of Deployment "test-deployment-89fvv":
&ReplicaSet{ObjectMeta:{test-deployment-89fvv-688c4d6789  deployment-2230  37b42035-7fe0-44ed-9f07-17dea28c77c1 37359729 1 2023-01-30 08:04:22 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-89fvv 7e1e06f7-1249-4127-916a-6aa3c91804f5 0xc000076b47 0xc000076b48}] []  [{kube-controller-manager Update apps/v1 2023-01-30 08:04:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7e1e06f7-1249-4127-916a-6aa3c91804f5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:04:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000076bf8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:04:26.982: INFO: Pod "test-deployment-89fvv-688c4d6789-m8bcs" is available:
&Pod{ObjectMeta:{test-deployment-89fvv-688c4d6789-m8bcs test-deployment-89fvv-688c4d6789- deployment-2230  163d7e49-6918-4017-b87a-0551d38b98d8 37359728 0 2023-01-30 08:04:22 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [{apps/v1 ReplicaSet test-deployment-89fvv-688c4d6789 37b42035-7fe0-44ed-9f07-17dea28c77c1 0xc002b23a17 0xc002b23a18}] []  [{kube-controller-manager Update v1 2023-01-30 08:04:22 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"37b42035-7fe0-44ed-9f07-17dea28c77c1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:04:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l2f9c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l2f9c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:04:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:04:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:04:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:04:22 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.205,StartTime:2023-01-30 08:04:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:04:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://e5cb7ed05b7b3d7425f79acd46351825b92166bcb043a59eb207047b12979253,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 08:04:26.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2230" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":41,"skipped":880,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:04:26.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 30 08:04:27.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:04:53.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8400" for this suite.

• [SLOW TEST:26.488 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":42,"skipped":889,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:04:53.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Jan 30 08:04:53.844: INFO: Pod name wrapped-volume-race-9f7a8088-45bd-404b-9d7a-65873593a400: Found 3 pods out of 5
Jan 30 08:04:58.854: INFO: Pod name wrapped-volume-race-9f7a8088-45bd-404b-9d7a-65873593a400: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-9f7a8088-45bd-404b-9d7a-65873593a400 in namespace emptydir-wrapper-2887, will wait for the garbage collector to delete the pods
Jan 30 08:05:10.969: INFO: Deleting ReplicationController wrapped-volume-race-9f7a8088-45bd-404b-9d7a-65873593a400 took: 9.721891ms
Jan 30 08:05:11.069: INFO: Terminating ReplicationController wrapped-volume-race-9f7a8088-45bd-404b-9d7a-65873593a400 pods took: 100.308983ms
STEP: Creating RC which spawns configmap-volume pods
Jan 30 08:05:14.012: INFO: Pod name wrapped-volume-race-5816d41a-e6d8-4a00-823c-dfb0d422bbd6: Found 0 pods out of 5
Jan 30 08:05:19.047: INFO: Pod name wrapped-volume-race-5816d41a-e6d8-4a00-823c-dfb0d422bbd6: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-5816d41a-e6d8-4a00-823c-dfb0d422bbd6 in namespace emptydir-wrapper-2887, will wait for the garbage collector to delete the pods
Jan 30 08:05:33.154: INFO: Deleting ReplicationController wrapped-volume-race-5816d41a-e6d8-4a00-823c-dfb0d422bbd6 took: 9.664904ms
Jan 30 08:05:33.254: INFO: Terminating ReplicationController wrapped-volume-race-5816d41a-e6d8-4a00-823c-dfb0d422bbd6 pods took: 100.485231ms
STEP: Creating RC which spawns configmap-volume pods
Jan 30 08:05:36.897: INFO: Pod name wrapped-volume-race-6e8e53e0-9327-4fc4-b9e8-6085ac9bbc95: Found 0 pods out of 5
Jan 30 08:05:41.918: INFO: Pod name wrapped-volume-race-6e8e53e0-9327-4fc4-b9e8-6085ac9bbc95: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-6e8e53e0-9327-4fc4-b9e8-6085ac9bbc95 in namespace emptydir-wrapper-2887, will wait for the garbage collector to delete the pods
Jan 30 08:05:56.042: INFO: Deleting ReplicationController wrapped-volume-race-6e8e53e0-9327-4fc4-b9e8-6085ac9bbc95 took: 13.433465ms
Jan 30 08:05:56.143: INFO: Terminating ReplicationController wrapped-volume-race-6e8e53e0-9327-4fc4-b9e8-6085ac9bbc95 pods took: 100.677137ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 30 08:05:59.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-2887" for this suite.

• [SLOW TEST:65.968 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":43,"skipped":894,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:05:59.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Jan 30 08:05:59.480: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jan 30 08:05:59.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:00.308: INFO: stderr: ""
Jan 30 08:06:00.308: INFO: stdout: "service/agnhost-replica created\n"
Jan 30 08:06:00.308: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jan 30 08:06:00.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:01.103: INFO: stderr: ""
Jan 30 08:06:01.103: INFO: stdout: "service/agnhost-primary created\n"
Jan 30 08:06:01.103: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jan 30 08:06:01.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:01.355: INFO: stderr: ""
Jan 30 08:06:01.355: INFO: stdout: "service/frontend created\n"
Jan 30 08:06:01.356: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jan 30 08:06:01.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:01.601: INFO: stderr: ""
Jan 30 08:06:01.601: INFO: stdout: "deployment.apps/frontend created\n"
Jan 30 08:06:01.601: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 30 08:06:01.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:01.842: INFO: stderr: ""
Jan 30 08:06:01.842: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jan 30 08:06:01.842: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 30 08:06:01.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 create -f -'
Jan 30 08:06:02.102: INFO: stderr: ""
Jan 30 08:06:02.102: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Jan 30 08:06:02.103: INFO: Waiting for all frontend pods to be Running.
Jan 30 08:06:07.156: INFO: Waiting for frontend to serve content.
Jan 30 08:06:07.177: INFO: Trying to add a new entry to the guestbook.
Jan 30 08:06:07.194: INFO: Verifying that added entry can be retrieved.
Jan 30 08:06:07.207: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
STEP: using delete to clean up resources
Jan 30 08:06:12.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.354: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.354: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Jan 30 08:06:12.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.454: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.454: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 30 08:06:12.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.583: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.583: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 30 08:06:12.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.658: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.658: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jan 30 08:06:12.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.737: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.737: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jan 30 08:06:12.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5570 delete --grace-period=0 --force -f -'
Jan 30 08:06:12.814: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:06:12.814: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:06:12.814: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5570" for this suite.

• [SLOW TEST:13.377 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":44,"skipped":896,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:06:12.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename init-container
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 30 08:06:12.852: INFO: PodSpec: initContainers in spec.initContainers
Jan 30 08:06:55.088: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-9eba9838-9805-437a-aa85-869602f85355", GenerateName:"", Namespace:"init-container-4271", SelfLink:"", UID:"c07e6890-0825-4525-91b6-ba53d1738d02", ResourceVersion:"37361395", Generation:0, CreationTimestamp:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"852482622"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d9380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 8, 6, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045d93b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-47rwp", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003495ac0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-47rwp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-47rwp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-47rwp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003586e28), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"conoa-prod01-wk004", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002c24d20), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003587050)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003587070)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003587078), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00358707c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0066813a0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.55.210.16", PodIP:"10.0.2.3", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.0.2.3"}}, StartTime:time.Date(2023, time.January, 30, 8, 6, 12, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002c24e70)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002c24f50)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"cri-o://6dcb11c0e39cc7657f921e20ba33cbc5d90b365e542f015cb16f93e6ff578ee3", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003495b40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003495b20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00358718c)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 08:06:55.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4271" for this suite.

• [SLOW TEST:42.274 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":45,"skipped":961,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:06:55.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:06:55.825: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:06:57.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 6, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 6, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 6, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:07:00.871: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:07:00.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8337" for this suite.
STEP: Destroying namespace "webhook-8337-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.883 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":46,"skipped":963,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:00.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Jan 30 08:07:01.009: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-200 proxy --unix-socket=/tmp/kubectl-proxy-unix1012588326/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:07:01.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-200" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":47,"skipped":1001,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:01.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:07:01.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8312" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":48,"skipped":1013,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:01.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 08:07:01.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4470" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":49,"skipped":1031,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:01.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:07:01.550: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:07:03.575: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 7, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 7, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 7, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 7, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:07:06.603: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:07:16.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5699" for this suite.
STEP: Destroying namespace "webhook-5699-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.629 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":50,"skipped":1064,"failed":0}
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:16.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Jan 30 08:07:16.874: INFO: Waiting up to 5m0s for pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d" in namespace "emptydir-5881" to be "Succeeded or Failed"
Jan 30 08:07:16.879: INFO: Pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.5211ms
Jan 30 08:07:18.885: INFO: Pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010949644s
Jan 30 08:07:20.895: INFO: Pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.021044204s
Jan 30 08:07:22.905: INFO: Pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.030445325s
STEP: Saw pod success
Jan 30 08:07:22.905: INFO: Pod "pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d" satisfied condition "Succeeded or Failed"
Jan 30 08:07:22.910: INFO: Trying to get logs from node conoa-prod01-wk004 pod pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d container test-container: <nil>
STEP: delete the pod
Jan 30 08:07:22.934: INFO: Waiting for pod pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d to disappear
Jan 30 08:07:22.939: INFO: Pod pod-ac3c81c7-08fc-43e9-bc9d-0032b66f011d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:07:22.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5881" for this suite.

• [SLOW TEST:6.111 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":51,"skipped":1064,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:22.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename job
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 30 08:07:27.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8101" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":52,"skipped":1084,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:27.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename events
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jan 30 08:07:27.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2635" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":53,"skipped":1151,"failed":0}
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:27.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubelet-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:07:27.163: INFO: The status of Pod busybox-scheduling-3dd0a95a-703b-45fa-a548-e1a31805a3ec is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:07:29.173: INFO: The status of Pod busybox-scheduling-3dd0a95a-703b-45fa-a548-e1a31805a3ec is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:07:31.176: INFO: The status of Pod busybox-scheduling-3dd0a95a-703b-45fa-a548-e1a31805a3ec is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 30 08:07:31.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-992" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":54,"skipped":1158,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:31.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:07:31.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 create -f -'
Jan 30 08:07:31.511: INFO: stderr: ""
Jan 30 08:07:31.511: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jan 30 08:07:31.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 create -f -'
Jan 30 08:07:31.747: INFO: stderr: ""
Jan 30 08:07:31.747: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 30 08:07:32.761: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:07:32.761: INFO: Found 0 / 1
Jan 30 08:07:33.755: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:07:33.755: INFO: Found 0 / 1
Jan 30 08:07:34.754: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:07:34.754: INFO: Found 1 / 1
Jan 30 08:07:34.754: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 30 08:07:34.759: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:07:34.759: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 08:07:34.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 describe pod agnhost-primary-r7wdp'
Jan 30 08:07:34.856: INFO: stderr: ""
Jan 30 08:07:34.856: INFO: stdout: "Name:         agnhost-primary-r7wdp\nNamespace:    kubectl-9101\nPriority:     0\nNode:         conoa-prod01-wk004/10.55.210.16\nStart Time:   Mon, 30 Jan 2023 08:07:31 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nStatus:       Running\nIP:           10.0.2.234\nIPs:\n  IP:           10.0.2.234\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://d0e4199e9b9d15b1234dd5c54bea79812c3b934b3dfb9c186ca40093d2c3968c\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 30 Jan 2023 08:07:33 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vqgh8 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-vqgh8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-9101/agnhost-primary-r7wdp to conoa-prod01-wk004\n  Normal  Pulling    2s    kubelet            Pulling image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\"\n  Normal  Pulled     1s    kubelet            Successfully pulled image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" in 746.307862ms\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Jan 30 08:07:34.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 describe rc agnhost-primary'
Jan 30 08:07:34.963: INFO: stderr: ""
Jan 30 08:07:34.963: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9101\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-r7wdp\n"
Jan 30 08:07:34.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 describe service agnhost-primary'
Jan 30 08:07:35.056: INFO: stderr: ""
Jan 30 08:07:35.056: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9101\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.108.169.210\nIPs:               10.108.169.210\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.0.2.234:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jan 30 08:07:35.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 describe node conoa-prod01-cp001'
Jan 30 08:07:35.216: INFO: stderr: ""
Jan 30 08:07:35.216: INFO: stdout: "Name:               conoa-prod01-cp001\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=conoa-prod01-cp001\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"csi.trident.netapp.io\":\"conoa-prod01-cp001\"}\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 19 Oct 2022 12:36:51 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\n                    node-role.kubernetes.io/master:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  conoa-prod01-cp001\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 30 Jan 2023 08:07:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 19 Oct 2022 12:38:17 +0000   Wed, 19 Oct 2022 12:38:17 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Mon, 30 Jan 2023 08:06:16 +0000   Thu, 15 Dec 2022 14:39:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 30 Jan 2023 08:06:16 +0000   Thu, 15 Dec 2022 14:39:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 30 Jan 2023 08:06:16 +0000   Thu, 15 Dec 2022 14:39:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 30 Jan 2023 08:06:16 +0000   Thu, 15 Dec 2022 14:39:12 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.55.210.10\n  Hostname:    conoa-prod01-cp001\nCapacity:\n  cpu:                8\n  ephemeral-storage:  101141520Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             61735016Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  93212024678\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             61632616Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 8b949355c6254057818fed2a5a137f76\n  System UUID:                0a4da277-cefd-4385-bc58-73eb263cc1cd\n  Boot ID:                    396e553e-b943-4ca7-93f4-bd88d01e4e93\n  Kernel Version:             5.10.0-19-amd64\n  OS Image:                   Debian GNU/Linux 11 (bullseye)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.25.1\n  Kubelet Version:            v1.24.3\n  Kube-Proxy Version:         v1.24.3\nPodCIDR:                      192.168.0.0/24\nPodCIDRs:                     192.168.0.0/24\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-cm794                                               100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         102d\n  kube-system                 cilium-operator-746975c47c-m5n6q                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         102d\n  kube-system                 etcd-conoa-prod01-cp001                                    100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         102d\n  kube-system                 kube-apiserver-conoa-prod01-cp001                          250m (3%)     0 (0%)      0 (0%)           0 (0%)         102d\n  kube-system                 kube-controller-manager-conoa-prod01-cp001                 200m (2%)     0 (0%)      0 (0%)           0 (0%)         102d\n  kube-system                 kube-scheduler-conoa-prod01-cp001                          100m (1%)     0 (0%)      0 (0%)           0 (0%)         102d\n  kube-system                 kubelet-csr-approver-69d7c67bb6-5wx6v                      100m (1%)     500m (6%)   64Mi (0%)        128Mi (0%)     102d\n  logging                     fluent-fluent-bit-s6dpt                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         4d22h\n  monitoring                  kube-prometheus-stack-prometheus-node-exporter-nsbsj       0 (0%)        0 (0%)      0 (0%)           0 (0%)         45d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-gxz2x    0 (0%)        0 (0%)      0 (0%)           0 (0%)         17m\n  trident                     trident-csi-ksdpp                                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         62d\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (10%)  500m (6%)\n  memory             264Mi (0%)  128Mi (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
Jan 30 08:07:35.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9101 describe namespace kubectl-9101'
Jan 30 08:07:35.310: INFO: stderr: ""
Jan 30 08:07:35.310: INFO: stdout: "Name:         kubectl-9101\nLabels:       e2e-framework=kubectl\n              e2e-run=90002b43-9a44-44e0-bb36-a4b647f8f813\n              kubernetes.io/metadata.name=kubectl-9101\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:07:35.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9101" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":55,"skipped":1179,"failed":0}
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:35.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename init-container
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 30 08:07:35.358: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 08:07:41.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-6971" for this suite.

• [SLOW TEST:6.328 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":56,"skipped":1186,"failed":0}
SS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:07:41.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Jan 30 08:07:41.686: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361939 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:41.687: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361939 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Jan 30 08:07:41.693: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361940 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:41.693: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361940 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Jan 30 08:07:41.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361941 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:41.701: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361941 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Jan 30 08:07:41.705: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361942 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:41.705: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-575  c78b5602-f0b9-4fc8-9e86-56bfc75ed17a 37361942 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Jan 30 08:07:41.708: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-575  5ff0126a-7d75-4054-9907-673f83a21156 37361943 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:41.708: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-575  5ff0126a-7d75-4054-9907-673f83a21156 37361943 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Jan 30 08:07:51.728: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-575  5ff0126a-7d75-4054-9907-673f83a21156 37362000 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:07:51.728: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-575  5ff0126a-7d75-4054-9907-673f83a21156 37362000 0 2023-01-30 08:07:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2023-01-30 08:07:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 30 08:08:01.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-575" for this suite.

• [SLOW TEST:20.100 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":57,"skipped":1188,"failed":0}
SS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:01.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename limitrange
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Jan 30 08:08:01.792: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Jan 30 08:08:01.799: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 30 08:08:01.799: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Jan 30 08:08:01.811: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 30 08:08:01.811: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Jan 30 08:08:01.820: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jan 30 08:08:01.820: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Jan 30 08:08:08.875: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Jan 30 08:08:08.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-6895" for this suite.

• [SLOW TEST:7.139 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":58,"skipped":1190,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:08.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubelet-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 30 08:08:08.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6849" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":59,"skipped":1245,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:08.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Jan 30 08:08:08.952: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9710 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:08:09.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9710" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":60,"skipped":1266,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:09.048: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:08:09.077: INFO: Got root ca configmap in namespace "svcaccounts-6945"
Jan 30 08:08:09.083: INFO: Deleted root ca configmap in namespace "svcaccounts-6945"
STEP: waiting for a new root ca configmap created
Jan 30 08:08:09.593: INFO: Recreated root ca configmap in namespace "svcaccounts-6945"
Jan 30 08:08:09.600: INFO: Updated root ca configmap in namespace "svcaccounts-6945"
STEP: waiting for the root ca configmap reconciled
Jan 30 08:08:10.108: INFO: Reconciled root ca configmap in namespace "svcaccounts-6945"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 08:08:10.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6945" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":61,"skipped":1298,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:10.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 30 08:08:10.154: INFO: Waiting up to 5m0s for pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637" in namespace "emptydir-4868" to be "Succeeded or Failed"
Jan 30 08:08:10.157: INFO: Pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637": Phase="Pending", Reason="", readiness=false. Elapsed: 3.082795ms
Jan 30 08:08:12.168: INFO: Pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013975885s
Jan 30 08:08:14.174: INFO: Pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019994516s
Jan 30 08:08:16.185: INFO: Pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.030963309s
STEP: Saw pod success
Jan 30 08:08:16.185: INFO: Pod "pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637" satisfied condition "Succeeded or Failed"
Jan 30 08:08:16.190: INFO: Trying to get logs from node conoa-prod01-wk004 pod pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637 container test-container: <nil>
STEP: delete the pod
Jan 30 08:08:16.214: INFO: Waiting for pod pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637 to disappear
Jan 30 08:08:16.218: INFO: Pod pod-4261b6b6-fffa-47ec-ae7f-d4addfcb4637 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:08:16.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4868" for this suite.

• [SLOW TEST:6.111 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1340,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:16.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 30 08:08:16.272: INFO: Waiting up to 5m0s for pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f" in namespace "emptydir-6350" to be "Succeeded or Failed"
Jan 30 08:08:16.276: INFO: Pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.617692ms
Jan 30 08:08:18.283: INFO: Pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011098419s
Jan 30 08:08:20.299: INFO: Pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026536186s
Jan 30 08:08:22.313: INFO: Pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.040759183s
STEP: Saw pod success
Jan 30 08:08:22.313: INFO: Pod "pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f" satisfied condition "Succeeded or Failed"
Jan 30 08:08:22.318: INFO: Trying to get logs from node conoa-prod01-wk004 pod pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f container test-container: <nil>
STEP: delete the pod
Jan 30 08:08:22.339: INFO: Waiting for pod pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f to disappear
Jan 30 08:08:22.342: INFO: Pod pod-545c3c2b-ddbb-4557-ad8b-42a4830c701f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:08:22.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6350" for this suite.

• [SLOW TEST:6.118 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":63,"skipped":1355,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:08:22.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:08:22.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Creating first CR 
Jan 30 08:08:24.928: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:24Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:24Z]] name:name1 resourceVersion:37362279 uid:365cd818-f2eb-4d78-979e-df66a354734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Jan 30 08:08:34.941: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:34Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:34Z]] name:name2 resourceVersion:37362323 uid:debe00e8-de7d-4e8f-91f0-0164e045b7fa] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Jan 30 08:08:44.953: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:44Z]] name:name1 resourceVersion:37362368 uid:365cd818-f2eb-4d78-979e-df66a354734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Jan 30 08:08:54.967: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:54Z]] name:name2 resourceVersion:37362400 uid:debe00e8-de7d-4e8f-91f0-0164e045b7fa] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Jan 30 08:09:04.981: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:44Z]] name:name1 resourceVersion:37362433 uid:365cd818-f2eb-4d78-979e-df66a354734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Jan 30 08:09:14.994: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T08:08:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T08:08:54Z]] name:name2 resourceVersion:37362473 uid:debe00e8-de7d-4e8f-91f0-0164e045b7fa] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:09:25.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-7061" for this suite.

• [SLOW TEST:63.174 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":64,"skipped":1360,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:09:25.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pod-network-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9618
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 30 08:09:25.554: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 08:09:25.591: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:09:27.603: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:09:29.602: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:31.603: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:33.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:35.602: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:37.601: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:39.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:41.603: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:43.602: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:45.599: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:09:47.608: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 30 08:09:47.619: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 30 08:09:47.629: INFO: The status of Pod netserver-2 is Running (Ready = true)
Jan 30 08:09:47.639: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Jan 30 08:09:51.672: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Jan 30 08:09:51.673: INFO: Breadth first check of 10.0.1.155 on host 10.55.210.13...
Jan 30 08:09:51.677: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.2.64:9080/dial?request=hostname&protocol=http&host=10.0.1.155&port=8083&tries=1'] Namespace:pod-network-test-9618 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:09:51.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:09:51.678: INFO: ExecWithOptions: Clientset creation
Jan 30 08:09:51.679: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9618/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.2.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.1.155%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 08:09:51.832: INFO: Waiting for responses: map[]
Jan 30 08:09:51.832: INFO: reached 10.0.1.155 after 0/1 tries
Jan 30 08:09:51.832: INFO: Breadth first check of 10.0.3.190 on host 10.55.210.14...
Jan 30 08:09:51.839: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.2.64:9080/dial?request=hostname&protocol=http&host=10.0.3.190&port=8083&tries=1'] Namespace:pod-network-test-9618 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:09:51.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:09:51.841: INFO: ExecWithOptions: Clientset creation
Jan 30 08:09:51.841: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9618/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.2.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.3.190%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 08:09:51.979: INFO: Waiting for responses: map[]
Jan 30 08:09:51.979: INFO: reached 10.0.3.190 after 0/1 tries
Jan 30 08:09:51.979: INFO: Breadth first check of 10.0.0.47 on host 10.55.210.15...
Jan 30 08:09:51.986: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.2.64:9080/dial?request=hostname&protocol=http&host=10.0.0.47&port=8083&tries=1'] Namespace:pod-network-test-9618 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:09:51.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:09:51.988: INFO: ExecWithOptions: Clientset creation
Jan 30 08:09:51.988: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9618/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.2.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.0.47%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 08:09:52.111: INFO: Waiting for responses: map[]
Jan 30 08:09:52.111: INFO: reached 10.0.0.47 after 0/1 tries
Jan 30 08:09:52.111: INFO: Breadth first check of 10.0.2.181 on host 10.55.210.16...
Jan 30 08:09:52.118: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.2.64:9080/dial?request=hostname&protocol=http&host=10.0.2.181&port=8083&tries=1'] Namespace:pod-network-test-9618 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:09:52.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:09:52.119: INFO: ExecWithOptions: Clientset creation
Jan 30 08:09:52.119: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9618/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.2.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.2.181%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 08:09:52.241: INFO: Waiting for responses: map[]
Jan 30 08:09:52.241: INFO: reached 10.0.2.181 after 0/1 tries
Jan 30 08:09:52.241: INFO: Going to retry 0 out of 4 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 30 08:09:52.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9618" for this suite.

• [SLOW TEST:26.726 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":65,"skipped":1393,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:09:52.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:09:52.299: INFO: The status of Pod server-envvars-a622a5c4-fe8a-47ab-88c1-3376d85eabad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:09:54.309: INFO: The status of Pod server-envvars-a622a5c4-fe8a-47ab-88c1-3376d85eabad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:09:56.310: INFO: The status of Pod server-envvars-a622a5c4-fe8a-47ab-88c1-3376d85eabad is Running (Ready = true)
Jan 30 08:09:56.344: INFO: Waiting up to 5m0s for pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b" in namespace "pods-2411" to be "Succeeded or Failed"
Jan 30 08:09:56.350: INFO: Pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.913771ms
Jan 30 08:09:58.366: INFO: Pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022202474s
Jan 30 08:10:00.381: INFO: Pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037462192s
Jan 30 08:10:02.389: INFO: Pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.045472566s
STEP: Saw pod success
Jan 30 08:10:02.389: INFO: Pod "client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b" satisfied condition "Succeeded or Failed"
Jan 30 08:10:02.394: INFO: Trying to get logs from node conoa-prod01-wk004 pod client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b container env3cont: <nil>
STEP: delete the pod
Jan 30 08:10:02.419: INFO: Waiting for pod client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b to disappear
Jan 30 08:10:02.422: INFO: Pod client-envvars-7f9477d2-d7d5-4bd9-bbfc-c287dc596a8b no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 08:10:02.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2411" for this suite.

• [SLOW TEST:10.177 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1398,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:10:02.436: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jan 30 08:10:02.468: INFO: Waiting up to 5m0s for pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0" in namespace "emptydir-3845" to be "Succeeded or Failed"
Jan 30 08:10:02.471: INFO: Pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.517108ms
Jan 30 08:10:04.487: INFO: Pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018843132s
Jan 30 08:10:06.500: INFO: Pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032541139s
Jan 30 08:10:08.514: INFO: Pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.046181409s
STEP: Saw pod success
Jan 30 08:10:08.514: INFO: Pod "pod-e7043a5b-600f-456c-8747-bd261f1211e0" satisfied condition "Succeeded or Failed"
Jan 30 08:10:08.519: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-e7043a5b-600f-456c-8747-bd261f1211e0 container test-container: <nil>
STEP: delete the pod
Jan 30 08:10:08.545: INFO: Waiting for pod pod-e7043a5b-600f-456c-8747-bd261f1211e0 to disappear
Jan 30 08:10:08.549: INFO: Pod pod-e7043a5b-600f-456c-8747-bd261f1211e0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:10:08.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3845" for this suite.

• [SLOW TEST:6.129 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1398,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:10:08.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5488
STEP: creating service affinity-clusterip-transition in namespace services-5488
STEP: creating replication controller affinity-clusterip-transition in namespace services-5488
I0130 08:10:08.618190      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5488, replica count: 3
I0130 08:10:11.669429      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:10:11.682: INFO: Creating new exec pod
Jan 30 08:10:16.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-5488 exec execpod-affinitygsgrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Jan 30 08:10:16.919: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jan 30 08:10:16.919: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:10:16.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-5488 exec execpod-affinitygsgrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.244.77 80'
Jan 30 08:10:17.129: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.244.77 80\nConnection to 10.99.244.77 80 port [tcp/http] succeeded!\n"
Jan 30 08:10:17.129: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:10:17.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-5488 exec execpod-affinitygsgrs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.244.77:80/ ; done'
Jan 30 08:10:17.476: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n"
Jan 30 08:10:17.477: INFO: stdout: "\naffinity-clusterip-transition-tddn5\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-tddn5\naffinity-clusterip-transition-zvvbk\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-tddn5\naffinity-clusterip-transition-tddn5\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zvvbk\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq"
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-tddn5
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-tddn5
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zvvbk
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-tddn5
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-tddn5
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zvvbk
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.477: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-5488 exec execpod-affinitygsgrs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.244.77:80/ ; done'
Jan 30 08:10:17.787: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.244.77:80/\n"
Jan 30 08:10:17.787: INFO: stdout: "\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq\naffinity-clusterip-transition-zwtxq"
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Received response from host: affinity-clusterip-transition-zwtxq
Jan 30 08:10:17.787: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5488, will wait for the garbage collector to delete the pods
Jan 30 08:10:17.867: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.079001ms
Jan 30 08:10:17.968: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.213798ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:10:20.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5488" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.640 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":68,"skipped":1401,"failed":0}
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:10:20.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:10:20.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 30 08:10:20.239: INFO: The status of Pod pod-exec-websocket-9f5efd77-0b64-4781-9a13-753472d0154f is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:10:22.252: INFO: The status of Pod pod-exec-websocket-9f5efd77-0b64-4781-9a13-753472d0154f is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:10:24.256: INFO: The status of Pod pod-exec-websocket-9f5efd77-0b64-4781-9a13-753472d0154f is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 08:10:24.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2330" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":69,"skipped":1401,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:10:24.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-8549a68a-c64c-4616-8062-ef150df1cafe in namespace container-probe-830
Jan 30 08:10:28.464: INFO: Started pod liveness-8549a68a-c64c-4616-8062-ef150df1cafe in namespace container-probe-830
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 08:10:28.468: INFO: Initial restart count of pod liveness-8549a68a-c64c-4616-8062-ef150df1cafe is 0
Jan 30 08:10:46.582: INFO: Restart count of pod container-probe-830/liveness-8549a68a-c64c-4616-8062-ef150df1cafe is now 1 (18.113977589s elapsed)
Jan 30 08:11:06.719: INFO: Restart count of pod container-probe-830/liveness-8549a68a-c64c-4616-8062-ef150df1cafe is now 2 (38.25093464s elapsed)
Jan 30 08:11:26.855: INFO: Restart count of pod container-probe-830/liveness-8549a68a-c64c-4616-8062-ef150df1cafe is now 3 (58.386673521s elapsed)
Jan 30 08:11:47.002: INFO: Restart count of pod container-probe-830/liveness-8549a68a-c64c-4616-8062-ef150df1cafe is now 4 (1m18.534479012s elapsed)
Jan 30 08:12:57.428: INFO: Restart count of pod container-probe-830/liveness-8549a68a-c64c-4616-8062-ef150df1cafe is now 5 (2m28.960374265s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 08:12:57.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-830" for this suite.

• [SLOW TEST:153.071 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1404,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:12:57.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename aggregator
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Jan 30 08:12:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Jan 30 08:12:57.857: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Jan 30 08:12:59.921: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:13:01.929: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:13:03.934: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:13:05.934: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:13:07.932: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:13:10.091: INFO: Waited 148.839625ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Jan 30 08:13:10.263: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Jan 30 08:13:11.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-4755" for this suite.

• [SLOW TEST:13.692 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":71,"skipped":1413,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:13:11.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Jan 30 08:13:12.288: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 08:13:12.410: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 08:13:12.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6562" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":72,"skipped":1465,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:13:12.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 30 08:13:12.457: INFO: Waiting up to 5m0s for pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1" in namespace "downward-api-4063" to be "Succeeded or Failed"
Jan 30 08:13:12.462: INFO: Pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.714318ms
Jan 30 08:13:14.474: INFO: Pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016322166s
Jan 30 08:13:16.485: INFO: Pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027787354s
Jan 30 08:13:18.499: INFO: Pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.041212782s
STEP: Saw pod success
Jan 30 08:13:18.499: INFO: Pod "downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1" satisfied condition "Succeeded or Failed"
Jan 30 08:13:18.503: INFO: Trying to get logs from node conoa-prod01-wk004 pod downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1 container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:13:18.546: INFO: Waiting for pod downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1 to disappear
Jan 30 08:13:18.550: INFO: Pod downward-api-6f718ebe-4fe9-4e63-af4a-8e416b77a9d1 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 30 08:13:18.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4063" for this suite.

• [SLOW TEST:6.140 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1518,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:13:18.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:13:18.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:13:25.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2994" for this suite.

• [SLOW TEST:6.659 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":74,"skipped":1538,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:13:25.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9118
Jan 30 08:13:25.271: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:13:27.297: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:13:29.277: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 30 08:13:29.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 30 08:13:29.499: INFO: rc: 7
Jan 30 08:13:29.515: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 30 08:13:29.519: INFO: Pod kube-proxy-mode-detector no longer exists
Jan 30 08:13:29.519: INFO: Couldn't detect KubeProxy mode - test failure may be expected: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode:
Command stdout:

stderr:
+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode
command terminated with exit code 7

error:
exit status 7
STEP: creating service affinity-nodeport-timeout in namespace services-9118
STEP: creating replication controller affinity-nodeport-timeout in namespace services-9118
I0130 08:13:29.544770      22 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-9118, replica count: 3
I0130 08:13:32.595337      22 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:13:32.615: INFO: Creating new exec pod
Jan 30 08:13:37.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Jan 30 08:13:37.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Jan 30 08:13:37.866: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:13:37.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.253.42 80'
Jan 30 08:13:38.091: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.253.42 80\nConnection to 10.101.253.42 80 port [tcp/http] succeeded!\n"
Jan 30 08:13:38.091: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:13:38.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.14 30529'
Jan 30 08:13:38.330: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.14 30529\nConnection to 10.55.210.14 30529 port [tcp/*] succeeded!\n"
Jan 30 08:13:38.330: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:13:38.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 30529'
Jan 30 08:13:38.556: INFO: stderr: "+ + ncecho -v hostName -t -w\n 2 10.55.210.16 30529\nConnection to 10.55.210.16 30529 port [tcp/*] succeeded!\n"
Jan 30 08:13:38.556: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:13:38.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.55.210.13:30529/ ; done'
Jan 30 08:13:38.916: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n"
Jan 30 08:13:38.916: INFO: stdout: "\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz\naffinity-nodeport-timeout-kvqdz"
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Received response from host: affinity-nodeport-timeout-kvqdz
Jan 30 08:13:38.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.55.210.13:30529/'
Jan 30 08:13:39.142: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n"
Jan 30 08:13:39.142: INFO: stdout: "affinity-nodeport-timeout-kvqdz"
Jan 30 08:13:59.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.55.210.13:30529/'
Jan 30 08:13:59.369: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n"
Jan 30 08:13:59.369: INFO: stdout: "affinity-nodeport-timeout-kvqdz"
Jan 30 08:14:19.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-9118 exec execpod-affinityh8gt8 -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.55.210.13:30529/'
Jan 30 08:14:19.559: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.55.210.13:30529/\n"
Jan 30 08:14:19.559: INFO: stdout: "affinity-nodeport-timeout-5z7xc"
Jan 30 08:14:19.559: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-9118, will wait for the garbage collector to delete the pods
Jan 30 08:14:19.642: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 8.45464ms
Jan 30 08:14:19.743: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 101.029937ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:14:22.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9118" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:56.969 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":75,"skipped":1542,"failed":0}
SSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:22.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 08:14:38.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9873" for this suite.

• [SLOW TEST:16.213 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":76,"skipped":1546,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:38.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-8d0c13fa-5412-40a0-9c9d-aa70ab42df00
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:14:42.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6687" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":77,"skipped":1575,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:42.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Jan 30 08:14:42.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-6210 cluster-info'
Jan 30 08:14:42.638: INFO: stderr: ""
Jan 30 08:14:42.638: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:14:42.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6210" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":78,"skipped":1590,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:42.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:14:43.048: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:14:45.076: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 14, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 14, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 14, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 14, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:14:48.112: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:14:48.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6147-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:14:51.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7857" for this suite.
STEP: Destroying namespace "webhook-7857-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:8.636 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":79,"skipped":1597,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:51.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Jan 30 08:14:51.313: INFO: Creating e2e-svc-a-rmrcv
Jan 30 08:14:51.323: INFO: Creating e2e-svc-b-gtxjk
Jan 30 08:14:51.334: INFO: Creating e2e-svc-c-s5dln
STEP: deleting service collection
Jan 30 08:14:51.387: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:14:51.387: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1875" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":80,"skipped":1637,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:51.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-0a1b845c-4f16-40c7-b2c4-77d8cd91ba1e
STEP: Creating a pod to test consume configMaps
Jan 30 08:14:51.445: INFO: Waiting up to 5m0s for pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3" in namespace "configmap-7491" to be "Succeeded or Failed"
Jan 30 08:14:51.449: INFO: Pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.840437ms
Jan 30 08:14:53.455: INFO: Pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009673073s
Jan 30 08:14:55.463: INFO: Pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018269244s
Jan 30 08:14:57.474: INFO: Pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028825162s
STEP: Saw pod success
Jan 30 08:14:57.474: INFO: Pod "pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3" satisfied condition "Succeeded or Failed"
Jan 30 08:14:57.480: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:14:57.505: INFO: Waiting for pod pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3 to disappear
Jan 30 08:14:57.510: INFO: Pod pod-configmaps-1d912be3-470d-4381-bf0b-c5904c72fcc3 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:14:57.510: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7491" for this suite.

• [SLOW TEST:6.120 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1640,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:14:57.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename containers
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Jan 30 08:14:57.575: INFO: Waiting up to 5m0s for pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6" in namespace "containers-8090" to be "Succeeded or Failed"
Jan 30 08:14:57.580: INFO: Pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.529103ms
Jan 30 08:14:59.595: INFO: Pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019622909s
Jan 30 08:15:01.611: INFO: Pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035605308s
Jan 30 08:15:03.622: INFO: Pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.046688836s
STEP: Saw pod success
Jan 30 08:15:03.622: INFO: Pod "client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6" satisfied condition "Succeeded or Failed"
Jan 30 08:15:03.627: INFO: Trying to get logs from node conoa-prod01-wk003 pod client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:15:03.660: INFO: Waiting for pod client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6 to disappear
Jan 30 08:15:03.664: INFO: Pod client-containers-2c7fac2f-a19a-4385-b598-80cad52dcbc6 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 30 08:15:03.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-8090" for this suite.

• [SLOW TEST:6.145 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1740,"failed":0}
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:15:03.684: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 30 08:15:03.733: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:15:05.739: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:15:07.742: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 30 08:15:07.763: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:15:09.772: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:15:11.771: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 30 08:15:11.785: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 30 08:15:11.789: INFO: Pod pod-with-prestop-http-hook still exists
Jan 30 08:15:13.790: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 30 08:15:13.803: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 30 08:15:13.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-7670" for this suite.

• [SLOW TEST:10.147 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1741,"failed":0}
SS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:15:13.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename discovery
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:15:14.112: INFO: Checking APIGroup: apiregistration.k8s.io
Jan 30 08:15:14.115: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jan 30 08:15:14.115: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jan 30 08:15:14.115: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jan 30 08:15:14.115: INFO: Checking APIGroup: apps
Jan 30 08:15:14.116: INFO: PreferredVersion.GroupVersion: apps/v1
Jan 30 08:15:14.116: INFO: Versions found [{apps/v1 v1}]
Jan 30 08:15:14.116: INFO: apps/v1 matches apps/v1
Jan 30 08:15:14.116: INFO: Checking APIGroup: events.k8s.io
Jan 30 08:15:14.118: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jan 30 08:15:14.118: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.118: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jan 30 08:15:14.118: INFO: Checking APIGroup: authentication.k8s.io
Jan 30 08:15:14.119: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jan 30 08:15:14.119: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jan 30 08:15:14.119: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jan 30 08:15:14.119: INFO: Checking APIGroup: authorization.k8s.io
Jan 30 08:15:14.121: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jan 30 08:15:14.121: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jan 30 08:15:14.121: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jan 30 08:15:14.121: INFO: Checking APIGroup: autoscaling
Jan 30 08:15:14.122: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jan 30 08:15:14.123: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Jan 30 08:15:14.123: INFO: autoscaling/v2 matches autoscaling/v2
Jan 30 08:15:14.123: INFO: Checking APIGroup: batch
Jan 30 08:15:14.124: INFO: PreferredVersion.GroupVersion: batch/v1
Jan 30 08:15:14.124: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Jan 30 08:15:14.124: INFO: batch/v1 matches batch/v1
Jan 30 08:15:14.124: INFO: Checking APIGroup: certificates.k8s.io
Jan 30 08:15:14.125: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jan 30 08:15:14.125: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jan 30 08:15:14.125: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jan 30 08:15:14.125: INFO: Checking APIGroup: networking.k8s.io
Jan 30 08:15:14.126: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jan 30 08:15:14.126: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jan 30 08:15:14.126: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jan 30 08:15:14.126: INFO: Checking APIGroup: policy
Jan 30 08:15:14.128: INFO: PreferredVersion.GroupVersion: policy/v1
Jan 30 08:15:14.128: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Jan 30 08:15:14.128: INFO: policy/v1 matches policy/v1
Jan 30 08:15:14.128: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jan 30 08:15:14.129: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jan 30 08:15:14.129: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jan 30 08:15:14.129: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jan 30 08:15:14.129: INFO: Checking APIGroup: storage.k8s.io
Jan 30 08:15:14.130: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jan 30 08:15:14.130: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.130: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jan 30 08:15:14.130: INFO: Checking APIGroup: admissionregistration.k8s.io
Jan 30 08:15:14.132: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jan 30 08:15:14.132: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jan 30 08:15:14.132: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jan 30 08:15:14.132: INFO: Checking APIGroup: apiextensions.k8s.io
Jan 30 08:15:14.133: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jan 30 08:15:14.133: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jan 30 08:15:14.133: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jan 30 08:15:14.133: INFO: Checking APIGroup: scheduling.k8s.io
Jan 30 08:15:14.135: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jan 30 08:15:14.135: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jan 30 08:15:14.135: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jan 30 08:15:14.135: INFO: Checking APIGroup: coordination.k8s.io
Jan 30 08:15:14.136: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jan 30 08:15:14.136: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jan 30 08:15:14.136: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jan 30 08:15:14.136: INFO: Checking APIGroup: node.k8s.io
Jan 30 08:15:14.137: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jan 30 08:15:14.137: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.137: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jan 30 08:15:14.137: INFO: Checking APIGroup: discovery.k8s.io
Jan 30 08:15:14.138: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jan 30 08:15:14.138: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.138: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jan 30 08:15:14.138: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jan 30 08:15:14.139: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Jan 30 08:15:14.139: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.139: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Jan 30 08:15:14.139: INFO: Checking APIGroup: acme.cert-manager.io
Jan 30 08:15:14.141: INFO: PreferredVersion.GroupVersion: acme.cert-manager.io/v1
Jan 30 08:15:14.141: INFO: Versions found [{acme.cert-manager.io/v1 v1}]
Jan 30 08:15:14.141: INFO: acme.cert-manager.io/v1 matches acme.cert-manager.io/v1
Jan 30 08:15:14.141: INFO: Checking APIGroup: cert-manager.io
Jan 30 08:15:14.142: INFO: PreferredVersion.GroupVersion: cert-manager.io/v1
Jan 30 08:15:14.142: INFO: Versions found [{cert-manager.io/v1 v1}]
Jan 30 08:15:14.142: INFO: cert-manager.io/v1 matches cert-manager.io/v1
Jan 30 08:15:14.142: INFO: Checking APIGroup: kubegres.reactive-tech.io
Jan 30 08:15:14.145: INFO: PreferredVersion.GroupVersion: kubegres.reactive-tech.io/v1
Jan 30 08:15:14.145: INFO: Versions found [{kubegres.reactive-tech.io/v1 v1}]
Jan 30 08:15:14.145: INFO: kubegres.reactive-tech.io/v1 matches kubegres.reactive-tech.io/v1
Jan 30 08:15:14.145: INFO: Checking APIGroup: monitoring.coreos.com
Jan 30 08:15:14.146: INFO: PreferredVersion.GroupVersion: monitoring.coreos.com/v1
Jan 30 08:15:14.146: INFO: Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
Jan 30 08:15:14.146: INFO: monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
Jan 30 08:15:14.146: INFO: Checking APIGroup: trident.netapp.io
Jan 30 08:15:14.147: INFO: PreferredVersion.GroupVersion: trident.netapp.io/v1
Jan 30 08:15:14.147: INFO: Versions found [{trident.netapp.io/v1 v1}]
Jan 30 08:15:14.147: INFO: trident.netapp.io/v1 matches trident.netapp.io/v1
Jan 30 08:15:14.147: INFO: Checking APIGroup: argoproj.io
Jan 30 08:15:14.149: INFO: PreferredVersion.GroupVersion: argoproj.io/v1alpha1
Jan 30 08:15:14.149: INFO: Versions found [{argoproj.io/v1alpha1 v1alpha1}]
Jan 30 08:15:14.149: INFO: argoproj.io/v1alpha1 matches argoproj.io/v1alpha1
Jan 30 08:15:14.149: INFO: Checking APIGroup: bitnami.com
Jan 30 08:15:14.151: INFO: PreferredVersion.GroupVersion: bitnami.com/v1alpha1
Jan 30 08:15:14.151: INFO: Versions found [{bitnami.com/v1alpha1 v1alpha1}]
Jan 30 08:15:14.151: INFO: bitnami.com/v1alpha1 matches bitnami.com/v1alpha1
Jan 30 08:15:14.151: INFO: Checking APIGroup: monitoring.grafana.com
Jan 30 08:15:14.153: INFO: PreferredVersion.GroupVersion: monitoring.grafana.com/v1alpha1
Jan 30 08:15:14.153: INFO: Versions found [{monitoring.grafana.com/v1alpha1 v1alpha1}]
Jan 30 08:15:14.153: INFO: monitoring.grafana.com/v1alpha1 matches monitoring.grafana.com/v1alpha1
Jan 30 08:15:14.153: INFO: Checking APIGroup: cilium.io
Jan 30 08:15:14.154: INFO: PreferredVersion.GroupVersion: cilium.io/v2
Jan 30 08:15:14.154: INFO: Versions found [{cilium.io/v2 v2}]
Jan 30 08:15:14.154: INFO: cilium.io/v2 matches cilium.io/v2
Jan 30 08:15:14.154: INFO: Checking APIGroup: metrics.k8s.io
Jan 30 08:15:14.155: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Jan 30 08:15:14.155: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Jan 30 08:15:14.155: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Jan 30 08:15:14.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-7484" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":84,"skipped":1743,"failed":0}
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:15:14.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-runtime
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 30 08:15:19.250: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 30 08:15:19.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6479" for this suite.

• [SLOW TEST:5.097 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    on terminated container
    test/e2e/common/node/runtime.go:136
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1744,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:15:19.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Jan 30 08:15:19.297: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Jan 30 08:15:19.318: INFO: waiting for watch events with expected annotations in namespace
Jan 30 08:15:19.318: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Jan 30 08:15:19.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-2781" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":86,"skipped":1765,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:15:19.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename taint-single-pod
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Jan 30 08:15:19.364: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 08:16:19.522: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:16:19.528: INFO: Starting informer...
STEP: Starting pod...
Jan 30 08:16:19.750: INFO: Pod is running on conoa-prod01-wk003. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Jan 30 08:16:19.776: INFO: Pod wasn't evicted. Proceeding
Jan 30 08:16:19.776: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Jan 30 08:17:34.804: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:17:34.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-4716" for this suite.

• [SLOW TEST:135.479 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":87,"skipped":1783,"failed":0}
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:17:34.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4830
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:17:34.860: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:17:44.871: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Jan 30 08:17:44.897: INFO: Found 1 stateful pods, waiting for 2
Jan 30 08:17:54.910: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:17:54.910: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:17:54.941: INFO: Deleting all statefulset in ns statefulset-4830
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:17:54.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4830" for this suite.

• [SLOW TEST:20.142 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":88,"skipped":1787,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:17:54.969: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jan 30 08:17:54.994: INFO: Waiting up to 5m0s for pod "security-context-f8855260-a430-4e5e-b612-489212c4570c" in namespace "security-context-4304" to be "Succeeded or Failed"
Jan 30 08:17:54.999: INFO: Pod "security-context-f8855260-a430-4e5e-b612-489212c4570c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.579694ms
Jan 30 08:17:57.010: INFO: Pod "security-context-f8855260-a430-4e5e-b612-489212c4570c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016325833s
Jan 30 08:17:59.017: INFO: Pod "security-context-f8855260-a430-4e5e-b612-489212c4570c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023278534s
Jan 30 08:18:01.033: INFO: Pod "security-context-f8855260-a430-4e5e-b612-489212c4570c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.038840149s
STEP: Saw pod success
Jan 30 08:18:01.033: INFO: Pod "security-context-f8855260-a430-4e5e-b612-489212c4570c" satisfied condition "Succeeded or Failed"
Jan 30 08:18:01.038: INFO: Trying to get logs from node conoa-prod01-wk003 pod security-context-f8855260-a430-4e5e-b612-489212c4570c container test-container: <nil>
STEP: delete the pod
Jan 30 08:18:01.064: INFO: Waiting for pod security-context-f8855260-a430-4e5e-b612-489212c4570c to disappear
Jan 30 08:18:01.068: INFO: Pod security-context-f8855260-a430-4e5e-b612-489212c4570c no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 08:18:01.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-4304" for this suite.

• [SLOW TEST:6.114 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":89,"skipped":1831,"failed":0}
SSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:18:01.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename podtemplate
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 30 08:18:01.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-6315" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":90,"skipped":1837,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:18:01.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4505
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 30 08:18:01.183: INFO: Found 0 stateful pods, waiting for 3
Jan 30 08:18:11.196: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:18:11.196: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:18:11.196: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 30 08:18:11.233: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Jan 30 08:18:21.286: INFO: Updating stateful set ss2
Jan 30 08:18:21.295: INFO: Waiting for Pod statefulset-4505/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Jan 30 08:18:31.362: INFO: Found 2 stateful pods, waiting for 3
Jan 30 08:18:41.375: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:18:41.375: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:18:41.375: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Jan 30 08:18:41.413: INFO: Updating stateful set ss2
Jan 30 08:18:41.423: INFO: Waiting for Pod statefulset-4505/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Jan 30 08:18:51.477: INFO: Updating stateful set ss2
Jan 30 08:18:51.487: INFO: Waiting for StatefulSet statefulset-4505/ss2 to complete update
Jan 30 08:18:51.487: INFO: Waiting for Pod statefulset-4505/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:19:01.504: INFO: Deleting all statefulset in ns statefulset-4505
Jan 30 08:19:01.509: INFO: Scaling statefulset ss2 to 0
Jan 30 08:19:11.549: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:19:11.553: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:19:11.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4505" for this suite.

• [SLOW TEST:70.434 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":91,"skipped":1854,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:19:11.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename containers
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 30 08:19:15.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-4659" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1862,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:19:15.665: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-59
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-59
Jan 30 08:19:15.716: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:19:25.725: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Jan 30 08:19:25.752: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Jan 30 08:19:25.765: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Jan 30 08:19:25.770: INFO: Observed &StatefulSet event: ADDED
Jan 30 08:19:25.770: INFO: Found Statefulset ss in namespace statefulset-59 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:19:25.770: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Jan 30 08:19:25.770: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 08:19:25.779: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Jan 30 08:19:25.783: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:19:25.783: INFO: Deleting all statefulset in ns statefulset-59
Jan 30 08:19:25.787: INFO: Scaling statefulset ss to 0
Jan 30 08:19:35.811: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:19:35.817: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:19:35.840: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-59" for this suite.

• [SLOW TEST:20.189 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":93,"skipped":1880,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:19:35.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 08:20:03.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1467" for this suite.

• [SLOW TEST:28.131 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":94,"skipped":1889,"failed":0}
SSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:03.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-8b4d7b20-f7b5-45a1-bbff-4d6a63987b38
STEP: Creating a pod to test consume configMaps
Jan 30 08:20:04.036: INFO: Waiting up to 5m0s for pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3" in namespace "configmap-2433" to be "Succeeded or Failed"
Jan 30 08:20:04.040: INFO: Pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01963ms
Jan 30 08:20:06.055: INFO: Pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018884931s
Jan 30 08:20:08.067: INFO: Pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031021194s
Jan 30 08:20:10.085: INFO: Pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.048898395s
STEP: Saw pod success
Jan 30 08:20:10.085: INFO: Pod "pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3" satisfied condition "Succeeded or Failed"
Jan 30 08:20:10.089: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:20:10.117: INFO: Waiting for pod pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3 to disappear
Jan 30 08:20:10.121: INFO: Pod pod-configmaps-f7a1fb39-36fd-489e-85d7-8d46c02f90e3 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:20:10.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2433" for this suite.

• [SLOW TEST:6.150 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":95,"skipped":1895,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:10.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:20:10.173: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8" in namespace "downward-api-3201" to be "Succeeded or Failed"
Jan 30 08:20:10.177: INFO: Pod "downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.972238ms
Jan 30 08:20:12.184: INFO: Pod "downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010744001s
Jan 30 08:20:14.193: INFO: Pod "downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019842144s
STEP: Saw pod success
Jan 30 08:20:14.193: INFO: Pod "downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8" satisfied condition "Succeeded or Failed"
Jan 30 08:20:14.198: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8 container client-container: <nil>
STEP: delete the pod
Jan 30 08:20:14.222: INFO: Waiting for pod downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8 to disappear
Jan 30 08:20:14.225: INFO: Pod downwardapi-volume-4a92b30e-d355-479e-a54b-80b3e731dee8 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:20:14.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3201" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":96,"skipped":1919,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:14.238: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-7a85020b-f0ff-497f-afeb-4c85af913969
STEP: Creating the pod
Jan 30 08:20:14.283: INFO: The status of Pod pod-projected-configmaps-fcdfee1e-d54a-4172-82da-81b067d7c662 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:20:16.294: INFO: The status of Pod pod-projected-configmaps-fcdfee1e-d54a-4172-82da-81b067d7c662 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-7a85020b-f0ff-497f-afeb-4c85af913969
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 08:20:18.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2237" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":97,"skipped":1924,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:18.364: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-7846966a-62f0-4e56-9177-5caf7c74437f
STEP: Creating a pod to test consume configMaps
Jan 30 08:20:18.414: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459" in namespace "projected-8777" to be "Succeeded or Failed"
Jan 30 08:20:18.419: INFO: Pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459": Phase="Pending", Reason="", readiness=false. Elapsed: 5.17591ms
Jan 30 08:20:20.433: INFO: Pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019553535s
Jan 30 08:20:22.449: INFO: Pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035316467s
Jan 30 08:20:24.460: INFO: Pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.046570292s
STEP: Saw pod success
Jan 30 08:20:24.460: INFO: Pod "pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459" satisfied condition "Succeeded or Failed"
Jan 30 08:20:24.468: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Jan 30 08:20:24.494: INFO: Waiting for pod pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459 to disappear
Jan 30 08:20:24.499: INFO: Pod pod-projected-configmaps-40377c91-ee26-4e7e-9c06-b905aa787459 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 08:20:24.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8777" for this suite.

• [SLOW TEST:6.150 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":98,"skipped":1953,"failed":0}
S
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:24.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename lease-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Jan 30 08:20:24.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-2396" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":99,"skipped":1954,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:24.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replication-controller
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 30 08:20:30.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6384" for this suite.

• [SLOW TEST:6.260 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":100,"skipped":1959,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:30.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:20:31.206: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:20:33.223: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 20, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 20, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 20, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 20, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:20:36.253: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:20:36.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2020" for this suite.
STEP: Destroying namespace "webhook-2020-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.430 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":101,"skipped":1986,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:36.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:20:36.335: INFO: Waiting up to 5m0s for pod "downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb" in namespace "downward-api-9213" to be "Succeeded or Failed"
Jan 30 08:20:36.339: INFO: Pod "downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.642977ms
Jan 30 08:20:38.351: INFO: Pod "downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01566823s
Jan 30 08:20:40.367: INFO: Pod "downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031700946s
STEP: Saw pod success
Jan 30 08:20:40.367: INFO: Pod "downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb" satisfied condition "Succeeded or Failed"
Jan 30 08:20:40.372: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb container client-container: <nil>
STEP: delete the pod
Jan 30 08:20:40.398: INFO: Waiting for pod downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb to disappear
Jan 30 08:20:40.402: INFO: Pod downwardapi-volume-93db7159-7d50-46d1-b7c9-8ed678aa08bb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:20:40.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9213" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":102,"skipped":1998,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:40.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Jan 30 08:20:40.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-7296 api-versions'
Jan 30 08:20:40.529: INFO: stderr: ""
Jan 30 08:20:40.529: INFO: stdout: "acme.cert-manager.io/v1\nadmissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nargoproj.io/v1alpha1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\nbitnami.com/v1alpha1\ncert-manager.io/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nkubegres.reactive-tech.io/v1\nmetrics.k8s.io/v1beta1\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nmonitoring.grafana.com/v1alpha1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\ntrident.netapp.io/v1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:20:40.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7296" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":103,"skipped":2004,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:40.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Jan 30 08:20:40.590: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:20:42.605: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:20:44.599: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Jan 30 08:20:44.616: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:20:46.628: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:20:48.629: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Jan 30 08:20:48.634: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:48.634: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:48.635: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:48.636: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:20:48.762: INFO: Exec stderr: ""
Jan 30 08:20:48.762: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:48.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:48.763: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:48.763: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:20:48.887: INFO: Exec stderr: ""
Jan 30 08:20:48.887: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:48.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:48.888: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:48.888: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:20:49.007: INFO: Exec stderr: ""
Jan 30 08:20:49.007: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.008: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.008: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:20:49.131: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Jan 30 08:20:49.131: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.132: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.132: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 30 08:20:49.272: INFO: Exec stderr: ""
Jan 30 08:20:49.272: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.273: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.273: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 30 08:20:49.384: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Jan 30 08:20:49.384: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.385: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.385: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:20:49.511: INFO: Exec stderr: ""
Jan 30 08:20:49.511: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.512: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.512: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:20:49.626: INFO: Exec stderr: ""
Jan 30 08:20:49.626: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.627: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.627: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:20:49.747: INFO: Exec stderr: ""
Jan 30 08:20:49.747: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4671 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:20:49.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:20:49.748: INFO: ExecWithOptions: Clientset creation
Jan 30 08:20:49.748: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:20:49.868: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Jan 30 08:20:49.868: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-4671" for this suite.

• [SLOW TEST:9.342 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":104,"skipped":2050,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:20:49.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-3903
STEP: creating replication controller nodeport-test in namespace services-3903
I0130 08:20:49.959563      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3903, replica count: 2
Jan 30 08:20:53.011: INFO: Creating new exec pod
I0130 08:20:53.011351      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:21:02.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 30 08:21:02.249: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 30 08:21:02.249: INFO: stdout: ""
Jan 30 08:21:03.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jan 30 08:21:03.451: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 30 08:21:03.451: INFO: stdout: "nodeport-test-jgkd2"
Jan 30 08:21:03.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.60.131 80'
Jan 30 08:21:03.668: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.60.131 80\nConnection to 10.106.60.131 80 port [tcp/http] succeeded!\n"
Jan 30 08:21:03.668: INFO: stdout: ""
Jan 30 08:21:04.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.60.131 80'
Jan 30 08:21:04.883: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.60.131 80\nConnection to 10.106.60.131 80 port [tcp/http] succeeded!\n"
Jan 30 08:21:04.883: INFO: stdout: "nodeport-test-jgkd2"
Jan 30 08:21:04.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.15 32534'
Jan 30 08:21:05.105: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.15 32534\nConnection to 10.55.210.15 32534 port [tcp/*] succeeded!\n"
Jan 30 08:21:05.105: INFO: stdout: "nodeport-test-jgkd2"
Jan 30 08:21:05.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 32534'
Jan 30 08:21:05.312: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 32534\nConnection to 10.55.210.16 32534 port [tcp/*] succeeded!\n"
Jan 30 08:21:05.312: INFO: stdout: ""
Jan 30 08:21:06.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3903 exec execpod9897q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 32534'
Jan 30 08:21:06.528: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 32534\nConnection to 10.55.210.16 32534 port [tcp/*] succeeded!\n"
Jan 30 08:21:06.529: INFO: stdout: "nodeport-test-v7h5m"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:21:06.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3903" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:16.657 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":105,"skipped":2054,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:21:06.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Jan 30 08:21:06.583: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 08:21:11.596: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 08:21:11.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8358" for this suite.

• [SLOW TEST:5.091 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":106,"skipped":2060,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:21:11.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-d8de1484-9af0-41fd-8ee4-34a62cac62eb
STEP: Creating a pod to test consume secrets
Jan 30 08:21:11.669: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f" in namespace "projected-4367" to be "Succeeded or Failed"
Jan 30 08:21:11.673: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.764426ms
Jan 30 08:21:13.680: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011466624s
Jan 30 08:21:15.691: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022160246s
Jan 30 08:21:17.704: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.03507275s
Jan 30 08:21:19.720: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.051588609s
Jan 30 08:21:21.737: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.068758441s
STEP: Saw pod success
Jan 30 08:21:21.737: INFO: Pod "pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f" satisfied condition "Succeeded or Failed"
Jan 30 08:21:21.744: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:21:21.774: INFO: Waiting for pod pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f to disappear
Jan 30 08:21:21.778: INFO: Pod pod-projected-secrets-c8b15722-b3ed-4092-a41e-3e6d253d8a2f no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:21:21.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4367" for this suite.

• [SLOW TEST:10.155 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":2062,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:21:21.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Jan 30 08:21:21.861: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367636 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:21:21.862: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367637 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:21:21.862: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367638 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Jan 30 08:21:31.920: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367683 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:21:31.920: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367684 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:21:31.920: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6832  a0d8ea4b-3cd5-4cbb-ba32-d15deabbd0cf 37367685 0 2023-01-30 08:21:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2023-01-30 08:21:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 30 08:21:31.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6832" for this suite.

• [SLOW TEST:10.142 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":108,"skipped":2087,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:21:31.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Jan 30 08:21:42.353: INFO: 95 pods remaining
Jan 30 08:21:42.353: INFO: 71 pods has nil DeletionTimestamp
Jan 30 08:21:42.353: INFO: 
Jan 30 08:21:47.338: INFO: 84 pods remaining
Jan 30 08:21:47.338: INFO: 50 pods has nil DeletionTimestamp
Jan 30 08:21:47.338: INFO: 
STEP: Gathering metrics
Jan 30 08:21:52.377: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 08:21:52.479: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 30 08:21:52.479: INFO: Deleting pod "simpletest-rc-to-be-deleted-294kr" in namespace "gc-6919"
Jan 30 08:21:52.496: INFO: Deleting pod "simpletest-rc-to-be-deleted-2bnpt" in namespace "gc-6919"
Jan 30 08:21:52.512: INFO: Deleting pod "simpletest-rc-to-be-deleted-2r9xx" in namespace "gc-6919"
Jan 30 08:21:52.525: INFO: Deleting pod "simpletest-rc-to-be-deleted-2v5bj" in namespace "gc-6919"
Jan 30 08:21:52.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-42drs" in namespace "gc-6919"
Jan 30 08:21:52.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jh5s" in namespace "gc-6919"
Jan 30 08:21:52.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mzgb" in namespace "gc-6919"
Jan 30 08:21:52.561: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ng5m" in namespace "gc-6919"
Jan 30 08:21:52.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-55kgk" in namespace "gc-6919"
Jan 30 08:21:52.578: INFO: Deleting pod "simpletest-rc-to-be-deleted-5v6wv" in namespace "gc-6919"
Jan 30 08:21:52.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-67tb2" in namespace "gc-6919"
Jan 30 08:21:52.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-68hvp" in namespace "gc-6919"
Jan 30 08:21:52.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ll2v" in namespace "gc-6919"
Jan 30 08:21:52.613: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pm4s" in namespace "gc-6919"
Jan 30 08:21:52.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q55j" in namespace "gc-6919"
Jan 30 08:21:52.628: INFO: Deleting pod "simpletest-rc-to-be-deleted-6s2rn" in namespace "gc-6919"
Jan 30 08:21:52.636: INFO: Deleting pod "simpletest-rc-to-be-deleted-758gs" in namespace "gc-6919"
Jan 30 08:21:52.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-78n8g" in namespace "gc-6919"
Jan 30 08:21:52.653: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ll2t" in namespace "gc-6919"
Jan 30 08:21:52.662: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cg22" in namespace "gc-6919"
Jan 30 08:21:52.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fkwr" in namespace "gc-6919"
Jan 30 08:21:52.677: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g496" in namespace "gc-6919"
Jan 30 08:21:52.686: INFO: Deleting pod "simpletest-rc-to-be-deleted-8wk5h" in namespace "gc-6919"
Jan 30 08:21:52.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-946hc" in namespace "gc-6919"
Jan 30 08:21:52.708: INFO: Deleting pod "simpletest-rc-to-be-deleted-95ld4" in namespace "gc-6919"
Jan 30 08:21:52.720: INFO: Deleting pod "simpletest-rc-to-be-deleted-96tpp" in namespace "gc-6919"
Jan 30 08:21:52.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-9cs6r" in namespace "gc-6919"
Jan 30 08:21:52.739: INFO: Deleting pod "simpletest-rc-to-be-deleted-bt6rr" in namespace "gc-6919"
Jan 30 08:21:52.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwbhk" in namespace "gc-6919"
Jan 30 08:21:52.760: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxrt6" in namespace "gc-6919"
Jan 30 08:21:52.770: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzshq" in namespace "gc-6919"
Jan 30 08:21:52.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9cnr" in namespace "gc-6919"
Jan 30 08:21:52.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-cd9q8" in namespace "gc-6919"
Jan 30 08:21:52.797: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2258" in namespace "gc-6919"
Jan 30 08:21:52.806: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2jck" in namespace "gc-6919"
Jan 30 08:21:52.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-d68x7" in namespace "gc-6919"
Jan 30 08:21:52.830: INFO: Deleting pod "simpletest-rc-to-be-deleted-dphsf" in namespace "gc-6919"
Jan 30 08:21:52.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-dprwl" in namespace "gc-6919"
Jan 30 08:21:52.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-fpf6m" in namespace "gc-6919"
Jan 30 08:21:52.856: INFO: Deleting pod "simpletest-rc-to-be-deleted-fz2tq" in namespace "gc-6919"
Jan 30 08:21:52.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-g52sw" in namespace "gc-6919"
Jan 30 08:21:52.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggw6t" in namespace "gc-6919"
Jan 30 08:21:52.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-h2qrd" in namespace "gc-6919"
Jan 30 08:21:52.898: INFO: Deleting pod "simpletest-rc-to-be-deleted-hbbsz" in namespace "gc-6919"
Jan 30 08:21:52.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-hg2fr" in namespace "gc-6919"
Jan 30 08:21:52.925: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkjcp" in namespace "gc-6919"
Jan 30 08:21:52.933: INFO: Deleting pod "simpletest-rc-to-be-deleted-jkqlg" in namespace "gc-6919"
Jan 30 08:21:52.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlg6x" in namespace "gc-6919"
Jan 30 08:21:52.951: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqqph" in namespace "gc-6919"
Jan 30 08:21:52.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqztz" in namespace "gc-6919"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 08:21:52.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6919" for this suite.

• [SLOW TEST:21.044 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":109,"skipped":2096,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:21:52.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Jan 30 08:22:03.084: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 08:22:03.187: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 08:22:03.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1488" for this suite.

• [SLOW TEST:10.223 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":110,"skipped":2107,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:03.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 30 08:22:03.239: INFO: Waiting up to 5m0s for pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743" in namespace "emptydir-8789" to be "Succeeded or Failed"
Jan 30 08:22:03.244: INFO: Pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743": Phase="Pending", Reason="", readiness=false. Elapsed: 4.939874ms
Jan 30 08:22:05.252: INFO: Pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012121172s
Jan 30 08:22:07.267: INFO: Pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02734986s
Jan 30 08:22:09.282: INFO: Pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042698963s
STEP: Saw pod success
Jan 30 08:22:09.282: INFO: Pod "pod-58c97e2c-9e2f-46bc-8015-a8162161f743" satisfied condition "Succeeded or Failed"
Jan 30 08:22:09.287: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-58c97e2c-9e2f-46bc-8015-a8162161f743 container test-container: <nil>
STEP: delete the pod
Jan 30 08:22:09.316: INFO: Waiting for pod pod-58c97e2c-9e2f-46bc-8015-a8162161f743 to disappear
Jan 30 08:22:09.320: INFO: Pod pod-58c97e2c-9e2f-46bc-8015-a8162161f743 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:22:09.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8789" for this suite.

• [SLOW TEST:6.131 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":111,"skipped":2115,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:09.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-2811
STEP: creating service affinity-nodeport-transition in namespace services-2811
STEP: creating replication controller affinity-nodeport-transition in namespace services-2811
I0130 08:22:09.393959      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2811, replica count: 3
I0130 08:22:12.444631      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:22:12.464: INFO: Creating new exec pod
Jan 30 08:22:17.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Jan 30 08:22:17.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jan 30 08:22:17.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:22:17.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.145.178 80'
Jan 30 08:22:17.912: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.145.178 80\nConnection to 10.103.145.178 80 port [tcp/http] succeeded!\n"
Jan 30 08:22:17.912: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:22:17.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.14 31404'
Jan 30 08:22:18.131: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.14 31404\nConnection to 10.55.210.14 31404 port [tcp/*] succeeded!\n"
Jan 30 08:22:18.131: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:22:18.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 31404'
Jan 30 08:22:18.341: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 31404\nConnection to 10.55.210.16 31404 port [tcp/*] succeeded!\n"
Jan 30 08:22:18.341: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:22:18.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.55.210.13:31404/ ; done'
Jan 30 08:22:18.687: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n"
Jan 30 08:22:18.687: INFO: stdout: "\naffinity-nodeport-transition-7xldl\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-7xldl\naffinity-nodeport-transition-7xldl\naffinity-nodeport-transition-7xldl\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-5wt7m\naffinity-nodeport-transition-tsq7s"
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-7xldl
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-7xldl
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-7xldl
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-7xldl
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-5wt7m
Jan 30 08:22:18.687: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:18.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2811 exec execpod-affinity96fpq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.55.210.13:31404/ ; done'
Jan 30 08:22:19.031: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:31404/\n"
Jan 30 08:22:19.031: INFO: stdout: "\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s\naffinity-nodeport-transition-tsq7s"
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Received response from host: affinity-nodeport-transition-tsq7s
Jan 30 08:22:19.031: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2811, will wait for the garbage collector to delete the pods
Jan 30 08:22:19.112: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.031329ms
Jan 30 08:22:19.213: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.856928ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:22:21.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2811" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.229 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":112,"skipped":2150,"failed":0}
S
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:21.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a438fd3c-abd5-4388-bb26-a4e97b79a8d9
STEP: Creating a pod to test consume secrets
Jan 30 08:22:21.596: INFO: Waiting up to 5m0s for pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72" in namespace "secrets-2200" to be "Succeeded or Failed"
Jan 30 08:22:21.599: INFO: Pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72": Phase="Pending", Reason="", readiness=false. Elapsed: 2.972641ms
Jan 30 08:22:23.615: INFO: Pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019423321s
Jan 30 08:22:25.624: INFO: Pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028737731s
Jan 30 08:22:27.634: INFO: Pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.038455783s
STEP: Saw pod success
Jan 30 08:22:27.634: INFO: Pod "pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72" satisfied condition "Succeeded or Failed"
Jan 30 08:22:27.641: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72 container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:22:27.663: INFO: Waiting for pod pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72 to disappear
Jan 30 08:22:27.666: INFO: Pod pod-secrets-593921d7-0cb9-4566-ba0d-462231731a72 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:22:27.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2200" for this suite.

• [SLOW TEST:6.113 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":113,"skipped":2151,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:27.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replication-controller
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:22:27.707: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Jan 30 08:22:29.767: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 30 08:22:30.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-5293" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":114,"skipped":2167,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:30.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:22:30.840: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e" in namespace "downward-api-909" to be "Succeeded or Failed"
Jan 30 08:22:30.847: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.526488ms
Jan 30 08:22:32.852: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012336478s
Jan 30 08:22:34.861: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020470609s
Jan 30 08:22:36.872: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.032310979s
Jan 30 08:22:38.888: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Pending", Reason="", readiness=false. Elapsed: 8.047451218s
Jan 30 08:22:40.894: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.053798767s
STEP: Saw pod success
Jan 30 08:22:40.894: INFO: Pod "downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e" satisfied condition "Succeeded or Failed"
Jan 30 08:22:40.898: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e container client-container: <nil>
STEP: delete the pod
Jan 30 08:22:40.921: INFO: Waiting for pod downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e to disappear
Jan 30 08:22:40.924: INFO: Pod downwardapi-volume-eb4f8a07-de78-42b9-8be6-02c61023aa4e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:22:40.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-909" for this suite.

• [SLOW TEST:10.139 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":115,"skipped":2187,"failed":0}
SSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:22:40.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-85606c2c-640e-406e-8c40-1bf194c16254 in namespace container-probe-6881
Jan 30 08:22:44.993: INFO: Started pod busybox-85606c2c-640e-406e-8c40-1bf194c16254 in namespace container-probe-6881
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 08:22:44.998: INFO: Initial restart count of pod busybox-85606c2c-640e-406e-8c40-1bf194c16254 is 0
Jan 30 08:23:33.259: INFO: Restart count of pod container-probe-6881/busybox-85606c2c-640e-406e-8c40-1bf194c16254 is now 1 (48.261309102s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 08:23:33.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6881" for this suite.

• [SLOW TEST:52.348 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":116,"skipped":2191,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:23:33.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:23:33.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 30 08:23:38.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-1636 --namespace=crd-publish-openapi-1636 create -f -'
Jan 30 08:23:39.786: INFO: stderr: ""
Jan 30 08:23:39.787: INFO: stdout: "e2e-test-crd-publish-openapi-6269-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 30 08:23:39.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-1636 --namespace=crd-publish-openapi-1636 delete e2e-test-crd-publish-openapi-6269-crds test-cr'
Jan 30 08:23:39.936: INFO: stderr: ""
Jan 30 08:23:39.936: INFO: stdout: "e2e-test-crd-publish-openapi-6269-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jan 30 08:23:39.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-1636 --namespace=crd-publish-openapi-1636 apply -f -'
Jan 30 08:23:40.212: INFO: stderr: ""
Jan 30 08:23:40.212: INFO: stdout: "e2e-test-crd-publish-openapi-6269-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 30 08:23:40.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-1636 --namespace=crd-publish-openapi-1636 delete e2e-test-crd-publish-openapi-6269-crds test-cr'
Jan 30 08:23:40.303: INFO: stderr: ""
Jan 30 08:23:40.303: INFO: stdout: "e2e-test-crd-publish-openapi-6269-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Jan 30 08:23:40.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-1636 explain e2e-test-crd-publish-openapi-6269-crds'
Jan 30 08:23:40.544: INFO: stderr: ""
Jan 30 08:23:40.544: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6269-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:23:46.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1636" for this suite.

• [SLOW TEST:13.146 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":117,"skipped":2197,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:23:46.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Jan 30 08:23:46.474: INFO: The status of Pod pod-hostip-1e082de0-0306-4543-bf09-0794749615cf is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:23:48.491: INFO: The status of Pod pod-hostip-1e082de0-0306-4543-bf09-0794749615cf is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:23:50.482: INFO: The status of Pod pod-hostip-1e082de0-0306-4543-bf09-0794749615cf is Running (Ready = true)
Jan 30 08:23:50.491: INFO: Pod pod-hostip-1e082de0-0306-4543-bf09-0794749615cf has hostIP: 10.55.210.15
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 08:23:50.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5894" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":118,"skipped":2254,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:23:50.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-6d4d22c1-89b6-4501-aa8f-3ba7f18d018e
STEP: Creating a pod to test consume configMaps
Jan 30 08:23:50.561: INFO: Waiting up to 5m0s for pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5" in namespace "configmap-9019" to be "Succeeded or Failed"
Jan 30 08:23:50.572: INFO: Pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.159625ms
Jan 30 08:23:52.587: INFO: Pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026039592s
Jan 30 08:23:54.603: INFO: Pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.04185518s
Jan 30 08:23:56.612: INFO: Pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.050797552s
STEP: Saw pod success
Jan 30 08:23:56.612: INFO: Pod "pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5" satisfied condition "Succeeded or Failed"
Jan 30 08:23:56.617: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5 container configmap-volume-test: <nil>
STEP: delete the pod
Jan 30 08:23:56.639: INFO: Waiting for pod pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5 to disappear
Jan 30 08:23:56.645: INFO: Pod pod-configmaps-8b9d3d32-eedc-4ba9-9646-8d81c8b63ff5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:23:56.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9019" for this suite.

• [SLOW TEST:6.150 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":119,"skipped":2256,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:23:56.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-44cc1a49-2147-4ac9-8e2d-be6bcb603cdc
STEP: Creating a pod to test consume configMaps
Jan 30 08:23:56.693: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab" in namespace "projected-8003" to be "Succeeded or Failed"
Jan 30 08:23:56.696: INFO: Pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab": Phase="Pending", Reason="", readiness=false. Elapsed: 3.335629ms
Jan 30 08:23:58.712: INFO: Pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019362465s
Jan 30 08:24:00.720: INFO: Pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027352208s
Jan 30 08:24:02.729: INFO: Pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035901285s
STEP: Saw pod success
Jan 30 08:24:02.729: INFO: Pod "pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab" satisfied condition "Succeeded or Failed"
Jan 30 08:24:02.734: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:24:02.755: INFO: Waiting for pod pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab to disappear
Jan 30 08:24:02.760: INFO: Pod pod-projected-configmaps-26e66771-01f9-4fa2-a3be-e91fba7018ab no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 08:24:02.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8003" for this suite.

• [SLOW TEST:6.116 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":120,"skipped":2308,"failed":0}
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:24:02.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Jan 30 08:24:06.838: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4168 pod-service-account-0629eb3a-4e55-4435-91f7-0033308c568c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Jan 30 08:24:07.033: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4168 pod-service-account-0629eb3a-4e55-4435-91f7-0033308c568c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Jan 30 08:24:07.226: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4168 pod-service-account-0629eb3a-4e55-4435-91f7-0033308c568c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jan 30 08:24:07.414: INFO: Got root ca configmap in namespace "svcaccounts-4168"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 08:24:07.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4168" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":121,"skipped":2316,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:24:07.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename containers
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Jan 30 08:24:07.471: INFO: Waiting up to 5m0s for pod "client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102" in namespace "containers-4843" to be "Succeeded or Failed"
Jan 30 08:24:07.475: INFO: Pod "client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102": Phase="Pending", Reason="", readiness=false. Elapsed: 3.426807ms
Jan 30 08:24:09.482: INFO: Pod "client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010964009s
Jan 30 08:24:11.490: INFO: Pod "client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018615219s
STEP: Saw pod success
Jan 30 08:24:11.490: INFO: Pod "client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102" satisfied condition "Succeeded or Failed"
Jan 30 08:24:11.495: INFO: Trying to get logs from node conoa-prod01-wk003 pod client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:24:11.518: INFO: Waiting for pod client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102 to disappear
Jan 30 08:24:11.522: INFO: Pod client-containers-3d5e865a-dd5e-4903-800c-c1c65846d102 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 30 08:24:11.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-4843" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":122,"skipped":2330,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:24:11.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:24:11.572: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a" in namespace "projected-4738" to be "Succeeded or Failed"
Jan 30 08:24:11.575: INFO: Pod "downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.520019ms
Jan 30 08:24:13.590: INFO: Pod "downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017958955s
Jan 30 08:24:15.599: INFO: Pod "downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026949328s
STEP: Saw pod success
Jan 30 08:24:15.599: INFO: Pod "downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a" satisfied condition "Succeeded or Failed"
Jan 30 08:24:15.604: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a container client-container: <nil>
STEP: delete the pod
Jan 30 08:24:15.627: INFO: Waiting for pod downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a to disappear
Jan 30 08:24:15.630: INFO: Pod downwardapi-volume-7e6ad207-1f06-414e-8735-3cfa396e941a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:24:15.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4738" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":123,"skipped":2336,"failed":0}
SSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:24:15.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename endpointslice
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Jan 30 08:24:35.810: INFO: EndpointSlice for Service endpointslice-3703/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 30 08:24:45.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-3703" for this suite.

• [SLOW TEST:30.213 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":124,"skipped":2343,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:24:45.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:24:45.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Jan 30 08:24:51.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 create -f -'
Jan 30 08:24:52.810: INFO: stderr: ""
Jan 30 08:24:52.810: INFO: stdout: "e2e-test-crd-publish-openapi-7817-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 30 08:24:52.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 delete e2e-test-crd-publish-openapi-7817-crds test-foo'
Jan 30 08:24:52.884: INFO: stderr: ""
Jan 30 08:24:52.884: INFO: stdout: "e2e-test-crd-publish-openapi-7817-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jan 30 08:24:52.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 apply -f -'
Jan 30 08:24:53.791: INFO: stderr: ""
Jan 30 08:24:53.791: INFO: stdout: "e2e-test-crd-publish-openapi-7817-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 30 08:24:53.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 delete e2e-test-crd-publish-openapi-7817-crds test-foo'
Jan 30 08:24:53.880: INFO: stderr: ""
Jan 30 08:24:53.880: INFO: stdout: "e2e-test-crd-publish-openapi-7817-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Jan 30 08:24:53.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 create -f -'
Jan 30 08:24:54.091: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Jan 30 08:24:54.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 create -f -'
Jan 30 08:24:54.328: INFO: rc: 1
Jan 30 08:24:54.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 apply -f -'
Jan 30 08:24:54.561: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Jan 30 08:24:54.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 create -f -'
Jan 30 08:24:54.777: INFO: rc: 1
Jan 30 08:24:54.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 --namespace=crd-publish-openapi-3101 apply -f -'
Jan 30 08:24:54.998: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Jan 30 08:24:54.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 explain e2e-test-crd-publish-openapi-7817-crds'
Jan 30 08:24:55.234: INFO: stderr: ""
Jan 30 08:24:55.234: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7817-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Jan 30 08:24:55.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 explain e2e-test-crd-publish-openapi-7817-crds.metadata'
Jan 30 08:24:55.957: INFO: stderr: ""
Jan 30 08:24:55.957: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7817-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jan 30 08:24:55.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 explain e2e-test-crd-publish-openapi-7817-crds.spec'
Jan 30 08:24:56.189: INFO: stderr: ""
Jan 30 08:24:56.189: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7817-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jan 30 08:24:56.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 explain e2e-test-crd-publish-openapi-7817-crds.spec.bars'
Jan 30 08:24:56.414: INFO: stderr: ""
Jan 30 08:24:56.414: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7817-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Jan 30 08:24:56.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-3101 explain e2e-test-crd-publish-openapi-7817-crds.spec.bars2'
Jan 30 08:24:56.611: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:25:02.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3101" for this suite.

• [SLOW TEST:16.288 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":125,"skipped":2373,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:25:02.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-10a24eaa-00a2-485b-a1f1-88c99d22c109
STEP: Creating a pod to test consume secrets
Jan 30 08:25:02.206: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c" in namespace "projected-1834" to be "Succeeded or Failed"
Jan 30 08:25:02.213: INFO: Pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.129358ms
Jan 30 08:25:04.228: INFO: Pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022309888s
Jan 30 08:25:06.245: INFO: Pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.039325596s
Jan 30 08:25:08.253: INFO: Pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.047586309s
STEP: Saw pod success
Jan 30 08:25:08.253: INFO: Pod "pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c" satisfied condition "Succeeded or Failed"
Jan 30 08:25:08.260: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:25:08.302: INFO: Waiting for pod pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c to disappear
Jan 30 08:25:08.307: INFO: Pod pod-projected-secrets-7ab543d7-ffdf-4216-8f41-26e5944f356c no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:25:08.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1834" for this suite.

• [SLOW TEST:6.176 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":126,"skipped":2509,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:25:08.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:25:08.366: INFO: Waiting up to 5m0s for pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4" in namespace "downward-api-2824" to be "Succeeded or Failed"
Jan 30 08:25:08.371: INFO: Pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.133265ms
Jan 30 08:25:10.383: INFO: Pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016171554s
Jan 30 08:25:12.393: INFO: Pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.026589715s
Jan 30 08:25:14.404: INFO: Pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.037359631s
STEP: Saw pod success
Jan 30 08:25:14.404: INFO: Pod "downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4" satisfied condition "Succeeded or Failed"
Jan 30 08:25:14.410: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4 container client-container: <nil>
STEP: delete the pod
Jan 30 08:25:14.436: INFO: Waiting for pod downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4 to disappear
Jan 30 08:25:14.442: INFO: Pod downwardapi-volume-39298ded-5bd1-4803-94b2-445b467af4a4 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:25:14.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2824" for this suite.

• [SLOW TEST:6.136 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":127,"skipped":2515,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:25:14.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-pred
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 30 08:25:14.492: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 08:25:14.507: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 08:25:14.511: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk001 before test
Jan 30 08:25:14.542: INFO: argocd-server-77b58f79dc-hj98w from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container server ready: true, restart count 0
Jan 30 08:25:14.542: INFO: node-collector-container-metrics-dg55g from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:25:14.542: INFO: node-collector-machine-sections-jrhk5 from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:25:14.542: INFO: cmk-redirect-5c548ffd54-bj69z from cmk-redirect started at 2022-12-07 15:38:18 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container cmk-redirect ready: true, restart count 0
Jan 30 08:25:14.542: INFO: k8s-status-8584c5d96d-hmlxr from k8s-status started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:25:14.542: INFO: k8s-tuesday-static-5d79d6b47f-xl2cf from k8s-tuesday started at 2022-11-25 09:46:55 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:25:14.542: INFO: mypostgres-3-0 from k8s-tuesday started at 2022-11-23 14:43:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container mypostgres-3 ready: true, restart count 0
Jan 30 08:25:14.542: INFO: cilium-zpx6l from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:25:14.542: INFO: hubble-relay-768858c54c-vns7d from kube-system started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container hubble-relay ready: true, restart count 0
Jan 30 08:25:14.542: INFO: sealed-secrets-6c9cb56ffb-8qpbb from kube-system started at 2022-10-19 12:47:55 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container controller ready: true, restart count 2
Jan 30 08:25:14.542: INFO: fluent-bit-79bn9 from loki started at 2023-01-25 08:24:01 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:25:14.542: INFO: loki-0 from loki started at 2023-01-26 11:30:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container single-binary ready: true, restart count 0
Jan 30 08:25:14.542: INFO: loki-canary-lnmdz from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:25:14.542: INFO: loki-logs-rth4m from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:25:14.542: INFO: alertmanager-conoa-prod01-alertmanager-0 from monitoring started at 2022-12-16 07:28:11 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container alertmanager ready: true, restart count 1
Jan 30 08:25:14.542: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.542: INFO: kube-prometheus-stack-kube-state-metrics-75b97d7857-sk9xz from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jan 30 08:25:14.542: INFO: kube-prometheus-stack-prometheus-node-exporter-xzswd from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:25:14.542: INFO: sonobuoy-e2e-job-bdc8027a22bb485c from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container e2e ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:25:14.542: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-5vfkz from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:25:14.542: INFO: trident-csi-7c4cd7bbcb-mkm5j from trident started at 2022-11-28 14:09:24 +0000 UTC (6 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container csi-attacher ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container csi-provisioner ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container csi-resizer ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container csi-snapshotter ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container trident-autosupport ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:25:14.542: INFO: trident-csi-f6mmx from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.542: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:25:14.542: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk002 before test
Jan 30 08:25:14.576: INFO: argocd-application-controller-0 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container application-controller ready: true, restart count 0
Jan 30 08:25:14.576: INFO: argocd-applicationset-controller-54bb64dbb5-7brsg from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container applicationset-controller ready: true, restart count 0
Jan 30 08:25:14.576: INFO: argocd-dex-server-5585d7cbd9-qzbv5 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container dex-server ready: true, restart count 0
Jan 30 08:25:14.576: INFO: argocd-repo-server-6ff8bdf59f-fkmxn from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container repo-server ready: true, restart count 0
Jan 30 08:25:14.576: INFO: cert-manager-cainjector-7f694c4c58-mgcqx from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
Jan 30 08:25:14.576: INFO: cluster-collector-658c4444c4-sgbnb from checkmk-monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container cluster-collector ready: true, restart count 0
Jan 30 08:25:14.576: INFO: node-collector-container-metrics-h6m9f from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:25:14.576: INFO: node-collector-machine-sections-8q5tz from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:25:14.576: INFO: ingress-nginx-controller-647d54b58b-twn6k from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container controller ready: true, restart count 0
Jan 30 08:25:14.576: INFO: k8s-status-8584c5d96d-dwhms from k8s-status started at 2022-12-02 08:33:48 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:25:14.576: INFO: k8s-tuesday-static-5d79d6b47f-wphmx from k8s-tuesday started at 2022-11-25 09:46:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:25:14.576: INFO: mypostgres-5-0 from k8s-tuesday started at 2022-12-05 10:12:37 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container mypostgres-5 ready: true, restart count 0
Jan 30 08:25:14.576: INFO: mypostgres-6-0 from k8s-tuesday started at 2022-12-15 14:39:35 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container mypostgres-6 ready: true, restart count 0
Jan 30 08:25:14.576: INFO: cilium-lblbj from kube-system started at 2022-10-19 12:37:54 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:25:14.576: INFO: metrics-server-7cd9d56884-5cr4h from kube-system started at 2022-11-16 17:38:11 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container metrics-server ready: true, restart count 12
Jan 30 08:25:14.576: INFO: kubegres-controller-manager-8495978cb9-vhhtq from kubegres-system started at 2022-11-08 09:55:48 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container kube-rbac-proxy ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container manager ready: true, restart count 0
Jan 30 08:25:14.576: INFO: fluent-bit-cwdz7 from loki started at 2023-01-25 08:23:43 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:25:14.576: INFO: grafana-674c6bb94d-lv6gl from loki started at 2022-12-16 07:22:53 +0000 UTC (3 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container grafana ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container grafana-sc-dashboard ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container grafana-sc-datasources ready: true, restart count 0
Jan 30 08:25:14.576: INFO: loki-canary-8xx7v from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:25:14.576: INFO: loki-grafana-agent-operator-5555fc45d8-qjcgg from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container grafana-agent-operator ready: true, restart count 0
Jan 30 08:25:14.576: INFO: loki-logs-pt9jp from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:25:14.576: INFO: kube-prometheus-stack-prometheus-node-exporter-j955v from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:25:14.576: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-844qc from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:25:14.576: INFO: trident-csi-2gb6l from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:25:14.576: INFO: trident-operator-5f4988667c-ww7fk from trident started at 2022-12-15 15:49:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.576: INFO: 	Container trident-operator ready: true, restart count 0
Jan 30 08:25:14.576: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk003 before test
Jan 30 08:25:14.628: INFO: node-collector-container-metrics-zwntz from checkmk-monitoring started at 2023-01-30 08:16:23 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:25:14.628: INFO: node-collector-machine-sections-nk4qz from checkmk-monitoring started at 2023-01-30 08:16:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:25:14.628: INFO: k8s-tuesday-6576b5dbdf-mpddm from k8s-tuesday started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container k8s-tuesday ready: false, restart count 0
Jan 30 08:25:14.628: INFO: cilium-mnm26 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:25:14.628: INFO: cilium-operator-746975c47c-4g5b9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container cilium-operator ready: true, restart count 14
Jan 30 08:25:14.628: INFO: fluent-bit-x45pn from loki started at 2023-01-30 08:16:33 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:25:14.628: INFO: loki-canary-wlvcw from loki started at 2023-01-30 08:16:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:25:14.628: INFO: loki-logs-7v784 from loki started at 2023-01-30 08:16:31 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:25:14.628: INFO: kube-prometheus-stack-prometheus-node-exporter-h2dhq from monitoring started at 2023-01-30 08:16:32 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:25:14.628: INFO: prometheus-conoa-prod01-prometheus-0 from monitoring started at 2023-01-30 08:16:29 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 	Container prometheus ready: true, restart count 0
Jan 30 08:25:14.628: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-rl4mv from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:25:14.628: INFO: trident-csi-jq2pf from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.628: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:25:14.628: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk004 before test
Jan 30 08:25:14.655: INFO: argocd-notifications-controller-59b986f5cb-c8wk6 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container notifications-controller ready: true, restart count 0
Jan 30 08:25:14.655: INFO: argocd-redis-56bcf8f58d-wqh45 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container redis ready: true, restart count 0
Jan 30 08:25:14.655: INFO: cert-manager-85945b75d4-kwb8z from cert-manager started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container cert-manager-controller ready: true, restart count 0
Jan 30 08:25:14.655: INFO: cert-manager-webhook-7cd8c769bb-dfsm6 from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container cert-manager-webhook ready: true, restart count 0
Jan 30 08:25:14.655: INFO: node-collector-container-metrics-bw8zr from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:25:14.655: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:25:14.655: INFO: node-collector-machine-sections-pmhpf from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:25:14.655: INFO: ingress-nginx-controller-647d54b58b-p9ppz from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container controller ready: true, restart count 0
Jan 30 08:25:14.655: INFO: init-demo from jonas started at 2022-10-20 14:11:25 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container nginx ready: true, restart count 0
Jan 30 08:25:14.655: INFO: k8s-status-8584c5d96d-tpq7j from k8s-status started at 2022-12-02 08:33:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:25:14.655: INFO: k8s-tuesday-static-5d79d6b47f-xgfgq from k8s-tuesday started at 2022-11-25 09:46:59 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:25:14.655: INFO: cilium-56rw9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:25:14.655: INFO: hubble-ui-64bd8dcbf5-654qq from kube-system started at 2023-01-30 08:16:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container backend ready: true, restart count 0
Jan 30 08:25:14.655: INFO: 	Container frontend ready: true, restart count 0
Jan 30 08:25:14.655: INFO: kubernetes-dashboard-7bcd8f7c6d-p7nzq from kubernetes-dashboard started at 2022-10-19 12:47:15 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jan 30 08:25:14.655: INFO: fluent-bit-c5vmh from loki started at 2023-01-25 08:24:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:25:14.655: INFO: loki-canary-gjffw from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:25:14.655: INFO: loki-logs-9h6jm from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:25:14.655: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:25:14.655: INFO: conoa-prod01-operator-5b7996ffd-g75rd from monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
Jan 30 08:25:14.655: INFO: kube-prometheus-stack-prometheus-node-exporter-cd45h from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:25:14.655: INFO: sonobuoy from sonobuoy started at 2023-01-30 07:50:08 +0000 UTC (1 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 08:25:14.655: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-mtd4x from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:25:14.655: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:25:14.655: INFO: trident-csi-vhc58 from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:25:14.655: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:25:14.655: INFO: 	Container trident-main ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-ac853537-fbb7-4131-89e4-71d1614757ef 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.55.210.15 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-ac853537-fbb7-4131-89e4-71d1614757ef off the node conoa-prod01-wk003
STEP: verifying the node doesn't have the label kubernetes.io/e2e-ac853537-fbb7-4131-89e4-71d1614757ef
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:30:18.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6074" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.416 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":128,"skipped":2554,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:18.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:30:18.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3284" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":129,"skipped":2578,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:19.000: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 30 08:30:19.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-6770 create -f -'
Jan 30 08:30:20.038: INFO: stderr: ""
Jan 30 08:30:20.038: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 30 08:30:21.051: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:30:21.051: INFO: Found 0 / 1
Jan 30 08:30:22.052: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:30:22.052: INFO: Found 0 / 1
Jan 30 08:30:23.047: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:30:23.047: INFO: Found 1 / 1
Jan 30 08:30:23.047: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Jan 30 08:30:23.053: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:30:23.053: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 08:30:23.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-6770 patch pod agnhost-primary-vsw95 -p {"metadata":{"annotations":{"x":"y"}}}'
Jan 30 08:30:23.148: INFO: stderr: ""
Jan 30 08:30:23.148: INFO: stdout: "pod/agnhost-primary-vsw95 patched\n"
STEP: checking annotations
Jan 30 08:30:23.155: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:30:23.155: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:30:23.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6770" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":130,"skipped":2622,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:23.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8481.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8481.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8481.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8481.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 08:30:29.291: INFO: DNS probes using dns-8481/dns-test-0a11307d-3ef3-4162-9487-79a6cbced558 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 08:30:29.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8481" for this suite.

• [SLOW TEST:6.165 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":131,"skipped":2624,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:29.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:30:29.635: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:30:32.680: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:30:32.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5934" for this suite.
STEP: Destroying namespace "webhook-5934-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":132,"skipped":2652,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:32.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:30:32.914: INFO: Waiting up to 5m0s for pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d" in namespace "projected-4680" to be "Succeeded or Failed"
Jan 30 08:30:32.919: INFO: Pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.308753ms
Jan 30 08:30:34.930: INFO: Pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015988615s
Jan 30 08:30:36.949: INFO: Pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034861705s
Jan 30 08:30:38.965: INFO: Pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.051078884s
STEP: Saw pod success
Jan 30 08:30:38.966: INFO: Pod "downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d" satisfied condition "Succeeded or Failed"
Jan 30 08:30:38.972: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d container client-container: <nil>
STEP: delete the pod
Jan 30 08:30:39.014: INFO: Waiting for pod downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d to disappear
Jan 30 08:30:39.019: INFO: Pod downwardapi-volume-62de0538-4bf5-4f6c-bf17-06f95560737d no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:30:39.019: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4680" for this suite.

• [SLOW TEST:6.160 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2659,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:30:39.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 08:31:39.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3633" for this suite.

• [SLOW TEST:60.077 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":134,"skipped":2699,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:31:39.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename podtemplate
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Jan 30 08:31:39.161: INFO: created test-podtemplate-1
Jan 30 08:31:39.168: INFO: created test-podtemplate-2
Jan 30 08:31:39.175: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Jan 30 08:31:39.180: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Jan 30 08:31:39.201: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 30 08:31:39.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-8324" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":135,"skipped":2716,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:31:39.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 30 08:31:39.305: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:39.306: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:39.306: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:39.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:31:39.310: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:40.325: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:40.325: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:40.325: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:40.331: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:31:40.332: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:41.322: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:41.323: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:41.323: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:41.328: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:31:41.328: INFO: Node conoa-prod01-wk002 is running 0 daemon pod, expected 1
Jan 30 08:31:42.321: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.321: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.321: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.328: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 08:31:42.328: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Jan 30 08:31:42.365: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.365: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.365: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:42.370: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:42.370: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:43.384: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:43.384: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:43.384: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:43.391: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:43.391: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:44.383: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:44.384: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:44.384: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:44.391: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:44.391: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:45.387: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:45.387: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:45.388: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:45.396: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:45.396: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:46.382: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:46.383: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:46.383: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:46.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:46.389: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:47.387: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:47.387: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:47.387: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:47.395: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:47.395: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:48.386: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:48.386: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:48.386: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:48.393: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 08:31:48.393: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:31:49.385: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:49.385: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:49.385: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:31:49.392: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 08:31:49.392: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9421, will wait for the garbage collector to delete the pods
Jan 30 08:31:49.470: INFO: Deleting DaemonSet.extensions daemon-set took: 11.671925ms
Jan 30 08:31:49.570: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.688794ms
Jan 30 08:31:52.488: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:31:52.488: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:31:52.493: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37372880"},"items":null}

Jan 30 08:31:52.498: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37372880"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:31:52.527: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9421" for this suite.

• [SLOW TEST:13.319 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":136,"skipped":2720,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:31:52.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:31:53.016: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:31:55.040: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:31:58.090: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:31:58.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2265" for this suite.
STEP: Destroying namespace "webhook-2265-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.711 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":137,"skipped":2752,"failed":0}
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:31:58.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-pred
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 30 08:31:58.285: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 08:31:58.299: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 08:31:58.302: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk001 before test
Jan 30 08:31:58.335: INFO: argocd-server-77b58f79dc-hj98w from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container server ready: true, restart count 0
Jan 30 08:31:58.335: INFO: node-collector-container-metrics-dg55g from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:31:58.335: INFO: node-collector-machine-sections-jrhk5 from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:31:58.335: INFO: cmk-redirect-5c548ffd54-bj69z from cmk-redirect started at 2022-12-07 15:38:18 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container cmk-redirect ready: true, restart count 0
Jan 30 08:31:58.335: INFO: k8s-status-8584c5d96d-hmlxr from k8s-status started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:31:58.335: INFO: k8s-tuesday-static-5d79d6b47f-xl2cf from k8s-tuesday started at 2022-11-25 09:46:55 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:31:58.335: INFO: mypostgres-3-0 from k8s-tuesday started at 2022-11-23 14:43:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container mypostgres-3 ready: true, restart count 0
Jan 30 08:31:58.335: INFO: cilium-zpx6l from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:31:58.335: INFO: hubble-relay-768858c54c-vns7d from kube-system started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container hubble-relay ready: true, restart count 0
Jan 30 08:31:58.335: INFO: sealed-secrets-6c9cb56ffb-8qpbb from kube-system started at 2022-10-19 12:47:55 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container controller ready: true, restart count 2
Jan 30 08:31:58.335: INFO: fluent-bit-79bn9 from loki started at 2023-01-25 08:24:01 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:31:58.335: INFO: loki-0 from loki started at 2023-01-26 11:30:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container single-binary ready: true, restart count 0
Jan 30 08:31:58.335: INFO: loki-canary-lnmdz from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:31:58.335: INFO: loki-logs-rth4m from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:31:58.335: INFO: alertmanager-conoa-prod01-alertmanager-0 from monitoring started at 2022-12-16 07:28:11 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container alertmanager ready: true, restart count 1
Jan 30 08:31:58.335: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.335: INFO: kube-prometheus-stack-kube-state-metrics-75b97d7857-sk9xz from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jan 30 08:31:58.335: INFO: kube-prometheus-stack-prometheus-node-exporter-xzswd from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:31:58.335: INFO: sonobuoy-e2e-job-bdc8027a22bb485c from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container e2e ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:31:58.335: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-5vfkz from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:31:58.335: INFO: trident-csi-7c4cd7bbcb-mkm5j from trident started at 2022-11-28 14:09:24 +0000 UTC (6 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container csi-attacher ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container csi-provisioner ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container csi-resizer ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container csi-snapshotter ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container trident-autosupport ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:31:58.335: INFO: trident-csi-f6mmx from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.335: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:31:58.335: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk002 before test
Jan 30 08:31:58.360: INFO: argocd-application-controller-0 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container application-controller ready: true, restart count 0
Jan 30 08:31:58.360: INFO: argocd-applicationset-controller-54bb64dbb5-7brsg from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container applicationset-controller ready: true, restart count 0
Jan 30 08:31:58.360: INFO: argocd-dex-server-5585d7cbd9-qzbv5 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container dex-server ready: true, restart count 0
Jan 30 08:31:58.360: INFO: argocd-repo-server-6ff8bdf59f-fkmxn from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container repo-server ready: true, restart count 0
Jan 30 08:31:58.360: INFO: cert-manager-cainjector-7f694c4c58-mgcqx from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
Jan 30 08:31:58.360: INFO: cluster-collector-658c4444c4-sgbnb from checkmk-monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container cluster-collector ready: true, restart count 0
Jan 30 08:31:58.360: INFO: node-collector-container-metrics-h6m9f from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:31:58.360: INFO: node-collector-machine-sections-8q5tz from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:31:58.360: INFO: ingress-nginx-controller-647d54b58b-twn6k from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container controller ready: true, restart count 0
Jan 30 08:31:58.360: INFO: k8s-status-8584c5d96d-dwhms from k8s-status started at 2022-12-02 08:33:48 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:31:58.360: INFO: k8s-tuesday-static-5d79d6b47f-wphmx from k8s-tuesday started at 2022-11-25 09:46:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:31:58.360: INFO: mypostgres-5-0 from k8s-tuesday started at 2022-12-05 10:12:37 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container mypostgres-5 ready: true, restart count 0
Jan 30 08:31:58.360: INFO: mypostgres-6-0 from k8s-tuesday started at 2022-12-15 14:39:35 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container mypostgres-6 ready: true, restart count 0
Jan 30 08:31:58.360: INFO: cilium-lblbj from kube-system started at 2022-10-19 12:37:54 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:31:58.360: INFO: metrics-server-7cd9d56884-5cr4h from kube-system started at 2022-11-16 17:38:11 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container metrics-server ready: true, restart count 12
Jan 30 08:31:58.360: INFO: kubegres-controller-manager-8495978cb9-vhhtq from kubegres-system started at 2022-11-08 09:55:48 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container kube-rbac-proxy ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container manager ready: true, restart count 0
Jan 30 08:31:58.360: INFO: fluent-bit-cwdz7 from loki started at 2023-01-25 08:23:43 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:31:58.360: INFO: grafana-674c6bb94d-lv6gl from loki started at 2022-12-16 07:22:53 +0000 UTC (3 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container grafana ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container grafana-sc-dashboard ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container grafana-sc-datasources ready: true, restart count 0
Jan 30 08:31:58.360: INFO: loki-canary-8xx7v from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:31:58.360: INFO: loki-grafana-agent-operator-5555fc45d8-qjcgg from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container grafana-agent-operator ready: true, restart count 0
Jan 30 08:31:58.360: INFO: loki-logs-pt9jp from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:31:58.360: INFO: kube-prometheus-stack-prometheus-node-exporter-j955v from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:31:58.360: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-844qc from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:31:58.360: INFO: trident-csi-2gb6l from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:31:58.360: INFO: trident-operator-5f4988667c-ww7fk from trident started at 2022-12-15 15:49:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.360: INFO: 	Container trident-operator ready: true, restart count 0
Jan 30 08:31:58.360: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk003 before test
Jan 30 08:31:58.380: INFO: node-collector-container-metrics-zwntz from checkmk-monitoring started at 2023-01-30 08:16:23 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:31:58.380: INFO: node-collector-machine-sections-nk4qz from checkmk-monitoring started at 2023-01-30 08:16:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:31:58.380: INFO: k8s-tuesday-6576b5dbdf-mpddm from k8s-tuesday started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container k8s-tuesday ready: false, restart count 0
Jan 30 08:31:58.380: INFO: cilium-mnm26 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:31:58.380: INFO: cilium-operator-746975c47c-4g5b9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container cilium-operator ready: true, restart count 14
Jan 30 08:31:58.380: INFO: fluent-bit-x45pn from loki started at 2023-01-30 08:16:33 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:31:58.380: INFO: loki-canary-wlvcw from loki started at 2023-01-30 08:16:51 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:31:58.380: INFO: loki-logs-7v784 from loki started at 2023-01-30 08:16:31 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:31:58.380: INFO: kube-prometheus-stack-prometheus-node-exporter-h2dhq from monitoring started at 2023-01-30 08:16:32 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:31:58.380: INFO: prometheus-conoa-prod01-prometheus-0 from monitoring started at 2023-01-30 08:16:29 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 	Container prometheus ready: true, restart count 0
Jan 30 08:31:58.380: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-rl4mv from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:31:58.380: INFO: trident-csi-jq2pf from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.380: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 08:31:58.380: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk004 before test
Jan 30 08:31:58.404: INFO: argocd-notifications-controller-59b986f5cb-c8wk6 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container notifications-controller ready: true, restart count 0
Jan 30 08:31:58.404: INFO: argocd-redis-56bcf8f58d-wqh45 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container redis ready: true, restart count 0
Jan 30 08:31:58.404: INFO: cert-manager-85945b75d4-kwb8z from cert-manager started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container cert-manager-controller ready: true, restart count 0
Jan 30 08:31:58.404: INFO: cert-manager-webhook-7cd8c769bb-dfsm6 from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container cert-manager-webhook ready: true, restart count 0
Jan 30 08:31:58.404: INFO: node-collector-container-metrics-bw8zr from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 08:31:58.404: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 08:31:58.404: INFO: node-collector-machine-sections-pmhpf from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 08:31:58.404: INFO: ingress-nginx-controller-647d54b58b-p9ppz from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container controller ready: true, restart count 0
Jan 30 08:31:58.404: INFO: init-demo from jonas started at 2022-10-20 14:11:25 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container nginx ready: true, restart count 0
Jan 30 08:31:58.404: INFO: k8s-status-8584c5d96d-tpq7j from k8s-status started at 2022-12-02 08:33:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 08:31:58.404: INFO: k8s-tuesday-static-5d79d6b47f-xgfgq from k8s-tuesday started at 2022-11-25 09:46:59 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 08:31:58.404: INFO: cilium-56rw9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 08:31:58.404: INFO: hubble-ui-64bd8dcbf5-654qq from kube-system started at 2023-01-30 08:16:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container backend ready: true, restart count 0
Jan 30 08:31:58.404: INFO: 	Container frontend ready: true, restart count 0
Jan 30 08:31:58.404: INFO: kubernetes-dashboard-7bcd8f7c6d-p7nzq from kubernetes-dashboard started at 2022-10-19 12:47:15 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jan 30 08:31:58.404: INFO: fluent-bit-c5vmh from loki started at 2023-01-25 08:24:09 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 08:31:58.404: INFO: loki-canary-gjffw from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 08:31:58.404: INFO: loki-logs-9h6jm from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 08:31:58.404: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 08:31:58.404: INFO: conoa-prod01-operator-5b7996ffd-g75rd from monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
Jan 30 08:31:58.404: INFO: kube-prometheus-stack-prometheus-node-exporter-cd45h from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 08:31:58.404: INFO: sonobuoy from sonobuoy started at 2023-01-30 07:50:08 +0000 UTC (1 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 08:31:58.404: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-mtd4x from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:31:58.404: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:31:58.404: INFO: trident-csi-vhc58 from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 08:31:58.404: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 08:31:58.404: INFO: 	Container trident-main ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node conoa-prod01-wk001
STEP: verifying the node has the label node conoa-prod01-wk002
STEP: verifying the node has the label node conoa-prod01-wk003
STEP: verifying the node has the label node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod argocd-application-controller-0 requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod argocd-applicationset-controller-54bb64dbb5-7brsg requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod argocd-dex-server-5585d7cbd9-qzbv5 requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod argocd-notifications-controller-59b986f5cb-c8wk6 requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod argocd-redis-56bcf8f58d-wqh45 requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod argocd-repo-server-6ff8bdf59f-fkmxn requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod argocd-server-77b58f79dc-hj98w requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.594: INFO: Pod cert-manager-85945b75d4-kwb8z requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod cert-manager-cainjector-7f694c4c58-mgcqx requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod cert-manager-webhook-7cd8c769bb-dfsm6 requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod cluster-collector-658c4444c4-sgbnb requesting resource cpu=150m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod node-collector-container-metrics-bw8zr requesting resource cpu=300m on Node conoa-prod01-wk004
Jan 30 08:31:58.594: INFO: Pod node-collector-container-metrics-dg55g requesting resource cpu=300m on Node conoa-prod01-wk001
Jan 30 08:31:58.594: INFO: Pod node-collector-container-metrics-h6m9f requesting resource cpu=300m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod node-collector-container-metrics-zwntz requesting resource cpu=300m on Node conoa-prod01-wk003
Jan 30 08:31:58.594: INFO: Pod node-collector-machine-sections-8q5tz requesting resource cpu=150m on Node conoa-prod01-wk002
Jan 30 08:31:58.594: INFO: Pod node-collector-machine-sections-jrhk5 requesting resource cpu=150m on Node conoa-prod01-wk001
Jan 30 08:31:58.595: INFO: Pod node-collector-machine-sections-nk4qz requesting resource cpu=150m on Node conoa-prod01-wk003
Jan 30 08:31:58.595: INFO: Pod node-collector-machine-sections-pmhpf requesting resource cpu=150m on Node conoa-prod01-wk004
Jan 30 08:31:58.595: INFO: Pod cmk-redirect-5c548ffd54-bj69z requesting resource cpu=50m on Node conoa-prod01-wk001
Jan 30 08:31:58.595: INFO: Pod ingress-nginx-controller-647d54b58b-p9ppz requesting resource cpu=100m on Node conoa-prod01-wk004
Jan 30 08:31:58.595: INFO: Pod ingress-nginx-controller-647d54b58b-twn6k requesting resource cpu=100m on Node conoa-prod01-wk002
Jan 30 08:31:58.595: INFO: Pod init-demo requesting resource cpu=400m on Node conoa-prod01-wk004
Jan 30 08:31:58.595: INFO: Pod k8s-status-8584c5d96d-dwhms requesting resource cpu=100m on Node conoa-prod01-wk002
Jan 30 08:31:58.595: INFO: Pod k8s-status-8584c5d96d-hmlxr requesting resource cpu=100m on Node conoa-prod01-wk001
Jan 30 08:31:58.597: INFO: Pod k8s-status-8584c5d96d-tpq7j requesting resource cpu=100m on Node conoa-prod01-wk004
Jan 30 08:31:58.597: INFO: Pod k8s-tuesday-6576b5dbdf-mpddm requesting resource cpu=400m on Node conoa-prod01-wk003
Jan 30 08:31:58.597: INFO: Pod k8s-tuesday-static-5d79d6b47f-wphmx requesting resource cpu=400m on Node conoa-prod01-wk002
Jan 30 08:31:58.597: INFO: Pod k8s-tuesday-static-5d79d6b47f-xgfgq requesting resource cpu=400m on Node conoa-prod01-wk004
Jan 30 08:31:58.597: INFO: Pod k8s-tuesday-static-5d79d6b47f-xl2cf requesting resource cpu=400m on Node conoa-prod01-wk001
Jan 30 08:31:58.597: INFO: Pod mypostgres-3-0 requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.597: INFO: Pod mypostgres-5-0 requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.597: INFO: Pod mypostgres-6-0 requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.597: INFO: Pod cilium-56rw9 requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.597: INFO: Pod cilium-lblbj requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.597: INFO: Pod cilium-mnm26 requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.598: INFO: Pod cilium-operator-746975c47c-4g5b9 requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.599: INFO: Pod cilium-zpx6l requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.599: INFO: Pod hubble-relay-768858c54c-vns7d requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.599: INFO: Pod hubble-ui-64bd8dcbf5-654qq requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.599: INFO: Pod metrics-server-7cd9d56884-5cr4h requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.599: INFO: Pod sealed-secrets-6c9cb56ffb-8qpbb requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.599: INFO: Pod kubegres-controller-manager-8495978cb9-vhhtq requesting resource cpu=15m on Node conoa-prod01-wk002
Jan 30 08:31:58.599: INFO: Pod kubernetes-dashboard-7bcd8f7c6d-p7nzq requesting resource cpu=100m on Node conoa-prod01-wk004
Jan 30 08:31:58.599: INFO: Pod fluent-bit-79bn9 requesting resource cpu=100m on Node conoa-prod01-wk001
Jan 30 08:31:58.599: INFO: Pod fluent-bit-c5vmh requesting resource cpu=100m on Node conoa-prod01-wk004
Jan 30 08:31:58.599: INFO: Pod fluent-bit-cwdz7 requesting resource cpu=100m on Node conoa-prod01-wk002
Jan 30 08:31:58.599: INFO: Pod fluent-bit-x45pn requesting resource cpu=100m on Node conoa-prod01-wk003
Jan 30 08:31:58.599: INFO: Pod grafana-674c6bb94d-lv6gl requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.599: INFO: Pod loki-0 requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.599: INFO: Pod loki-canary-8xx7v requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.599: INFO: Pod loki-canary-gjffw requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.599: INFO: Pod loki-canary-lnmdz requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.600: INFO: Pod loki-canary-wlvcw requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.600: INFO: Pod loki-grafana-agent-operator-5555fc45d8-qjcgg requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.600: INFO: Pod loki-logs-7v784 requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.600: INFO: Pod loki-logs-9h6jm requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.600: INFO: Pod loki-logs-pt9jp requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.601: INFO: Pod loki-logs-rth4m requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod alertmanager-conoa-prod01-alertmanager-0 requesting resource cpu=200m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod conoa-prod01-operator-5b7996ffd-g75rd requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.601: INFO: Pod kube-prometheus-stack-kube-state-metrics-75b97d7857-sk9xz requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod kube-prometheus-stack-prometheus-node-exporter-cd45h requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.601: INFO: Pod kube-prometheus-stack-prometheus-node-exporter-h2dhq requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.601: INFO: Pod kube-prometheus-stack-prometheus-node-exporter-j955v requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.601: INFO: Pod kube-prometheus-stack-prometheus-node-exporter-xzswd requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod prometheus-conoa-prod01-prometheus-0 requesting resource cpu=200m on Node conoa-prod01-wk003
Jan 30 08:31:58.601: INFO: Pod sonobuoy requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.601: INFO: Pod sonobuoy-e2e-job-bdc8027a22bb485c requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-5vfkz requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.601: INFO: Pod sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-844qc requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.601: INFO: Pod sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-mtd4x requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.601: INFO: Pod sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-rl4mv requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.601: INFO: Pod trident-csi-2gb6l requesting resource cpu=0m on Node conoa-prod01-wk002
Jan 30 08:31:58.602: INFO: Pod trident-csi-7c4cd7bbcb-mkm5j requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.602: INFO: Pod trident-csi-f6mmx requesting resource cpu=0m on Node conoa-prod01-wk001
Jan 30 08:31:58.602: INFO: Pod trident-csi-jq2pf requesting resource cpu=0m on Node conoa-prod01-wk003
Jan 30 08:31:58.602: INFO: Pod trident-csi-vhc58 requesting resource cpu=0m on Node conoa-prod01-wk004
Jan 30 08:31:58.602: INFO: Pod trident-operator-5f4988667c-ww7fk requesting resource cpu=0m on Node conoa-prod01-wk002
STEP: Starting Pods to consume most of the cluster CPU.
Jan 30 08:31:58.602: INFO: Creating a pod which consumes cpu=4690m on Node conoa-prod01-wk001
Jan 30 08:31:58.615: INFO: Creating a pod which consumes cpu=4679m on Node conoa-prod01-wk002
Jan 30 08:31:58.626: INFO: Creating a pod which consumes cpu=4795m on Node conoa-prod01-wk003
Jan 30 08:31:58.632: INFO: Creating a pod which consumes cpu=4445m on Node conoa-prod01-wk004
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c.173f0908865458b6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3926/filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c to conoa-prod01-wk001]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c.173f0908bdc1f63d], Reason = [Pulling], Message = [Pulling image "k8s.gcr.io/pause:3.7"]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c.173f0908f22a1ac4], Reason = [Pulled], Message = [Successfully pulled image "k8s.gcr.io/pause:3.7" in 879.215858ms]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c.173f0908fb3ca6b0], Reason = [Created], Message = [Created container filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c.173f0908fd47d285], Reason = [Started], Message = [Started container filler-pod-85bfa089-e54f-4291-a820-b6056597ac6c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48.173f090886aee5bd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3926/filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48 to conoa-prod01-wk002]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48.173f0908bc240480], Reason = [Pulling], Message = [Pulling image "k8s.gcr.io/pause:3.7"]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48.173f0908f221659b], Reason = [Pulled], Message = [Successfully pulled image "k8s.gcr.io/pause:3.7" in 905.770872ms]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48.173f0908fbd0f28a], Reason = [Created], Message = [Created container filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48.173f0908fe3aabd7], Reason = [Started], Message = [Started container filler-pod-b2ab808f-73b6-4eb6-94f3-dc0577308b48]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b.173f0908877e6351], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3926/filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b to conoa-prod01-wk004]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b.173f0908bdac6f5f], Reason = [Pulling], Message = [Pulling image "k8s.gcr.io/pause:3.7"]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b.173f0908e72355d4], Reason = [Pulled], Message = [Successfully pulled image "k8s.gcr.io/pause:3.7" in 695.632064ms]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b.173f0908efdf9645], Reason = [Created], Message = [Created container filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b.173f0908f277863d], Reason = [Started], Message = [Started container filler-pod-dc29c005-c378-4c82-821d-48cabe656c2b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589.173f0908871d1398], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3926/filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589 to conoa-prod01-wk003]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589.173f0908ba45c5e4], Reason = [Pulling], Message = [Pulling image "k8s.gcr.io/pause:3.7"]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589.173f0908e2e5118c], Reason = [Pulled], Message = [Successfully pulled image "k8s.gcr.io/pause:3.7" in 681.506969ms]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589.173f0908eac89df8], Reason = [Created], Message = [Created container filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589.173f0908ec73ab1e], Reason = [Started], Message = [Started container filler-pod-fc4de416-b912-40bc-ba83-acacb09f8589]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.173f090979765ee7], Reason = [FailedScheduling], Message = [0/7 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/master: }, 4 Insufficient cpu. preemption: 0/7 nodes are available: 3 Preemption is not helpful for scheduling, 4 No preemption victims found for incoming pod.]
STEP: removing the label node off the node conoa-prod01-wk002
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node conoa-prod01-wk003
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node conoa-prod01-wk004
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node conoa-prod01-wk001
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:32:03.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-3926" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:5.588 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":138,"skipped":2761,"failed":0}
SS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:03.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 30 08:32:03.890: INFO: Waiting up to 5m0s for pod "pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9" in namespace "emptydir-7500" to be "Succeeded or Failed"
Jan 30 08:32:03.896: INFO: Pod "pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.064526ms
Jan 30 08:32:05.907: INFO: Pod "pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017638656s
Jan 30 08:32:07.925: INFO: Pod "pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035009098s
STEP: Saw pod success
Jan 30 08:32:07.925: INFO: Pod "pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9" satisfied condition "Succeeded or Failed"
Jan 30 08:32:07.930: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9 container test-container: <nil>
STEP: delete the pod
Jan 30 08:32:07.959: INFO: Waiting for pod pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9 to disappear
Jan 30 08:32:07.964: INFO: Pod pod-2a897028-205a-46ae-9d0f-fe0d378ebbd9 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:32:07.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7500" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":139,"skipped":2763,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:07.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-ab20a161-1353-447b-9330-60e6672a4ed3
STEP: Creating secret with name s-test-opt-upd-21d6b2d9-1b6c-4622-b1ab-1ce5146af743
STEP: Creating the pod
Jan 30 08:32:08.046: INFO: The status of Pod pod-projected-secrets-deee9855-360a-41f3-9133-dfd843d0c2f0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:32:10.055: INFO: The status of Pod pod-projected-secrets-deee9855-360a-41f3-9133-dfd843d0c2f0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:32:12.054: INFO: The status of Pod pod-projected-secrets-deee9855-360a-41f3-9133-dfd843d0c2f0 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-ab20a161-1353-447b-9330-60e6672a4ed3
STEP: Updating secret s-test-opt-upd-21d6b2d9-1b6c-4622-b1ab-1ce5146af743
STEP: Creating secret with name s-test-opt-create-7962db2e-fa37-44ef-95c4-8ad3b8c2c5e4
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:32:16.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4256" for this suite.

• [SLOW TEST:8.199 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":140,"skipped":2798,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:16.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 08:32:32.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2797" for this suite.

• [SLOW TEST:16.274 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":141,"skipped":2800,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:32.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4438
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4438
STEP: creating replication controller externalsvc in namespace services-4438
I0130 08:32:32.565713      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4438, replica count: 2
I0130 08:32:35.616560      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Jan 30 08:32:35.663: INFO: Creating new exec pod
Jan 30 08:32:39.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4438 exec execpodshql9 -- /bin/sh -x -c nslookup clusterip-service.services-4438.svc.cluster.local'
Jan 30 08:32:39.958: INFO: stderr: "+ nslookup clusterip-service.services-4438.svc.cluster.local\n"
Jan 30 08:32:39.958: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4438.svc.cluster.local\tcanonical name = externalsvc.services-4438.svc.cluster.local.\nName:\texternalsvc.services-4438.svc.cluster.local\nAddress: 10.105.124.193\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4438, will wait for the garbage collector to delete the pods
Jan 30 08:32:40.030: INFO: Deleting ReplicationController externalsvc took: 13.137122ms
Jan 30 08:32:40.131: INFO: Terminating ReplicationController externalsvc pods took: 101.213321ms
Jan 30 08:32:42.067: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:32:42.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4438" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.634 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":142,"skipped":2832,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:42.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:32:42.120: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955" in namespace "projected-5122" to be "Succeeded or Failed"
Jan 30 08:32:42.126: INFO: Pod "downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955": Phase="Pending", Reason="", readiness=false. Elapsed: 5.367114ms
Jan 30 08:32:44.137: INFO: Pod "downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016935179s
Jan 30 08:32:46.154: INFO: Pod "downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034209824s
STEP: Saw pod success
Jan 30 08:32:46.155: INFO: Pod "downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955" satisfied condition "Succeeded or Failed"
Jan 30 08:32:46.160: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955 container client-container: <nil>
STEP: delete the pod
Jan 30 08:32:46.190: INFO: Waiting for pod downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955 to disappear
Jan 30 08:32:46.195: INFO: Pod downwardapi-volume-1cc743e7-53bc-4b30-8850-0c3fe805e955 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:32:46.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5122" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":143,"skipped":2843,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:46.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Jan 30 08:32:46.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-2420 create -f -'
Jan 30 08:32:46.508: INFO: stderr: ""
Jan 30 08:32:46.508: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Jan 30 08:32:46.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-2420 diff -f -'
Jan 30 08:32:47.379: INFO: rc: 1
Jan 30 08:32:47.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-2420 delete -f -'
Jan 30 08:32:47.447: INFO: stderr: ""
Jan 30 08:32:47.447: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:32:47.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2420" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":144,"skipped":2847,"failed":0}
SSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:47.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:32:47.506: INFO: Waiting up to 5m0s for pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110" in namespace "security-context-test-6982" to be "Succeeded or Failed"
Jan 30 08:32:47.512: INFO: Pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110": Phase="Pending", Reason="", readiness=false. Elapsed: 5.597135ms
Jan 30 08:32:49.529: INFO: Pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022662424s
Jan 30 08:32:51.544: INFO: Pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037951882s
Jan 30 08:32:53.554: INFO: Pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.048124965s
Jan 30 08:32:53.554: INFO: Pod "busybox-user-65534-393629ce-64dc-4e16-b0ac-7610c3820110" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 08:32:53.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6982" for this suite.

• [SLOW TEST:6.104 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:52
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":145,"skipped":2853,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:53.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubelet-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 30 08:32:57.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-7322" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2876,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:32:57.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Jan 30 08:32:57.737: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Jan 30 08:32:59.773: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Jan 30 08:33:01.805: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Jan 30 08:33:03.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-5515" for this suite.

• [SLOW TEST:6.167 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":147,"skipped":2928,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:03.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename job
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Jan 30 08:33:08.435: INFO: Successfully updated pod "adopt-release-97725"
STEP: Checking that the Job readopts the Pod
Jan 30 08:33:08.435: INFO: Waiting up to 15m0s for pod "adopt-release-97725" in namespace "job-1940" to be "adopted"
Jan 30 08:33:08.440: INFO: Pod "adopt-release-97725": Phase="Running", Reason="", readiness=true. Elapsed: 4.714997ms
Jan 30 08:33:10.451: INFO: Pod "adopt-release-97725": Phase="Running", Reason="", readiness=true. Elapsed: 2.016287819s
Jan 30 08:33:10.452: INFO: Pod "adopt-release-97725" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Jan 30 08:33:10.977: INFO: Successfully updated pod "adopt-release-97725"
STEP: Checking that the Job releases the Pod
Jan 30 08:33:10.977: INFO: Waiting up to 15m0s for pod "adopt-release-97725" in namespace "job-1940" to be "released"
Jan 30 08:33:10.982: INFO: Pod "adopt-release-97725": Phase="Running", Reason="", readiness=true. Elapsed: 5.190526ms
Jan 30 08:33:12.990: INFO: Pod "adopt-release-97725": Phase="Running", Reason="", readiness=true. Elapsed: 2.013823014s
Jan 30 08:33:12.991: INFO: Pod "adopt-release-97725" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 30 08:33:12.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-1940" for this suite.

• [SLOW TEST:9.169 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":148,"skipped":2965,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:13.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:33:13.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4886" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":149,"skipped":2975,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:13.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Jan 30 08:33:13.095: INFO: Waiting up to 5m0s for pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4" in namespace "var-expansion-3777" to be "Succeeded or Failed"
Jan 30 08:33:13.099: INFO: Pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.818712ms
Jan 30 08:33:15.112: INFO: Pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017586686s
Jan 30 08:33:17.129: INFO: Pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034241569s
Jan 30 08:33:19.142: INFO: Pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.04716666s
STEP: Saw pod success
Jan 30 08:33:19.142: INFO: Pod "var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4" satisfied condition "Succeeded or Failed"
Jan 30 08:33:19.148: INFO: Trying to get logs from node conoa-prod01-wk003 pod var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4 container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:33:19.170: INFO: Waiting for pod var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4 to disappear
Jan 30 08:33:19.174: INFO: Pod var-expansion-423f9abd-2b41-4f5a-be38-018c4838aeb4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:33:19.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3777" for this suite.

• [SLOW TEST:6.134 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":150,"skipped":2979,"failed":0}
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:19.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename runtimeclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 30 08:33:19.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9687" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":151,"skipped":2979,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:19.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:33:19.273: INFO: Creating deployment "webserver-deployment"
Jan 30 08:33:19.280: INFO: Waiting for observed generation 1
Jan 30 08:33:21.299: INFO: Waiting for all required pods to come up
Jan 30 08:33:21.307: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Jan 30 08:33:23.331: INFO: Waiting for deployment "webserver-deployment" to complete
Jan 30 08:33:23.340: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jan 30 08:33:23.355: INFO: Updating deployment webserver-deployment
Jan 30 08:33:23.355: INFO: Waiting for observed generation 2
Jan 30 08:33:25.376: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jan 30 08:33:25.381: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jan 30 08:33:25.386: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:33:25.400: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jan 30 08:33:25.400: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jan 30 08:33:25.405: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:33:25.415: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jan 30 08:33:25.415: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jan 30 08:33:25.433: INFO: Updating deployment webserver-deployment
Jan 30 08:33:25.433: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:33:25.442: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jan 30 08:33:25.447: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:33:25.462: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-7318  ca47d32e-878e-43c4-bbf1-92999728f531 37374103 3 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0027667a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:33:22 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2023-01-30 08:33:23 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jan 30 08:33:25.469: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-7318  83b93939-cf4d-455d-966a-968b911e4824 37374107 3 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment ca47d32e-878e-43c4-bbf1-92999728f531 0xc002766d07 0xc002766d08}] []  [{kube-controller-manager Update apps/v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ca47d32e-878e-43c4-bbf1-92999728f531\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002766db8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:33:25.469: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jan 30 08:33:25.469: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-7318  32f937b7-1f0b-4833-9154-ff71ffca1c32 37374104 3 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment ca47d32e-878e-43c4-bbf1-92999728f531 0xc002766c07 0xc002766c08}] []  [{kube-controller-manager Update apps/v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ca47d32e-878e-43c4-bbf1-92999728f531\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:33:21 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002766c98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:33:25.481: INFO: Pod "webserver-deployment-55df494869-62vn7" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-62vn7 webserver-deployment-55df494869- deployment-7318  0ad21c90-2dd0-4b23-aee1-9bf41c20622d 37374119 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767307 0xc002767308}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rxnvz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rxnvz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.481: INFO: Pod "webserver-deployment-55df494869-6ghk5" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6ghk5 webserver-deployment-55df494869- deployment-7318  c54c11fb-04f5-407f-8b05-5cf6396f92a1 37374115 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767460 0xc002767461}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lww9s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lww9s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.481: INFO: Pod "webserver-deployment-55df494869-6gqx2" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6gqx2 webserver-deployment-55df494869- deployment-7318  07644ffc-8fc5-4d28-abe7-0514fcc1a2ef 37374121 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0027675c7 0xc0027675c8}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c62fl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c62fl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.482: INFO: Pod "webserver-deployment-55df494869-7hngs" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-7hngs webserver-deployment-55df494869- deployment-7318  f900c2c3-30e0-40e0-8f3e-dd46eb1203f7 37374108 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767700 0xc002767701}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v28pw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v28pw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.482: INFO: Pod "webserver-deployment-55df494869-8mqlh" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8mqlh webserver-deployment-55df494869- deployment-7318  2a3876f8-8a9c-48f5-a92c-fd85b4e6d315 37373983 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767857 0xc002767858}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.3.44\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rfdtw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rfdtw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.14,PodIP:10.0.3.44,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://da7fc47c68e5ba4ce072edad98e1050d7603c1bf90a9cb59a30044119df3d878,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.3.44,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.483: INFO: Pod "webserver-deployment-55df494869-8x586" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8x586 webserver-deployment-55df494869- deployment-7318  c84b1de3-8403-4327-86aa-d123a4f77509 37374123 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767a27 0xc002767a28}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8q4gd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8q4gd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk004,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.483: INFO: Pod "webserver-deployment-55df494869-b2r8m" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-b2r8m webserver-deployment-55df494869- deployment-7318  0bcb2993-33ea-4112-bf32-552c2fc2d6c0 37374124 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767b77 0xc002767b78}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pb6pc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pb6pc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.483: INFO: Pod "webserver-deployment-55df494869-clwmm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-clwmm webserver-deployment-55df494869- deployment-7318  dc2a56a2-eb94-4320-a818-3658ee325943 37373957 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767cb0 0xc002767cb1}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.25\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p7qck,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p7qck,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.25,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://90768a6c7a3341c15ba4ed1bb6f31e0c20e06fdd63648020a6ed655bc7f4587f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.25,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.483: INFO: Pod "webserver-deployment-55df494869-hpkbt" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hpkbt webserver-deployment-55df494869- deployment-7318  ca9b45fe-daa7-471e-84f0-ce9434321b19 37374118 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767e87 0xc002767e88}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vnf8h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vnf8h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.484: INFO: Pod "webserver-deployment-55df494869-kfr88" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-kfr88 webserver-deployment-55df494869- deployment-7318  67f88774-0f43-4dc7-bab0-ae5e12b819ad 37373973 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc002767fc0 0xc002767fc1}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.1.230\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-77w48,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-77w48,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.13,PodIP:10.0.1.230,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://b7414f9019e48a0a703e98ec7cdcd5187ae0a139f1739b48b43ec574f52b8d57,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.1.230,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.485: INFO: Pod "webserver-deployment-55df494869-kjjcm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-kjjcm webserver-deployment-55df494869- deployment-7318  254d26ad-1e07-4114-aa07-1fc137d5bcb6 37373997 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0039b45e7 0xc0039b45e8}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.2.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jx2v4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jx2v4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk004,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.16,PodIP:10.0.2.128,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://5dc39a0e61a3a54353e7cc932a534baeba6a67eb2e627590d0eee8b07208778e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.2.128,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.485: INFO: Pod "webserver-deployment-55df494869-m2dbz" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-m2dbz webserver-deployment-55df494869- deployment-7318  d00ee600-fc16-47e4-bd39-6458357f5497 37373968 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0039b47b7 0xc0039b47b8}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.2.44\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4kkhr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4kkhr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk004,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.16,PodIP:10.0.2.44,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://680ffc67d560d0837de3d7dc57e4e0416d7f909368fccf14b576c2625622414b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.2.44,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-55df494869-mzqxt" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-mzqxt webserver-deployment-55df494869- deployment-7318  3ff46840-b0c0-4ca0-aa1c-356a0af976cf 37374004 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0039b4997 0xc0039b4998}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.1.130\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-695p8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-695p8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.13,PodIP:10.0.1.130,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://958132478cb41772d2f18b5c60e78cb7ca7ba4eb3a17946ed9b495b659f806a3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.1.130,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-55df494869-n9zzj" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-n9zzj webserver-deployment-55df494869- deployment-7318  1e743660-b35b-47e6-83c7-aa6dbc675b7f 37373985 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0039b4b67 0xc0039b4b68}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.3.218\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vjnfr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vjnfr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.14,PodIP:10.0.3.218,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://a5840e52d7429fb0841d543a24e45f855a5413af0b628a9b29f54bf01eacceb1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.3.218,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-55df494869-rcmdn" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-rcmdn webserver-deployment-55df494869- deployment-7318  be605516-7404-4fcd-bf73-410ad4a893b2 37374010 0 2023-01-30 08:33:19 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [{apps/v1 ReplicaSet webserver-deployment-55df494869 32f937b7-1f0b-4833-9154-ff71ffca1c32 0xc0039b4d37 0xc0039b4d38}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"32f937b7-1f0b-4833-9154-ff71ffca1c32\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.3.220\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hz62l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hz62l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.14,PodIP:10.0.3.220,StartTime:2023-01-30 08:33:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:33:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:cri-o://3625a55d7ad6e9afa7663530a4f93d5af7c78ad83c1c38aafb6c71122df1f50e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.3.220,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-57ccb67bb8-5bdz8" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-5bdz8 webserver-deployment-57ccb67bb8- deployment-7318  01557d7e-a8d9-4fc8-80e6-88dace28b28f 37374044 0 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b4f07 0xc0039b4f08}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zr7h7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zr7h7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:,StartTime:2023-01-30 08:33:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-57ccb67bb8-5f2h2" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-5f2h2 webserver-deployment-57ccb67bb8- deployment-7318  589ad17d-5001-459b-9757-eb88b21da659 37374071 0 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b50d7 0xc0039b50d8}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c82nc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c82nc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:,StartTime:2023-01-30 08:33:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-57ccb67bb8-dc9fg" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-dc9fg webserver-deployment-57ccb67bb8- deployment-7318  8f1debc0-7c36-4929-81c4-24b24fce594b 37374128 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b52a7 0xc0039b52a8}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rgrgl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rgrgl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.486: INFO: Pod "webserver-deployment-57ccb67bb8-kkkpm" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-kkkpm webserver-deployment-57ccb67bb8- deployment-7318  06988969-84fd-48bc-9533-23b9ae0b81fe 37374122 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b5407 0xc0039b5408}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nsw49,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nsw49,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk004,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.487: INFO: Pod "webserver-deployment-57ccb67bb8-krfbg" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-krfbg webserver-deployment-57ccb67bb8- deployment-7318  8f5171f8-39d6-434a-ba3a-111c599173e6 37374125 0 2023-01-30 08:33:25 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b5567 0xc0039b5568}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bsg68,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bsg68,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.487: INFO: Pod "webserver-deployment-57ccb67bb8-nts4d" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-nts4d webserver-deployment-57ccb67bb8- deployment-7318  28d6169d-c6be-448e-9bb0-38d0a1c2192a 37374048 0 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b56c0 0xc0039b56c1}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jcthg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jcthg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk001,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.13,PodIP:,StartTime:2023-01-30 08:33:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.487: INFO: Pod "webserver-deployment-57ccb67bb8-qlnh9" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-qlnh9 webserver-deployment-57ccb67bb8- deployment-7318  d46a6aca-f1f4-4d28-a549-8394bb2f375c 37374047 0 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b5897 0xc0039b5898}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kjfpx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kjfpx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk004,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.16,PodIP:,StartTime:2023-01-30 08:33:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:33:25.487: INFO: Pod "webserver-deployment-57ccb67bb8-wj72v" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-wj72v webserver-deployment-57ccb67bb8- deployment-7318  b5ae0698-767b-4010-ada0-2b4db2ffd9c3 37374069 0 2023-01-30 08:33:23 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 83b93939-cf4d-455d-966a-968b911e4824 0xc0039b5a67 0xc0039b5a68}] []  [{kube-controller-manager Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"83b93939-cf4d-455d-966a-968b911e4824\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:33:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qc27k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qc27k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk002,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:33:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.14,PodIP:,StartTime:2023-01-30 08:33:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 08:33:25.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7318" for this suite.

• [SLOW TEST:6.263 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":152,"skipped":2997,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:25.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:25.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption-2
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-6873
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Jan 30 08:33:31.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-6915" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 30 08:33:31.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-6873" for this suite.

• [SLOW TEST:6.181 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":153,"skipped":3011,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:31.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:33:31.751: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"1dd34af3-8537-458d-92a7-a7e3eb55a690", Controller:(*bool)(0xc003f7afa2), BlockOwnerDeletion:(*bool)(0xc003f7afa3)}}
Jan 30 08:33:31.758: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ef91547f-7bbf-41fb-b901-d5a95a08bfcd", Controller:(*bool)(0xc003f7b1f2), BlockOwnerDeletion:(*bool)(0xc003f7b1f3)}}
Jan 30 08:33:31.764: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a76e8f2a-fad3-4626-8d6d-1abbf0b138f6", Controller:(*bool)(0xc003f7b452), BlockOwnerDeletion:(*bool)(0xc003f7b453)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 08:33:36.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6746" for this suite.

• [SLOW TEST:5.111 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":154,"skipped":3013,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:36.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Jan 30 08:33:36.830: INFO: Pod name sample-pod: Found 0 pods out of 3
Jan 30 08:33:41.847: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Jan 30 08:33:41.851: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 08:33:41.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6004" for this suite.

• [SLOW TEST:5.106 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":155,"skipped":3068,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:41.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:33:42.370: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:33:45.412: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:33:45.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6589" for this suite.
STEP: Destroying namespace "webhook-6589-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":156,"skipped":3084,"failed":0}
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:45.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename certificates
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 30 08:33:46.382: INFO: starting watch
STEP: patching
STEP: updating
Jan 30 08:33:46.403: INFO: waiting for watch events with expected annotations
Jan 30 08:33:46.403: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:33:46.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-1168" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":157,"skipped":3090,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:46.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:33:46.593: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Jan 30 08:33:46.605: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:46.605: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Jan 30 08:33:46.631: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:46.631: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:47.643: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:47.643: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:48.644: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:48.644: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:49.643: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:33:49.643: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Jan 30 08:33:49.679: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:33:49.679: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jan 30 08:33:50.693: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:50.693: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Jan 30 08:33:50.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:50.713: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:51.721: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:51.721: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:52.727: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:52.727: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:53.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:53.728: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 08:33:54.727: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:33:54.727: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-521, will wait for the garbage collector to delete the pods
Jan 30 08:33:54.809: INFO: Deleting DaemonSet.extensions daemon-set took: 14.455371ms
Jan 30 08:33:54.910: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.076903ms
Jan 30 08:33:57.432: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:33:57.432: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:33:57.436: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37374892"},"items":null}

Jan 30 08:33:57.440: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37374892"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:33:57.479: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-521" for this suite.

• [SLOW TEST:10.978 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":158,"skipped":3104,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:33:57.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jan 30 08:33:57.532: INFO: Waiting up to 5m0s for pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e" in namespace "emptydir-6330" to be "Succeeded or Failed"
Jan 30 08:33:57.538: INFO: Pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.858992ms
Jan 30 08:33:59.549: INFO: Pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e": Phase="Running", Reason="", readiness=true. Elapsed: 2.016472143s
Jan 30 08:34:01.566: INFO: Pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e": Phase="Running", Reason="", readiness=false. Elapsed: 4.034269008s
Jan 30 08:34:03.575: INFO: Pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043122688s
STEP: Saw pod success
Jan 30 08:34:03.575: INFO: Pod "pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e" satisfied condition "Succeeded or Failed"
Jan 30 08:34:03.581: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e container test-container: <nil>
STEP: delete the pod
Jan 30 08:34:03.620: INFO: Waiting for pod pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e to disappear
Jan 30 08:34:03.624: INFO: Pod pod-777a5fc4-e00d-45ad-9a05-0e12b3f7271e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:34:03.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6330" for this suite.

• [SLOW TEST:6.141 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":3111,"failed":0}
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:03.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sysctl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 08:34:03.669: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-15" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":160,"skipped":3112,"failed":0}
SS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:03.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 30 08:34:03.726: INFO: Waiting up to 5m0s for pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d" in namespace "downward-api-1096" to be "Succeeded or Failed"
Jan 30 08:34:03.730: INFO: Pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.107509ms
Jan 30 08:34:05.747: INFO: Pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021283941s
Jan 30 08:34:07.763: INFO: Pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037240499s
Jan 30 08:34:09.781: INFO: Pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.055467045s
STEP: Saw pod success
Jan 30 08:34:09.781: INFO: Pod "downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d" satisfied condition "Succeeded or Failed"
Jan 30 08:34:09.787: INFO: Trying to get logs from node conoa-prod01-wk003 pod downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:34:09.820: INFO: Waiting for pod downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d to disappear
Jan 30 08:34:09.825: INFO: Pod downward-api-1d8baf00-0b07-44e9-9430-14752b041b1d no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 30 08:34:09.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1096" for this suite.

• [SLOW TEST:6.159 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":161,"skipped":3114,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:09.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Jan 30 08:34:11.923: INFO: pods: 0 < 3
Jan 30 08:34:13.934: INFO: running pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 30 08:34:20.061: INFO: running pods: 2 < 3
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 30 08:34:22.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1179" for this suite.

• [SLOW TEST:12.330 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":162,"skipped":3122,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:22.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 30 08:34:22.222: INFO: Waiting up to 5m0s for pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4" in namespace "downward-api-2662" to be "Succeeded or Failed"
Jan 30 08:34:22.228: INFO: Pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.858121ms
Jan 30 08:34:24.240: INFO: Pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018098052s
Jan 30 08:34:26.255: INFO: Pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.033363803s
Jan 30 08:34:28.264: INFO: Pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042269567s
STEP: Saw pod success
Jan 30 08:34:28.264: INFO: Pod "downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4" satisfied condition "Succeeded or Failed"
Jan 30 08:34:28.270: INFO: Trying to get logs from node conoa-prod01-wk003 pod downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4 container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:34:28.294: INFO: Waiting for pod downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4 to disappear
Jan 30 08:34:28.298: INFO: Pod downward-api-0241fb97-79b6-4097-90a1-a0dd00a931b4 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 30 08:34:28.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2662" for this suite.

• [SLOW TEST:6.151 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":3161,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:28.325: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename endpointslice
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:34:28.364: INFO: Endpoints addresses: [10.55.210.10 10.55.210.11 10.55.210.12] , ports: [6443]
Jan 30 08:34:28.364: INFO: EndpointSlices addresses: [10.55.210.10 10.55.210.11 10.55.210.12] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 30 08:34:28.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-192" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":164,"skipped":3184,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:28.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 08:34:44.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3746" for this suite.

• [SLOW TEST:16.155 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":165,"skipped":3215,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:34:44.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1491
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-1491
Jan 30 08:34:44.600: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:34:54.613: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:34:54.670: INFO: Deleting all statefulset in ns statefulset-1491
Jan 30 08:34:54.673: INFO: Scaling statefulset ss to 0
Jan 30 08:35:04.704: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:35:04.709: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:35:04.740: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1491" for this suite.

• [SLOW TEST:20.214 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":166,"skipped":3227,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:04.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a1e9b963-02aa-4217-bf30-77f938bc8ebd
STEP: Creating a pod to test consume secrets
Jan 30 08:35:04.803: INFO: Waiting up to 5m0s for pod "pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b" in namespace "secrets-4788" to be "Succeeded or Failed"
Jan 30 08:35:04.808: INFO: Pod "pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.238549ms
Jan 30 08:35:06.819: INFO: Pod "pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016000483s
Jan 30 08:35:08.833: INFO: Pod "pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030229459s
STEP: Saw pod success
Jan 30 08:35:08.833: INFO: Pod "pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b" satisfied condition "Succeeded or Failed"
Jan 30 08:35:08.837: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:35:08.865: INFO: Waiting for pod pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b to disappear
Jan 30 08:35:08.870: INFO: Pod pod-secrets-4a993f74-8fd2-42e0-8df0-058929bf498b no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:35:08.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4788" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":167,"skipped":3254,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:08.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-2f8ab451-7835-4393-98af-234d4b3da151
STEP: Creating a pod to test consume secrets
Jan 30 08:35:08.928: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef" in namespace "projected-8497" to be "Succeeded or Failed"
Jan 30 08:35:08.934: INFO: Pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef": Phase="Pending", Reason="", readiness=false. Elapsed: 6.082125ms
Jan 30 08:35:10.944: INFO: Pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01632849s
Jan 30 08:35:12.952: INFO: Pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02451573s
Jan 30 08:35:14.964: INFO: Pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035956178s
STEP: Saw pod success
Jan 30 08:35:14.964: INFO: Pod "pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef" satisfied condition "Succeeded or Failed"
Jan 30 08:35:14.968: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:35:15.005: INFO: Waiting for pod pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef to disappear
Jan 30 08:35:15.011: INFO: Pod pod-projected-secrets-f3d9bcfa-4a9b-4945-b684-aaa3c5b03cef no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:35:15.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8497" for this suite.

• [SLOW TEST:6.143 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":168,"skipped":3296,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:15.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:35:15.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6983" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":169,"skipped":3313,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:15.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Jan 30 08:35:15.152: INFO: Waiting up to 5m0s for pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1" in namespace "var-expansion-8525" to be "Succeeded or Failed"
Jan 30 08:35:15.155: INFO: Pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.26566ms
Jan 30 08:35:17.173: INFO: Pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021231355s
Jan 30 08:35:19.181: INFO: Pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029084346s
Jan 30 08:35:21.198: INFO: Pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.04566371s
STEP: Saw pod success
Jan 30 08:35:21.198: INFO: Pod "var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1" satisfied condition "Succeeded or Failed"
Jan 30 08:35:21.203: INFO: Trying to get logs from node conoa-prod01-wk003 pod var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1 container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:35:21.230: INFO: Waiting for pod var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1 to disappear
Jan 30 08:35:21.234: INFO: Pod var-expansion-28810afa-c78f-48fb-ad02-8a21ee7423d1 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:35:21.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8525" for this suite.

• [SLOW TEST:6.137 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":170,"skipped":3326,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:21.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Jan 30 08:35:21.303: INFO: Waiting up to 5m0s for pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff" in namespace "var-expansion-3628" to be "Succeeded or Failed"
Jan 30 08:35:21.309: INFO: Pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff": Phase="Pending", Reason="", readiness=false. Elapsed: 6.548715ms
Jan 30 08:35:23.324: INFO: Pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020911497s
Jan 30 08:35:25.335: INFO: Pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03232968s
Jan 30 08:35:27.352: INFO: Pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.049367557s
STEP: Saw pod success
Jan 30 08:35:27.352: INFO: Pod "var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff" satisfied condition "Succeeded or Failed"
Jan 30 08:35:27.357: INFO: Trying to get logs from node conoa-prod01-wk003 pod var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff container dapi-container: <nil>
STEP: delete the pod
Jan 30 08:35:27.392: INFO: Waiting for pod var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff to disappear
Jan 30 08:35:27.397: INFO: Pod var-expansion-e2f56e5c-a4bc-43eb-9720-12352b7c6fff no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:35:27.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3628" for this suite.

• [SLOW TEST:6.159 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":171,"skipped":3336,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:35:27.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 30 08:35:27.466: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 08:36:27.679: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:36:27.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Jan 30 08:36:31.799: INFO: found a healthy node: conoa-prod01-wk003
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:36:45.944: INFO: pods created so far: [1 1 1]
Jan 30 08:36:45.944: INFO: length of pods created so far: 3
Jan 30 08:36:47.973: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Jan 30 08:36:54.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-4247" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:36:55.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2512" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:87.746 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":172,"skipped":3348,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:36:55.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-2134
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-2134
I0130 08:36:55.233655      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2134, replica count: 2
I0130 08:36:58.284617      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:36:58.284: INFO: Creating new exec pod
Jan 30 08:37:01.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2134 exec execpodkrrmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jan 30 08:37:01.535: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 30 08:37:01.535: INFO: stdout: "externalname-service-rdh76"
Jan 30 08:37:01.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2134 exec execpodkrrmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.188.4 80'
Jan 30 08:37:01.727: INFO: stderr: "+ echo hostName+ \nnc -v -t -w 2 10.111.188.4 80\nConnection to 10.111.188.4 80 port [tcp/http] succeeded!\n"
Jan 30 08:37:01.727: INFO: stdout: "externalname-service-rdh76"
Jan 30 08:37:01.727: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:37:01.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2134" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.621 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":173,"skipped":3362,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:01.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename namespaces
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:37:07.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6373" for this suite.
STEP: Destroying namespace "nsdeletetest-853" for this suite.
Jan 30 08:37:07.914: INFO: Namespace nsdeletetest-853 was already deleted
STEP: Destroying namespace "nsdeletetest-156" for this suite.

• [SLOW TEST:6.140 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":174,"skipped":3380,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:07.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-2942
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-2942
STEP: creating replication controller externalsvc in namespace services-2942
I0130 08:37:08.003764      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2942, replica count: 2
I0130 08:37:11.054776      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Jan 30 08:37:11.122: INFO: Creating new exec pod
Jan 30 08:37:13.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-2942 exec execpodscs2l -- /bin/sh -x -c nslookup nodeport-service.services-2942.svc.cluster.local'
Jan 30 08:37:13.383: INFO: stderr: "+ nslookup nodeport-service.services-2942.svc.cluster.local\n"
Jan 30 08:37:13.383: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-2942.svc.cluster.local\tcanonical name = externalsvc.services-2942.svc.cluster.local.\nName:\texternalsvc.services-2942.svc.cluster.local\nAddress: 10.97.91.19\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-2942, will wait for the garbage collector to delete the pods
Jan 30 08:37:13.453: INFO: Deleting ReplicationController externalsvc took: 12.805478ms
Jan 30 08:37:13.554: INFO: Terminating ReplicationController externalsvc pods took: 100.810136ms
Jan 30 08:37:15.487: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:37:15.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2942" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.596 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":175,"skipped":3386,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:15.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-94c708b2-69ca-4e83-bcbd-90b23558e2e1
STEP: Creating a pod to test consume secrets
Jan 30 08:37:15.561: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3" in namespace "projected-5514" to be "Succeeded or Failed"
Jan 30 08:37:15.565: INFO: Pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.50954ms
Jan 30 08:37:17.580: INFO: Pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018486559s
Jan 30 08:37:19.597: INFO: Pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035632061s
Jan 30 08:37:21.611: INFO: Pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.04989406s
STEP: Saw pod success
Jan 30 08:37:21.611: INFO: Pod "pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3" satisfied condition "Succeeded or Failed"
Jan 30 08:37:21.616: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:37:21.647: INFO: Waiting for pod pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3 to disappear
Jan 30 08:37:21.652: INFO: Pod pod-projected-secrets-134a9321-4643-4f99-8b37-211cb05a7fa3 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:37:21.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5514" for this suite.

• [SLOW TEST:6.151 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3416,"failed":0}
SSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:21.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-7a49d186-5fad-41d6-b3fb-aa997e62d38a
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:37:21.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9886" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":177,"skipped":3421,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:21.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename namespaces
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:37:36.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-7833" for this suite.
STEP: Destroying namespace "nsdeletetest-9393" for this suite.
Jan 30 08:37:36.885: INFO: Namespace nsdeletetest-9393 was already deleted
STEP: Destroying namespace "nsdeletetest-8596" for this suite.

• [SLOW TEST:15.169 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":178,"skipped":3460,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:36.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Jan 30 08:37:36.945: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 08:37:41.964: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Jan 30 08:37:41.970: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Jan 30 08:37:41.985: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Jan 30 08:37:41.988: INFO: Observed &ReplicaSet event: ADDED
Jan 30 08:37:41.988: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:41.988: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:41.989: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:41.989: INFO: Found replicaset test-rs in namespace replicaset-3786 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 08:37:41.989: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Jan 30 08:37:41.989: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 08:37:41.998: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Jan 30 08:37:42.001: INFO: Observed &ReplicaSet event: ADDED
Jan 30 08:37:42.001: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:42.001: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:42.002: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:42.002: INFO: Observed replicaset test-rs in namespace replicaset-3786 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:37:42.002: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 08:37:42.002: INFO: Found replicaset test-rs in namespace replicaset-3786 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jan 30 08:37:42.002: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 08:37:42.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3786" for this suite.

• [SLOW TEST:5.123 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":179,"skipped":3467,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:42.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:37:42.268: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:37:45.313: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:37:45.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7340" for this suite.
STEP: Destroying namespace "webhook-7340-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":180,"skipped":3474,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:37:45.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 08:37:51.521: INFO: DNS probes using dns-test-0d99386e-7ccc-4bb2-80b0-cddb7854bb89 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 08:37:55.594: INFO: File wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:37:55.600: INFO: File jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:37:55.600: INFO: Lookups using dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 failed for: [wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local]

Jan 30 08:38:00.610: INFO: File wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:00.616: INFO: File jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:00.616: INFO: Lookups using dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 failed for: [wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local]

Jan 30 08:38:05.609: INFO: File wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:05.616: INFO: File jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:05.616: INFO: Lookups using dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 failed for: [wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local]

Jan 30 08:38:10.609: INFO: File wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:10.617: INFO: File jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:10.617: INFO: Lookups using dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 failed for: [wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local]

Jan 30 08:38:15.611: INFO: File wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:15.618: INFO: File jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local from pod  dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:38:15.618: INFO: Lookups using dns-2652/dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 failed for: [wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local]

Jan 30 08:38:20.613: INFO: DNS probes using dns-test-4512b19c-2e13-4f5e-8246-41dd861f4bb1 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2652.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2652.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 08:38:24.722: INFO: DNS probes using dns-test-91a17fda-02c8-46bb-a1b3-4d4603a51146 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 08:38:24.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2652" for this suite.

• [SLOW TEST:39.334 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":181,"skipped":3509,"failed":0}
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:38:24.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-797d5db9-11f7-427b-a53e-a16dfd24fe3a
STEP: Creating secret with name s-test-opt-upd-8aa209be-5695-477a-b097-69674d1fe790
STEP: Creating the pod
Jan 30 08:38:24.878: INFO: The status of Pod pod-secrets-44c1c439-df51-480d-a5c5-f6273a2e94af is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:38:26.894: INFO: The status of Pod pod-secrets-44c1c439-df51-480d-a5c5-f6273a2e94af is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:38:28.888: INFO: The status of Pod pod-secrets-44c1c439-df51-480d-a5c5-f6273a2e94af is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:38:30.894: INFO: The status of Pod pod-secrets-44c1c439-df51-480d-a5c5-f6273a2e94af is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-797d5db9-11f7-427b-a53e-a16dfd24fe3a
STEP: Updating secret s-test-opt-upd-8aa209be-5695-477a-b097-69674d1fe790
STEP: Creating secret with name s-test-opt-create-6bc09364-401c-47d9-bbc3-e04c94c8f1e3
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:39:41.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1049" for this suite.

• [SLOW TEST:76.695 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":3509,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:39:41.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replication-controller
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169
Jan 30 08:39:41.527: INFO: Pod name my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169: Found 0 pods out of 1
Jan 30 08:39:46.537: INFO: Pod name my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169: Found 1 pods out of 1
Jan 30 08:39:46.537: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169" are running
Jan 30 08:39:46.548: INFO: Pod "my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169-82d22" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:39:41 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:39:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:39:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:39:41 +0000 UTC Reason: Message:}])
Jan 30 08:39:46.548: INFO: Trying to dial the pod
Jan 30 08:39:51.571: INFO: Controller my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169: Got expected result from replica 1 [my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169-82d22]: "my-hostname-basic-593ae816-adcc-4ea4-8a3b-2cc6ff28b169-82d22", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 30 08:39:51.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9793" for this suite.

• [SLOW TEST:10.109 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":183,"skipped":3516,"failed":0}
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:39:51.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Jan 30 08:39:51.635: INFO: created test-pod-1
Jan 30 08:39:51.643: INFO: created test-pod-2
Jan 30 08:39:51.650: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Jan 30 08:39:51.650: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-7629' to be running and ready
Jan 30 08:39:51.665: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:51.665: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:51.665: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:51.665: INFO: 0 / 3 pods in namespace 'pods-7629' are running and ready (0 seconds elapsed)
Jan 30 08:39:51.665: INFO: expected 0 pod replicas in namespace 'pods-7629', 0 are Running and Ready.
Jan 30 08:39:51.665: INFO: POD         NODE                PHASE    GRACE  CONDITIONS
Jan 30 08:39:51.665: INFO: test-pod-1  conoa-prod01-wk003  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:51.665: INFO: test-pod-2  conoa-prod01-wk003  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:51.665: INFO: test-pod-3  conoa-prod01-wk003  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:51.665: INFO: 
Jan 30 08:39:53.695: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:53.695: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:53.695: INFO: 1 / 3 pods in namespace 'pods-7629' are running and ready (2 seconds elapsed)
Jan 30 08:39:53.695: INFO: expected 0 pod replicas in namespace 'pods-7629', 0 are Running and Ready.
Jan 30 08:39:53.695: INFO: POD         NODE                PHASE    GRACE  CONDITIONS
Jan 30 08:39:53.695: INFO: test-pod-1  conoa-prod01-wk003  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:53.695: INFO: test-pod-2  conoa-prod01-wk003  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:53.695: INFO: 
Jan 30 08:39:55.686: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:39:55.686: INFO: 2 / 3 pods in namespace 'pods-7629' are running and ready (4 seconds elapsed)
Jan 30 08:39:55.686: INFO: expected 0 pod replicas in namespace 'pods-7629', 0 are Running and Ready.
Jan 30 08:39:55.687: INFO: POD         NODE                PHASE    GRACE  CONDITIONS
Jan 30 08:39:55.687: INFO: test-pod-1  conoa-prod01-wk003  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:39:51 +0000 UTC  }]
Jan 30 08:39:55.687: INFO: 
Jan 30 08:39:57.693: INFO: 3 / 3 pods in namespace 'pods-7629' are running and ready (6 seconds elapsed)
Jan 30 08:39:57.694: INFO: expected 0 pod replicas in namespace 'pods-7629', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Jan 30 08:39:57.725: INFO: Pod quantity 3 is different from expected quantity 0
Jan 30 08:39:58.735: INFO: Pod quantity 2 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 08:39:59.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7629" for this suite.

• [SLOW TEST:8.164 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":184,"skipped":3516,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:39:59.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-4980/configmap-test-1ba9803c-db8c-42fc-809e-0f09f3a6d698
STEP: Creating a pod to test consume configMaps
Jan 30 08:39:59.810: INFO: Waiting up to 5m0s for pod "pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161" in namespace "configmap-4980" to be "Succeeded or Failed"
Jan 30 08:39:59.813: INFO: Pod "pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161": Phase="Pending", Reason="", readiness=false. Elapsed: 3.731962ms
Jan 30 08:40:01.829: INFO: Pod "pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019804569s
Jan 30 08:40:03.845: INFO: Pod "pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035461927s
STEP: Saw pod success
Jan 30 08:40:03.845: INFO: Pod "pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161" satisfied condition "Succeeded or Failed"
Jan 30 08:40:03.852: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161 container env-test: <nil>
STEP: delete the pod
Jan 30 08:40:03.882: INFO: Waiting for pod pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161 to disappear
Jan 30 08:40:03.887: INFO: Pod pod-configmaps-5192bc1a-b0c1-405f-93b3-8e383901c161 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:40:03.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4980" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":185,"skipped":3561,"failed":0}
S
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:40:03.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7215.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7215.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 138.76.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.76.138_udp@PTR;check="$$(dig +tcp +noall +answer +search 138.76.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.76.138_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7215.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7215.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7215.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7215.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7215.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 138.76.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.76.138_udp@PTR;check="$$(dig +tcp +noall +answer +search 138.76.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.76.138_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 08:40:08.033: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.040: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.046: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.053: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.084: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.090: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.096: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.101: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:08.124: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:13.137: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.143: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.149: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.155: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.184: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.190: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.196: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.201: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:13.223: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:18.134: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.140: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.147: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.153: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.183: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.189: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.194: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.199: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:18.222: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:23.133: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.139: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.145: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.151: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.180: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.184: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.189: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.193: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:23.211: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:28.134: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.143: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.149: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.155: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.186: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.192: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.199: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.205: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:28.230: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:33.135: INFO: Unable to read wheezy_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.143: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.150: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.156: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.188: INFO: Unable to read jessie_udp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.194: INFO: Unable to read jessie_tcp@dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.200: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.206: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local from pod dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6: the server could not find the requested resource (get pods dns-test-f997f207-6876-48ed-9cf4-b9501954bad6)
Jan 30 08:40:33.229: INFO: Lookups using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 failed for: [wheezy_udp@dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@dns-test-service.dns-7215.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_udp@dns-test-service.dns-7215.svc.cluster.local jessie_tcp@dns-test-service.dns-7215.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7215.svc.cluster.local]

Jan 30 08:40:38.222: INFO: DNS probes using dns-7215/dns-test-f997f207-6876-48ed-9cf4-b9501954bad6 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 08:40:38.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7215" for this suite.

• [SLOW TEST:34.442 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":186,"skipped":3562,"failed":0}
SSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:40:38.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jan 30 08:40:40.433: INFO: running pods: 0 < 3
Jan 30 08:40:42.455: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 30 08:40:44.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-3155" for this suite.

• [SLOW TEST:6.129 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":187,"skipped":3566,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:40:44.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:40:48.543: INFO: Deleting pod "var-expansion-d22ff3d1-0779-48b5-92a5-3d234aad463d" in namespace "var-expansion-4678"
Jan 30 08:40:48.555: INFO: Wait up to 5m0s for pod "var-expansion-d22ff3d1-0779-48b5-92a5-3d234aad463d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:40:50.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4678" for this suite.

• [SLOW TEST:6.117 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":188,"skipped":3575,"failed":0}
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:40:50.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:40:50.643: INFO: Waiting up to 5m0s for pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e" in namespace "downward-api-4959" to be "Succeeded or Failed"
Jan 30 08:40:50.647: INFO: Pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024945ms
Jan 30 08:40:52.664: INFO: Pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021036707s
Jan 30 08:40:54.675: INFO: Pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032370161s
Jan 30 08:40:56.684: INFO: Pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.040872105s
STEP: Saw pod success
Jan 30 08:40:56.684: INFO: Pod "downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e" satisfied condition "Succeeded or Failed"
Jan 30 08:40:56.688: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e container client-container: <nil>
STEP: delete the pod
Jan 30 08:40:56.711: INFO: Waiting for pod downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e to disappear
Jan 30 08:40:56.715: INFO: Pod downwardapi-volume-531f4622-4ffc-4ca0-88e4-d6e196b2a32e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:40:56.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4959" for this suite.

• [SLOW TEST:6.134 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":189,"skipped":3575,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:40:56.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:40:56.802: INFO: Create a RollingUpdate DaemonSet
Jan 30 08:40:56.810: INFO: Check that daemon pods launch on every node of the cluster
Jan 30 08:40:56.818: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:56.818: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:56.818: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:56.822: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:40:56.822: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:40:57.835: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:57.835: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:57.835: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:57.842: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:40:57.842: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:40:58.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:58.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:58.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:58.844: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:40:58.844: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 08:40:59.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:59.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:59.836: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:40:59.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 08:40:59.843: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
Jan 30 08:40:59.843: INFO: Update the DaemonSet to trigger a rollout
Jan 30 08:40:59.857: INFO: Updating DaemonSet daemon-set
Jan 30 08:41:02.890: INFO: Roll back the DaemonSet before rollout is complete
Jan 30 08:41:02.910: INFO: Updating DaemonSet daemon-set
Jan 30 08:41:02.910: INFO: Make sure DaemonSet rollback is complete
Jan 30 08:41:02.915: INFO: Wrong image for pod: daemon-set-l9qzs. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Jan 30 08:41:02.915: INFO: Pod daemon-set-l9qzs is not available
Jan 30 08:41:02.923: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:02.923: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:02.923: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:03.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:03.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:03.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:04.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:04.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:04.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:05.945: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:05.946: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:05.946: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:06.937: INFO: Pod daemon-set-x2j4q is not available
Jan 30 08:41:06.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:06.947: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:41:06.948: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6954, will wait for the garbage collector to delete the pods
Jan 30 08:41:07.033: INFO: Deleting DaemonSet.extensions daemon-set took: 20.179889ms
Jan 30 08:41:07.134: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.202071ms
Jan 30 08:41:09.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:41:09.144: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:41:09.149: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37378102"},"items":null}

Jan 30 08:41:09.154: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37378102"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:41:09.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6954" for this suite.

• [SLOW TEST:12.476 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":190,"skipped":3586,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:41:09.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename job
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-8141, will wait for the garbage collector to delete the pods
Jan 30 08:41:13.339: INFO: Deleting Job.batch foo took: 13.406998ms
Jan 30 08:41:13.440: INFO: Terminating Job.batch foo pods took: 100.280386ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 30 08:41:45.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8141" for this suite.

• [SLOW TEST:36.062 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":191,"skipped":3665,"failed":0}
S
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:41:45.274: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename ingressclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 30 08:41:45.349: INFO: starting watch
STEP: patching
STEP: updating
Jan 30 08:41:45.366: INFO: waiting for watch events with expected annotations
Jan 30 08:41:45.366: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Jan 30 08:41:45.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-8649" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":192,"skipped":3666,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:41:45.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-791c26c9-cb50-4f54-85b4-bfcedc92f42f
STEP: Creating configMap with name cm-test-opt-upd-23f35669-c353-457c-9413-a7f3cc83a975
STEP: Creating the pod
Jan 30 08:41:45.493: INFO: The status of Pod pod-projected-configmaps-1d3b54fb-58d5-4419-a569-110740612b8c is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:41:47.506: INFO: The status of Pod pod-projected-configmaps-1d3b54fb-58d5-4419-a569-110740612b8c is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:41:49.504: INFO: The status of Pod pod-projected-configmaps-1d3b54fb-58d5-4419-a569-110740612b8c is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:41:51.510: INFO: The status of Pod pod-projected-configmaps-1d3b54fb-58d5-4419-a569-110740612b8c is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-791c26c9-cb50-4f54-85b4-bfcedc92f42f
STEP: Updating configmap cm-test-opt-upd-23f35669-c353-457c-9413-a7f3cc83a975
STEP: Creating configMap with name cm-test-opt-create-15605258-4320-4d84-a1ee-8675d58dc76f
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 08:43:20.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8014" for this suite.

• [SLOW TEST:94.788 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":193,"skipped":3715,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:43:20.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 30 08:43:20.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 create -f -'
Jan 30 08:43:20.554: INFO: stderr: ""
Jan 30 08:43:20.555: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 30 08:43:20.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:20.647: INFO: stderr: ""
Jan 30 08:43:20.647: INFO: stdout: "update-demo-nautilus-58w95 update-demo-nautilus-7w6d2 "
Jan 30 08:43:20.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-58w95 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:20.726: INFO: stderr: ""
Jan 30 08:43:20.726: INFO: stdout: ""
Jan 30 08:43:20.726: INFO: update-demo-nautilus-58w95 is created but not running
Jan 30 08:43:25.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:25.814: INFO: stderr: ""
Jan 30 08:43:25.814: INFO: stdout: "update-demo-nautilus-58w95 update-demo-nautilus-7w6d2 "
Jan 30 08:43:25.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-58w95 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:25.902: INFO: stderr: ""
Jan 30 08:43:25.902: INFO: stdout: "true"
Jan 30 08:43:25.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-58w95 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:25.985: INFO: stderr: ""
Jan 30 08:43:25.985: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:25.985: INFO: validating pod update-demo-nautilus-58w95
Jan 30 08:43:25.994: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:25.994: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:25.994: INFO: update-demo-nautilus-58w95 is verified up and running
Jan 30 08:43:25.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:26.081: INFO: stderr: ""
Jan 30 08:43:26.081: INFO: stdout: "true"
Jan 30 08:43:26.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:26.160: INFO: stderr: ""
Jan 30 08:43:26.160: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:26.161: INFO: validating pod update-demo-nautilus-7w6d2
Jan 30 08:43:26.171: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:26.171: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:26.171: INFO: update-demo-nautilus-7w6d2 is verified up and running
STEP: scaling down the replication controller
Jan 30 08:43:26.174: INFO: scanned /root for discovery docs: <nil>
Jan 30 08:43:26.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jan 30 08:43:27.285: INFO: stderr: ""
Jan 30 08:43:27.285: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 30 08:43:27.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:27.381: INFO: stderr: ""
Jan 30 08:43:27.381: INFO: stdout: "update-demo-nautilus-58w95 update-demo-nautilus-7w6d2 "
STEP: Replicas for name=update-demo: expected=1 actual=2
Jan 30 08:43:32.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:32.470: INFO: stderr: ""
Jan 30 08:43:32.470: INFO: stdout: "update-demo-nautilus-7w6d2 "
Jan 30 08:43:32.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:32.549: INFO: stderr: ""
Jan 30 08:43:32.549: INFO: stdout: "true"
Jan 30 08:43:32.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:32.629: INFO: stderr: ""
Jan 30 08:43:32.629: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:32.629: INFO: validating pod update-demo-nautilus-7w6d2
Jan 30 08:43:32.637: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:32.637: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:32.637: INFO: update-demo-nautilus-7w6d2 is verified up and running
STEP: scaling up the replication controller
Jan 30 08:43:32.639: INFO: scanned /root for discovery docs: <nil>
Jan 30 08:43:32.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jan 30 08:43:33.749: INFO: stderr: ""
Jan 30 08:43:33.750: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 30 08:43:33.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:33.846: INFO: stderr: ""
Jan 30 08:43:33.846: INFO: stdout: "update-demo-nautilus-7w6d2 update-demo-nautilus-bj4dm "
Jan 30 08:43:33.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:33.922: INFO: stderr: ""
Jan 30 08:43:33.922: INFO: stdout: "true"
Jan 30 08:43:33.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:33.997: INFO: stderr: ""
Jan 30 08:43:33.997: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:33.997: INFO: validating pod update-demo-nautilus-7w6d2
Jan 30 08:43:34.004: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:34.004: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:34.004: INFO: update-demo-nautilus-7w6d2 is verified up and running
Jan 30 08:43:34.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-bj4dm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:34.081: INFO: stderr: ""
Jan 30 08:43:34.081: INFO: stdout: ""
Jan 30 08:43:34.081: INFO: update-demo-nautilus-bj4dm is created but not running
Jan 30 08:43:39.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:43:39.172: INFO: stderr: ""
Jan 30 08:43:39.172: INFO: stdout: "update-demo-nautilus-7w6d2 update-demo-nautilus-bj4dm "
Jan 30 08:43:39.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:39.266: INFO: stderr: ""
Jan 30 08:43:39.267: INFO: stdout: "true"
Jan 30 08:43:39.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-7w6d2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:39.356: INFO: stderr: ""
Jan 30 08:43:39.356: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:39.356: INFO: validating pod update-demo-nautilus-7w6d2
Jan 30 08:43:39.368: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:39.368: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:39.368: INFO: update-demo-nautilus-7w6d2 is verified up and running
Jan 30 08:43:39.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-bj4dm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:43:39.438: INFO: stderr: ""
Jan 30 08:43:39.439: INFO: stdout: "true"
Jan 30 08:43:39.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods update-demo-nautilus-bj4dm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:43:39.525: INFO: stderr: ""
Jan 30 08:43:39.525: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:43:39.525: INFO: validating pod update-demo-nautilus-bj4dm
Jan 30 08:43:39.534: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:43:39.534: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:43:39.534: INFO: update-demo-nautilus-bj4dm is verified up and running
STEP: using delete to clean up resources
Jan 30 08:43:39.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 delete --grace-period=0 --force -f -'
Jan 30 08:43:39.619: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:43:39.620: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 30 08:43:39.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get rc,svc -l name=update-demo --no-headers'
Jan 30 08:43:39.721: INFO: stderr: "No resources found in kubectl-9916 namespace.\n"
Jan 30 08:43:39.721: INFO: stdout: ""
Jan 30 08:43:39.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-9916 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 08:43:39.806: INFO: stderr: ""
Jan 30 08:43:39.806: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:43:39.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9916" for this suite.

• [SLOW TEST:19.612 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":194,"skipped":3726,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:43:39.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-4773/secret-test-d3c5f863-3474-4fab-81cd-45e37fba4957
STEP: Creating a pod to test consume secrets
Jan 30 08:43:39.881: INFO: Waiting up to 5m0s for pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207" in namespace "secrets-4773" to be "Succeeded or Failed"
Jan 30 08:43:39.886: INFO: Pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207": Phase="Pending", Reason="", readiness=false. Elapsed: 5.176842ms
Jan 30 08:43:41.904: INFO: Pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023549701s
Jan 30 08:43:43.913: INFO: Pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032069032s
Jan 30 08:43:45.932: INFO: Pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.051654924s
STEP: Saw pod success
Jan 30 08:43:45.932: INFO: Pod "pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207" satisfied condition "Succeeded or Failed"
Jan 30 08:43:45.938: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207 container env-test: <nil>
STEP: delete the pod
Jan 30 08:43:45.970: INFO: Waiting for pod pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207 to disappear
Jan 30 08:43:45.977: INFO: Pod pod-configmaps-9450354b-a2a8-4b46-b0e2-71b684138207 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:43:45.977: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4773" for this suite.

• [SLOW TEST:6.167 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3750,"failed":0}
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:43:45.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:43:46.329: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
Jan 30 08:43:48.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 43, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 43, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 43, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 43, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-656754656d\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:43:51.396: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:43:51.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:43:54.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6306" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:8.751 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":196,"skipped":3753,"failed":0}
SSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:43:54.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename events
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Jan 30 08:43:54.809: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 30 08:43:54.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-5563" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":197,"skipped":3761,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:43:54.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 08:44:06.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8101" for this suite.

• [SLOW TEST:11.358 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":198,"skipped":3766,"failed":0}
SSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:06.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-5659/configmap-test-77cadd03-5185-4838-8135-61a205e0cb20
STEP: Creating a pod to test consume configMaps
Jan 30 08:44:06.317: INFO: Waiting up to 5m0s for pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b" in namespace "configmap-5659" to be "Succeeded or Failed"
Jan 30 08:44:06.324: INFO: Pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.778798ms
Jan 30 08:44:08.332: INFO: Pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014498542s
Jan 30 08:44:10.341: INFO: Pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024173243s
Jan 30 08:44:12.361: INFO: Pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043772822s
STEP: Saw pod success
Jan 30 08:44:12.361: INFO: Pod "pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b" satisfied condition "Succeeded or Failed"
Jan 30 08:44:12.367: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b container env-test: <nil>
STEP: delete the pod
Jan 30 08:44:12.399: INFO: Waiting for pod pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b to disappear
Jan 30 08:44:12.404: INFO: Pod pod-configmaps-db199897-dc80-44a7-8ddb-8ff5e41cb25b no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:44:12.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5659" for this suite.

• [SLOW TEST:6.163 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":3772,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:12.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:44:12.947: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Jan 30 08:44:14.969: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 44, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 44, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 44, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 44, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:44:18.016: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:44:30.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5984" for this suite.
STEP: Destroying namespace "webhook-5984-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:17.899 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":200,"skipped":3777,"failed":0}
SSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:30.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename endpointslice
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 30 08:44:30.379: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 30 08:44:30.388: INFO: starting watch
STEP: patching
STEP: updating
Jan 30 08:44:30.408: INFO: waiting for watch events with expected annotations
Jan 30 08:44:30.408: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 30 08:44:30.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9587" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":201,"skipped":3783,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:30.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 30 08:44:30.509: INFO: The status of Pod pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:44:32.527: INFO: The status of Pod pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:44:34.516: INFO: The status of Pod pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 30 08:44:35.053: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7"
Jan 30 08:44:35.053: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7" in namespace "pods-7038" to be "terminated due to deadline exceeded"
Jan 30 08:44:35.058: INFO: Pod "pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7": Phase="Running", Reason="", readiness=true. Elapsed: 5.032852ms
Jan 30 08:44:37.075: INFO: Pod "pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 2.022190418s
Jan 30 08:44:37.075: INFO: Pod "pod-update-activedeadlineseconds-d2769b1a-fecb-49c6-b43b-49005b33a2b7" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 08:44:37.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7038" for this suite.

• [SLOW TEST:6.637 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":202,"skipped":3815,"failed":0}
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:37.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename init-container
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 30 08:44:37.132: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 08:44:42.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-7979" for this suite.

• [SLOW TEST:5.701 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":203,"skipped":3822,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:44:42.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Jan 30 08:44:42.830: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:44:49.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:45:10.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7797" for this suite.

• [SLOW TEST:27.338 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":204,"skipped":3822,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:45:10.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-runtime
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 30 08:45:15.233: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 30 08:45:15.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-4955" for this suite.

• [SLOW TEST:5.142 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    on terminated container
    test/e2e/common/node/runtime.go:136
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":205,"skipped":3835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:45:15.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Jan 30 08:47:15.853: INFO: Successfully updated pod "var-expansion-2e4b10ee-29cb-4c4a-8437-d5275018e262"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Jan 30 08:47:17.870: INFO: Deleting pod "var-expansion-2e4b10ee-29cb-4c4a-8437-d5275018e262" in namespace "var-expansion-6548"
Jan 30 08:47:17.884: INFO: Wait up to 5m0s for pod "var-expansion-2e4b10ee-29cb-4c4a-8437-d5275018e262" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 08:47:49.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6548" for this suite.

• [SLOW TEST:154.637 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":206,"skipped":3907,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:47:49.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename containers
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Jan 30 08:47:49.969: INFO: Waiting up to 5m0s for pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52" in namespace "containers-1771" to be "Succeeded or Failed"
Jan 30 08:47:49.975: INFO: Pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52": Phase="Pending", Reason="", readiness=false. Elapsed: 5.298971ms
Jan 30 08:47:51.984: INFO: Pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014438716s
Jan 30 08:47:53.993: INFO: Pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023302653s
Jan 30 08:47:56.001: INFO: Pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.032026637s
STEP: Saw pod success
Jan 30 08:47:56.002: INFO: Pod "client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52" satisfied condition "Succeeded or Failed"
Jan 30 08:47:56.007: INFO: Trying to get logs from node conoa-prod01-wk003 pod client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:47:56.035: INFO: Waiting for pod client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52 to disappear
Jan 30 08:47:56.040: INFO: Pod client-containers-f91ed090-4ae0-4a13-95e1-4c64ac6e7a52 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jan 30 08:47:56.040: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-1771" for this suite.

• [SLOW TEST:6.142 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":207,"skipped":3915,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:47:56.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Jan 30 08:48:00.124: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8773 PodName:pod-sharedvolume-015ffcb7-0804-40cf-8037-dbbace3e53ce ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:48:00.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:48:00.125: INFO: ExecWithOptions: Clientset creation
Jan 30 08:48:00.125: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-8773/pods/pod-sharedvolume-015ffcb7-0804-40cf-8037-dbbace3e53ce/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jan 30 08:48:00.254: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 08:48:00.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8773" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":208,"skipped":3916,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:48:00.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:48:00.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 30 08:48:05.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 create -f -'
Jan 30 08:48:06.862: INFO: stderr: ""
Jan 30 08:48:06.862: INFO: stdout: "e2e-test-crd-publish-openapi-5100-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 30 08:48:06.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 delete e2e-test-crd-publish-openapi-5100-crds test-cr'
Jan 30 08:48:06.994: INFO: stderr: ""
Jan 30 08:48:06.994: INFO: stdout: "e2e-test-crd-publish-openapi-5100-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jan 30 08:48:06.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 apply -f -'
Jan 30 08:48:07.853: INFO: stderr: ""
Jan 30 08:48:07.853: INFO: stdout: "e2e-test-crd-publish-openapi-5100-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 30 08:48:07.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 delete e2e-test-crd-publish-openapi-5100-crds test-cr'
Jan 30 08:48:07.949: INFO: stderr: ""
Jan 30 08:48:07.949: INFO: stdout: "e2e-test-crd-publish-openapi-5100-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 30 08:48:07.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-5100-crds'
Jan 30 08:48:08.186: INFO: stderr: ""
Jan 30 08:48:08.186: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5100-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:48:13.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6001" for this suite.

• [SLOW TEST:13.468 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":209,"skipped":3928,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:48:13.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-bfb84b3b-5176-4c88-bc8c-9396b54a6201
STEP: Creating a pod to test consume secrets
Jan 30 08:48:13.789: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63" in namespace "projected-4937" to be "Succeeded or Failed"
Jan 30 08:48:13.793: INFO: Pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014317ms
Jan 30 08:48:15.807: INFO: Pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01806346s
Jan 30 08:48:17.819: INFO: Pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030229976s
Jan 30 08:48:19.832: INFO: Pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043446307s
STEP: Saw pod success
Jan 30 08:48:19.833: INFO: Pod "pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63" satisfied condition "Succeeded or Failed"
Jan 30 08:48:19.837: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:48:19.861: INFO: Waiting for pod pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63 to disappear
Jan 30 08:48:19.865: INFO: Pod pod-projected-secrets-2985816c-71ac-488a-a3d1-5ff0d4defe63 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jan 30 08:48:19.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4937" for this suite.

• [SLOW TEST:6.134 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":3930,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:48:19.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename cronjob
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 30 08:50:01.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1510" for this suite.

• [SLOW TEST:102.074 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":211,"skipped":3943,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:01.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Jan 30 08:50:01.994: INFO: Found Service test-service-r7kgc in namespace services-5038 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jan 30 08:50:01.994: INFO: Service test-service-r7kgc created
STEP: Getting /status
Jan 30 08:50:02.000: INFO: Service test-service-r7kgc has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Jan 30 08:50:02.008: INFO: observed Service test-service-r7kgc in namespace services-5038 with annotations: map[] & LoadBalancer: {[]}
Jan 30 08:50:02.008: INFO: Found Service test-service-r7kgc in namespace services-5038 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jan 30 08:50:02.008: INFO: Service test-service-r7kgc has service status patched
STEP: updating the ServiceStatus
Jan 30 08:50:02.019: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Jan 30 08:50:02.021: INFO: Observed Service test-service-r7kgc in namespace services-5038 with annotations: map[] & Conditions: {[]}
Jan 30 08:50:02.021: INFO: Observed event: &Service{ObjectMeta:{test-service-r7kgc  services-5038  6970fe43-3b44-4e57-9bf7-6ceaec7d745a 37380751 0 2023-01-30 08:50:01 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2023-01-30 08:50:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-01-30 08:50:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.105.140.226,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.105.140.226],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jan 30 08:50:02.022: INFO: Found Service test-service-r7kgc in namespace services-5038 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 08:50:02.022: INFO: Service test-service-r7kgc has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Jan 30 08:50:02.032: INFO: observed Service test-service-r7kgc in namespace services-5038 with labels: map[test-service-static:true]
Jan 30 08:50:02.032: INFO: observed Service test-service-r7kgc in namespace services-5038 with labels: map[test-service-static:true]
Jan 30 08:50:02.032: INFO: observed Service test-service-r7kgc in namespace services-5038 with labels: map[test-service-static:true]
Jan 30 08:50:02.032: INFO: Found Service test-service-r7kgc in namespace services-5038 with labels: map[test-service:patched test-service-static:true]
Jan 30 08:50:02.033: INFO: Service test-service-r7kgc patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Jan 30 08:50:02.053: INFO: Observed event: ADDED
Jan 30 08:50:02.053: INFO: Observed event: MODIFIED
Jan 30 08:50:02.053: INFO: Observed event: MODIFIED
Jan 30 08:50:02.054: INFO: Observed event: MODIFIED
Jan 30 08:50:02.054: INFO: Found Service test-service-r7kgc in namespace services-5038 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jan 30 08:50:02.054: INFO: Service test-service-r7kgc deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:50:02.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5038" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":212,"skipped":3947,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:02.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename server-version
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Jan 30 08:50:02.089: INFO: Major version: 1
STEP: Confirm minor version
Jan 30 08:50:02.089: INFO: cleanMinorVersion: 24
Jan 30 08:50:02.089: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Jan 30 08:50:02.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-8280" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":213,"skipped":3964,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:02.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jan 30 08:50:02.130: INFO: namespace kubectl-3879
Jan 30 08:50:02.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3879 create -f -'
Jan 30 08:50:03.060: INFO: stderr: ""
Jan 30 08:50:03.060: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jan 30 08:50:04.072: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:50:04.073: INFO: Found 0 / 1
Jan 30 08:50:05.074: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:50:05.074: INFO: Found 0 / 1
Jan 30 08:50:06.080: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:50:06.080: INFO: Found 1 / 1
Jan 30 08:50:06.080: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 30 08:50:06.089: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:50:06.089: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 08:50:06.089: INFO: wait on agnhost-primary startup in kubectl-3879 
Jan 30 08:50:06.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3879 logs agnhost-primary-zm6x6 agnhost-primary'
Jan 30 08:50:06.201: INFO: stderr: ""
Jan 30 08:50:06.201: INFO: stdout: "Paused\n"
STEP: exposing RC
Jan 30 08:50:06.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3879 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jan 30 08:50:06.330: INFO: stderr: ""
Jan 30 08:50:06.330: INFO: stdout: "service/rm2 exposed\n"
Jan 30 08:50:06.336: INFO: Service rm2 in namespace kubectl-3879 found.
STEP: exposing service
Jan 30 08:50:08.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3879 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jan 30 08:50:08.478: INFO: stderr: ""
Jan 30 08:50:08.478: INFO: stdout: "service/rm3 exposed\n"
Jan 30 08:50:08.485: INFO: Service rm3 in namespace kubectl-3879 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:50:10.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3879" for this suite.

• [SLOW TEST:8.418 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":214,"skipped":3996,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:10.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:50:10.863: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:50:12.884: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 50, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 50, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 50, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 50, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:50:15.921: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:50:15.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4149-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:50:19.015: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5316" for this suite.
STEP: Destroying namespace "webhook-5316-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:8.553 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":215,"skipped":4026,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:19.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Jan 30 08:50:19.100: INFO: Waiting up to 5m0s for pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12" in namespace "svcaccounts-2523" to be "Succeeded or Failed"
Jan 30 08:50:19.103: INFO: Pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12": Phase="Pending", Reason="", readiness=false. Elapsed: 3.113253ms
Jan 30 08:50:21.109: INFO: Pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008431681s
Jan 30 08:50:23.116: INFO: Pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12": Phase="Pending", Reason="", readiness=false. Elapsed: 4.016066078s
Jan 30 08:50:25.123: INFO: Pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022377359s
STEP: Saw pod success
Jan 30 08:50:25.123: INFO: Pod "test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12" satisfied condition "Succeeded or Failed"
Jan 30 08:50:25.128: INFO: Trying to get logs from node conoa-prod01-wk003 pod test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:50:25.153: INFO: Waiting for pod test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12 to disappear
Jan 30 08:50:25.157: INFO: Pod test-pod-6a7dbfad-acb6-450e-a0e8-b407a89aca12 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 08:50:25.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2523" for this suite.

• [SLOW TEST:6.093 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":216,"skipped":4038,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:50:25.169: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-35de023f-4d7d-471e-a6b2-4f36e3413ac0
STEP: Creating configMap with name cm-test-opt-upd-6d48e965-d43e-42e3-a13d-c2a8dce8c73c
STEP: Creating the pod
Jan 30 08:50:25.226: INFO: The status of Pod pod-configmaps-230cf219-1209-4376-8792-3708a227b1ad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:50:27.241: INFO: The status of Pod pod-configmaps-230cf219-1209-4376-8792-3708a227b1ad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:50:29.234: INFO: The status of Pod pod-configmaps-230cf219-1209-4376-8792-3708a227b1ad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:50:31.242: INFO: The status of Pod pod-configmaps-230cf219-1209-4376-8792-3708a227b1ad is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-35de023f-4d7d-471e-a6b2-4f36e3413ac0
STEP: Updating configmap cm-test-opt-upd-6d48e965-d43e-42e3-a13d-c2a8dce8c73c
STEP: Creating configMap with name cm-test-opt-create-24a9d7fe-1994-43ae-9f21-6db8afd449e9
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 08:51:59.859: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2199" for this suite.

• [SLOW TEST:94.710 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":217,"skipped":4041,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:51:59.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:51:59.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:52:00.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-789" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":218,"skipped":4046,"failed":0}
S
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:52:00.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svc-latency
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:52:00.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: creating replication controller svc-latency-rc in namespace svc-latency-8256
I0130 08:52:00.510024      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8256, replica count: 1
I0130 08:52:01.560901      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:52:02.561324      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:52:02.681: INFO: Created: latency-svc-xdrx9
Jan 30 08:52:02.690: INFO: Got endpoints: latency-svc-xdrx9 [29.497647ms]
Jan 30 08:52:02.709: INFO: Created: latency-svc-r4cx8
Jan 30 08:52:02.716: INFO: Got endpoints: latency-svc-r4cx8 [25.386653ms]
Jan 30 08:52:02.720: INFO: Created: latency-svc-89k7r
Jan 30 08:52:02.726: INFO: Got endpoints: latency-svc-89k7r [35.094215ms]
Jan 30 08:52:02.730: INFO: Created: latency-svc-jzfks
Jan 30 08:52:02.737: INFO: Got endpoints: latency-svc-jzfks [45.662323ms]
Jan 30 08:52:02.860: INFO: Created: latency-svc-jvj47
Jan 30 08:52:02.862: INFO: Created: latency-svc-nzhb8
Jan 30 08:52:02.864: INFO: Created: latency-svc-tz6bk
Jan 30 08:52:02.865: INFO: Created: latency-svc-55fsb
Jan 30 08:52:02.865: INFO: Created: latency-svc-h4gjx
Jan 30 08:52:02.865: INFO: Created: latency-svc-vjt9x
Jan 30 08:52:02.866: INFO: Created: latency-svc-92hlt
Jan 30 08:52:02.866: INFO: Created: latency-svc-s8rg4
Jan 30 08:52:02.867: INFO: Created: latency-svc-mcvpk
Jan 30 08:52:02.868: INFO: Created: latency-svc-zz62c
Jan 30 08:52:02.868: INFO: Created: latency-svc-bwbp6
Jan 30 08:52:02.868: INFO: Created: latency-svc-2lt4p
Jan 30 08:52:02.868: INFO: Created: latency-svc-5wnmn
Jan 30 08:52:02.868: INFO: Created: latency-svc-dpzzx
Jan 30 08:52:02.868: INFO: Created: latency-svc-zxmqk
Jan 30 08:52:02.869: INFO: Got endpoints: latency-svc-nzhb8 [177.874616ms]
Jan 30 08:52:02.871: INFO: Got endpoints: latency-svc-vjt9x [179.818511ms]
Jan 30 08:52:02.872: INFO: Got endpoints: latency-svc-2lt4p [180.898534ms]
Jan 30 08:52:02.873: INFO: Got endpoints: latency-svc-92hlt [181.828795ms]
Jan 30 08:52:02.873: INFO: Got endpoints: latency-svc-jvj47 [182.539337ms]
Jan 30 08:52:02.875: INFO: Got endpoints: latency-svc-s8rg4 [184.232228ms]
Jan 30 08:52:02.875: INFO: Got endpoints: latency-svc-tz6bk [184.357028ms]
Jan 30 08:52:02.878: INFO: Got endpoints: latency-svc-zxmqk [186.746231ms]
Jan 30 08:52:02.880: INFO: Got endpoints: latency-svc-bwbp6 [153.701133ms]
Jan 30 08:52:02.883: INFO: Got endpoints: latency-svc-h4gjx [192.405885ms]
Jan 30 08:52:02.883: INFO: Created: latency-svc-gqxbv
Jan 30 08:52:02.884: INFO: Got endpoints: latency-svc-dpzzx [167.467457ms]
Jan 30 08:52:02.884: INFO: Got endpoints: latency-svc-5wnmn [192.72417ms]
Jan 30 08:52:02.884: INFO: Got endpoints: latency-svc-mcvpk [192.616676ms]
Jan 30 08:52:02.884: INFO: Got endpoints: latency-svc-55fsb [193.346135ms]
Jan 30 08:52:02.887: INFO: Got endpoints: latency-svc-gqxbv [18.154201ms]
Jan 30 08:52:02.887: INFO: Got endpoints: latency-svc-zz62c [150.711231ms]
Jan 30 08:52:02.897: INFO: Created: latency-svc-dbms7
Jan 30 08:52:02.902: INFO: Got endpoints: latency-svc-dbms7 [30.767895ms]
Jan 30 08:52:02.904: INFO: Created: latency-svc-jfc52
Jan 30 08:52:02.909: INFO: Got endpoints: latency-svc-jfc52 [37.140709ms]
Jan 30 08:52:02.911: INFO: Created: latency-svc-mwq77
Jan 30 08:52:02.914: INFO: Got endpoints: latency-svc-mwq77 [41.414107ms]
Jan 30 08:52:02.918: INFO: Created: latency-svc-62gtf
Jan 30 08:52:02.922: INFO: Got endpoints: latency-svc-62gtf [49.008166ms]
Jan 30 08:52:02.925: INFO: Created: latency-svc-5mkl6
Jan 30 08:52:02.928: INFO: Got endpoints: latency-svc-5mkl6 [52.800588ms]
Jan 30 08:52:02.936: INFO: Created: latency-svc-48qml
Jan 30 08:52:02.940: INFO: Got endpoints: latency-svc-48qml [64.605297ms]
Jan 30 08:52:02.944: INFO: Created: latency-svc-hsxvg
Jan 30 08:52:02.949: INFO: Got endpoints: latency-svc-hsxvg [71.2697ms]
Jan 30 08:52:02.952: INFO: Created: latency-svc-dsxr5
Jan 30 08:52:02.954: INFO: Got endpoints: latency-svc-dsxr5 [74.530946ms]
Jan 30 08:52:02.958: INFO: Created: latency-svc-c4pts
Jan 30 08:52:02.962: INFO: Got endpoints: latency-svc-c4pts [79.279023ms]
Jan 30 08:52:02.966: INFO: Created: latency-svc-vs6vq
Jan 30 08:52:02.972: INFO: Got endpoints: latency-svc-vs6vq [88.331465ms]
Jan 30 08:52:02.974: INFO: Created: latency-svc-4x7pk
Jan 30 08:52:02.976: INFO: Got endpoints: latency-svc-4x7pk [91.891221ms]
Jan 30 08:52:02.981: INFO: Created: latency-svc-9wcgm
Jan 30 08:52:02.983: INFO: Got endpoints: latency-svc-9wcgm [99.752496ms]
Jan 30 08:52:02.988: INFO: Created: latency-svc-8cbrn
Jan 30 08:52:02.994: INFO: Got endpoints: latency-svc-8cbrn [110.000625ms]
Jan 30 08:52:02.996: INFO: Created: latency-svc-ztgvb
Jan 30 08:52:03.007: INFO: Got endpoints: latency-svc-ztgvb [119.446456ms]
Jan 30 08:52:03.009: INFO: Created: latency-svc-pnfjw
Jan 30 08:52:03.021: INFO: Got endpoints: latency-svc-pnfjw [133.368055ms]
Jan 30 08:52:03.023: INFO: Created: latency-svc-kcnc6
Jan 30 08:52:03.027: INFO: Got endpoints: latency-svc-kcnc6 [125.328846ms]
Jan 30 08:52:03.032: INFO: Created: latency-svc-2k6n7
Jan 30 08:52:03.037: INFO: Got endpoints: latency-svc-2k6n7 [127.504137ms]
Jan 30 08:52:03.041: INFO: Created: latency-svc-ldzmx
Jan 30 08:52:03.049: INFO: Created: latency-svc-z4gbn
Jan 30 08:52:03.055: INFO: Created: latency-svc-m65dl
Jan 30 08:52:03.063: INFO: Created: latency-svc-xbznp
Jan 30 08:52:03.070: INFO: Created: latency-svc-gff7d
Jan 30 08:52:03.078: INFO: Created: latency-svc-hgl5z
Jan 30 08:52:03.085: INFO: Got endpoints: latency-svc-ldzmx [171.145861ms]
Jan 30 08:52:03.086: INFO: Created: latency-svc-plxpp
Jan 30 08:52:03.094: INFO: Created: latency-svc-pf5vw
Jan 30 08:52:03.103: INFO: Created: latency-svc-gv247
Jan 30 08:52:03.115: INFO: Created: latency-svc-z89kk
Jan 30 08:52:03.125: INFO: Created: latency-svc-87cbq
Jan 30 08:52:03.133: INFO: Created: latency-svc-zt5cf
Jan 30 08:52:03.139: INFO: Got endpoints: latency-svc-z4gbn [217.10544ms]
Jan 30 08:52:03.141: INFO: Created: latency-svc-6z4x8
Jan 30 08:52:03.149: INFO: Created: latency-svc-s5qrk
Jan 30 08:52:03.155: INFO: Created: latency-svc-xj98n
Jan 30 08:52:03.162: INFO: Created: latency-svc-w4wnn
Jan 30 08:52:03.168: INFO: Created: latency-svc-b574k
Jan 30 08:52:03.187: INFO: Got endpoints: latency-svc-m65dl [258.697049ms]
Jan 30 08:52:03.200: INFO: Created: latency-svc-8rchz
Jan 30 08:52:03.238: INFO: Got endpoints: latency-svc-xbznp [297.4595ms]
Jan 30 08:52:03.253: INFO: Created: latency-svc-msgj9
Jan 30 08:52:03.288: INFO: Got endpoints: latency-svc-gff7d [339.041272ms]
Jan 30 08:52:03.303: INFO: Created: latency-svc-w48c2
Jan 30 08:52:03.339: INFO: Got endpoints: latency-svc-hgl5z [384.716472ms]
Jan 30 08:52:03.358: INFO: Created: latency-svc-rfmqk
Jan 30 08:52:03.386: INFO: Got endpoints: latency-svc-plxpp [423.991314ms]
Jan 30 08:52:03.401: INFO: Created: latency-svc-ssttb
Jan 30 08:52:03.440: INFO: Got endpoints: latency-svc-pf5vw [468.094142ms]
Jan 30 08:52:03.456: INFO: Created: latency-svc-dfvgm
Jan 30 08:52:03.488: INFO: Got endpoints: latency-svc-gv247 [512.347652ms]
Jan 30 08:52:03.511: INFO: Created: latency-svc-7xxnh
Jan 30 08:52:03.538: INFO: Got endpoints: latency-svc-z89kk [554.495787ms]
Jan 30 08:52:03.553: INFO: Created: latency-svc-f9nfs
Jan 30 08:52:03.588: INFO: Got endpoints: latency-svc-87cbq [593.696087ms]
Jan 30 08:52:03.605: INFO: Created: latency-svc-k58gx
Jan 30 08:52:03.641: INFO: Got endpoints: latency-svc-zt5cf [634.339126ms]
Jan 30 08:52:03.658: INFO: Created: latency-svc-7bsmn
Jan 30 08:52:03.688: INFO: Got endpoints: latency-svc-6z4x8 [666.819239ms]
Jan 30 08:52:03.704: INFO: Created: latency-svc-cndc6
Jan 30 08:52:03.738: INFO: Got endpoints: latency-svc-s5qrk [710.459982ms]
Jan 30 08:52:03.757: INFO: Created: latency-svc-dgx4j
Jan 30 08:52:03.789: INFO: Got endpoints: latency-svc-xj98n [751.910581ms]
Jan 30 08:52:03.806: INFO: Created: latency-svc-xhgcr
Jan 30 08:52:03.838: INFO: Got endpoints: latency-svc-w4wnn [753.093549ms]
Jan 30 08:52:03.858: INFO: Created: latency-svc-mcmtz
Jan 30 08:52:03.888: INFO: Got endpoints: latency-svc-b574k [748.956176ms]
Jan 30 08:52:03.907: INFO: Created: latency-svc-nmlzq
Jan 30 08:52:03.939: INFO: Got endpoints: latency-svc-8rchz [752.050624ms]
Jan 30 08:52:03.958: INFO: Created: latency-svc-tbljs
Jan 30 08:52:03.989: INFO: Got endpoints: latency-svc-msgj9 [751.816044ms]
Jan 30 08:52:04.010: INFO: Created: latency-svc-rkbzh
Jan 30 08:52:04.039: INFO: Got endpoints: latency-svc-w48c2 [750.539884ms]
Jan 30 08:52:04.058: INFO: Created: latency-svc-tkshb
Jan 30 08:52:04.088: INFO: Got endpoints: latency-svc-rfmqk [748.596871ms]
Jan 30 08:52:04.104: INFO: Created: latency-svc-w5xdv
Jan 30 08:52:04.138: INFO: Got endpoints: latency-svc-ssttb [751.163007ms]
Jan 30 08:52:04.153: INFO: Created: latency-svc-llkcb
Jan 30 08:52:04.189: INFO: Got endpoints: latency-svc-dfvgm [749.266844ms]
Jan 30 08:52:04.206: INFO: Created: latency-svc-ggwnx
Jan 30 08:52:04.239: INFO: Got endpoints: latency-svc-7xxnh [750.49449ms]
Jan 30 08:52:04.254: INFO: Created: latency-svc-mqwfp
Jan 30 08:52:04.287: INFO: Got endpoints: latency-svc-f9nfs [749.374088ms]
Jan 30 08:52:04.304: INFO: Created: latency-svc-z7cxp
Jan 30 08:52:04.339: INFO: Got endpoints: latency-svc-k58gx [750.961329ms]
Jan 30 08:52:04.355: INFO: Created: latency-svc-ng7mg
Jan 30 08:52:04.388: INFO: Got endpoints: latency-svc-7bsmn [746.753817ms]
Jan 30 08:52:04.405: INFO: Created: latency-svc-8zhfd
Jan 30 08:52:04.438: INFO: Got endpoints: latency-svc-cndc6 [749.876956ms]
Jan 30 08:52:04.454: INFO: Created: latency-svc-gnppm
Jan 30 08:52:04.489: INFO: Got endpoints: latency-svc-dgx4j [750.964935ms]
Jan 30 08:52:04.505: INFO: Created: latency-svc-6brc4
Jan 30 08:52:04.538: INFO: Got endpoints: latency-svc-xhgcr [749.34288ms]
Jan 30 08:52:04.558: INFO: Created: latency-svc-72w8p
Jan 30 08:52:04.590: INFO: Got endpoints: latency-svc-mcmtz [750.70706ms]
Jan 30 08:52:04.609: INFO: Created: latency-svc-bvcvw
Jan 30 08:52:04.637: INFO: Got endpoints: latency-svc-nmlzq [748.648045ms]
Jan 30 08:52:04.654: INFO: Created: latency-svc-dh8zc
Jan 30 08:52:04.690: INFO: Got endpoints: latency-svc-tbljs [751.347542ms]
Jan 30 08:52:04.710: INFO: Created: latency-svc-v55kj
Jan 30 08:52:04.738: INFO: Got endpoints: latency-svc-rkbzh [748.948107ms]
Jan 30 08:52:04.770: INFO: Created: latency-svc-vx8vl
Jan 30 08:52:04.788: INFO: Got endpoints: latency-svc-tkshb [749.402652ms]
Jan 30 08:52:04.803: INFO: Created: latency-svc-bn8kt
Jan 30 08:52:04.838: INFO: Got endpoints: latency-svc-w5xdv [749.635142ms]
Jan 30 08:52:04.855: INFO: Created: latency-svc-8bngx
Jan 30 08:52:04.888: INFO: Got endpoints: latency-svc-llkcb [750.552392ms]
Jan 30 08:52:04.906: INFO: Created: latency-svc-sxmcg
Jan 30 08:52:04.937: INFO: Got endpoints: latency-svc-ggwnx [747.872897ms]
Jan 30 08:52:04.951: INFO: Created: latency-svc-hnmh8
Jan 30 08:52:04.989: INFO: Got endpoints: latency-svc-mqwfp [750.342014ms]
Jan 30 08:52:05.004: INFO: Created: latency-svc-qzg9w
Jan 30 08:52:05.036: INFO: Got endpoints: latency-svc-z7cxp [748.275595ms]
Jan 30 08:52:05.051: INFO: Created: latency-svc-kz2xb
Jan 30 08:52:05.088: INFO: Got endpoints: latency-svc-ng7mg [748.611898ms]
Jan 30 08:52:05.103: INFO: Created: latency-svc-xzr7j
Jan 30 08:52:05.136: INFO: Got endpoints: latency-svc-8zhfd [748.047265ms]
Jan 30 08:52:05.148: INFO: Created: latency-svc-76q5r
Jan 30 08:52:05.185: INFO: Got endpoints: latency-svc-gnppm [746.802196ms]
Jan 30 08:52:05.198: INFO: Created: latency-svc-kj5bc
Jan 30 08:52:05.241: INFO: Got endpoints: latency-svc-6brc4 [752.074143ms]
Jan 30 08:52:05.256: INFO: Created: latency-svc-25sc2
Jan 30 08:52:05.286: INFO: Got endpoints: latency-svc-72w8p [747.850973ms]
Jan 30 08:52:05.299: INFO: Created: latency-svc-gn59m
Jan 30 08:52:05.336: INFO: Got endpoints: latency-svc-bvcvw [746.1007ms]
Jan 30 08:52:05.350: INFO: Created: latency-svc-w4l72
Jan 30 08:52:05.389: INFO: Got endpoints: latency-svc-dh8zc [751.510523ms]
Jan 30 08:52:05.406: INFO: Created: latency-svc-v77fv
Jan 30 08:52:05.438: INFO: Got endpoints: latency-svc-v55kj [747.087746ms]
Jan 30 08:52:05.454: INFO: Created: latency-svc-w49x2
Jan 30 08:52:05.486: INFO: Got endpoints: latency-svc-vx8vl [747.820385ms]
Jan 30 08:52:05.503: INFO: Created: latency-svc-7cc4q
Jan 30 08:52:05.535: INFO: Got endpoints: latency-svc-bn8kt [746.381456ms]
Jan 30 08:52:05.549: INFO: Created: latency-svc-6llgb
Jan 30 08:52:05.586: INFO: Got endpoints: latency-svc-8bngx [747.611561ms]
Jan 30 08:52:05.598: INFO: Created: latency-svc-md84j
Jan 30 08:52:05.638: INFO: Got endpoints: latency-svc-sxmcg [749.749807ms]
Jan 30 08:52:05.656: INFO: Created: latency-svc-rcrgd
Jan 30 08:52:05.685: INFO: Got endpoints: latency-svc-hnmh8 [747.655179ms]
Jan 30 08:52:05.699: INFO: Created: latency-svc-kbjtj
Jan 30 08:52:05.738: INFO: Got endpoints: latency-svc-qzg9w [748.899798ms]
Jan 30 08:52:05.752: INFO: Created: latency-svc-8g4nk
Jan 30 08:52:05.787: INFO: Got endpoints: latency-svc-kz2xb [750.845847ms]
Jan 30 08:52:05.810: INFO: Created: latency-svc-fq4kk
Jan 30 08:52:05.836: INFO: Got endpoints: latency-svc-xzr7j [748.748619ms]
Jan 30 08:52:05.851: INFO: Created: latency-svc-vlwxl
Jan 30 08:52:05.886: INFO: Got endpoints: latency-svc-76q5r [750.141318ms]
Jan 30 08:52:05.903: INFO: Created: latency-svc-nd6dm
Jan 30 08:52:05.937: INFO: Got endpoints: latency-svc-kj5bc [752.467026ms]
Jan 30 08:52:05.956: INFO: Created: latency-svc-gxjgk
Jan 30 08:52:05.987: INFO: Got endpoints: latency-svc-25sc2 [746.268344ms]
Jan 30 08:52:06.004: INFO: Created: latency-svc-mzlf9
Jan 30 08:52:06.039: INFO: Got endpoints: latency-svc-gn59m [752.600207ms]
Jan 30 08:52:06.054: INFO: Created: latency-svc-d7rm2
Jan 30 08:52:06.088: INFO: Got endpoints: latency-svc-w4l72 [751.607992ms]
Jan 30 08:52:06.102: INFO: Created: latency-svc-l2fgm
Jan 30 08:52:06.140: INFO: Got endpoints: latency-svc-v77fv [751.297766ms]
Jan 30 08:52:06.155: INFO: Created: latency-svc-mtl9m
Jan 30 08:52:06.187: INFO: Got endpoints: latency-svc-w49x2 [749.135345ms]
Jan 30 08:52:06.203: INFO: Created: latency-svc-bhxcb
Jan 30 08:52:06.239: INFO: Got endpoints: latency-svc-7cc4q [752.801156ms]
Jan 30 08:52:06.256: INFO: Created: latency-svc-t6krt
Jan 30 08:52:06.288: INFO: Got endpoints: latency-svc-6llgb [752.842572ms]
Jan 30 08:52:06.301: INFO: Created: latency-svc-wgdlf
Jan 30 08:52:06.339: INFO: Got endpoints: latency-svc-md84j [752.929704ms]
Jan 30 08:52:06.353: INFO: Created: latency-svc-rplcn
Jan 30 08:52:06.391: INFO: Got endpoints: latency-svc-rcrgd [752.690312ms]
Jan 30 08:52:06.406: INFO: Created: latency-svc-mmqqj
Jan 30 08:52:06.439: INFO: Got endpoints: latency-svc-kbjtj [753.973174ms]
Jan 30 08:52:06.455: INFO: Created: latency-svc-njccw
Jan 30 08:52:06.488: INFO: Got endpoints: latency-svc-8g4nk [750.07742ms]
Jan 30 08:52:06.505: INFO: Created: latency-svc-sb4wf
Jan 30 08:52:06.541: INFO: Got endpoints: latency-svc-fq4kk [753.840148ms]
Jan 30 08:52:06.557: INFO: Created: latency-svc-d6kct
Jan 30 08:52:06.589: INFO: Got endpoints: latency-svc-vlwxl [752.150897ms]
Jan 30 08:52:06.604: INFO: Created: latency-svc-bf7qb
Jan 30 08:52:06.639: INFO: Got endpoints: latency-svc-nd6dm [752.734039ms]
Jan 30 08:52:06.656: INFO: Created: latency-svc-29q6t
Jan 30 08:52:06.687: INFO: Got endpoints: latency-svc-gxjgk [749.306347ms]
Jan 30 08:52:06.703: INFO: Created: latency-svc-p5c8l
Jan 30 08:52:06.738: INFO: Got endpoints: latency-svc-mzlf9 [751.003912ms]
Jan 30 08:52:06.754: INFO: Created: latency-svc-4rg6q
Jan 30 08:52:06.789: INFO: Got endpoints: latency-svc-d7rm2 [750.007866ms]
Jan 30 08:52:06.805: INFO: Created: latency-svc-hpvsq
Jan 30 08:52:06.838: INFO: Got endpoints: latency-svc-l2fgm [750.490421ms]
Jan 30 08:52:06.858: INFO: Created: latency-svc-w4php
Jan 30 08:52:06.887: INFO: Got endpoints: latency-svc-mtl9m [747.12311ms]
Jan 30 08:52:06.906: INFO: Created: latency-svc-qfq9r
Jan 30 08:52:06.939: INFO: Got endpoints: latency-svc-bhxcb [751.88272ms]
Jan 30 08:52:06.956: INFO: Created: latency-svc-6556p
Jan 30 08:52:06.987: INFO: Got endpoints: latency-svc-t6krt [747.908552ms]
Jan 30 08:52:07.005: INFO: Created: latency-svc-tb42d
Jan 30 08:52:07.037: INFO: Got endpoints: latency-svc-wgdlf [749.850956ms]
Jan 30 08:52:07.058: INFO: Created: latency-svc-mvvk6
Jan 30 08:52:07.088: INFO: Got endpoints: latency-svc-rplcn [749.114169ms]
Jan 30 08:52:07.105: INFO: Created: latency-svc-8dcp4
Jan 30 08:52:07.138: INFO: Got endpoints: latency-svc-mmqqj [746.77933ms]
Jan 30 08:52:07.163: INFO: Created: latency-svc-5np4n
Jan 30 08:52:07.188: INFO: Got endpoints: latency-svc-njccw [748.95447ms]
Jan 30 08:52:07.205: INFO: Created: latency-svc-bn7nz
Jan 30 08:52:07.238: INFO: Got endpoints: latency-svc-sb4wf [749.434716ms]
Jan 30 08:52:07.255: INFO: Created: latency-svc-t9rdv
Jan 30 08:52:07.287: INFO: Got endpoints: latency-svc-d6kct [746.574365ms]
Jan 30 08:52:07.301: INFO: Created: latency-svc-2rmnl
Jan 30 08:52:07.336: INFO: Got endpoints: latency-svc-bf7qb [747.677203ms]
Jan 30 08:52:07.351: INFO: Created: latency-svc-j8mg2
Jan 30 08:52:07.388: INFO: Got endpoints: latency-svc-29q6t [748.601017ms]
Jan 30 08:52:07.405: INFO: Created: latency-svc-9g5lm
Jan 30 08:52:07.439: INFO: Got endpoints: latency-svc-p5c8l [752.565602ms]
Jan 30 08:52:07.453: INFO: Created: latency-svc-gt9q2
Jan 30 08:52:07.486: INFO: Got endpoints: latency-svc-4rg6q [747.953263ms]
Jan 30 08:52:07.502: INFO: Created: latency-svc-kc2np
Jan 30 08:52:07.539: INFO: Got endpoints: latency-svc-hpvsq [750.32742ms]
Jan 30 08:52:07.559: INFO: Created: latency-svc-sxksh
Jan 30 08:52:07.588: INFO: Got endpoints: latency-svc-w4php [749.336983ms]
Jan 30 08:52:07.605: INFO: Created: latency-svc-wvbr9
Jan 30 08:52:07.638: INFO: Got endpoints: latency-svc-qfq9r [750.484337ms]
Jan 30 08:52:07.656: INFO: Created: latency-svc-mm77v
Jan 30 08:52:07.689: INFO: Got endpoints: latency-svc-6556p [749.705375ms]
Jan 30 08:52:07.706: INFO: Created: latency-svc-dswsv
Jan 30 08:52:07.740: INFO: Got endpoints: latency-svc-tb42d [752.442315ms]
Jan 30 08:52:07.756: INFO: Created: latency-svc-lnxl9
Jan 30 08:52:07.792: INFO: Got endpoints: latency-svc-mvvk6 [754.769917ms]
Jan 30 08:52:07.804: INFO: Created: latency-svc-7zn5w
Jan 30 08:52:07.838: INFO: Got endpoints: latency-svc-8dcp4 [749.867686ms]
Jan 30 08:52:07.855: INFO: Created: latency-svc-v86kl
Jan 30 08:52:07.888: INFO: Got endpoints: latency-svc-5np4n [749.85573ms]
Jan 30 08:52:07.905: INFO: Created: latency-svc-sjm47
Jan 30 08:52:07.939: INFO: Got endpoints: latency-svc-bn7nz [751.016215ms]
Jan 30 08:52:07.956: INFO: Created: latency-svc-5kkrb
Jan 30 08:52:07.987: INFO: Got endpoints: latency-svc-t9rdv [749.134711ms]
Jan 30 08:52:08.002: INFO: Created: latency-svc-swjml
Jan 30 08:52:08.038: INFO: Got endpoints: latency-svc-2rmnl [750.526119ms]
Jan 30 08:52:08.056: INFO: Created: latency-svc-xjckl
Jan 30 08:52:08.089: INFO: Got endpoints: latency-svc-j8mg2 [752.010233ms]
Jan 30 08:52:08.107: INFO: Created: latency-svc-dm2ch
Jan 30 08:52:08.136: INFO: Got endpoints: latency-svc-9g5lm [748.446868ms]
Jan 30 08:52:08.152: INFO: Created: latency-svc-5gvvv
Jan 30 08:52:08.189: INFO: Got endpoints: latency-svc-gt9q2 [749.653436ms]
Jan 30 08:52:08.209: INFO: Created: latency-svc-5n6ll
Jan 30 08:52:08.238: INFO: Got endpoints: latency-svc-kc2np [750.90972ms]
Jan 30 08:52:08.253: INFO: Created: latency-svc-vjbt2
Jan 30 08:52:08.288: INFO: Got endpoints: latency-svc-sxksh [748.799831ms]
Jan 30 08:52:08.305: INFO: Created: latency-svc-xhcr8
Jan 30 08:52:08.339: INFO: Got endpoints: latency-svc-wvbr9 [751.227093ms]
Jan 30 08:52:08.356: INFO: Created: latency-svc-28t68
Jan 30 08:52:08.389: INFO: Got endpoints: latency-svc-mm77v [750.999289ms]
Jan 30 08:52:08.408: INFO: Created: latency-svc-xfkk6
Jan 30 08:52:08.440: INFO: Got endpoints: latency-svc-dswsv [751.741403ms]
Jan 30 08:52:08.461: INFO: Created: latency-svc-84xzg
Jan 30 08:52:08.490: INFO: Got endpoints: latency-svc-lnxl9 [749.86227ms]
Jan 30 08:52:08.511: INFO: Created: latency-svc-dvcwf
Jan 30 08:52:08.539: INFO: Got endpoints: latency-svc-7zn5w [746.645888ms]
Jan 30 08:52:08.560: INFO: Created: latency-svc-c7npx
Jan 30 08:52:08.590: INFO: Got endpoints: latency-svc-v86kl [751.720141ms]
Jan 30 08:52:08.609: INFO: Created: latency-svc-64669
Jan 30 08:52:08.640: INFO: Got endpoints: latency-svc-sjm47 [752.424227ms]
Jan 30 08:52:08.665: INFO: Created: latency-svc-9c4vc
Jan 30 08:52:08.688: INFO: Got endpoints: latency-svc-5kkrb [748.710258ms]
Jan 30 08:52:08.705: INFO: Created: latency-svc-r5ch2
Jan 30 08:52:08.739: INFO: Got endpoints: latency-svc-swjml [751.8635ms]
Jan 30 08:52:08.756: INFO: Created: latency-svc-m67b6
Jan 30 08:52:08.787: INFO: Got endpoints: latency-svc-xjckl [749.636065ms]
Jan 30 08:52:08.805: INFO: Created: latency-svc-jxckk
Jan 30 08:52:08.839: INFO: Got endpoints: latency-svc-dm2ch [750.385454ms]
Jan 30 08:52:08.857: INFO: Created: latency-svc-jbkrs
Jan 30 08:52:08.886: INFO: Got endpoints: latency-svc-5gvvv [750.056205ms]
Jan 30 08:52:08.904: INFO: Created: latency-svc-gg5vp
Jan 30 08:52:08.938: INFO: Got endpoints: latency-svc-5n6ll [748.88622ms]
Jan 30 08:52:08.955: INFO: Created: latency-svc-h9vcv
Jan 30 08:52:08.989: INFO: Got endpoints: latency-svc-vjbt2 [751.559565ms]
Jan 30 08:52:09.007: INFO: Created: latency-svc-8zlgg
Jan 30 08:52:09.053: INFO: Got endpoints: latency-svc-xhcr8 [764.341005ms]
Jan 30 08:52:09.079: INFO: Created: latency-svc-kx6bn
Jan 30 08:52:09.087: INFO: Got endpoints: latency-svc-28t68 [747.837351ms]
Jan 30 08:52:09.098: INFO: Created: latency-svc-j56rt
Jan 30 08:52:09.138: INFO: Got endpoints: latency-svc-xfkk6 [748.71896ms]
Jan 30 08:52:09.154: INFO: Created: latency-svc-x8twh
Jan 30 08:52:09.190: INFO: Got endpoints: latency-svc-84xzg [749.410827ms]
Jan 30 08:52:09.205: INFO: Created: latency-svc-qrr4w
Jan 30 08:52:09.240: INFO: Got endpoints: latency-svc-dvcwf [750.089103ms]
Jan 30 08:52:09.259: INFO: Created: latency-svc-lzg6q
Jan 30 08:52:09.288: INFO: Got endpoints: latency-svc-c7npx [749.073415ms]
Jan 30 08:52:09.306: INFO: Created: latency-svc-tkw5p
Jan 30 08:52:09.338: INFO: Got endpoints: latency-svc-64669 [748.495165ms]
Jan 30 08:52:09.358: INFO: Created: latency-svc-c58t6
Jan 30 08:52:09.388: INFO: Got endpoints: latency-svc-9c4vc [747.542418ms]
Jan 30 08:52:09.406: INFO: Created: latency-svc-rp2lw
Jan 30 08:52:09.438: INFO: Got endpoints: latency-svc-r5ch2 [749.768964ms]
Jan 30 08:52:09.455: INFO: Created: latency-svc-qm8gx
Jan 30 08:52:09.490: INFO: Got endpoints: latency-svc-m67b6 [750.794195ms]
Jan 30 08:52:09.503: INFO: Created: latency-svc-sf89r
Jan 30 08:52:09.538: INFO: Got endpoints: latency-svc-jxckk [750.716891ms]
Jan 30 08:52:09.552: INFO: Created: latency-svc-mhwcz
Jan 30 08:52:09.587: INFO: Got endpoints: latency-svc-jbkrs [748.376542ms]
Jan 30 08:52:09.603: INFO: Created: latency-svc-dtxp2
Jan 30 08:52:09.638: INFO: Got endpoints: latency-svc-gg5vp [751.723124ms]
Jan 30 08:52:09.653: INFO: Created: latency-svc-q5rf2
Jan 30 08:52:09.688: INFO: Got endpoints: latency-svc-h9vcv [750.281014ms]
Jan 30 08:52:09.705: INFO: Created: latency-svc-vsv4q
Jan 30 08:52:09.738: INFO: Got endpoints: latency-svc-8zlgg [748.650456ms]
Jan 30 08:52:09.752: INFO: Created: latency-svc-xddjk
Jan 30 08:52:09.788: INFO: Got endpoints: latency-svc-kx6bn [735.717385ms]
Jan 30 08:52:09.803: INFO: Created: latency-svc-v5rpn
Jan 30 08:52:09.838: INFO: Got endpoints: latency-svc-j56rt [751.103276ms]
Jan 30 08:52:09.854: INFO: Created: latency-svc-4bt6m
Jan 30 08:52:09.888: INFO: Got endpoints: latency-svc-x8twh [749.934216ms]
Jan 30 08:52:09.902: INFO: Created: latency-svc-2dssb
Jan 30 08:52:09.937: INFO: Got endpoints: latency-svc-qrr4w [747.29145ms]
Jan 30 08:52:09.953: INFO: Created: latency-svc-dtp49
Jan 30 08:52:09.988: INFO: Got endpoints: latency-svc-lzg6q [747.845811ms]
Jan 30 08:52:10.002: INFO: Created: latency-svc-fhdzb
Jan 30 08:52:10.039: INFO: Got endpoints: latency-svc-tkw5p [750.502415ms]
Jan 30 08:52:10.055: INFO: Created: latency-svc-sltz6
Jan 30 08:52:10.088: INFO: Got endpoints: latency-svc-c58t6 [750.101822ms]
Jan 30 08:52:10.106: INFO: Created: latency-svc-cxjvd
Jan 30 08:52:10.139: INFO: Got endpoints: latency-svc-rp2lw [751.494626ms]
Jan 30 08:52:10.155: INFO: Created: latency-svc-cpkvn
Jan 30 08:52:10.187: INFO: Got endpoints: latency-svc-qm8gx [749.290912ms]
Jan 30 08:52:10.202: INFO: Created: latency-svc-pm8fh
Jan 30 08:52:10.239: INFO: Got endpoints: latency-svc-sf89r [749.546786ms]
Jan 30 08:52:10.255: INFO: Created: latency-svc-8thz5
Jan 30 08:52:10.299: INFO: Got endpoints: latency-svc-mhwcz [760.478881ms]
Jan 30 08:52:10.312: INFO: Created: latency-svc-fj2x4
Jan 30 08:52:10.339: INFO: Got endpoints: latency-svc-dtxp2 [751.336945ms]
Jan 30 08:52:10.358: INFO: Created: latency-svc-6qx5m
Jan 30 08:52:10.389: INFO: Got endpoints: latency-svc-q5rf2 [750.320912ms]
Jan 30 08:52:10.407: INFO: Created: latency-svc-zwdc5
Jan 30 08:52:10.439: INFO: Got endpoints: latency-svc-vsv4q [750.325126ms]
Jan 30 08:52:10.454: INFO: Created: latency-svc-kg8sb
Jan 30 08:52:10.488: INFO: Got endpoints: latency-svc-xddjk [749.795132ms]
Jan 30 08:52:10.504: INFO: Created: latency-svc-zp4xf
Jan 30 08:52:10.536: INFO: Got endpoints: latency-svc-v5rpn [747.118651ms]
Jan 30 08:52:10.585: INFO: Got endpoints: latency-svc-4bt6m [747.314522ms]
Jan 30 08:52:10.635: INFO: Got endpoints: latency-svc-2dssb [746.936604ms]
Jan 30 08:52:10.685: INFO: Got endpoints: latency-svc-dtp49 [747.815915ms]
Jan 30 08:52:10.738: INFO: Got endpoints: latency-svc-fhdzb [750.171606ms]
Jan 30 08:52:10.788: INFO: Got endpoints: latency-svc-sltz6 [748.686248ms]
Jan 30 08:52:10.838: INFO: Got endpoints: latency-svc-cxjvd [750.077586ms]
Jan 30 08:52:10.888: INFO: Got endpoints: latency-svc-cpkvn [748.874283ms]
Jan 30 08:52:10.941: INFO: Got endpoints: latency-svc-pm8fh [753.099352ms]
Jan 30 08:52:10.989: INFO: Got endpoints: latency-svc-8thz5 [749.641524ms]
Jan 30 08:52:11.040: INFO: Got endpoints: latency-svc-fj2x4 [741.153343ms]
Jan 30 08:52:11.090: INFO: Got endpoints: latency-svc-6qx5m [750.857386ms]
Jan 30 08:52:11.140: INFO: Got endpoints: latency-svc-zwdc5 [751.000492ms]
Jan 30 08:52:11.189: INFO: Got endpoints: latency-svc-kg8sb [750.625359ms]
Jan 30 08:52:11.239: INFO: Got endpoints: latency-svc-zp4xf [751.73461ms]
Jan 30 08:52:11.240: INFO: Latencies: [18.154201ms 25.386653ms 30.767895ms 35.094215ms 37.140709ms 41.414107ms 45.662323ms 49.008166ms 52.800588ms 64.605297ms 71.2697ms 74.530946ms 79.279023ms 88.331465ms 91.891221ms 99.752496ms 110.000625ms 119.446456ms 125.328846ms 127.504137ms 133.368055ms 150.711231ms 153.701133ms 167.467457ms 171.145861ms 177.874616ms 179.818511ms 180.898534ms 181.828795ms 182.539337ms 184.232228ms 184.357028ms 186.746231ms 192.405885ms 192.616676ms 192.72417ms 193.346135ms 217.10544ms 258.697049ms 297.4595ms 339.041272ms 384.716472ms 423.991314ms 468.094142ms 512.347652ms 554.495787ms 593.696087ms 634.339126ms 666.819239ms 710.459982ms 735.717385ms 741.153343ms 746.1007ms 746.268344ms 746.381456ms 746.574365ms 746.645888ms 746.753817ms 746.77933ms 746.802196ms 746.936604ms 747.087746ms 747.118651ms 747.12311ms 747.29145ms 747.314522ms 747.542418ms 747.611561ms 747.655179ms 747.677203ms 747.815915ms 747.820385ms 747.837351ms 747.845811ms 747.850973ms 747.872897ms 747.908552ms 747.953263ms 748.047265ms 748.275595ms 748.376542ms 748.446868ms 748.495165ms 748.596871ms 748.601017ms 748.611898ms 748.648045ms 748.650456ms 748.686248ms 748.710258ms 748.71896ms 748.748619ms 748.799831ms 748.874283ms 748.88622ms 748.899798ms 748.948107ms 748.95447ms 748.956176ms 749.073415ms 749.114169ms 749.134711ms 749.135345ms 749.266844ms 749.290912ms 749.306347ms 749.336983ms 749.34288ms 749.374088ms 749.402652ms 749.410827ms 749.434716ms 749.546786ms 749.635142ms 749.636065ms 749.641524ms 749.653436ms 749.705375ms 749.749807ms 749.768964ms 749.795132ms 749.850956ms 749.85573ms 749.86227ms 749.867686ms 749.876956ms 749.934216ms 750.007866ms 750.056205ms 750.07742ms 750.077586ms 750.089103ms 750.101822ms 750.141318ms 750.171606ms 750.281014ms 750.320912ms 750.325126ms 750.32742ms 750.342014ms 750.385454ms 750.484337ms 750.490421ms 750.49449ms 750.502415ms 750.526119ms 750.539884ms 750.552392ms 750.625359ms 750.70706ms 750.716891ms 750.794195ms 750.845847ms 750.857386ms 750.90972ms 750.961329ms 750.964935ms 750.999289ms 751.000492ms 751.003912ms 751.016215ms 751.103276ms 751.163007ms 751.227093ms 751.297766ms 751.336945ms 751.347542ms 751.494626ms 751.510523ms 751.559565ms 751.607992ms 751.720141ms 751.723124ms 751.73461ms 751.741403ms 751.816044ms 751.8635ms 751.88272ms 751.910581ms 752.010233ms 752.050624ms 752.074143ms 752.150897ms 752.424227ms 752.442315ms 752.467026ms 752.565602ms 752.600207ms 752.690312ms 752.734039ms 752.801156ms 752.842572ms 752.929704ms 753.093549ms 753.099352ms 753.840148ms 753.973174ms 754.769917ms 760.478881ms 764.341005ms]
Jan 30 08:52:11.240: INFO: 50 %ile: 749.114169ms
Jan 30 08:52:11.240: INFO: 90 %ile: 752.050624ms
Jan 30 08:52:11.240: INFO: 99 %ile: 760.478881ms
Jan 30 08:52:11.240: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Jan 30 08:52:11.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-8256" for this suite.

• [SLOW TEST:10.786 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":219,"skipped":4047,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:52:11.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Jan 30 08:52:11.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Jan 30 08:52:31.308: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:52:36.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:52:57.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8958" for this suite.

• [SLOW TEST:45.956 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":220,"skipped":4059,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:52:57.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 30 08:52:59.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9646" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":221,"skipped":4104,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:00.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename svcaccounts
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:53:00.146: INFO: created pod pod-service-account-defaultsa
Jan 30 08:53:00.146: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jan 30 08:53:00.156: INFO: created pod pod-service-account-mountsa
Jan 30 08:53:00.156: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jan 30 08:53:00.163: INFO: created pod pod-service-account-nomountsa
Jan 30 08:53:00.163: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jan 30 08:53:00.171: INFO: created pod pod-service-account-defaultsa-mountspec
Jan 30 08:53:00.171: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jan 30 08:53:00.179: INFO: created pod pod-service-account-mountsa-mountspec
Jan 30 08:53:00.179: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jan 30 08:53:00.185: INFO: created pod pod-service-account-nomountsa-mountspec
Jan 30 08:53:00.185: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jan 30 08:53:00.191: INFO: created pod pod-service-account-defaultsa-nomountspec
Jan 30 08:53:00.191: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jan 30 08:53:00.198: INFO: created pod pod-service-account-mountsa-nomountspec
Jan 30 08:53:00.198: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jan 30 08:53:00.203: INFO: created pod pod-service-account-nomountsa-nomountspec
Jan 30 08:53:00.203: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jan 30 08:53:00.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4199" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":222,"skipped":4135,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:00.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jan 30 08:53:00.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 create -f -'
Jan 30 08:53:01.006: INFO: stderr: ""
Jan 30 08:53:01.006: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jan 30 08:53:01.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:53:01.104: INFO: stderr: ""
Jan 30 08:53:01.104: INFO: stdout: "update-demo-nautilus-dfslr update-demo-nautilus-s9j98 "
Jan 30 08:53:01.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-dfslr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:53:01.190: INFO: stderr: ""
Jan 30 08:53:01.190: INFO: stdout: ""
Jan 30 08:53:01.190: INFO: update-demo-nautilus-dfslr is created but not running
Jan 30 08:53:06.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:53:06.283: INFO: stderr: ""
Jan 30 08:53:06.283: INFO: stdout: "update-demo-nautilus-dfslr update-demo-nautilus-s9j98 "
Jan 30 08:53:06.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-dfslr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:53:06.370: INFO: stderr: ""
Jan 30 08:53:06.371: INFO: stdout: ""
Jan 30 08:53:06.371: INFO: update-demo-nautilus-dfslr is created but not running
Jan 30 08:53:11.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:53:11.483: INFO: stderr: ""
Jan 30 08:53:11.483: INFO: stdout: "update-demo-nautilus-dfslr update-demo-nautilus-s9j98 "
Jan 30 08:53:11.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-dfslr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:53:11.570: INFO: stderr: ""
Jan 30 08:53:11.570: INFO: stdout: "true"
Jan 30 08:53:11.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-dfslr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:53:11.655: INFO: stderr: ""
Jan 30 08:53:11.655: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:53:11.655: INFO: validating pod update-demo-nautilus-dfslr
Jan 30 08:53:11.664: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:53:11.664: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:53:11.664: INFO: update-demo-nautilus-dfslr is verified up and running
Jan 30 08:53:11.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-s9j98 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:53:11.743: INFO: stderr: ""
Jan 30 08:53:11.743: INFO: stdout: "true"
Jan 30 08:53:11.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods update-demo-nautilus-s9j98 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:53:11.828: INFO: stderr: ""
Jan 30 08:53:11.828: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jan 30 08:53:11.828: INFO: validating pod update-demo-nautilus-s9j98
Jan 30 08:53:11.838: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:53:11.838: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:53:11.838: INFO: update-demo-nautilus-s9j98 is verified up and running
STEP: using delete to clean up resources
Jan 30 08:53:11.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 delete --grace-period=0 --force -f -'
Jan 30 08:53:11.924: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:53:11.925: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 30 08:53:11.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get rc,svc -l name=update-demo --no-headers'
Jan 30 08:53:12.022: INFO: stderr: "No resources found in kubectl-3904 namespace.\n"
Jan 30 08:53:12.023: INFO: stdout: ""
Jan 30 08:53:12.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-3904 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 08:53:12.099: INFO: stderr: ""
Jan 30 08:53:12.099: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:53:12.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3904" for this suite.

• [SLOW TEST:11.910 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":223,"skipped":4168,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:12.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-c99e4f0a-5c40-4b39-9af3-7bb488010ba9
STEP: Creating a pod to test consume secrets
Jan 30 08:53:12.177: INFO: Waiting up to 5m0s for pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790" in namespace "secrets-4615" to be "Succeeded or Failed"
Jan 30 08:53:12.183: INFO: Pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790": Phase="Pending", Reason="", readiness=false. Elapsed: 5.682014ms
Jan 30 08:53:14.193: INFO: Pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016029226s
Jan 30 08:53:16.207: INFO: Pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030348324s
Jan 30 08:53:18.218: INFO: Pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.040689737s
STEP: Saw pod success
Jan 30 08:53:18.218: INFO: Pod "pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790" satisfied condition "Succeeded or Failed"
Jan 30 08:53:18.225: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790 container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:53:18.261: INFO: Waiting for pod pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790 to disappear
Jan 30 08:53:18.266: INFO: Pod pod-secrets-350b7a3f-f456-4cba-b3e5-6475c7714790 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:53:18.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4615" for this suite.

• [SLOW TEST:6.157 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4183,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:18.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pod-network-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2071
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 30 08:53:18.319: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 08:53:18.376: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:20.392: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:22.395: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:24.387: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:26.390: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:28.394: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:30.385: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:32.394: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:34.392: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:36.391: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:38.390: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 08:53:40.384: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 30 08:53:40.396: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 30 08:53:40.408: INFO: The status of Pod netserver-2 is Running (Ready = true)
Jan 30 08:53:40.418: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Jan 30 08:53:44.475: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Jan 30 08:53:44.476: INFO: Going to poll 10.0.1.21 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Jan 30 08:53:44.480: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.1.21:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2071 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:53:44.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:53:44.482: INFO: ExecWithOptions: Clientset creation
Jan 30 08:53:44.482: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2071/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.1.21%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:53:44.629: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 30 08:53:44.629: INFO: Going to poll 10.0.3.250 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Jan 30 08:53:44.636: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.3.250:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2071 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:53:44.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:53:44.638: INFO: ExecWithOptions: Clientset creation
Jan 30 08:53:44.638: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2071/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.3.250%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:53:44.752: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 30 08:53:44.752: INFO: Going to poll 10.0.0.114 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Jan 30 08:53:44.759: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.0.114:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2071 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:53:44.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:53:44.760: INFO: ExecWithOptions: Clientset creation
Jan 30 08:53:44.760: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2071/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.0.114%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:53:44.874: INFO: Found all 1 expected endpoints: [netserver-2]
Jan 30 08:53:44.874: INFO: Going to poll 10.0.2.206 on port 8083 at least 0 times, with a maximum of 46 tries before failing
Jan 30 08:53:44.879: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.2.206:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2071 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:53:44.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:53:44.881: INFO: ExecWithOptions: Clientset creation
Jan 30 08:53:44.881: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2071/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.2.206%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:53:45.021: INFO: Found all 1 expected endpoints: [netserver-3]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 30 08:53:45.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2071" for this suite.

• [SLOW TEST:26.757 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4199,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:45.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:53:45.084: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3623" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":226,"skipped":4213,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:45.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Jan 30 08:53:47.179: INFO: running pods: 0 < 1
Jan 30 08:53:49.193: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 30 08:53:51.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-7976" for this suite.

• [SLOW TEST:6.151 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":227,"skipped":4227,"failed":0}
SS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:53:51.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-3125
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3125 to expose endpoints map[]
Jan 30 08:53:51.304: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jan 30 08:53:52.321: INFO: successfully validated that service multi-endpoint-test in namespace services-3125 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-3125
Jan 30 08:53:52.337: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:54.349: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:56.343: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3125 to expose endpoints map[pod1:[100]]
Jan 30 08:53:56.358: INFO: successfully validated that service multi-endpoint-test in namespace services-3125 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-3125
Jan 30 08:53:56.367: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:58.383: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3125 to expose endpoints map[pod1:[100] pod2:[101]]
Jan 30 08:53:58.409: INFO: successfully validated that service multi-endpoint-test in namespace services-3125 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Jan 30 08:53:58.409: INFO: Creating new exec pod
Jan 30 08:54:03.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3125 exec execpod8qxpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Jan 30 08:54:03.647: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jan 30 08:54:03.647: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:54:03.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3125 exec execpod8qxpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.87.103 80'
Jan 30 08:54:03.856: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.87.103 80\nConnection to 10.101.87.103 80 port [tcp/http] succeeded!\n"
Jan 30 08:54:03.856: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:54:03.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3125 exec execpod8qxpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Jan 30 08:54:04.074: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jan 30 08:54:04.074: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 08:54:04.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-3125 exec execpod8qxpz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.87.103 81'
Jan 30 08:54:04.282: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.87.103 81\nConnection to 10.101.87.103 81 port [tcp/*] succeeded!\n"
Jan 30 08:54:04.282: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-3125
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3125 to expose endpoints map[pod2:[101]]
Jan 30 08:54:04.332: INFO: successfully validated that service multi-endpoint-test in namespace services-3125 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-3125
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3125 to expose endpoints map[]
Jan 30 08:54:04.355: INFO: successfully validated that service multi-endpoint-test in namespace services-3125 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 08:54:04.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3125" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:13.146 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":228,"skipped":4229,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:54:04.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:54:04.733: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
Jan 30 08:54:06.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 54, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 54, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 54, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 54, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-656754656d\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:54:09.796: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:54:09.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:54:12.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6376" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:8.645 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":229,"skipped":4235,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:54:13.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 30 08:54:13.082: INFO: The status of Pod labelsupdate4af374d9-bf54-4bbb-b179-83ff84481a75 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:54:15.090: INFO: The status of Pod labelsupdate4af374d9-bf54-4bbb-b179-83ff84481a75 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:54:17.099: INFO: The status of Pod labelsupdate4af374d9-bf54-4bbb-b179-83ff84481a75 is Running (Ready = true)
Jan 30 08:54:17.647: INFO: Successfully updated pod "labelsupdate4af374d9-bf54-4bbb-b179-83ff84481a75"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:54:19.669: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3921" for this suite.

• [SLOW TEST:6.651 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":230,"skipped":4246,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:54:19.694: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Jan 30 08:54:19.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 08:54:25.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:54:46.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-214" for this suite.

• [SLOW TEST:26.625 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":231,"skipped":4262,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:54:46.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-runtime
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 30 08:55:27.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1029" for this suite.

• [SLOW TEST:40.723 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4279,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:55:27.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:55:27.117: INFO: The status of Pod pod-secrets-7bc3d735-0d1e-448f-aea3-c5222a2231ea is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:55:29.136: INFO: The status of Pod pod-secrets-7bc3d735-0d1e-448f-aea3-c5222a2231ea is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jan 30 08:55:29.177: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-4065" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":233,"skipped":4293,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:55:29.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 30 08:55:29.234: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 08:56:29.432: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 30 08:56:29.475: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 30 08:56:29.485: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 30 08:56:29.507: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 30 08:56:29.515: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 30 08:56:29.535: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 30 08:56:29.543: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Jan 30 08:56:29.566: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Jan 30 08:56:29.573: INFO: Created pod: pod3-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 30 08:56:43.724: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3923" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:74.633 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":234,"skipped":4331,"failed":0}
SSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:56:43.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a25aa0c5-6c57-40e9-bf03-3f95f6f0cf42
STEP: Creating a pod to test consume secrets
Jan 30 08:56:43.905: INFO: Waiting up to 5m0s for pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767" in namespace "secrets-1827" to be "Succeeded or Failed"
Jan 30 08:56:43.912: INFO: Pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767": Phase="Pending", Reason="", readiness=false. Elapsed: 6.617674ms
Jan 30 08:56:45.924: INFO: Pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019171033s
Jan 30 08:56:47.945: INFO: Pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767": Phase="Pending", Reason="", readiness=false. Elapsed: 4.040491103s
Jan 30 08:56:49.960: INFO: Pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.055101267s
STEP: Saw pod success
Jan 30 08:56:49.960: INFO: Pod "pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767" satisfied condition "Succeeded or Failed"
Jan 30 08:56:49.965: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767 container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:56:49.990: INFO: Waiting for pod pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767 to disappear
Jan 30 08:56:49.995: INFO: Pod pod-secrets-3b3c9cbf-0a05-41e3-af87-11dbad0a5767 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:56:49.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1827" for this suite.
STEP: Destroying namespace "secret-namespace-8582" for this suite.

• [SLOW TEST:6.188 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":235,"skipped":4334,"failed":0}
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:56:50.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Jan 30 08:56:50.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2629" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":236,"skipped":4341,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:56:50.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:56:50.153: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723" in namespace "projected-2088" to be "Succeeded or Failed"
Jan 30 08:56:50.156: INFO: Pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723": Phase="Pending", Reason="", readiness=false. Elapsed: 3.450352ms
Jan 30 08:56:52.167: INFO: Pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014251219s
Jan 30 08:56:54.186: INFO: Pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03272693s
Jan 30 08:56:56.202: INFO: Pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.049051409s
STEP: Saw pod success
Jan 30 08:56:56.202: INFO: Pod "downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723" satisfied condition "Succeeded or Failed"
Jan 30 08:56:56.209: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723 container client-container: <nil>
STEP: delete the pod
Jan 30 08:56:56.258: INFO: Waiting for pod downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723 to disappear
Jan 30 08:56:56.263: INFO: Pod downwardapi-volume-f0e5fc84-3b50-485e-9761-db6b91271723 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:56:56.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2088" for this suite.

• [SLOW TEST:6.157 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":237,"skipped":4360,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:56:56.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 30 08:56:56.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1398 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 30 08:56:56.412: INFO: stderr: ""
Jan 30 08:56:56.412: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Jan 30 08:57:01.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1398 get pod e2e-test-httpd-pod -o json'
Jan 30 08:57:01.528: INFO: stderr: ""
Jan 30 08:57:01.528: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-01-30T08:56:56Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1398\",\n        \"resourceVersion\": \"37385320\",\n        \"uid\": \"221006d6-5994-4382-8f6f-da3215ae2064\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"Always\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-kzz7r\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"conoa-prod01-wk003\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-kzz7r\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:56:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:56:58Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:56:58Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:56:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://bca85205e0d7c16e4e74bbd85dbb856fc17625d5d9c01fe03ab507f9b31a0ecf\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-30T08:56:58Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.55.210.15\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.0.0.200\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.0.0.200\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-30T08:56:56Z\"\n    }\n}\n"
STEP: replace the image in the pod
Jan 30 08:57:01.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1398 replace -f -'
Jan 30 08:57:02.292: INFO: stderr: ""
Jan 30 08:57:02.292: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Jan 30 08:57:02.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1398 delete pods e2e-test-httpd-pod'
Jan 30 08:57:05.426: INFO: stderr: ""
Jan 30 08:57:05.426: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:57:05.426: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1398" for this suite.

• [SLOW TEST:9.185 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":238,"skipped":4411,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:57:05.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 30 08:57:05.525: INFO: The status of Pod labelsupdate514144e6-9197-4c8c-80c7-43576a1794f6 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:57:07.540: INFO: The status of Pod labelsupdate514144e6-9197-4c8c-80c7-43576a1794f6 is Running (Ready = true)
Jan 30 08:57:08.084: INFO: Successfully updated pod "labelsupdate514144e6-9197-4c8c-80c7-43576a1794f6"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 08:57:10.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-394" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4430,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:57:10.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename init-container
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jan 30 08:57:10.173: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 08:57:17.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3510" for this suite.

• [SLOW TEST:7.364 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":240,"skipped":4479,"failed":0}
S
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:57:17.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replication-controller
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Jan 30 08:57:17.551: INFO: Pod name pod-release: Found 0 pods out of 1
Jan 30 08:57:22.560: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 30 08:57:23.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-3170" for this suite.

• [SLOW TEST:6.113 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":241,"skipped":4480,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:57:23.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:57:23.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-8561 version'
Jan 30 08:57:23.714: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jan 30 08:57:23.714: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.7\", GitCommit:\"e6f35974b08862a23e7f4aad8e5d7f7f2de26c15\", GitTreeState:\"clean\", BuildDate:\"2022-10-12T10:57:14Z\", GoVersion:\"go1.18.7\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.7\", GitCommit:\"e6f35974b08862a23e7f4aad8e5d7f7f2de26c15\", GitTreeState:\"clean\", BuildDate:\"2022-10-12T10:50:21Z\", GoVersion:\"go1.18.7\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:57:23.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8561" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":242,"skipped":4489,"failed":0}
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:57:23.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-8976
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-8976
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8976
Jan 30 08:57:23.781: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:57:33.800: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Jan 30 08:57:33.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:57:34.025: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:57:34.025: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:57:34.025: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:57:34.034: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 30 08:57:44.049: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:57:44.049: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:57:44.085: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
Jan 30 08:57:44.085: INFO: ss-0  conoa-prod01-wk003  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:23 +0000 UTC  }]
Jan 30 08:57:44.085: INFO: 
Jan 30 08:57:44.085: INFO: StatefulSet ss has not reached scale 3, at 1
Jan 30 08:57:45.099: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993138814s
Jan 30 08:57:46.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979513469s
Jan 30 08:57:47.124: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.968102615s
Jan 30 08:57:48.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.954098691s
Jan 30 08:57:49.151: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.941868732s
Jan 30 08:57:50.165: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.926619974s
Jan 30 08:57:51.179: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.913429554s
Jan 30 08:57:52.190: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.89956836s
Jan 30 08:57:53.200: INFO: Verifying statefulset ss doesn't scale past 3 for another 888.21672ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8976
Jan 30 08:57:54.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:57:54.475: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:57:54.475: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:57:54.475: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:57:54.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:57:54.706: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 30 08:57:54.706: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:57:54.706: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:57:54.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:57:54.948: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 30 08:57:54.949: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:57:54.949: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:57:54.959: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Jan 30 08:58:04.980: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:58:04.980: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:58:04.980: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Jan 30 08:58:04.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:58:05.212: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:58:05.212: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:58:05.212: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:58:05.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:58:05.432: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:58:05.432: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:58:05.432: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:58:05.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-8976 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:58:05.631: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:58:05.631: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:58:05.631: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:58:05.631: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:58:05.639: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jan 30 08:58:15.656: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:58:15.656: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:58:15.656: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:58:15.680: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
Jan 30 08:58:15.680: INFO: ss-0  conoa-prod01-wk003  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:23 +0000 UTC  }]
Jan 30 08:58:15.680: INFO: ss-1  conoa-prod01-wk002  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:44 +0000 UTC  }]
Jan 30 08:58:15.680: INFO: ss-2  conoa-prod01-wk001  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:57:44 +0000 UTC  }]
Jan 30 08:58:15.680: INFO: 
Jan 30 08:58:15.680: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 30 08:58:16.689: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.992447444s
Jan 30 08:58:17.698: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.982615233s
Jan 30 08:58:18.708: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.974515439s
Jan 30 08:58:19.716: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.964610276s
Jan 30 08:58:20.725: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.956578322s
Jan 30 08:58:21.736: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.94692026s
Jan 30 08:58:22.748: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.936280435s
Jan 30 08:58:23.761: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.924380364s
Jan 30 08:58:24.772: INFO: Verifying statefulset ss doesn't scale past 0 for another 911.071759ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8976
Jan 30 08:58:25.784: INFO: Scaling statefulset ss to 0
Jan 30 08:58:25.814: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 08:58:25.819: INFO: Deleting all statefulset in ns statefulset-8976
Jan 30 08:58:25.823: INFO: Scaling statefulset ss to 0
Jan 30 08:58:25.841: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:58:25.846: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 08:58:25.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-8976" for this suite.

• [SLOW TEST:62.153 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":243,"skipped":4495,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:25.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 30 08:58:25.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-2709 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Jan 30 08:58:26.011: INFO: stderr: ""
Jan 30 08:58:26.011: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Jan 30 08:58:26.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-2709 delete pods e2e-test-httpd-pod'
Jan 30 08:58:29.738: INFO: stderr: ""
Jan 30 08:58:29.738: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 08:58:29.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2709" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":244,"skipped":4497,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:29.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubelet-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:58:29.823: INFO: The status of Pod busybox-readonly-fs3265d1c0-5d1c-4c51-8024-378f0bc49186 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:58:31.838: INFO: The status of Pod busybox-readonly-fs3265d1c0-5d1c-4c51-8024-378f0bc49186 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 30 08:58:31.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-4940" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":245,"skipped":4509,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:31.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename podtemplate
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Jan 30 08:58:31.936: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jan 30 08:58:31.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-3529" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":246,"skipped":4549,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:31.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 30 08:58:32.010: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:58:34.025: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:58:36.026: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 30 08:58:36.049: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:58:38.065: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 30 08:58:38.098: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:58:38.104: INFO: Pod pod-with-poststart-http-hook still exists
Jan 30 08:58:40.105: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:58:40.122: INFO: Pod pod-with-poststart-http-hook still exists
Jan 30 08:58:42.104: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:58:42.120: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 30 08:58:42.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3852" for this suite.

• [SLOW TEST:10.192 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":247,"skipped":4561,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:42.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename ingress
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jan 30 08:58:42.255: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jan 30 08:58:42.262: INFO: starting watch
STEP: patching
STEP: updating
Jan 30 08:58:42.289: INFO: waiting for watch events with expected annotations
Jan 30 08:58:42.289: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Jan 30 08:58:42.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-5018" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":248,"skipped":4573,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:42.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 08:58:42.389: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e" in namespace "downward-api-498" to be "Succeeded or Failed"
Jan 30 08:58:42.395: INFO: Pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.296598ms
Jan 30 08:58:44.414: INFO: Pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024985254s
Jan 30 08:58:46.429: INFO: Pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.04034365s
Jan 30 08:58:48.453: INFO: Pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.06393684s
STEP: Saw pod success
Jan 30 08:58:48.453: INFO: Pod "downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e" satisfied condition "Succeeded or Failed"
Jan 30 08:58:48.459: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e container client-container: <nil>
STEP: delete the pod
Jan 30 08:58:48.493: INFO: Waiting for pod downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e to disappear
Jan 30 08:58:48.498: INFO: Pod downwardapi-volume-d7d7dd6b-8be1-4ee5-a8fb-204a09eee70e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 08:58:48.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-498" for this suite.

• [SLOW TEST:6.156 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":249,"skipped":4625,"failed":0}
SSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:48.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-688a3a5a-abf0-4d1a-859c-4e586924dbc8
STEP: Creating a pod to test consume configMaps
Jan 30 08:58:48.564: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a" in namespace "projected-5567" to be "Succeeded or Failed"
Jan 30 08:58:48.568: INFO: Pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.963971ms
Jan 30 08:58:50.585: INFO: Pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021421505s
Jan 30 08:58:52.596: INFO: Pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032556732s
Jan 30 08:58:54.607: INFO: Pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043330647s
STEP: Saw pod success
Jan 30 08:58:54.607: INFO: Pod "pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a" satisfied condition "Succeeded or Failed"
Jan 30 08:58:54.613: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a container agnhost-container: <nil>
STEP: delete the pod
Jan 30 08:58:54.642: INFO: Waiting for pod pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a to disappear
Jan 30 08:58:54.647: INFO: Pod pod-projected-configmaps-d2758d5b-1b52-4972-b2fb-d8b074f7336a no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 08:58:54.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5567" for this suite.

• [SLOW TEST:6.154 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":250,"skipped":4629,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:58:54.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-cbdf51bb-cbf4-4f1d-a566-fa50bfcbe88d
STEP: Creating a pod to test consume secrets
Jan 30 08:58:54.728: INFO: Waiting up to 5m0s for pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a" in namespace "secrets-150" to be "Succeeded or Failed"
Jan 30 08:58:54.733: INFO: Pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.015955ms
Jan 30 08:58:56.750: INFO: Pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021849896s
Jan 30 08:58:58.757: INFO: Pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029438415s
Jan 30 08:59:00.767: INFO: Pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.039581399s
STEP: Saw pod success
Jan 30 08:59:00.767: INFO: Pod "pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a" satisfied condition "Succeeded or Failed"
Jan 30 08:59:00.774: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 08:59:00.805: INFO: Waiting for pod pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a to disappear
Jan 30 08:59:00.810: INFO: Pod pod-secrets-3626efca-a44a-4205-a362-3c9d1026444a no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 08:59:00.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-150" for this suite.

• [SLOW TEST:6.160 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4638,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:59:00.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 08:59:01.211: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:59:03.235: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 08:59:06.276: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 08:59:06.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7733" for this suite.
STEP: Destroying namespace "webhook-7733-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.645 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":252,"skipped":4684,"failed":0}
S
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:59:06.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubelet-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:59:06.506: INFO: The status of Pod busybox-host-aliasese4cafcef-c920-4132-8790-856dffad08d3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:59:08.520: INFO: The status of Pod busybox-host-aliasese4cafcef-c920-4132-8790-856dffad08d3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:59:10.522: INFO: The status of Pod busybox-host-aliasese4cafcef-c920-4132-8790-856dffad08d3 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jan 30 08:59:10.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9683" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4685,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:59:10.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 08:59:10.603: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jan 30 08:59:15.610: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 30 08:59:15.610: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jan 30 08:59:17.627: INFO: Creating deployment "test-rollover-deployment"
Jan 30 08:59:17.646: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jan 30 08:59:19.663: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jan 30 08:59:19.675: INFO: Ensure that both replica sets have 1 created replica
Jan 30 08:59:19.685: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jan 30 08:59:19.700: INFO: Updating deployment test-rollover-deployment
Jan 30 08:59:19.700: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jan 30 08:59:21.717: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jan 30 08:59:21.727: INFO: Make sure deployment "test-rollover-deployment" is complete
Jan 30 08:59:21.736: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:21.736: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:23.751: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:23.751: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:25.757: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:25.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:27.750: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:27.750: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:29.753: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:29.754: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:31.755: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:59:31.755: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 59, 21, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 59, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:59:33.756: INFO: 
Jan 30 08:59:33.756: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:59:33.773: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-8328  62050205-891a-4d74-b95d-d85ec4d93626 37386715 2 2023-01-30 08:59:17 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-30 08:59:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006001da8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:59:17 +0000 UTC,LastTransitionTime:2023-01-30 08:59:17 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2023-01-30 08:59:32 +0000 UTC,LastTransitionTime:2023-01-30 08:59:17 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 08:59:33.779: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-8328  60711606-e1b4-4f30-a38d-c59a5579a9b4 37386704 2 2023-01-30 08:59:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 62050205-891a-4d74-b95d-d85ec4d93626 0xc0036422c7 0xc0036422c8}] []  [{kube-controller-manager Update apps/v1 2023-01-30 08:59:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"62050205-891a-4d74-b95d-d85ec4d93626\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:31 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003642378 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:59:33.779: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jan 30 08:59:33.779: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-8328  4c7a939a-9e6f-46d1-975b-74ffd3a798b5 37386713 2 2023-01-30 08:59:10 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 62050205-891a-4d74-b95d-d85ec4d93626 0xc003642197 0xc003642198}] []  [{e2e.test Update apps/v1 2023-01-30 08:59:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"62050205-891a-4d74-b95d-d85ec4d93626\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:32 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003642258 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:59:33.779: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-8328  74a3c621-5907-44a3-b08d-f85af137b936 37386649 2 2023-01-30 08:59:17 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 62050205-891a-4d74-b95d-d85ec4d93626 0xc0036423e0 0xc0036423e1}] []  [{kube-controller-manager Update apps/v1 2023-01-30 08:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"62050205-891a-4d74-b95d-d85ec4d93626\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:19 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003642488 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:59:33.785: INFO: Pod "test-rollover-deployment-779c67f4f8-s82sz" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-s82sz test-rollover-deployment-779c67f4f8- deployment-8328  da212b3d-380b-4f29-983c-6a5699420ec5 37386670 0 2023-01-30 08:59:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 60711606-e1b4-4f30-a38d-c59a5579a9b4 0xc003642a07 0xc003642a08}] []  [{kube-controller-manager Update v1 2023-01-30 08:59:19 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"60711606-e1b4-4f30-a38d-c59a5579a9b4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:21 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.3\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hrdmj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrdmj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:19 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:19 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.3,StartTime:2023-01-30 08:59:19 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:21 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:cri-o://1aa3e831fdb43f5d8fc6f4f9a4e4ee982251ee6cff1dc8b6a131dff6080d7b27,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.3,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 08:59:33.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8328" for this suite.

• [SLOW TEST:23.247 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":254,"skipped":4699,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 08:59:33.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Jan 30 09:00:13.975: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 09:00:14.086: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 30 09:00:14.086: INFO: Deleting pod "simpletest.rc-22j8r" in namespace "gc-1569"
Jan 30 09:00:14.107: INFO: Deleting pod "simpletest.rc-4bvmz" in namespace "gc-1569"
Jan 30 09:00:14.126: INFO: Deleting pod "simpletest.rc-4ljmj" in namespace "gc-1569"
Jan 30 09:00:14.165: INFO: Deleting pod "simpletest.rc-4nfc5" in namespace "gc-1569"
Jan 30 09:00:14.194: INFO: Deleting pod "simpletest.rc-4qj4j" in namespace "gc-1569"
Jan 30 09:00:14.210: INFO: Deleting pod "simpletest.rc-58kq4" in namespace "gc-1569"
Jan 30 09:00:14.225: INFO: Deleting pod "simpletest.rc-59hcd" in namespace "gc-1569"
Jan 30 09:00:14.244: INFO: Deleting pod "simpletest.rc-5jtmb" in namespace "gc-1569"
Jan 30 09:00:14.255: INFO: Deleting pod "simpletest.rc-5mv9v" in namespace "gc-1569"
Jan 30 09:00:14.266: INFO: Deleting pod "simpletest.rc-64m97" in namespace "gc-1569"
Jan 30 09:00:14.278: INFO: Deleting pod "simpletest.rc-6brnb" in namespace "gc-1569"
Jan 30 09:00:14.288: INFO: Deleting pod "simpletest.rc-6jlq7" in namespace "gc-1569"
Jan 30 09:00:14.299: INFO: Deleting pod "simpletest.rc-6mpsk" in namespace "gc-1569"
Jan 30 09:00:14.311: INFO: Deleting pod "simpletest.rc-7fl2k" in namespace "gc-1569"
Jan 30 09:00:14.324: INFO: Deleting pod "simpletest.rc-7h267" in namespace "gc-1569"
Jan 30 09:00:14.334: INFO: Deleting pod "simpletest.rc-7wt4d" in namespace "gc-1569"
Jan 30 09:00:14.345: INFO: Deleting pod "simpletest.rc-88jsv" in namespace "gc-1569"
Jan 30 09:00:14.357: INFO: Deleting pod "simpletest.rc-8bmtz" in namespace "gc-1569"
Jan 30 09:00:14.367: INFO: Deleting pod "simpletest.rc-8hwwh" in namespace "gc-1569"
Jan 30 09:00:14.380: INFO: Deleting pod "simpletest.rc-bds4x" in namespace "gc-1569"
Jan 30 09:00:14.390: INFO: Deleting pod "simpletest.rc-bldgn" in namespace "gc-1569"
Jan 30 09:00:14.402: INFO: Deleting pod "simpletest.rc-btz7n" in namespace "gc-1569"
Jan 30 09:00:14.414: INFO: Deleting pod "simpletest.rc-bv8gb" in namespace "gc-1569"
Jan 30 09:00:14.423: INFO: Deleting pod "simpletest.rc-c5dq8" in namespace "gc-1569"
Jan 30 09:00:14.433: INFO: Deleting pod "simpletest.rc-cdmvl" in namespace "gc-1569"
Jan 30 09:00:14.442: INFO: Deleting pod "simpletest.rc-clt6q" in namespace "gc-1569"
Jan 30 09:00:14.452: INFO: Deleting pod "simpletest.rc-dcrc9" in namespace "gc-1569"
Jan 30 09:00:14.462: INFO: Deleting pod "simpletest.rc-dwldh" in namespace "gc-1569"
Jan 30 09:00:14.472: INFO: Deleting pod "simpletest.rc-dwtnt" in namespace "gc-1569"
Jan 30 09:00:14.484: INFO: Deleting pod "simpletest.rc-dzjbs" in namespace "gc-1569"
Jan 30 09:00:14.495: INFO: Deleting pod "simpletest.rc-f7np7" in namespace "gc-1569"
Jan 30 09:00:14.506: INFO: Deleting pod "simpletest.rc-f8jls" in namespace "gc-1569"
Jan 30 09:00:14.519: INFO: Deleting pod "simpletest.rc-g6k2z" in namespace "gc-1569"
Jan 30 09:00:14.529: INFO: Deleting pod "simpletest.rc-g778g" in namespace "gc-1569"
Jan 30 09:00:14.540: INFO: Deleting pod "simpletest.rc-gbb47" in namespace "gc-1569"
Jan 30 09:00:14.552: INFO: Deleting pod "simpletest.rc-gprsw" in namespace "gc-1569"
Jan 30 09:00:14.563: INFO: Deleting pod "simpletest.rc-gs54w" in namespace "gc-1569"
Jan 30 09:00:14.576: INFO: Deleting pod "simpletest.rc-hbwwv" in namespace "gc-1569"
Jan 30 09:00:14.585: INFO: Deleting pod "simpletest.rc-hnzdb" in namespace "gc-1569"
Jan 30 09:00:14.595: INFO: Deleting pod "simpletest.rc-j4rvf" in namespace "gc-1569"
Jan 30 09:00:14.608: INFO: Deleting pod "simpletest.rc-j895m" in namespace "gc-1569"
Jan 30 09:00:14.618: INFO: Deleting pod "simpletest.rc-jx72v" in namespace "gc-1569"
Jan 30 09:00:14.629: INFO: Deleting pod "simpletest.rc-k8jm5" in namespace "gc-1569"
Jan 30 09:00:14.643: INFO: Deleting pod "simpletest.rc-kqtgc" in namespace "gc-1569"
Jan 30 09:00:14.656: INFO: Deleting pod "simpletest.rc-krfkm" in namespace "gc-1569"
Jan 30 09:00:14.667: INFO: Deleting pod "simpletest.rc-ksx5h" in namespace "gc-1569"
Jan 30 09:00:14.677: INFO: Deleting pod "simpletest.rc-l2szg" in namespace "gc-1569"
Jan 30 09:00:14.689: INFO: Deleting pod "simpletest.rc-ld8sq" in namespace "gc-1569"
Jan 30 09:00:14.703: INFO: Deleting pod "simpletest.rc-llsxj" in namespace "gc-1569"
Jan 30 09:00:14.718: INFO: Deleting pod "simpletest.rc-lnshp" in namespace "gc-1569"
Jan 30 09:00:14.731: INFO: Deleting pod "simpletest.rc-lwqq7" in namespace "gc-1569"
Jan 30 09:00:14.740: INFO: Deleting pod "simpletest.rc-m7n98" in namespace "gc-1569"
Jan 30 09:00:14.751: INFO: Deleting pod "simpletest.rc-mjtrj" in namespace "gc-1569"
Jan 30 09:00:14.761: INFO: Deleting pod "simpletest.rc-mtgc5" in namespace "gc-1569"
Jan 30 09:00:14.774: INFO: Deleting pod "simpletest.rc-mwxjs" in namespace "gc-1569"
Jan 30 09:00:14.785: INFO: Deleting pod "simpletest.rc-n497j" in namespace "gc-1569"
Jan 30 09:00:14.798: INFO: Deleting pod "simpletest.rc-n6xtj" in namespace "gc-1569"
Jan 30 09:00:14.813: INFO: Deleting pod "simpletest.rc-n8lk2" in namespace "gc-1569"
Jan 30 09:00:14.825: INFO: Deleting pod "simpletest.rc-nbt24" in namespace "gc-1569"
Jan 30 09:00:14.837: INFO: Deleting pod "simpletest.rc-nxmgc" in namespace "gc-1569"
Jan 30 09:00:14.852: INFO: Deleting pod "simpletest.rc-p54mx" in namespace "gc-1569"
Jan 30 09:00:14.863: INFO: Deleting pod "simpletest.rc-pcrc2" in namespace "gc-1569"
Jan 30 09:00:14.874: INFO: Deleting pod "simpletest.rc-pjlj4" in namespace "gc-1569"
Jan 30 09:00:14.884: INFO: Deleting pod "simpletest.rc-pjpbj" in namespace "gc-1569"
Jan 30 09:00:14.896: INFO: Deleting pod "simpletest.rc-pnkj2" in namespace "gc-1569"
Jan 30 09:00:14.909: INFO: Deleting pod "simpletest.rc-q9zsj" in namespace "gc-1569"
Jan 30 09:00:14.922: INFO: Deleting pod "simpletest.rc-qltg7" in namespace "gc-1569"
Jan 30 09:00:14.973: INFO: Deleting pod "simpletest.rc-r2zl6" in namespace "gc-1569"
Jan 30 09:00:15.018: INFO: Deleting pod "simpletest.rc-r4dsw" in namespace "gc-1569"
Jan 30 09:00:15.067: INFO: Deleting pod "simpletest.rc-r76bx" in namespace "gc-1569"
Jan 30 09:00:15.117: INFO: Deleting pod "simpletest.rc-r7m7p" in namespace "gc-1569"
Jan 30 09:00:15.168: INFO: Deleting pod "simpletest.rc-rtcqm" in namespace "gc-1569"
Jan 30 09:00:15.226: INFO: Deleting pod "simpletest.rc-rw7hb" in namespace "gc-1569"
Jan 30 09:00:15.273: INFO: Deleting pod "simpletest.rc-s5cqc" in namespace "gc-1569"
Jan 30 09:00:15.321: INFO: Deleting pod "simpletest.rc-shgqd" in namespace "gc-1569"
Jan 30 09:00:15.369: INFO: Deleting pod "simpletest.rc-sl4zm" in namespace "gc-1569"
Jan 30 09:00:15.417: INFO: Deleting pod "simpletest.rc-sxb85" in namespace "gc-1569"
Jan 30 09:00:15.466: INFO: Deleting pod "simpletest.rc-sxwt7" in namespace "gc-1569"
Jan 30 09:00:15.523: INFO: Deleting pod "simpletest.rc-t7g85" in namespace "gc-1569"
Jan 30 09:00:15.568: INFO: Deleting pod "simpletest.rc-t99nr" in namespace "gc-1569"
Jan 30 09:00:15.620: INFO: Deleting pod "simpletest.rc-t9kqm" in namespace "gc-1569"
Jan 30 09:00:15.666: INFO: Deleting pod "simpletest.rc-tcdll" in namespace "gc-1569"
Jan 30 09:00:15.725: INFO: Deleting pod "simpletest.rc-tnr2x" in namespace "gc-1569"
Jan 30 09:00:15.773: INFO: Deleting pod "simpletest.rc-trd7b" in namespace "gc-1569"
Jan 30 09:00:15.816: INFO: Deleting pod "simpletest.rc-vlb57" in namespace "gc-1569"
Jan 30 09:00:15.874: INFO: Deleting pod "simpletest.rc-vsmg6" in namespace "gc-1569"
Jan 30 09:00:15.918: INFO: Deleting pod "simpletest.rc-vwfxj" in namespace "gc-1569"
Jan 30 09:00:15.968: INFO: Deleting pod "simpletest.rc-w572v" in namespace "gc-1569"
Jan 30 09:00:16.022: INFO: Deleting pod "simpletest.rc-w5pb9" in namespace "gc-1569"
Jan 30 09:00:16.071: INFO: Deleting pod "simpletest.rc-wg685" in namespace "gc-1569"
Jan 30 09:00:16.120: INFO: Deleting pod "simpletest.rc-wm4tn" in namespace "gc-1569"
Jan 30 09:00:16.172: INFO: Deleting pod "simpletest.rc-wm9k7" in namespace "gc-1569"
Jan 30 09:00:16.226: INFO: Deleting pod "simpletest.rc-wpjf4" in namespace "gc-1569"
Jan 30 09:00:16.267: INFO: Deleting pod "simpletest.rc-x8xgl" in namespace "gc-1569"
Jan 30 09:00:16.318: INFO: Deleting pod "simpletest.rc-xc2j7" in namespace "gc-1569"
Jan 30 09:00:16.368: INFO: Deleting pod "simpletest.rc-xhh4z" in namespace "gc-1569"
Jan 30 09:00:16.420: INFO: Deleting pod "simpletest.rc-xr579" in namespace "gc-1569"
Jan 30 09:00:16.469: INFO: Deleting pod "simpletest.rc-z4lx9" in namespace "gc-1569"
Jan 30 09:00:16.516: INFO: Deleting pod "simpletest.rc-zd9hl" in namespace "gc-1569"
Jan 30 09:00:16.568: INFO: Deleting pod "simpletest.rc-zjzzq" in namespace "gc-1569"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 09:00:16.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1569" for this suite.

• [SLOW TEST:42.908 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":255,"skipped":4766,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:00:16.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 09:00:17.155: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 09:00:19.179: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 0, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 0, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 0, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 0, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 09:00:22.209: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Jan 30 09:00:22.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:00:22.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7175" for this suite.
STEP: Destroying namespace "webhook-7175-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.612 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":256,"skipped":4773,"failed":0}
SSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:00:22.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename runtimeclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-5177-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 30 09:00:22.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-5177" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":257,"skipped":4780,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:00:22.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Jan 30 09:00:22.981: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 09:00:23.041: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 09:00:23.041: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-8467" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":258,"skipped":4792,"failed":0}

------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:00:23.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-preemption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jan 30 09:00:23.108: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:01:23.286: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jan 30 09:01:23.331: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 30 09:01:23.340: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 30 09:01:23.366: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 30 09:01:23.373: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jan 30 09:01:23.392: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jan 30 09:01:23.399: INFO: Created pod: pod2-1-sched-preemption-medium-priority
Jan 30 09:01:23.423: INFO: Created pod: pod3-0-sched-preemption-medium-priority
Jan 30 09:01:23.430: INFO: Created pod: pod3-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:01:33.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-8218" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:70.629 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":259,"skipped":4792,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:01:33.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8014
STEP: creating service affinity-nodeport in namespace services-8014
STEP: creating replication controller affinity-nodeport in namespace services-8014
I0130 09:01:33.768144      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8014, replica count: 3
I0130 09:01:36.819518      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:01:36.840: INFO: Creating new exec pod
Jan 30 09:01:41.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-8014 exec execpod-affinityvwpmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Jan 30 09:01:42.113: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jan 30 09:01:42.113: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:01:42.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-8014 exec execpod-affinityvwpmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.206.137 80'
Jan 30 09:01:42.337: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.206.137 80\nConnection to 10.111.206.137 80 port [tcp/http] succeeded!\n"
Jan 30 09:01:42.337: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:01:42.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-8014 exec execpod-affinityvwpmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.16 30287'
Jan 30 09:01:42.538: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.16 30287\nConnection to 10.55.210.16 30287 port [tcp/*] succeeded!\n"
Jan 30 09:01:42.538: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:01:42.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-8014 exec execpod-affinityvwpmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.55.210.13 30287'
Jan 30 09:01:42.730: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.55.210.13 30287\nConnection to 10.55.210.13 30287 port [tcp/*] succeeded!\n"
Jan 30 09:01:42.730: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:01:42.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-8014 exec execpod-affinityvwpmd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.55.210.13:30287/ ; done'
Jan 30 09:01:43.012: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.55.210.13:30287/\n"
Jan 30 09:01:43.012: INFO: stdout: "\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9\naffinity-nodeport-f9rw9"
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Received response from host: affinity-nodeport-f9rw9
Jan 30 09:01:43.012: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-8014, will wait for the garbage collector to delete the pods
Jan 30 09:01:43.101: INFO: Deleting ReplicationController affinity-nodeport took: 9.31804ms
Jan 30 09:01:43.202: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.85412ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 09:01:45.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8014" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.776 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":260,"skipped":4817,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:01:45.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jan 30 09:01:45.531: INFO: The status of Pod annotationupdate9598ba1e-f146-4992-a12f-088681de92bd is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:01:47.547: INFO: The status of Pod annotationupdate9598ba1e-f146-4992-a12f-088681de92bd is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:01:49.547: INFO: The status of Pod annotationupdate9598ba1e-f146-4992-a12f-088681de92bd is Running (Ready = true)
Jan 30 09:01:50.094: INFO: Successfully updated pod "annotationupdate9598ba1e-f146-4992-a12f-088681de92bd"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 09:01:52.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6269" for this suite.

• [SLOW TEST:6.676 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":261,"skipped":4818,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:01:52.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename job
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jan 30 09:02:04.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-4570" for this suite.

• [SLOW TEST:12.090 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":262,"skipped":4832,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:04.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 09:02:11.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7414" for this suite.

• [SLOW TEST:7.101 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":263,"skipped":4837,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:11.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 30 09:02:11.430: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:11.430: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:11.430: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:11.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:02:11.434: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:02:12.450: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:12.450: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:12.450: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:12.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:02:12.457: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:02:13.446: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:13.447: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:13.447: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:13.455: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 09:02:13.455: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:02:14.451: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.451: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.451: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.460: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 09:02:14.460: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Jan 30 09:02:14.495: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.495: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.495: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:14.501: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:02:14.501: INFO: Node conoa-prod01-wk004 is running 0 daemon pod, expected 1
Jan 30 09:02:15.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:15.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:15.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:15.525: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:02:15.525: INFO: Node conoa-prod01-wk004 is running 0 daemon pod, expected 1
Jan 30 09:02:16.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:16.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:16.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:16.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:02:16.524: INFO: Node conoa-prod01-wk004 is running 0 daemon pod, expected 1
Jan 30 09:02:17.519: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:17.519: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:17.519: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:17.531: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:02:17.531: INFO: Node conoa-prod01-wk004 is running 0 daemon pod, expected 1
Jan 30 09:02:18.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:18.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:18.517: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:18.523: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:02:18.524: INFO: Node conoa-prod01-wk004 is running 0 daemon pod, expected 1
Jan 30 09:02:19.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:19.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:19.518: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:02:19.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 09:02:19.524: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5314, will wait for the garbage collector to delete the pods
Jan 30 09:02:19.597: INFO: Deleting DaemonSet.extensions daemon-set took: 12.794771ms
Jan 30 09:02:19.699: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.24812ms
Jan 30 09:02:22.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:02:22.310: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 09:02:22.316: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37390190"},"items":null}

Jan 30 09:02:22.321: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37390190"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:02:22.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5314" for this suite.

• [SLOW TEST:11.028 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":264,"skipped":4874,"failed":0}
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:22.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:02:22.423: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760" in namespace "security-context-test-8251" to be "Succeeded or Failed"
Jan 30 09:02:22.428: INFO: Pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760": Phase="Pending", Reason="", readiness=false. Elapsed: 4.962444ms
Jan 30 09:02:24.442: INFO: Pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018942936s
Jan 30 09:02:26.451: INFO: Pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027987599s
Jan 30 09:02:28.468: INFO: Pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.045055646s
Jan 30 09:02:28.468: INFO: Pod "busybox-readonly-false-d9464625-bbd1-4b00-af94-d84f9b102760" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 09:02:28.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8251" for this suite.

• [SLOW TEST:6.116 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:173
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":4874,"failed":0}
SSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:28.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:02:28.527: INFO: Creating deployment "test-recreate-deployment"
Jan 30 09:02:28.534: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jan 30 09:02:28.548: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jan 30 09:02:30.566: INFO: Waiting deployment "test-recreate-deployment" to complete
Jan 30 09:02:30.571: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 2, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 2, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 2, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 2, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-845d658455\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 09:02:32.581: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jan 30 09:02:32.595: INFO: Updating deployment test-recreate-deployment
Jan 30 09:02:32.595: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 09:02:32.683: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-9141  098b0704-5d75-4caf-a797-7e4bbf6b04e9 37390327 2 2023-01-30 09:02:28 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00836aa28 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-30 09:02:32 +0000 UTC,LastTransitionTime:2023-01-30 09:02:32 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2023-01-30 09:02:32 +0000 UTC,LastTransitionTime:2023-01-30 09:02:28 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jan 30 09:02:32.689: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-9141  9e1d308a-219f-48af-8a3d-da10fbebb1e0 37390326 1 2023-01-30 09:02:32 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 098b0704-5d75-4caf-a797-7e4bbf6b04e9 0xc00836af10 0xc00836af11}] []  [{kube-controller-manager Update apps/v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"098b0704-5d75-4caf-a797-7e4bbf6b04e9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00836afa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:02:32.689: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jan 30 09:02:32.689: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-9141  c573dbb2-9674-4f5c-b0ae-0e55fd39b9ab 37390315 2 2023-01-30 09:02:28 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 098b0704-5d75-4caf-a797-7e4bbf6b04e9 0xc00836ade7 0xc00836ade8}] []  [{kube-controller-manager Update apps/v1 2023-01-30 09:02:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"098b0704-5d75-4caf-a797-7e4bbf6b04e9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00836aea8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:02:32.695: INFO: Pod "test-recreate-deployment-cd8586fc7-7ht84" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-7ht84 test-recreate-deployment-cd8586fc7- deployment-9141  0293dbdc-db3e-4ab5-af5e-fda913f49018 37390328 0 2023-01-30 09:02:32 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 9e1d308a-219f-48af-8a3d-da10fbebb1e0 0xc00836b430 0xc00836b431}] []  [{kube-controller-manager Update v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9e1d308a-219f-48af-8a3d-da10fbebb1e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 09:02:32 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5z66q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5z66q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:02:32 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:02:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:02:32 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:02:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:,StartTime:2023-01-30 09:02:32 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 09:02:32.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9141" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":266,"skipped":4878,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:32.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-8f5dbaae-f1c4-4c00-aade-c604a8c17b25
STEP: Creating a pod to test consume configMaps
Jan 30 09:02:32.766: INFO: Waiting up to 5m0s for pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9" in namespace "configmap-3734" to be "Succeeded or Failed"
Jan 30 09:02:32.771: INFO: Pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.710636ms
Jan 30 09:02:34.786: INFO: Pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018998505s
Jan 30 09:02:36.802: INFO: Pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035346979s
Jan 30 09:02:38.811: INFO: Pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.044761592s
STEP: Saw pod success
Jan 30 09:02:38.811: INFO: Pod "pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9" satisfied condition "Succeeded or Failed"
Jan 30 09:02:38.818: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:02:38.841: INFO: Waiting for pod pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9 to disappear
Jan 30 09:02:38.846: INFO: Pod pod-configmaps-be681f9d-fe12-420b-9e77-9791599fd9d9 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 09:02:38.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3734" for this suite.

• [SLOW TEST:6.148 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":267,"skipped":4880,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:38.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sched-pred
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jan 30 09:02:38.889: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 09:02:38.903: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 09:02:38.908: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk001 before test
Jan 30 09:02:38.935: INFO: argocd-server-77b58f79dc-hj98w from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container server ready: true, restart count 0
Jan 30 09:02:38.935: INFO: node-collector-container-metrics-dg55g from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 09:02:38.935: INFO: node-collector-machine-sections-jrhk5 from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 09:02:38.935: INFO: cmk-redirect-5c548ffd54-bj69z from cmk-redirect started at 2022-12-07 15:38:18 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container cmk-redirect ready: true, restart count 0
Jan 30 09:02:38.935: INFO: k8s-status-8584c5d96d-hmlxr from k8s-status started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 09:02:38.935: INFO: k8s-tuesday-static-5d79d6b47f-xl2cf from k8s-tuesday started at 2022-11-25 09:46:55 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 09:02:38.935: INFO: mypostgres-3-0 from k8s-tuesday started at 2022-11-23 14:43:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container mypostgres-3 ready: true, restart count 0
Jan 30 09:02:38.935: INFO: cilium-zpx6l from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 09:02:38.935: INFO: hubble-relay-768858c54c-vns7d from kube-system started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container hubble-relay ready: true, restart count 0
Jan 30 09:02:38.935: INFO: sealed-secrets-6c9cb56ffb-8qpbb from kube-system started at 2022-10-19 12:47:55 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container controller ready: true, restart count 2
Jan 30 09:02:38.935: INFO: fluent-bit-79bn9 from loki started at 2023-01-25 08:24:01 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 09:02:38.935: INFO: loki-0 from loki started at 2023-01-26 11:30:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container single-binary ready: true, restart count 0
Jan 30 09:02:38.935: INFO: loki-canary-lnmdz from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 09:02:38.935: INFO: loki-logs-rth4m from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 09:02:38.935: INFO: alertmanager-conoa-prod01-alertmanager-0 from monitoring started at 2022-12-16 07:28:11 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container alertmanager ready: true, restart count 1
Jan 30 09:02:38.935: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:38.935: INFO: kube-prometheus-stack-kube-state-metrics-75b97d7857-sk9xz from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jan 30 09:02:38.935: INFO: kube-prometheus-stack-prometheus-node-exporter-xzswd from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 09:02:38.935: INFO: sonobuoy-e2e-job-bdc8027a22bb485c from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container e2e ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:02:38.935: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-5vfkz from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:02:38.935: INFO: trident-csi-7c4cd7bbcb-mkm5j from trident started at 2022-11-28 14:09:24 +0000 UTC (6 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container csi-attacher ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container csi-provisioner ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container csi-resizer ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container csi-snapshotter ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container trident-autosupport ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 09:02:38.935: INFO: trident-csi-f6mmx from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.935: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 09:02:38.935: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk002 before test
Jan 30 09:02:38.955: INFO: argocd-application-controller-0 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container application-controller ready: true, restart count 0
Jan 30 09:02:38.955: INFO: argocd-applicationset-controller-54bb64dbb5-7brsg from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container applicationset-controller ready: true, restart count 0
Jan 30 09:02:38.955: INFO: argocd-dex-server-5585d7cbd9-qzbv5 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container dex-server ready: true, restart count 0
Jan 30 09:02:38.955: INFO: argocd-repo-server-6ff8bdf59f-fkmxn from argocd started at 2023-01-26 12:56:26 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container repo-server ready: true, restart count 0
Jan 30 09:02:38.955: INFO: cert-manager-cainjector-7f694c4c58-mgcqx from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container cert-manager-cainjector ready: true, restart count 0
Jan 30 09:02:38.955: INFO: cluster-collector-658c4444c4-sgbnb from checkmk-monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container cluster-collector ready: true, restart count 0
Jan 30 09:02:38.955: INFO: node-collector-container-metrics-h6m9f from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 09:02:38.955: INFO: node-collector-machine-sections-8q5tz from checkmk-monitoring started at 2022-12-02 12:39:51 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 09:02:38.955: INFO: ingress-nginx-controller-647d54b58b-twn6k from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container controller ready: true, restart count 0
Jan 30 09:02:38.955: INFO: k8s-status-8584c5d96d-dwhms from k8s-status started at 2022-12-02 08:33:48 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 09:02:38.955: INFO: k8s-tuesday-static-5d79d6b47f-wphmx from k8s-tuesday started at 2022-11-25 09:46:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 09:02:38.955: INFO: mypostgres-5-0 from k8s-tuesday started at 2022-12-05 10:12:37 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container mypostgres-5 ready: true, restart count 0
Jan 30 09:02:38.955: INFO: mypostgres-6-0 from k8s-tuesday started at 2022-12-15 14:39:35 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container mypostgres-6 ready: true, restart count 0
Jan 30 09:02:38.955: INFO: cilium-lblbj from kube-system started at 2022-10-19 12:37:54 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 09:02:38.955: INFO: metrics-server-7cd9d56884-5cr4h from kube-system started at 2022-11-16 17:38:11 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container metrics-server ready: true, restart count 14
Jan 30 09:02:38.955: INFO: kubegres-controller-manager-8495978cb9-vhhtq from kubegres-system started at 2022-11-08 09:55:48 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container kube-rbac-proxy ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container manager ready: true, restart count 0
Jan 30 09:02:38.955: INFO: fluent-bit-cwdz7 from loki started at 2023-01-25 08:23:43 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 09:02:38.955: INFO: grafana-674c6bb94d-lv6gl from loki started at 2022-12-16 07:22:53 +0000 UTC (3 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container grafana ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container grafana-sc-dashboard ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container grafana-sc-datasources ready: true, restart count 0
Jan 30 09:02:38.955: INFO: loki-canary-8xx7v from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 09:02:38.955: INFO: loki-grafana-agent-operator-5555fc45d8-qjcgg from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container grafana-agent-operator ready: true, restart count 0
Jan 30 09:02:38.955: INFO: loki-logs-pt9jp from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 09:02:38.955: INFO: kube-prometheus-stack-prometheus-node-exporter-j955v from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 09:02:38.955: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-844qc from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:02:38.955: INFO: trident-csi-2gb6l from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 09:02:38.955: INFO: trident-operator-5f4988667c-ww7fk from trident started at 2022-12-15 15:49:06 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.955: INFO: 	Container trident-operator ready: true, restart count 0
Jan 30 09:02:38.955: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk003 before test
Jan 30 09:02:38.979: INFO: node-collector-container-metrics-zwntz from checkmk-monitoring started at 2023-01-30 08:16:23 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 09:02:38.979: INFO: node-collector-machine-sections-nk4qz from checkmk-monitoring started at 2023-01-30 08:16:28 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 09:02:38.979: INFO: k8s-tuesday-6576b5dbdf-mpddm from k8s-tuesday started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container k8s-tuesday ready: false, restart count 0
Jan 30 09:02:38.979: INFO: cilium-mnm26 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 09:02:38.979: INFO: cilium-operator-746975c47c-4g5b9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container cilium-operator ready: true, restart count 14
Jan 30 09:02:38.979: INFO: fluent-bit-x45pn from loki started at 2023-01-30 08:16:33 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 09:02:38.979: INFO: loki-canary-wlvcw from loki started at 2023-01-30 08:16:51 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 09:02:38.979: INFO: loki-logs-7v784 from loki started at 2023-01-30 08:16:31 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 09:02:38.979: INFO: kube-prometheus-stack-prometheus-node-exporter-h2dhq from monitoring started at 2023-01-30 08:16:32 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 09:02:38.979: INFO: prometheus-conoa-prod01-prometheus-0 from monitoring started at 2023-01-30 08:16:29 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 	Container prometheus ready: true, restart count 0
Jan 30 09:02:38.979: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-rl4mv from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:02:38.979: INFO: trident-csi-jq2pf from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:38.979: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 	Container trident-main ready: true, restart count 0
Jan 30 09:02:38.979: INFO: 
Logging pods the apiserver thinks is on node conoa-prod01-wk004 before test
Jan 30 09:02:39.003: INFO: argocd-notifications-controller-59b986f5cb-c8wk6 from argocd started at 2023-01-26 12:56:28 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container notifications-controller ready: true, restart count 0
Jan 30 09:02:39.003: INFO: argocd-redis-56bcf8f58d-wqh45 from argocd started at 2023-01-26 12:56:27 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container redis ready: true, restart count 0
Jan 30 09:02:39.003: INFO: cert-manager-85945b75d4-kwb8z from cert-manager started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container cert-manager-controller ready: true, restart count 0
Jan 30 09:02:39.003: INFO: cert-manager-webhook-7cd8c769bb-dfsm6 from cert-manager started at 2023-01-18 13:44:09 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container cert-manager-webhook ready: true, restart count 0
Jan 30 09:02:39.003: INFO: node-collector-container-metrics-bw8zr from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container cadvisor ready: true, restart count 0
Jan 30 09:02:39.003: INFO: 	Container container-metrics-collector ready: true, restart count 0
Jan 30 09:02:39.003: INFO: node-collector-machine-sections-pmhpf from checkmk-monitoring started at 2022-12-02 12:39:50 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container machine-sections-collector ready: true, restart count 0
Jan 30 09:02:39.003: INFO: ingress-nginx-controller-647d54b58b-p9ppz from ingress-nginx started at 2022-10-19 12:39:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container controller ready: true, restart count 0
Jan 30 09:02:39.003: INFO: init-demo from jonas started at 2022-10-20 14:11:25 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container nginx ready: true, restart count 0
Jan 30 09:02:39.003: INFO: k8s-status-8584c5d96d-tpq7j from k8s-status started at 2022-12-02 08:33:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container k8s-status ready: true, restart count 0
Jan 30 09:02:39.003: INFO: k8s-tuesday-static-5d79d6b47f-xgfgq from k8s-tuesday started at 2022-11-25 09:46:59 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container k8s-tuesday-static ready: true, restart count 0
Jan 30 09:02:39.003: INFO: cilium-56rw9 from kube-system started at 2022-10-19 12:37:53 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container cilium-agent ready: true, restart count 0
Jan 30 09:02:39.003: INFO: hubble-ui-64bd8dcbf5-654qq from kube-system started at 2023-01-30 08:16:19 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container backend ready: true, restart count 0
Jan 30 09:02:39.003: INFO: 	Container frontend ready: true, restart count 0
Jan 30 09:02:39.003: INFO: kubernetes-dashboard-7bcd8f7c6d-p7nzq from kubernetes-dashboard started at 2022-10-19 12:47:15 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jan 30 09:02:39.003: INFO: fluent-bit-c5vmh from loki started at 2023-01-25 08:24:09 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container fluent-bit ready: true, restart count 0
Jan 30 09:02:39.003: INFO: loki-canary-gjffw from loki started at 2022-12-05 10:11:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container loki-canary ready: true, restart count 0
Jan 30 09:02:39.003: INFO: loki-logs-9h6jm from loki started at 2022-12-05 10:11:19 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container config-reloader ready: true, restart count 0
Jan 30 09:02:39.003: INFO: 	Container grafana-agent ready: true, restart count 0
Jan 30 09:02:39.003: INFO: conoa-prod01-operator-5b7996ffd-g75rd from monitoring started at 2023-01-30 08:16:19 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
Jan 30 09:02:39.003: INFO: kube-prometheus-stack-prometheus-node-exporter-cd45h from monitoring started at 2022-12-16 07:28:00 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container node-exporter ready: true, restart count 0
Jan 30 09:02:39.003: INFO: sonobuoy from sonobuoy started at 2023-01-30 07:50:08 +0000 UTC (1 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 09:02:39.003: INFO: sonobuoy-systemd-logs-daemon-set-4248ae93afd2443e-mtd4x from sonobuoy started at 2023-01-30 07:50:13 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:02:39.003: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:02:39.003: INFO: trident-csi-vhc58 from trident started at 2022-11-28 14:09:56 +0000 UTC (2 container statuses recorded)
Jan 30 09:02:39.003: INFO: 	Container driver-registrar ready: true, restart count 0
Jan 30 09:02:39.003: INFO: 	Container trident-main ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-4b5b9895-81e7-4e41-ba18-800c4704d511 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-4b5b9895-81e7-4e41-ba18-800c4704d511 off the node conoa-prod01-wk003
STEP: verifying the node doesn't have the label kubernetes.io/e2e-4b5b9895-81e7-4e41-ba18-800c4704d511
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:02:45.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7814" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:6.305 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":268,"skipped":4898,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:45.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-938a34b9-e875-442a-be17-6c96a8b8ff78
STEP: Creating a pod to test consume secrets
Jan 30 09:02:45.215: INFO: Waiting up to 5m0s for pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c" in namespace "secrets-7384" to be "Succeeded or Failed"
Jan 30 09:02:45.220: INFO: Pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.94539ms
Jan 30 09:02:47.230: INFO: Pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015301218s
Jan 30 09:02:49.243: INFO: Pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028489955s
Jan 30 09:02:51.260: INFO: Pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.045066123s
STEP: Saw pod success
Jan 30 09:02:51.260: INFO: Pod "pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c" satisfied condition "Succeeded or Failed"
Jan 30 09:02:51.264: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 09:02:51.291: INFO: Waiting for pod pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c to disappear
Jan 30 09:02:51.296: INFO: Pod pod-secrets-d52161b2-46ff-4b14-935a-e4b8cb1d607c no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:02:51.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7384" for this suite.

• [SLOW TEST:6.153 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":269,"skipped":4923,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:51.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-ff772aae-1db3-4c0f-8f90-c44e11162ddb
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:02:51.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8818" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":270,"skipped":4936,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:51.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 09:02:51.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2151" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":271,"skipped":4941,"failed":0}
SS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:51.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:02:55.496: INFO: Deleting pod "var-expansion-fea06218-f658-4fab-bce3-bba1602982f8" in namespace "var-expansion-5937"
Jan 30 09:02:55.512: INFO: Wait up to 5m0s for pod "var-expansion-fea06218-f658-4fab-bce3-bba1602982f8" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 09:02:57.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5937" for this suite.

• [SLOW TEST:6.112 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":272,"skipped":4943,"failed":0}
SS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:02:57.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 30 09:02:57.603: INFO: The status of Pod pod-update-33383400-216d-43ac-8ca4-88eaaf997f44 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:02:59.613: INFO: The status of Pod pod-update-33383400-216d-43ac-8ca4-88eaaf997f44 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:03:01.615: INFO: The status of Pod pod-update-33383400-216d-43ac-8ca4-88eaaf997f44 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:03:03.620: INFO: The status of Pod pod-update-33383400-216d-43ac-8ca4-88eaaf997f44 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:03:05.619: INFO: The status of Pod pod-update-33383400-216d-43ac-8ca4-88eaaf997f44 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jan 30 09:03:06.164: INFO: Successfully updated pod "pod-update-33383400-216d-43ac-8ca4-88eaaf997f44"
STEP: verifying the updated pod is in kubernetes
Jan 30 09:03:06.176: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 09:03:06.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1633" for this suite.

• [SLOW TEST:8.652 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":273,"skipped":4945,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:06.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename proxy
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:03:06.235: INFO: Creating pod...
Jan 30 09:03:10.271: INFO: Creating service...
Jan 30 09:03:10.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=DELETE
Jan 30 09:03:10.303: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:03:10.303: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=OPTIONS
Jan 30 09:03:10.309: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:03:10.309: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=PATCH
Jan 30 09:03:10.314: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:03:10.314: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=POST
Jan 30 09:03:10.320: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:03:10.320: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=PUT
Jan 30 09:03:10.325: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 09:03:10.325: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=DELETE
Jan 30 09:03:10.333: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:03:10.333: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jan 30 09:03:10.341: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:03:10.341: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=PATCH
Jan 30 09:03:10.351: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:03:10.351: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=POST
Jan 30 09:03:10.360: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:03:10.360: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=PUT
Jan 30 09:03:10.368: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 09:03:10.368: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=GET
Jan 30 09:03:10.373: INFO: http.Client request:GET StatusCode:301
Jan 30 09:03:10.373: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=GET
Jan 30 09:03:10.380: INFO: http.Client request:GET StatusCode:301
Jan 30 09:03:10.380: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/pods/agnhost/proxy?method=HEAD
Jan 30 09:03:10.385: INFO: http.Client request:HEAD StatusCode:301
Jan 30 09:03:10.385: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8871/services/e2e-proxy-test-service/proxy?method=HEAD
Jan 30 09:03:10.393: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 30 09:03:10.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-8871" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":274,"skipped":4984,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:10.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:03:10.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6315" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":275,"skipped":5033,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:10.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:03:10.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jan 30 09:03:16.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-5318 --namespace=crd-publish-openapi-5318 create -f -'
Jan 30 09:03:17.190: INFO: stderr: ""
Jan 30 09:03:17.190: INFO: stdout: "e2e-test-crd-publish-openapi-2847-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 30 09:03:17.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-5318 --namespace=crd-publish-openapi-5318 delete e2e-test-crd-publish-openapi-2847-crds test-cr'
Jan 30 09:03:17.282: INFO: stderr: ""
Jan 30 09:03:17.282: INFO: stdout: "e2e-test-crd-publish-openapi-2847-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jan 30 09:03:17.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-5318 --namespace=crd-publish-openapi-5318 apply -f -'
Jan 30 09:03:18.037: INFO: stderr: ""
Jan 30 09:03:18.037: INFO: stdout: "e2e-test-crd-publish-openapi-2847-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 30 09:03:18.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-5318 --namespace=crd-publish-openapi-5318 delete e2e-test-crd-publish-openapi-2847-crds test-cr'
Jan 30 09:03:18.126: INFO: stderr: ""
Jan 30 09:03:18.126: INFO: stdout: "e2e-test-crd-publish-openapi-2847-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jan 30 09:03:18.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=crd-publish-openapi-5318 explain e2e-test-crd-publish-openapi-2847-crds'
Jan 30 09:03:18.888: INFO: stderr: ""
Jan 30 09:03:18.888: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-2847-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:03:24.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5318" for this suite.

• [SLOW TEST:13.943 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":276,"skipped":5046,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:24.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 09:03:24.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-579" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":277,"skipped":5095,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:24.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jan 30 09:03:24.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:03:53.685: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9218" for this suite.

• [SLOW TEST:29.168 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":278,"skipped":5102,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:53.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Jan 30 09:03:53.796: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7549  57cf44a2-d0a4-4f46-b8f5-234b295b046b 37390932 0 2023-01-30 09:03:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-30 09:03:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 09:03:53.796: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7549  57cf44a2-d0a4-4f46-b8f5-234b295b046b 37390933 0 2023-01-30 09:03:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-30 09:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Jan 30 09:03:53.820: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7549  57cf44a2-d0a4-4f46-b8f5-234b295b046b 37390934 0 2023-01-30 09:03:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-30 09:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 09:03:53.820: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7549  57cf44a2-d0a4-4f46-b8f5-234b295b046b 37390935 0 2023-01-30 09:03:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2023-01-30 09:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 30 09:03:53.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7549" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":279,"skipped":5116,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:03:53.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename statefulset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-916
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jan 30 09:03:53.885: INFO: Found 0 stateful pods, waiting for 3
Jan 30 09:04:03.899: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:04:03.899: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:04:03.899: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:04:03.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-916 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:04:04.149: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:04:04.149: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:04:04.149: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jan 30 09:04:14.213: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Jan 30 09:04:24.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-916 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:04:24.449: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:04:24.449: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:04:24.449: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Jan 30 09:04:34.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-916 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:04:34.703: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:04:34.704: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:04:34.704: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 09:04:44.775: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Jan 30 09:04:54.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=statefulset-916 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:04:55.035: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:04:55.035: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:04:55.035: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jan 30 09:05:05.081: INFO: Deleting all statefulset in ns statefulset-916
Jan 30 09:05:05.086: INFO: Scaling statefulset ss2 to 0
Jan 30 09:05:15.128: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 09:05:15.133: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jan 30 09:05:15.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-916" for this suite.

• [SLOW TEST:81.334 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":280,"skipped":5160,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:05:15.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename proxy
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:05:15.202: INFO: Creating pod...
Jan 30 09:05:19.233: INFO: Creating service...
Jan 30 09:05:19.257: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/DELETE
Jan 30 09:05:19.265: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:05:19.266: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/GET
Jan 30 09:05:19.273: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 30 09:05:19.273: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/HEAD
Jan 30 09:05:19.279: INFO: http.Client request:HEAD | StatusCode:200
Jan 30 09:05:19.280: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/OPTIONS
Jan 30 09:05:19.286: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:05:19.286: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/PATCH
Jan 30 09:05:19.291: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:05:19.291: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/POST
Jan 30 09:05:19.297: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:05:19.297: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/pods/agnhost/proxy/some/path/with/PUT
Jan 30 09:05:19.302: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 09:05:19.302: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/DELETE
Jan 30 09:05:19.310: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:05:19.310: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/GET
Jan 30 09:05:19.317: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 30 09:05:19.317: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/HEAD
Jan 30 09:05:19.324: INFO: http.Client request:HEAD | StatusCode:200
Jan 30 09:05:19.324: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/OPTIONS
Jan 30 09:05:19.332: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:05:19.332: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/PATCH
Jan 30 09:05:19.342: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:05:19.342: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/POST
Jan 30 09:05:19.352: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:05:19.352: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8510/services/test-service/proxy/some/path/with/PUT
Jan 30 09:05:19.360: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 30 09:05:19.360: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-8510" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":281,"skipped":5178,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:05:19.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename cronjob
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 30 09:11:01.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-6062" for this suite.

• [SLOW TEST:342.124 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":282,"skipped":5204,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:01.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename runtimeclass
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jan 30 09:11:01.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2460" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5220,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:01.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 30 09:11:01.645: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:03.662: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:05.661: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 30 09:11:05.720: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:07.736: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:09.738: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jan 30 09:11:09.770: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 30 09:11:09.777: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 30 09:11:11.778: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 30 09:11:11.791: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 30 09:11:11.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3112" for this suite.

• [SLOW TEST:10.225 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":284,"skipped":5232,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:11.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jan 30 09:11:11.864: INFO: Waiting up to 5m0s for pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b" in namespace "emptydir-8448" to be "Succeeded or Failed"
Jan 30 09:11:11.871: INFO: Pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.465983ms
Jan 30 09:11:13.879: INFO: Pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014451902s
Jan 30 09:11:15.896: INFO: Pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031791095s
Jan 30 09:11:17.912: INFO: Pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.047751317s
STEP: Saw pod success
Jan 30 09:11:17.912: INFO: Pod "pod-c95c442f-e2fd-4a21-b836-b7299b369f7b" satisfied condition "Succeeded or Failed"
Jan 30 09:11:17.918: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-c95c442f-e2fd-4a21-b836-b7299b369f7b container test-container: <nil>
STEP: delete the pod
Jan 30 09:11:17.948: INFO: Waiting for pod pod-c95c442f-e2fd-4a21-b836-b7299b369f7b to disappear
Jan 30 09:11:17.953: INFO: Pod pod-c95c442f-e2fd-4a21-b836-b7299b369f7b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 09:11:17.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8448" for this suite.

• [SLOW TEST:6.151 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5268,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:17.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Jan 30 09:11:18.027: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.027: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.038: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.038: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.051: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.051: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.070: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:18.070: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 09:11:20.570: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 30 09:11:20.570: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 30 09:11:20.636: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Jan 30 09:11:20.652: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 0
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.665: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.665: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.702: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.702: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:20.710: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:20.710: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:20.717: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:20.717: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:22.587: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:22.587: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:22.600: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
STEP: listing Deployments
Jan 30 09:11:22.620: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Jan 30 09:11:22.643: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Jan 30 09:11:22.652: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:22.655: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:22.669: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:22.681: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:22.689: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:24.603: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:24.627: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:24.639: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 09:11:27.258: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Jan 30 09:11:27.302: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 1
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 2
Jan 30 09:11:27.303: INFO: observed Deployment test-deployment in namespace deployment-3420 with ReadyReplicas 3
STEP: deleting the Deployment
Jan 30 09:11:27.317: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.318: INFO: observed event type MODIFIED
Jan 30 09:11:27.319: INFO: observed event type MODIFIED
Jan 30 09:11:27.319: INFO: observed event type MODIFIED
Jan 30 09:11:27.319: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 09:11:27.325: INFO: Log out all the ReplicaSets if there is no deployment created
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 09:11:27.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3420" for this suite.

• [SLOW TEST:9.375 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":286,"skipped":5283,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:27.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jan 30 09:11:27.398: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:29.411: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jan 30 09:11:29.432: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:31.449: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:33.444: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jan 30 09:11:33.462: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 30 09:11:33.468: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 30 09:11:35.469: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 30 09:11:35.476: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jan 30 09:11:35.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-2229" for this suite.

• [SLOW TEST:8.166 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5297,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:35.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename resourcequota
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jan 30 09:11:46.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5514" for this suite.

• [SLOW TEST:11.153 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":288,"skipped":5309,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:11:46.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename cronjob
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jan 30 09:13:00.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-2752" for this suite.

• [SLOW TEST:74.124 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":289,"skipped":5374,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:00.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:13:00.821: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jan 30 09:13:00.842: INFO: The status of Pod pod-logs-websocket-8c9d92e4-0c73-44b1-81a7-e759d5b5ee5d is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:13:02.855: INFO: The status of Pod pod-logs-websocket-8c9d92e4-0c73-44b1-81a7-e759d5b5ee5d is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:13:04.853: INFO: The status of Pod pod-logs-websocket-8c9d92e4-0c73-44b1-81a7-e759d5b5ee5d is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 09:13:04.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6225" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":290,"skipped":5382,"failed":0}
SSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:04.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9c4ffcb6-5aa0-4a0e-93ac-dc761822f024 in namespace container-probe-6081
Jan 30 09:13:06.984: INFO: Started pod liveness-9c4ffcb6-5aa0-4a0e-93ac-dc761822f024 in namespace container-probe-6081
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 09:13:06.990: INFO: Initial restart count of pod liveness-9c4ffcb6-5aa0-4a0e-93ac-dc761822f024 is 0
Jan 30 09:13:27.151: INFO: Restart count of pod container-probe-6081/liveness-9c4ffcb6-5aa0-4a0e-93ac-dc761822f024 is now 1 (20.161291895s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 09:13:27.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6081" for this suite.

• [SLOW TEST:22.278 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5387,"failed":0}
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:27.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename security-context-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:13:27.232: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217" in namespace "security-context-test-1597" to be "Succeeded or Failed"
Jan 30 09:13:27.237: INFO: Pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217": Phase="Pending", Reason="", readiness=false. Elapsed: 4.604788ms
Jan 30 09:13:29.251: INFO: Pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018305043s
Jan 30 09:13:31.267: INFO: Pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034309557s
Jan 30 09:13:33.282: INFO: Pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.049092043s
Jan 30 09:13:33.282: INFO: Pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217" satisfied condition "Succeeded or Failed"
Jan 30 09:13:33.299: INFO: Got logs for pod "busybox-privileged-false-9b59e8f1-ced7-4c64-b8a7-aa381d9be217": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jan 30 09:13:33.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1597" for this suite.

• [SLOW TEST:6.123 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:234
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":292,"skipped":5393,"failed":0}
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:33.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-744c7d4d-22d5-4334-82cf-370366493eb3
STEP: Creating a pod to test consume configMaps
Jan 30 09:13:33.358: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9" in namespace "projected-1231" to be "Succeeded or Failed"
Jan 30 09:13:33.364: INFO: Pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.48473ms
Jan 30 09:13:35.375: INFO: Pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017738327s
Jan 30 09:13:37.386: INFO: Pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028143851s
Jan 30 09:13:39.401: INFO: Pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043018587s
STEP: Saw pod success
Jan 30 09:13:39.401: INFO: Pod "pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9" satisfied condition "Succeeded or Failed"
Jan 30 09:13:39.407: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:13:39.437: INFO: Waiting for pod pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9 to disappear
Jan 30 09:13:39.442: INFO: Pod pod-projected-configmaps-8ac2ec6c-d7f8-451d-8ac3-79ea77ca43d9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 09:13:39.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1231" for this suite.

• [SLOW TEST:6.141 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":293,"skipped":5393,"failed":0}
SSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:39.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:13:39.500: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jan 30 09:13:44.516: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 30 09:13:44.516: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 09:13:48.570: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-7480  71d4ef68-b348-4d7f-8a41-7746ef903b95 37393985 1 2023-01-30 09:13:44 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2023-01-30 09:13:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:13:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc008b1eca8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 09:13:44 +0000 UTC,LastTransitionTime:2023-01-30 09:13:44 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2023-01-30 09:13:47 +0000 UTC,LastTransitionTime:2023-01-30 09:13:44 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 09:13:48.577: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-7480  7ac41650-406a-48d5-b545-13317878f65a 37393975 1 2023-01-30 09:13:44 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 71d4ef68-b348-4d7f-8a41-7746ef903b95 0xc008b1f087 0xc008b1f088}] []  [{kube-controller-manager Update apps/v1 2023-01-30 09:13:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"71d4ef68-b348-4d7f-8a41-7746ef903b95\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:13:47 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc008b1f138 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:13:48.584: INFO: Pod "test-cleanup-deployment-6755c7b765-24kvr" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-24kvr test-cleanup-deployment-6755c7b765- deployment-7480  dbb54002-f16d-48d2-a3fe-373735834f22 37393974 0 2023-01-30 09:13:44 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 7ac41650-406a-48d5-b545-13317878f65a 0xc008b1f4d7 0xc008b1f4d8}] []  [{kube-controller-manager Update v1 2023-01-30 09:13:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7ac41650-406a-48d5-b545-13317878f65a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 09:13:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.104\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hwx6z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hwx6z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:13:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:13:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:13:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:13:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.104,StartTime:2023-01-30 09:13:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 09:13:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:cri-o://4ddaac3e679511757cc999a6fdb99788fc2eb548571f7854687015d421fadc77,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.104,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 09:13:48.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7480" for this suite.

• [SLOW TEST:9.146 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":294,"skipped":5399,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:13:48.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-1344
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1344 to expose endpoints map[]
Jan 30 09:13:48.668: INFO: successfully validated that service endpoint-test2 in namespace services-1344 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-1344
Jan 30 09:13:48.683: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:13:50.699: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:13:52.699: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1344 to expose endpoints map[pod1:[80]]
Jan 30 09:13:52.722: INFO: successfully validated that service endpoint-test2 in namespace services-1344 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Jan 30 09:13:52.722: INFO: Creating new exec pod
Jan 30 09:13:57.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 30 09:13:58.007: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 09:13:58.007: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:13:58.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.199.33 80'
Jan 30 09:13:58.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.199.33 80\nConnection to 10.98.199.33 80 port [tcp/http] succeeded!\n"
Jan 30 09:13:58.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-1344
Jan 30 09:13:58.255: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:14:00.264: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:14:02.264: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1344 to expose endpoints map[pod1:[80] pod2:[80]]
Jan 30 09:14:02.291: INFO: successfully validated that service endpoint-test2 in namespace services-1344 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Jan 30 09:14:03.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 30 09:14:03.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:03.515: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:14:03.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.199.33 80'
Jan 30 09:14:03.720: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.199.33 80\nConnection to 10.98.199.33 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:03.721: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-1344
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1344 to expose endpoints map[pod2:[80]]
Jan 30 09:14:04.792: INFO: successfully validated that service endpoint-test2 in namespace services-1344 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Jan 30 09:14:05.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jan 30 09:14:06.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:06.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:14:06.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-1344 exec execpod2zqsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.199.33 80'
Jan 30 09:14:06.211: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.199.33 80\nConnection to 10.98.199.33 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:06.211: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-1344
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1344 to expose endpoints map[]
Jan 30 09:14:07.259: INFO: successfully validated that service endpoint-test2 in namespace services-1344 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 09:14:07.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1344" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:18.695 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":295,"skipped":5442,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:14:07.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pod-network-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-5867
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 30 09:14:07.327: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 09:14:07.384: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:14:09.401: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:14:11.405: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:13.396: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:15.400: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:17.396: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:19.401: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:21.401: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:23.397: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:25.397: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:27.395: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:14:29.396: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 30 09:14:29.406: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 30 09:14:29.417: INFO: The status of Pod netserver-2 is Running (Ready = true)
Jan 30 09:14:29.428: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Jan 30 09:14:33.489: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Jan 30 09:14:33.490: INFO: Going to poll 10.0.1.190 on port 8081 at least 0 times, with a maximum of 46 tries before failing
Jan 30 09:14:33.496: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.1.190 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5867 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:14:33.496: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:14:33.497: INFO: ExecWithOptions: Clientset creation
Jan 30 09:14:33.497: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5867/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.1.190+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:14:34.619: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 30 09:14:34.620: INFO: Going to poll 10.0.3.216 on port 8081 at least 0 times, with a maximum of 46 tries before failing
Jan 30 09:14:34.631: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.3.216 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5867 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:14:34.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:14:34.632: INFO: ExecWithOptions: Clientset creation
Jan 30 09:14:34.632: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5867/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.3.216+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:14:35.756: INFO: Found all 1 expected endpoints: [netserver-1]
Jan 30 09:14:35.756: INFO: Going to poll 10.0.0.242 on port 8081 at least 0 times, with a maximum of 46 tries before failing
Jan 30 09:14:35.767: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.0.242 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5867 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:14:35.767: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:14:35.768: INFO: ExecWithOptions: Clientset creation
Jan 30 09:14:35.768: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5867/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.0.242+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:14:36.897: INFO: Found all 1 expected endpoints: [netserver-2]
Jan 30 09:14:36.897: INFO: Going to poll 10.0.2.254 on port 8081 at least 0 times, with a maximum of 46 tries before failing
Jan 30 09:14:36.906: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.2.254 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5867 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:14:36.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:14:36.907: INFO: ExecWithOptions: Clientset creation
Jan 30 09:14:36.907: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5867/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.2.254+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:14:38.013: INFO: Found all 1 expected endpoints: [netserver-3]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 30 09:14:38.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-5867" for this suite.

• [SLOW TEST:30.747 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":296,"skipped":5454,"failed":0}
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:14:38.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Jan 30 09:14:38.091: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:15:38.287: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:15:38.293: INFO: Starting informer...
STEP: Starting pods...
Jan 30 09:15:38.522: INFO: Pod1 is running on conoa-prod01-wk003. Tainting Node
Jan 30 09:15:42.764: INFO: Pod2 is running on conoa-prod01-wk003. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Jan 30 09:15:48.823: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jan 30 09:16:08.667: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:16:08.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-8272" for this suite.

• [SLOW TEST:90.674 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":297,"skipped":5458,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:08.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 30 09:16:08.798: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:08.798: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:08.798: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:08.803: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:16:08.803: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:16:09.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:09.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:09.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:09.825: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:16:09.825: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:16:10.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:10.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:10.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:10.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:16:10.826: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:16:11.816: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:11.816: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:11.816: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:11.824: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:16:11.824: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 09:16:12.813: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:12.813: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:12.813: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:12.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:16:12.820: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 09:16:13.820: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:13.820: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:13.820: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:13.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:16:13.826: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 09:16:14.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:14.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:14.817: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:14.825: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:16:14.825: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 09:16:15.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:15.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:15.819: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:15.827: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jan 30 09:16:15.827: INFO: Node conoa-prod01-wk003 is running 0 daemon pod, expected 1
Jan 30 09:16:16.821: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:16.821: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:16.821: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:16:16.827: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 09:16:16.827: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: Getting /status
Jan 30 09:16:16.839: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Jan 30 09:16:16.857: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Jan 30 09:16:16.860: INFO: Observed &DaemonSet event: ADDED
Jan 30 09:16:16.860: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.860: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.860: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.861: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.861: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.861: INFO: Found daemon set daemon-set in namespace daemonsets-7676 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 09:16:16.861: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Jan 30 09:16:16.881: INFO: Observed &DaemonSet event: ADDED
Jan 30 09:16:16.881: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.881: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.881: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.882: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.882: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.882: INFO: Observed daemon set daemon-set in namespace daemonsets-7676 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 09:16:16.882: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:16:16.882: INFO: Found daemon set daemon-set in namespace daemonsets-7676 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jan 30 09:16:16.882: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7676, will wait for the garbage collector to delete the pods
Jan 30 09:16:16.954: INFO: Deleting DaemonSet.extensions daemon-set took: 11.586481ms
Jan 30 09:16:17.055: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.323901ms
Jan 30 09:16:19.765: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:16:19.765: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 09:16:19.772: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37395236"},"items":null}

Jan 30 09:16:19.777: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37395236"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:16:19.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7676" for this suite.

• [SLOW TEST:11.102 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":298,"skipped":5466,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:19.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:16:19.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:16:20.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4862" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":299,"skipped":5471,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:20.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-529a5abf-e572-4fe6-81d0-03a739e638cd
STEP: Creating the pod
Jan 30 09:16:21.001: INFO: The status of Pod pod-configmaps-a7e91967-625b-4fc8-a6f5-fdc81fe8116a is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:16:23.011: INFO: The status of Pod pod-configmaps-a7e91967-625b-4fc8-a6f5-fdc81fe8116a is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-529a5abf-e572-4fe6-81d0-03a739e638cd
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 09:16:25.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8726" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5480,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:25.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename conformance-tests
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Jan 30 09:16:25.116: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Jan 30 09:16:25.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-4501" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":301,"skipped":5548,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:25.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename gc
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Jan 30 09:16:31.231: INFO: 89 pods remaining
Jan 30 09:16:31.231: INFO: 80 pods has nil DeletionTimestamp
Jan 30 09:16:31.231: INFO: 
Jan 30 09:16:32.235: INFO: 87 pods remaining
Jan 30 09:16:32.235: INFO: 70 pods has nil DeletionTimestamp
Jan 30 09:16:32.235: INFO: 
Jan 30 09:16:33.229: INFO: 82 pods remaining
Jan 30 09:16:33.229: INFO: 60 pods has nil DeletionTimestamp
Jan 30 09:16:33.230: INFO: 
Jan 30 09:16:34.239: INFO: 79 pods remaining
Jan 30 09:16:34.239: INFO: 40 pods has nil DeletionTimestamp
Jan 30 09:16:34.239: INFO: 
Jan 30 09:16:35.233: INFO: 79 pods remaining
Jan 30 09:16:35.233: INFO: 30 pods has nil DeletionTimestamp
Jan 30 09:16:35.233: INFO: 
Jan 30 09:16:36.229: INFO: 79 pods remaining
Jan 30 09:16:36.229: INFO: 20 pods has nil DeletionTimestamp
Jan 30 09:16:36.229: INFO: 
Jan 30 09:16:37.231: INFO: 79 pods remaining
Jan 30 09:16:37.231: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:37.231: INFO: 
Jan 30 09:16:38.235: INFO: 75 pods remaining
Jan 30 09:16:38.235: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:38.235: INFO: 
Jan 30 09:16:39.237: INFO: 65 pods remaining
Jan 30 09:16:39.237: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:39.237: INFO: 
Jan 30 09:16:40.234: INFO: 57 pods remaining
Jan 30 09:16:40.234: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:40.234: INFO: 
Jan 30 09:16:41.231: INFO: 50 pods remaining
Jan 30 09:16:41.231: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:41.231: INFO: 
Jan 30 09:16:42.232: INFO: 41 pods remaining
Jan 30 09:16:42.232: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:42.232: INFO: 
Jan 30 09:16:43.226: INFO: 35 pods remaining
Jan 30 09:16:43.226: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:43.226: INFO: 
Jan 30 09:16:44.236: INFO: 27 pods remaining
Jan 30 09:16:44.236: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:44.236: INFO: 
Jan 30 09:16:45.225: INFO: 17 pods remaining
Jan 30 09:16:45.225: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:45.225: INFO: 
Jan 30 09:16:46.224: INFO: 8 pods remaining
Jan 30 09:16:46.224: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:46.224: INFO: 
Jan 30 09:16:47.216: INFO: 0 pods remaining
Jan 30 09:16:47.216: INFO: 0 pods has nil DeletionTimestamp
Jan 30 09:16:47.216: INFO: 
STEP: Gathering metrics
Jan 30 09:16:48.268: INFO: The status of Pod kube-controller-manager-conoa-prod01-cp003 is Running (Ready = true)
Jan 30 09:16:48.385: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jan 30 09:16:48.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1601" for this suite.

• [SLOW TEST:23.260 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":302,"skipped":5554,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:48.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:16:48.446: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173" in namespace "projected-1472" to be "Succeeded or Failed"
Jan 30 09:16:48.452: INFO: Pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173": Phase="Pending", Reason="", readiness=false. Elapsed: 5.641236ms
Jan 30 09:16:50.462: INFO: Pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016348953s
Jan 30 09:16:52.479: INFO: Pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173": Phase="Pending", Reason="", readiness=false. Elapsed: 4.032900821s
Jan 30 09:16:54.494: INFO: Pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.048509023s
STEP: Saw pod success
Jan 30 09:16:54.495: INFO: Pod "downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173" satisfied condition "Succeeded or Failed"
Jan 30 09:16:54.499: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173 container client-container: <nil>
STEP: delete the pod
Jan 30 09:16:54.526: INFO: Waiting for pod downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173 to disappear
Jan 30 09:16:54.529: INFO: Pod downwardapi-volume-d9ef7482-6df8-4ba0-9a6f-0e7ca62e1173 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 09:16:54.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1472" for this suite.

• [SLOW TEST:6.138 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":303,"skipped":5586,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:16:54.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-edbceb3d-6c56-47da-b27c-b28262b63d65
STEP: Creating a pod to test consume secrets
Jan 30 09:16:54.588: INFO: Waiting up to 5m0s for pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519" in namespace "secrets-8886" to be "Succeeded or Failed"
Jan 30 09:16:54.592: INFO: Pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519": Phase="Pending", Reason="", readiness=false. Elapsed: 3.587423ms
Jan 30 09:16:56.610: INFO: Pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021563863s
Jan 30 09:16:58.620: INFO: Pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519": Phase="Pending", Reason="", readiness=false. Elapsed: 4.031123032s
Jan 30 09:17:00.631: INFO: Pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042267823s
STEP: Saw pod success
Jan 30 09:17:00.631: INFO: Pod "pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519" satisfied condition "Succeeded or Failed"
Jan 30 09:17:00.638: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519 container secret-env-test: <nil>
STEP: delete the pod
Jan 30 09:17:00.668: INFO: Waiting for pod pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519 to disappear
Jan 30 09:17:00.675: INFO: Pod pod-secrets-a3e585d0-468d-4409-bd4c-2f2b7d3ea519 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:17:00.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8886" for this suite.

• [SLOW TEST:6.147 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5601,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:00.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename daemonsets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jan 30 09:17:00.764: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:00.764: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:00.764: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:00.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:17:00.769: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:17:01.783: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:01.783: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:01.784: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:01.791: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:17:01.791: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:17:02.777: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:02.777: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:02.777: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:02.784: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 09:17:02.784: INFO: Node conoa-prod01-wk001 is running 0 daemon pod, expected 1
Jan 30 09:17:03.782: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp001 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:03.782: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp002 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:03.782: INFO: DaemonSet pods can't tolerate node conoa-prod01-cp003 with taints [{Key:node-role.kubernetes.io/master Value: Effect:NoSchedule TimeAdded:<nil>} {Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:17:03.790: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
Jan 30 09:17:03.790: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Jan 30 09:17:03.838: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37397579"},"items":null}

Jan 30 09:17:03.846: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37397579"},"items":[{"metadata":{"name":"daemon-set-8jlvp","generateName":"daemon-set-","namespace":"daemonsets-3751","uid":"f0d78354-4bd6-418c-9ca8-11cb93b5c11d","resourceVersion":"37397574","creationTimestamp":"2023-01-30T09:17:00Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"11d63c35-fde9-47d0-93ce-57b5c6ab104b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"11d63c35-fde9-47d0-93ce-57b5c6ab104b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.1.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qdr2g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qdr2g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conoa-prod01-wk001","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conoa-prod01-wk001"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"}],"hostIP":"10.55.210.13","podIP":"10.0.1.74","podIPs":[{"ip":"10.0.1.74"}],"startTime":"2023-01-30T09:17:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:17:02Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"cri-o://5c4ae312ddf884bca0b373e8b50b44802b159470e8a44fdf0ac12ff1d225eb9f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-k49sb","generateName":"daemon-set-","namespace":"daemonsets-3751","uid":"7443c279-c5c5-4cd1-a2ba-d1597589b666","resourceVersion":"37397572","creationTimestamp":"2023-01-30T09:17:00Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"11d63c35-fde9-47d0-93ce-57b5c6ab104b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"11d63c35-fde9-47d0-93ce-57b5c6ab104b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.3.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9pbz5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9pbz5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conoa-prod01-wk002","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conoa-prod01-wk002"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"}],"hostIP":"10.55.210.14","podIP":"10.0.3.76","podIPs":[{"ip":"10.0.3.76"}],"startTime":"2023-01-30T09:17:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:17:02Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"cri-o://35713d1ef66377544dd1abd251fe8f5fdc809276b9006b057e70867ec3860000","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-s6xlq","generateName":"daemon-set-","namespace":"daemonsets-3751","uid":"dc36acde-c4d1-4f78-9739-78671891d3cf","resourceVersion":"37397569","creationTimestamp":"2023-01-30T09:17:00Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"11d63c35-fde9-47d0-93ce-57b5c6ab104b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"11d63c35-fde9-47d0-93ce-57b5c6ab104b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.195\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-426pr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-426pr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conoa-prod01-wk003","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conoa-prod01-wk003"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"}],"hostIP":"10.55.210.15","podIP":"10.0.0.195","podIPs":[{"ip":"10.0.0.195"}],"startTime":"2023-01-30T09:17:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:17:02Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"cri-o://2f2162f1407cb338da3f3bcb0496eea66c2bff9ee576830777775eb524e1bdbf","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-szzqf","generateName":"daemon-set-","namespace":"daemonsets-3751","uid":"273ac20d-7a81-4c94-b018-900fef5a5e3a","resourceVersion":"37397564","creationTimestamp":"2023-01-30T09:17:00Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"11d63c35-fde9-47d0-93ce-57b5c6ab104b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"11d63c35-fde9-47d0-93ce-57b5c6ab104b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:17:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.2.49\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hs9mw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hs9mw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conoa-prod01-wk004","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conoa-prod01-wk004"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:17:00Z"}],"hostIP":"10.55.210.16","podIP":"10.0.2.49","podIPs":[{"ip":"10.0.2.49"}],"startTime":"2023-01-30T09:17:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:17:02Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"cri-o://bc2525fd1642ab86e6e8a32b635d86383245eb422c4ff23516bf38feaabd1bf7","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:17:03.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3751" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":305,"skipped":5615,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:03.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Jan 30 09:17:03.970: INFO: observed Pod pod-test in namespace pods-1965 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 30 09:17:03.972: INFO: observed Pod pod-test in namespace pods-1965 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC  }]
Jan 30 09:17:03.997: INFO: observed Pod pod-test in namespace pods-1965 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC  }]
Jan 30 09:17:06.078: INFO: Found Pod pod-test in namespace pods-1965 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:06 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 09:17:03 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Jan 30 09:17:06.138: INFO: observed event type MODIFIED
Jan 30 09:17:08.071: INFO: observed event type MODIFIED
Jan 30 09:17:09.071: INFO: observed event type MODIFIED
Jan 30 09:17:09.082: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 09:17:09.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1965" for this suite.

• [SLOW TEST:5.216 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":306,"skipped":5628,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:09.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename deployment
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:17:09.146: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jan 30 09:17:09.156: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 09:17:14.165: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jan 30 09:17:14.165: INFO: Creating deployment "test-rolling-update-deployment"
Jan 30 09:17:14.175: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jan 30 09:17:14.185: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jan 30 09:17:16.209: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jan 30 09:17:16.213: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 09:17:16.231: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-233  107f87a1-5842-4a0a-b03e-88697d746faf 37397767 1 2023-01-30 09:17:14 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2023-01-30 09:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:17:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00836b268 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 09:17:14 +0000 UTC,LastTransitionTime:2023-01-30 09:17:14 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2023-01-30 09:17:16 +0000 UTC,LastTransitionTime:2023-01-30 09:17:14 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 09:17:16.236: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-233  a3eaa6d0-e3ad-4873-9ed8-a9af4e0c3a84 37397756 1 2023-01-30 09:17:14 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 107f87a1-5842-4a0a-b03e-88697d746faf 0xc00836b777 0xc00836b778}] []  [{kube-controller-manager Update apps/v1 2023-01-30 09:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"107f87a1-5842-4a0a-b03e-88697d746faf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:17:16 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00836b828 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:17:16.236: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jan 30 09:17:16.236: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-233  dc6bb363-c0f5-4cdf-b460-a48b56537989 37397765 2 2023-01-30 09:17:09 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 107f87a1-5842-4a0a-b03e-88697d746faf 0xc00836b647 0xc00836b648}] []  [{e2e.test Update apps/v1 2023-01-30 09:17:09 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:17:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"107f87a1-5842-4a0a-b03e-88697d746faf\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:17:16 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00836b708 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:17:16.242: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-kjgtn" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-kjgtn test-rolling-update-deployment-67c8f74c6c- deployment-233  4f1f606d-4e14-4af8-9df7-800a27e07f0a 37397755 0 2023-01-30 09:17:14 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c a3eaa6d0-e3ad-4873-9ed8-a9af4e0c3a84 0xc00836bc97 0xc00836bc98}] []  [{kube-controller-manager Update v1 2023-01-30 09:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a3eaa6d0-e3ad-4873-9ed8-a9af4e0c3a84\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 09:17:16 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6bbgg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6bbgg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:conoa-prod01-wk003,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:17:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:17:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:17:16 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:17:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.55.210.15,PodIP:10.0.0.205,StartTime:2023-01-30 09:17:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 09:17:15 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:cri-o://2f4ecfbad2e1ed543ceed1836b31be3581caf5d811f1c431b8f352ab125ed0bd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.0.0.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jan 30 09:17:16.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-233" for this suite.

• [SLOW TEST:7.140 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":307,"skipped":5664,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:16.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename var-expansion
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Jan 30 09:17:16.299: INFO: Waiting up to 5m0s for pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200" in namespace "var-expansion-4848" to be "Succeeded or Failed"
Jan 30 09:17:16.303: INFO: Pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200": Phase="Pending", Reason="", readiness=false. Elapsed: 4.314291ms
Jan 30 09:17:18.316: INFO: Pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017065885s
Jan 30 09:17:20.328: INFO: Pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02935911s
Jan 30 09:17:22.338: INFO: Pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.039575459s
STEP: Saw pod success
Jan 30 09:17:22.338: INFO: Pod "var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200" satisfied condition "Succeeded or Failed"
Jan 30 09:17:22.343: INFO: Trying to get logs from node conoa-prod01-wk003 pod var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200 container dapi-container: <nil>
STEP: delete the pod
Jan 30 09:17:22.368: INFO: Waiting for pod var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200 to disappear
Jan 30 09:17:22.373: INFO: Pod var-expansion-6089dc8e-6ea1-4cd7-9fbf-e098eaf8b200 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jan 30 09:17:22.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4848" for this suite.

• [SLOW TEST:6.136 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":308,"skipped":5668,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:22.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-92557445-61b1-43e7-84df-cad7f5c7d1e6
STEP: Creating a pod to test consume secrets
Jan 30 09:17:22.449: INFO: Waiting up to 5m0s for pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077" in namespace "secrets-5640" to be "Succeeded or Failed"
Jan 30 09:17:22.454: INFO: Pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077": Phase="Pending", Reason="", readiness=false. Elapsed: 4.796483ms
Jan 30 09:17:24.470: INFO: Pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020897372s
Jan 30 09:17:26.487: INFO: Pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03773768s
Jan 30 09:17:28.499: INFO: Pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.049970356s
STEP: Saw pod success
Jan 30 09:17:28.499: INFO: Pod "pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077" satisfied condition "Succeeded or Failed"
Jan 30 09:17:28.505: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077 container secret-volume-test: <nil>
STEP: delete the pod
Jan 30 09:17:28.532: INFO: Waiting for pod pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077 to disappear
Jan 30 09:17:28.537: INFO: Pod pod-secrets-a4389561-df28-4fdb-b07d-87d6d94f9077 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:17:28.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5640" for this suite.

• [SLOW TEST:6.160 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5704,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:28.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Jan 30 09:17:28.614: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:30.630: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:32.625: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Jan 30 09:17:33.669: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 09:17:34.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3864" for this suite.

• [SLOW TEST:6.168 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":310,"skipped":5712,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:34.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename hostport
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Jan 30 09:17:34.792: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:36.800: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:38.803: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.55.210.13 on the node which pod1 resides and expect scheduled
Jan 30 09:17:38.819: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:40.830: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:42.827: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.55.210.13 but use UDP protocol on the node which pod2 resides
Jan 30 09:17:42.845: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:44.858: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:46.862: INFO: The status of Pod pod3 is Running (Ready = true)
Jan 30 09:17:46.880: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:48.890: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Jan 30 09:17:48.896: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.55.210.13 http://127.0.0.1:54323/hostname] Namespace:hostport-4301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:17:48.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:17:48.897: INFO: ExecWithOptions: Clientset creation
Jan 30 09:17:48.897: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.55.210.13+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.55.210.13, port: 54323
Jan 30 09:17:49.053: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.55.210.13:54323/hostname] Namespace:hostport-4301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:17:49.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:17:49.054: INFO: ExecWithOptions: Clientset creation
Jan 30 09:17:49.054: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.55.210.13%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.55.210.13, port: 54323 UDP
Jan 30 09:17:49.181: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.55.210.13 54323] Namespace:hostport-4301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:17:49.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:17:49.182: INFO: ExecWithOptions: Clientset creation
Jan 30 09:17:49.182: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.55.210.13+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Jan 30 09:17:54.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-4301" for this suite.

• [SLOW TEST:19.629 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":311,"skipped":5732,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:54.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename namespaces
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jan 30 09:17:54.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-1161" for this suite.
STEP: Destroying namespace "nspatchtest-bb6e5f6f-e8ad-4950-a613-eb91c1a85fe7-5937" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":312,"skipped":5737,"failed":0}
SSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:17:54.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 09:18:04.573: INFO: DNS probes using dns-3893/dns-test-a5a8022e-35cd-4808-a166-3b459ca58616 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 09:18:04.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3893" for this suite.

• [SLOW TEST:10.156 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":313,"skipped":5745,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:04.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Jan 30 09:18:04.665: INFO: Waiting up to 5m0s for pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2" in namespace "emptydir-7595" to be "Succeeded or Failed"
Jan 30 09:18:04.671: INFO: Pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.397186ms
Jan 30 09:18:06.690: INFO: Pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024812281s
Jan 30 09:18:08.705: INFO: Pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.039982975s
Jan 30 09:18:10.722: INFO: Pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.056395344s
STEP: Saw pod success
Jan 30 09:18:10.722: INFO: Pod "pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2" satisfied condition "Succeeded or Failed"
Jan 30 09:18:10.727: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2 container test-container: <nil>
STEP: delete the pod
Jan 30 09:18:10.772: INFO: Waiting for pod pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2 to disappear
Jan 30 09:18:10.777: INFO: Pod pod-d9150126-2d33-4a5b-9a2e-fc55b84f85a2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 09:18:10.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7595" for this suite.

• [SLOW TEST:6.178 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5749,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:10.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename services
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4035
Jan 30 09:18:10.854: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:18:12.868: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jan 30 09:18:12.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jan 30 09:18:13.088: INFO: rc: 7
Jan 30 09:18:13.111: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jan 30 09:18:13.117: INFO: Pod kube-proxy-mode-detector no longer exists
Jan 30 09:18:13.117: INFO: Couldn't detect KubeProxy mode - test failure may be expected: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode:
Command stdout:

stderr:
+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode
command terminated with exit code 7

error:
exit status 7
STEP: creating service affinity-clusterip-timeout in namespace services-4035
STEP: creating replication controller affinity-clusterip-timeout in namespace services-4035
I0130 09:18:13.149881      22 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-4035, replica count: 3
I0130 09:18:16.201428      22 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:18:16.226: INFO: Creating new exec pod
Jan 30 09:18:21.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec execpod-affinitysfnpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Jan 30 09:18:21.463: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Jan 30 09:18:21.463: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:18:21.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec execpod-affinitysfnpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.168.249 80'
Jan 30 09:18:21.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.168.249 80\nConnection to 10.106.168.249 80 port [tcp/http] succeeded!\n"
Jan 30 09:18:21.690: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jan 30 09:18:21.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec execpod-affinitysfnpw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.106.168.249:80/ ; done'
Jan 30 09:18:22.009: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n"
Jan 30 09:18:22.009: INFO: stdout: "\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c\naffinity-clusterip-timeout-4nm5c"
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Received response from host: affinity-clusterip-timeout-4nm5c
Jan 30 09:18:22.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec execpod-affinitysfnpw -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.106.168.249:80/'
Jan 30 09:18:22.214: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n"
Jan 30 09:18:22.214: INFO: stdout: "affinity-clusterip-timeout-4nm5c"
Jan 30 09:18:42.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=services-4035 exec execpod-affinitysfnpw -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.106.168.249:80/'
Jan 30 09:18:42.442: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.106.168.249:80/\n"
Jan 30 09:18:42.442: INFO: stdout: "affinity-clusterip-timeout-86qk5"
Jan 30 09:18:42.442: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-4035, will wait for the garbage collector to delete the pods
Jan 30 09:18:42.538: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 11.002447ms
Jan 30 09:18:42.639: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.873956ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jan 30 09:18:44.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4035" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:34.192 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":315,"skipped":5764,"failed":0}
SSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:44.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-a6458ac9-8070-4d04-9fb5-357a4d1a1483
STEP: Creating a pod to test consume configMaps
Jan 30 09:18:45.033: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35" in namespace "projected-9805" to be "Succeeded or Failed"
Jan 30 09:18:45.039: INFO: Pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35": Phase="Pending", Reason="", readiness=false. Elapsed: 5.927167ms
Jan 30 09:18:47.053: INFO: Pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019970827s
Jan 30 09:18:49.062: INFO: Pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028922493s
Jan 30 09:18:51.073: INFO: Pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.039894716s
STEP: Saw pod success
Jan 30 09:18:51.073: INFO: Pod "pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35" satisfied condition "Succeeded or Failed"
Jan 30 09:18:51.079: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:18:51.107: INFO: Waiting for pod pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35 to disappear
Jan 30 09:18:51.110: INFO: Pod pod-projected-configmaps-11ff3c5b-dc2f-4a02-8b46-b5909642bf35 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 09:18:51.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9805" for this suite.

• [SLOW TEST:6.137 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":316,"skipped":5767,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:51.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename watch
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Jan 30 09:18:51.198: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7554  804bbd3f-3f4a-43fb-a9d7-dbdb7dbffd30 37398573 0 2023-01-30 09:18:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-30 09:18:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 09:18:51.198: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7554  804bbd3f-3f4a-43fb-a9d7-dbdb7dbffd30 37398574 0 2023-01-30 09:18:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2023-01-30 09:18:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jan 30 09:18:51.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7554" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":317,"skipped":5798,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:51.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename proxy
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-8znl4 in namespace proxy-6141
I0130 09:18:51.273109      22 runners.go:193] Created replication controller with name: proxy-service-8znl4, namespace: proxy-6141, replica count: 1
I0130 09:18:52.323642      22 runners.go:193] proxy-service-8znl4 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 09:18:53.323908      22 runners.go:193] proxy-service-8znl4 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 09:18:54.324298      22 runners.go:193] proxy-service-8znl4 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:18:54.342: INFO: setup took 3.097123143s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Jan 30 09:18:54.355: INFO: (0) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 12.39403ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 13.88735ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 13.958903ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 13.835705ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 14.189671ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 13.818314ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 13.929478ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 13.785365ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 13.908142ms)
Jan 30 09:18:54.357: INFO: (0) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 13.900455ms)
Jan 30 09:18:54.358: INFO: (0) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 15.033352ms)
Jan 30 09:18:54.364: INFO: (0) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 21.494904ms)
Jan 30 09:18:54.364: INFO: (0) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 21.565493ms)
Jan 30 09:18:54.364: INFO: (0) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 21.783166ms)
Jan 30 09:18:54.365: INFO: (0) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 22.165461ms)
Jan 30 09:18:54.365: INFO: (0) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 22.025544ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.640753ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.688221ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.891764ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.71038ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 7.07114ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 7.311037ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 7.080227ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 6.942671ms)
Jan 30 09:18:54.372: INFO: (1) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.333303ms)
Jan 30 09:18:54.373: INFO: (1) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 7.242055ms)
Jan 30 09:18:54.373: INFO: (1) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 7.519449ms)
Jan 30 09:18:54.375: INFO: (1) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 9.130193ms)
Jan 30 09:18:54.375: INFO: (1) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 9.983733ms)
Jan 30 09:18:54.375: INFO: (1) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 9.998514ms)
Jan 30 09:18:54.375: INFO: (1) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 10.189611ms)
Jan 30 09:18:54.375: INFO: (1) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 9.979185ms)
Jan 30 09:18:54.379: INFO: (2) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 3.70982ms)
Jan 30 09:18:54.380: INFO: (2) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.000886ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 8.064261ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 8.504812ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 8.297033ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 8.346229ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 8.442133ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.570239ms)
Jan 30 09:18:54.384: INFO: (2) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 8.546872ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 8.758066ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 8.961951ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 9.257756ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 9.149184ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 9.011162ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 9.07242ms)
Jan 30 09:18:54.385: INFO: (2) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 9.147898ms)
Jan 30 09:18:54.389: INFO: (3) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.004082ms)
Jan 30 09:18:54.391: INFO: (3) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.855212ms)
Jan 30 09:18:54.391: INFO: (3) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.808156ms)
Jan 30 09:18:54.391: INFO: (3) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.716224ms)
Jan 30 09:18:54.391: INFO: (3) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.223195ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.411235ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 6.024594ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 6.082526ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 6.385401ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.321465ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 6.786736ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 6.821179ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 6.822428ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.001199ms)
Jan 30 09:18:54.392: INFO: (3) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.884268ms)
Jan 30 09:18:54.393: INFO: (3) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.97235ms)
Jan 30 09:18:54.397: INFO: (4) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 3.981178ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 3.873016ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.091869ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 4.513469ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 4.337551ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.090896ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 4.297513ms)
Jan 30 09:18:54.398: INFO: (4) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 3.939326ms)
Jan 30 09:18:54.399: INFO: (4) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 3.931028ms)
Jan 30 09:18:54.399: INFO: (4) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 3.954888ms)
Jan 30 09:18:54.400: INFO: (4) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 6.281408ms)
Jan 30 09:18:54.400: INFO: (4) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.468892ms)
Jan 30 09:18:54.401: INFO: (4) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 5.893433ms)
Jan 30 09:18:54.401: INFO: (4) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 5.825412ms)
Jan 30 09:18:54.401: INFO: (4) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 7.059189ms)
Jan 30 09:18:54.401: INFO: (4) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 5.86761ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.832433ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 6.144592ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.008139ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.898513ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.00295ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.941569ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.974542ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.942069ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 6.098021ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.257559ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.573978ms)
Jan 30 09:18:54.407: INFO: (5) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 6.47149ms)
Jan 30 09:18:54.409: INFO: (5) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.535603ms)
Jan 30 09:18:54.409: INFO: (5) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 7.489058ms)
Jan 30 09:18:54.409: INFO: (5) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.926985ms)
Jan 30 09:18:54.409: INFO: (5) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.967213ms)
Jan 30 09:18:54.413: INFO: (6) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.255342ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.145428ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.220864ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.174619ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.283214ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.252548ms)
Jan 30 09:18:54.415: INFO: (6) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.808191ms)
Jan 30 09:18:54.416: INFO: (6) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.995082ms)
Jan 30 09:18:54.416: INFO: (6) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.149796ms)
Jan 30 09:18:54.416: INFO: (6) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.364686ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.940771ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 7.877796ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.89237ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 7.934947ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.931774ms)
Jan 30 09:18:54.417: INFO: (6) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.887328ms)
Jan 30 09:18:54.422: INFO: (7) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.501597ms)
Jan 30 09:18:54.422: INFO: (7) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 4.44072ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.137591ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 6.482735ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.173746ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 6.10548ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.254758ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.374868ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.183089ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.287169ms)
Jan 30 09:18:54.424: INFO: (7) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 6.433836ms)
Jan 30 09:18:54.426: INFO: (7) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 7.705164ms)
Jan 30 09:18:54.426: INFO: (7) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.76666ms)
Jan 30 09:18:54.426: INFO: (7) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.865297ms)
Jan 30 09:18:54.426: INFO: (7) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.940579ms)
Jan 30 09:18:54.426: INFO: (7) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.771062ms)
Jan 30 09:18:54.430: INFO: (8) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 3.610653ms)
Jan 30 09:18:54.431: INFO: (8) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 4.169557ms)
Jan 30 09:18:54.431: INFO: (8) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.239838ms)
Jan 30 09:18:54.431: INFO: (8) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.379659ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 4.953038ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.317384ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 4.457226ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.265876ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 4.792637ms)
Jan 30 09:18:54.432: INFO: (8) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.195624ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 6.292118ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.862815ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 5.979669ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 6.372166ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 5.927637ms)
Jan 30 09:18:54.433: INFO: (8) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 5.701046ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.874643ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.575076ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 6.636829ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.910843ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.703625ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.699802ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 6.899283ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.81069ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 6.837154ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.765343ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 6.962861ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.195341ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.30346ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.479793ms)
Jan 30 09:18:54.440: INFO: (9) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.313793ms)
Jan 30 09:18:54.441: INFO: (9) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 7.689879ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 3.898966ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 3.721305ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.213125ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 4.257585ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 4.191793ms)
Jan 30 09:18:54.445: INFO: (10) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 4.047805ms)
Jan 30 09:18:54.446: INFO: (10) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.560881ms)
Jan 30 09:18:54.446: INFO: (10) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 4.856593ms)
Jan 30 09:18:54.446: INFO: (10) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 4.805797ms)
Jan 30 09:18:54.446: INFO: (10) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.807215ms)
Jan 30 09:18:54.447: INFO: (10) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 5.356745ms)
Jan 30 09:18:54.448: INFO: (10) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.194569ms)
Jan 30 09:18:54.448: INFO: (10) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 6.987836ms)
Jan 30 09:18:54.448: INFO: (10) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 7.493225ms)
Jan 30 09:18:54.448: INFO: (10) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.848005ms)
Jan 30 09:18:54.448: INFO: (10) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.133373ms)
Jan 30 09:18:54.452: INFO: (11) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 3.761537ms)
Jan 30 09:18:54.454: INFO: (11) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.807809ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.691378ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.084821ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.908675ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 6.000346ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.24796ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.435416ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 6.255993ms)
Jan 30 09:18:54.455: INFO: (11) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.613685ms)
Jan 30 09:18:54.456: INFO: (11) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.920291ms)
Jan 30 09:18:54.456: INFO: (11) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 7.17795ms)
Jan 30 09:18:54.456: INFO: (11) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.365437ms)
Jan 30 09:18:54.456: INFO: (11) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 7.45518ms)
Jan 30 09:18:54.457: INFO: (11) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 7.646292ms)
Jan 30 09:18:54.457: INFO: (11) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.745795ms)
Jan 30 09:18:54.461: INFO: (12) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 4.051379ms)
Jan 30 09:18:54.462: INFO: (12) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.109682ms)
Jan 30 09:18:54.462: INFO: (12) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.523081ms)
Jan 30 09:18:54.462: INFO: (12) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.26346ms)
Jan 30 09:18:54.462: INFO: (12) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 5.17304ms)
Jan 30 09:18:54.463: INFO: (12) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.489535ms)
Jan 30 09:18:54.463: INFO: (12) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.862586ms)
Jan 30 09:18:54.463: INFO: (12) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.713686ms)
Jan 30 09:18:54.463: INFO: (12) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.691939ms)
Jan 30 09:18:54.463: INFO: (12) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.616825ms)
Jan 30 09:18:54.464: INFO: (12) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.032278ms)
Jan 30 09:18:54.464: INFO: (12) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 7.13068ms)
Jan 30 09:18:54.465: INFO: (12) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 8.489411ms)
Jan 30 09:18:54.465: INFO: (12) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 8.541705ms)
Jan 30 09:18:54.466: INFO: (12) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 8.460017ms)
Jan 30 09:18:54.466: INFO: (12) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.5524ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 4.625628ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.089852ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 4.797121ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.322165ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 4.944321ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.055121ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 5.271722ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.100063ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.190283ms)
Jan 30 09:18:54.471: INFO: (13) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.621243ms)
Jan 30 09:18:54.472: INFO: (13) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.444475ms)
Jan 30 09:18:54.473: INFO: (13) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 6.891846ms)
Jan 30 09:18:54.473: INFO: (13) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 6.889299ms)
Jan 30 09:18:54.473: INFO: (13) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 7.139869ms)
Jan 30 09:18:54.473: INFO: (13) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 6.937863ms)
Jan 30 09:18:54.473: INFO: (13) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 6.874727ms)
Jan 30 09:18:54.477: INFO: (14) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 3.989127ms)
Jan 30 09:18:54.477: INFO: (14) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 3.66064ms)
Jan 30 09:18:54.477: INFO: (14) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 3.802635ms)
Jan 30 09:18:54.478: INFO: (14) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 4.223125ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 5.509293ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.59558ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 6.075581ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.766442ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.883636ms)
Jan 30 09:18:54.479: INFO: (14) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.120549ms)
Jan 30 09:18:54.480: INFO: (14) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.355052ms)
Jan 30 09:18:54.480: INFO: (14) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 6.769707ms)
Jan 30 09:18:54.482: INFO: (14) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 8.630647ms)
Jan 30 09:18:54.482: INFO: (14) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 8.578727ms)
Jan 30 09:18:54.482: INFO: (14) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 8.693099ms)
Jan 30 09:18:54.482: INFO: (14) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.739885ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 8.328816ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.589175ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 7.339425ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 8.55983ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 8.676526ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 8.856298ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 8.833003ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 8.732266ms)
Jan 30 09:18:54.491: INFO: (15) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 9.044726ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 9.183708ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 8.991726ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 9.628363ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 9.734331ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 9.808447ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 9.650217ms)
Jan 30 09:18:54.492: INFO: (15) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 9.713684ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.100405ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.256659ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.432266ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.252287ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.414613ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.308617ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 5.770944ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.676885ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.547676ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 5.911621ms)
Jan 30 09:18:54.498: INFO: (16) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.656207ms)
Jan 30 09:18:54.499: INFO: (16) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 6.559186ms)
Jan 30 09:18:54.501: INFO: (16) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.054653ms)
Jan 30 09:18:54.501: INFO: (16) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 8.213627ms)
Jan 30 09:18:54.501: INFO: (16) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 8.170482ms)
Jan 30 09:18:54.501: INFO: (16) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 8.440463ms)
Jan 30 09:18:54.505: INFO: (17) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 3.75525ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.168399ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.183618ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.412913ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.3457ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 5.361424ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.544316ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.293094ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.427091ms)
Jan 30 09:18:54.507: INFO: (17) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.57518ms)
Jan 30 09:18:54.508: INFO: (17) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 6.837122ms)
Jan 30 09:18:54.509: INFO: (17) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 8.319567ms)
Jan 30 09:18:54.510: INFO: (17) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 8.119728ms)
Jan 30 09:18:54.510: INFO: (17) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 8.086631ms)
Jan 30 09:18:54.510: INFO: (17) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.209262ms)
Jan 30 09:18:54.510: INFO: (17) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 8.414239ms)
Jan 30 09:18:54.514: INFO: (18) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 4.317874ms)
Jan 30 09:18:54.515: INFO: (18) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.528502ms)
Jan 30 09:18:54.515: INFO: (18) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.256315ms)
Jan 30 09:18:54.515: INFO: (18) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 5.60508ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 5.545013ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 5.467769ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 5.379183ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 5.45301ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 5.6544ms)
Jan 30 09:18:54.516: INFO: (18) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 5.520232ms)
Jan 30 09:18:54.517: INFO: (18) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 6.534089ms)
Jan 30 09:18:54.518: INFO: (18) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 8.033221ms)
Jan 30 09:18:54.518: INFO: (18) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 8.095302ms)
Jan 30 09:18:54.518: INFO: (18) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 8.011965ms)
Jan 30 09:18:54.518: INFO: (18) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 8.376462ms)
Jan 30 09:18:54.518: INFO: (18) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 8.289811ms)
Jan 30 09:18:54.523: INFO: (19) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:460/proxy/: tls baz (200; 4.70019ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg/proxy/rewriteme">test</a> (200; 6.352879ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.361245ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:1080/proxy/rewriteme">test<... (200; 6.671631ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.458332ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:443/proxy/tlsrewritem... (200; 6.585981ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/https:proxy-service-8znl4-njwmg:462/proxy/: tls qux (200; 6.497028ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:160/proxy/: foo (200; 6.517939ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/proxy-service-8znl4-njwmg:162/proxy/: bar (200; 6.69259ms)
Jan 30 09:18:54.525: INFO: (19) /api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/: <a href="/api/v1/namespaces/proxy-6141/pods/http:proxy-service-8znl4-njwmg:1080/proxy/rewriteme">... (200; 6.667749ms)
Jan 30 09:18:54.526: INFO: (19) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname2/proxy/: bar (200; 7.697487ms)
Jan 30 09:18:54.529: INFO: (19) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname2/proxy/: bar (200; 10.21671ms)
Jan 30 09:18:54.529: INFO: (19) /api/v1/namespaces/proxy-6141/services/http:proxy-service-8znl4:portname1/proxy/: foo (200; 10.372658ms)
Jan 30 09:18:54.529: INFO: (19) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname2/proxy/: tls qux (200; 10.372448ms)
Jan 30 09:18:54.529: INFO: (19) /api/v1/namespaces/proxy-6141/services/proxy-service-8znl4:portname1/proxy/: foo (200; 10.356136ms)
Jan 30 09:18:54.529: INFO: (19) /api/v1/namespaces/proxy-6141/services/https:proxy-service-8znl4:tlsportname1/proxy/: tls baz (200; 10.294839ms)
STEP: deleting ReplicationController proxy-service-8znl4 in namespace proxy-6141, will wait for the garbage collector to delete the pods
Jan 30 09:18:54.604: INFO: Deleting ReplicationController proxy-service-8znl4 took: 19.54318ms
Jan 30 09:18:54.705: INFO: Terminating ReplicationController proxy-service-8znl4 pods took: 101.023907ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jan 30 09:18:57.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6141" for this suite.

• [SLOW TEST:6.424 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":318,"skipped":5824,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:18:57.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:18:57.694: INFO: Waiting up to 5m0s for pod "downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c" in namespace "downward-api-5750" to be "Succeeded or Failed"
Jan 30 09:18:57.698: INFO: Pod "downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.648453ms
Jan 30 09:18:59.710: INFO: Pod "downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01668715s
Jan 30 09:19:01.730: INFO: Pod "downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036118709s
STEP: Saw pod success
Jan 30 09:19:01.730: INFO: Pod "downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c" satisfied condition "Succeeded or Failed"
Jan 30 09:19:01.736: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c container client-container: <nil>
STEP: delete the pod
Jan 30 09:19:01.771: INFO: Waiting for pod downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c to disappear
Jan 30 09:19:01.776: INFO: Pod downwardapi-volume-346fd6cc-260e-4148-b8cd-c547d2ffad8c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 09:19:01.776: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5750" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":319,"skipped":5860,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:19:01.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-803df022-c403-4ac8-8e38-26ace5bcf08b in namespace container-probe-5274
Jan 30 09:19:05.862: INFO: Started pod test-webserver-803df022-c403-4ac8-8e38-26ace5bcf08b in namespace container-probe-5274
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 09:19:05.868: INFO: Initial restart count of pod test-webserver-803df022-c403-4ac8-8e38-26ace5bcf08b is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 09:23:07.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5274" for this suite.

• [SLOW TEST:245.812 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":320,"skipped":5872,"failed":0}
S
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:23:07.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename subpath
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-tkfg
STEP: Creating a pod to test atomic-volume-subpath
Jan 30 09:23:07.656: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-tkfg" in namespace "subpath-7774" to be "Succeeded or Failed"
Jan 30 09:23:07.661: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Pending", Reason="", readiness=false. Elapsed: 4.360129ms
Jan 30 09:23:09.673: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017125219s
Jan 30 09:23:11.689: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 4.032460209s
Jan 30 09:23:13.703: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 6.046800715s
Jan 30 09:23:15.722: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 8.06540455s
Jan 30 09:23:17.738: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 10.081731557s
Jan 30 09:23:19.755: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 12.09906883s
Jan 30 09:23:21.764: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 14.107713081s
Jan 30 09:23:23.783: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 16.126610438s
Jan 30 09:23:25.795: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 18.138608674s
Jan 30 09:23:27.811: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 20.155098112s
Jan 30 09:23:29.828: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=true. Elapsed: 22.171832583s
Jan 30 09:23:31.844: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Running", Reason="", readiness=false. Elapsed: 24.188044779s
Jan 30 09:23:33.857: INFO: Pod "pod-subpath-test-configmap-tkfg": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.20088441s
STEP: Saw pod success
Jan 30 09:23:33.857: INFO: Pod "pod-subpath-test-configmap-tkfg" satisfied condition "Succeeded or Failed"
Jan 30 09:23:33.865: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-subpath-test-configmap-tkfg container test-container-subpath-configmap-tkfg: <nil>
STEP: delete the pod
Jan 30 09:23:33.918: INFO: Waiting for pod pod-subpath-test-configmap-tkfg to disappear
Jan 30 09:23:33.923: INFO: Pod pod-subpath-test-configmap-tkfg no longer exists
STEP: Deleting pod pod-subpath-test-configmap-tkfg
Jan 30 09:23:33.923: INFO: Deleting pod "pod-subpath-test-configmap-tkfg" in namespace "subpath-7774"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 30 09:23:33.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7774" for this suite.

• [SLOW TEST:26.339 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":321,"skipped":5873,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:23:33.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename subpath
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-2znz
STEP: Creating a pod to test atomic-volume-subpath
Jan 30 09:23:34.020: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-2znz" in namespace "subpath-7202" to be "Succeeded or Failed"
Jan 30 09:23:34.025: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Pending", Reason="", readiness=false. Elapsed: 4.507277ms
Jan 30 09:23:36.039: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018405353s
Jan 30 09:23:38.052: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 4.031371608s
Jan 30 09:23:40.065: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 6.045075498s
Jan 30 09:23:42.081: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 8.061017892s
Jan 30 09:23:44.094: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 10.073852196s
Jan 30 09:23:46.109: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 12.088938125s
Jan 30 09:23:48.119: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 14.09861466s
Jan 30 09:23:50.129: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 16.109041687s
Jan 30 09:23:52.145: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 18.1249314s
Jan 30 09:23:54.160: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 20.140072888s
Jan 30 09:23:56.175: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=true. Elapsed: 22.155251909s
Jan 30 09:23:58.194: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Running", Reason="", readiness=false. Elapsed: 24.173469109s
Jan 30 09:24:00.204: INFO: Pod "pod-subpath-test-projected-2znz": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.183437739s
STEP: Saw pod success
Jan 30 09:24:00.204: INFO: Pod "pod-subpath-test-projected-2znz" satisfied condition "Succeeded or Failed"
Jan 30 09:24:00.209: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-subpath-test-projected-2znz container test-container-subpath-projected-2znz: <nil>
STEP: delete the pod
Jan 30 09:24:00.237: INFO: Waiting for pod pod-subpath-test-projected-2znz to disappear
Jan 30 09:24:00.242: INFO: Pod pod-subpath-test-projected-2znz no longer exists
STEP: Deleting pod pod-subpath-test-projected-2znz
Jan 30 09:24:00.242: INFO: Deleting pod "pod-subpath-test-projected-2znz" in namespace "subpath-7202"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 30 09:24:00.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7202" for this suite.

• [SLOW TEST:26.319 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":322,"skipped":5882,"failed":0}
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:24:00.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Jan 30 09:24:00.307: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5647  0f69d19e-5da8-4e6d-9698-dd224d71fbfb 37399736 0 2023-01-30 09:24:00 +0000 UTC <nil> <nil> map[] map[] [] []  [{e2e.test Update v1 2023-01-30 09:24:00 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sdch6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sdch6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 09:24:00.314: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:24:02.329: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:24:04.329: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Jan 30 09:24:04.329: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5647 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:04.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:04.330: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:04.331: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5647/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Jan 30 09:24:04.480: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5647 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:04.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:04.481: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:04.481: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5647/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:24:04.627: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 09:24:04.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5647" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":323,"skipped":5882,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:24:04.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pod-network-test
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-56
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jan 30 09:24:04.705: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 09:24:04.763: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:24:06.783: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:24:08.781: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:10.774: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:12.772: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:14.775: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:16.781: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:18.780: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:20.772: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:22.778: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:24.783: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jan 30 09:24:26.779: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jan 30 09:24:26.791: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jan 30 09:24:26.803: INFO: The status of Pod netserver-2 is Running (Ready = true)
Jan 30 09:24:26.815: INFO: The status of Pod netserver-3 is Running (Ready = true)
STEP: Creating test pods
Jan 30 09:24:30.850: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
Jan 30 09:24:30.850: INFO: Breadth first check of 10.0.1.131 on host 10.55.210.13...
Jan 30 09:24:30.857: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.45:9080/dial?request=hostname&protocol=udp&host=10.0.1.131&port=8081&tries=1'] Namespace:pod-network-test-56 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:30.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:30.858: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:30.858: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-56/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.45%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.1.131%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:24:30.990: INFO: Waiting for responses: map[]
Jan 30 09:24:30.991: INFO: reached 10.0.1.131 after 0/1 tries
Jan 30 09:24:30.991: INFO: Breadth first check of 10.0.3.18 on host 10.55.210.14...
Jan 30 09:24:30.998: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.45:9080/dial?request=hostname&protocol=udp&host=10.0.3.18&port=8081&tries=1'] Namespace:pod-network-test-56 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:30.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:31.000: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:31.000: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-56/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.45%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.3.18%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:24:31.126: INFO: Waiting for responses: map[]
Jan 30 09:24:31.126: INFO: reached 10.0.3.18 after 0/1 tries
Jan 30 09:24:31.126: INFO: Breadth first check of 10.0.0.44 on host 10.55.210.15...
Jan 30 09:24:31.140: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.45:9080/dial?request=hostname&protocol=udp&host=10.0.0.44&port=8081&tries=1'] Namespace:pod-network-test-56 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:31.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:31.142: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:31.142: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-56/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.45%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.0.44%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:24:31.292: INFO: Waiting for responses: map[]
Jan 30 09:24:31.292: INFO: reached 10.0.0.44 after 0/1 tries
Jan 30 09:24:31.292: INFO: Breadth first check of 10.0.2.202 on host 10.55.210.16...
Jan 30 09:24:31.299: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.45:9080/dial?request=hostname&protocol=udp&host=10.0.2.202&port=8081&tries=1'] Namespace:pod-network-test-56 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:24:31.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
Jan 30 09:24:31.300: INFO: ExecWithOptions: Clientset creation
Jan 30 09:24:31.300: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-56/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.45%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.2.202%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:24:31.440: INFO: Waiting for responses: map[]
Jan 30 09:24:31.440: INFO: reached 10.0.2.202 after 0/1 tries
Jan 30 09:24:31.440: INFO: Going to retry 0 out of 4 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jan 30 09:24:31.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-56" for this suite.

• [SLOW TEST:26.787 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":324,"skipped":5900,"failed":0}
SSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:24:31.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9076ad54-afea-45c3-85fe-644fa65a016d in namespace container-probe-1498
Jan 30 09:24:35.538: INFO: Started pod liveness-9076ad54-afea-45c3-85fe-644fa65a016d in namespace container-probe-1498
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 09:24:35.544: INFO: Initial restart count of pod liveness-9076ad54-afea-45c3-85fe-644fa65a016d is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 09:28:37.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1498" for this suite.

• [SLOW TEST:245.798 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":325,"skipped":5906,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:28:37.263: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:28:37.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:28:40.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5061" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":326,"skipped":5915,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:28:40.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename pods
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Jan 30 09:28:40.601: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jan 30 09:28:45.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8193" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":327,"skipped":5947,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:28:45.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-runtime
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 30 09:28:49.521: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 30 09:28:49.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7084" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":328,"skipped":5964,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:28:49.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-runtime
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jan 30 09:28:53.661: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jan 30 09:28:53.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-712" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":329,"skipped":5997,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:28:53.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-8e0b8a5c-94d1-4dba-ae0f-07cb2ac5fb35 in namespace container-probe-3102
Jan 30 09:28:57.782: INFO: Started pod busybox-8e0b8a5c-94d1-4dba-ae0f-07cb2ac5fb35 in namespace container-probe-3102
STEP: checking the pod's current state and verifying that restartCount is present
Jan 30 09:28:57.788: INFO: Initial restart count of pod busybox-8e0b8a5c-94d1-4dba-ae0f-07cb2ac5fb35 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 09:32:59.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3102" for this suite.

• [SLOW TEST:245.834 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6046,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:32:59.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 09:33:00.060: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Jan 30 09:33:02.087: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 33, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 33, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 09:33:05.128: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:33:05.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:33:08.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-705" for this suite.
STEP: Destroying namespace "webhook-705-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:8.869 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":331,"skipped":6081,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:08.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename subpath
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-dn5b
STEP: Creating a pod to test atomic-volume-subpath
Jan 30 09:33:08.469: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-dn5b" in namespace "subpath-1104" to be "Succeeded or Failed"
Jan 30 09:33:08.473: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.525792ms
Jan 30 09:33:10.490: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021060334s
Jan 30 09:33:12.507: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 4.037447507s
Jan 30 09:33:14.522: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 6.052305636s
Jan 30 09:33:16.534: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 8.064380599s
Jan 30 09:33:18.554: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 10.08420743s
Jan 30 09:33:20.569: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 12.100037606s
Jan 30 09:33:22.586: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 14.116779479s
Jan 30 09:33:24.599: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 16.129905614s
Jan 30 09:33:26.612: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 18.142859284s
Jan 30 09:33:28.626: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 20.157002568s
Jan 30 09:33:30.639: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=true. Elapsed: 22.16956044s
Jan 30 09:33:32.656: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Running", Reason="", readiness=false. Elapsed: 24.186902425s
Jan 30 09:33:34.666: INFO: Pod "pod-subpath-test-secret-dn5b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.196524693s
STEP: Saw pod success
Jan 30 09:33:34.666: INFO: Pod "pod-subpath-test-secret-dn5b" satisfied condition "Succeeded or Failed"
Jan 30 09:33:34.671: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-subpath-test-secret-dn5b container test-container-subpath-secret-dn5b: <nil>
STEP: delete the pod
Jan 30 09:33:34.695: INFO: Waiting for pod pod-subpath-test-secret-dn5b to disappear
Jan 30 09:33:34.699: INFO: Pod pod-subpath-test-secret-dn5b no longer exists
STEP: Deleting pod pod-subpath-test-secret-dn5b
Jan 30 09:33:34.699: INFO: Deleting pod "pod-subpath-test-secret-dn5b" in namespace "subpath-1104"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jan 30 09:33:34.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1104" for this suite.

• [SLOW TEST:26.304 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":332,"skipped":6086,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:34.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replication-controller
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Jan 30 09:33:34.769: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:33:36.780: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:33:38.788: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jan 30 09:33:39.820: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6348" for this suite.

• [SLOW TEST:5.121 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":333,"skipped":6097,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:39.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jan 30 09:33:39.878: INFO: Waiting up to 5m0s for pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d" in namespace "emptydir-8947" to be "Succeeded or Failed"
Jan 30 09:33:39.882: INFO: Pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.598126ms
Jan 30 09:33:41.901: INFO: Pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023009401s
Jan 30 09:33:43.911: INFO: Pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.033017521s
Jan 30 09:33:45.926: INFO: Pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.048169908s
STEP: Saw pod success
Jan 30 09:33:45.926: INFO: Pod "pod-02c80059-1039-47e7-abb2-2a0a17f39a9d" satisfied condition "Succeeded or Failed"
Jan 30 09:33:45.931: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-02c80059-1039-47e7-abb2-2a0a17f39a9d container test-container: <nil>
STEP: delete the pod
Jan 30 09:33:45.964: INFO: Waiting for pod pod-02c80059-1039-47e7-abb2-2a0a17f39a9d to disappear
Jan 30 09:33:45.969: INFO: Pod pod-02c80059-1039-47e7-abb2-2a0a17f39a9d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 09:33:45.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8947" for this suite.

• [SLOW TEST:6.147 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":334,"skipped":6102,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:45.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 09:33:46.267: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Jan 30 09:33:48.295: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 33, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 33, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 33, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 33, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 09:33:51.325: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Jan 30 09:33:53.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=webhook-1675 attach --namespace=webhook-1675 to-be-attached-pod -i -c=container1'
Jan 30 09:33:53.505: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:33:53.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1675" for this suite.
STEP: Destroying namespace "webhook-1675-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.603 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":335,"skipped":6104,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:53.589: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename sysctl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jan 30 09:33:59.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9695" for this suite.

• [SLOW TEST:6.092 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":336,"skipped":6117,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:59.682: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename events
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jan 30 09:33:59.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-2173" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":337,"skipped":6133,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:33:59.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename replicaset
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:33:59.852: INFO: Creating ReplicaSet my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709
Jan 30 09:33:59.863: INFO: Pod name my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709: Found 0 pods out of 1
Jan 30 09:34:04.875: INFO: Pod name my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709: Found 1 pods out of 1
Jan 30 09:34:04.875: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709" is running
Jan 30 09:34:04.880: INFO: Pod "my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709-kmv8m" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:33:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:34:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:34:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:33:59 +0000 UTC Reason: Message:}])
Jan 30 09:34:04.880: INFO: Trying to dial the pod
Jan 30 09:34:09.915: INFO: Controller my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709: Got expected result from replica 1 [my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709-kmv8m]: "my-hostname-basic-fd007b05-c011-497f-9e35-572317ddd709-kmv8m", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jan 30 09:34:09.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8749" for this suite.

• [SLOW TEST:10.105 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":338,"skipped":6155,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:09.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-a1b08976-91d1-4ee3-bcbf-3de493c3206d
STEP: Creating a pod to test consume configMaps
Jan 30 09:34:09.988: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132" in namespace "projected-9066" to be "Succeeded or Failed"
Jan 30 09:34:09.992: INFO: Pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132": Phase="Pending", Reason="", readiness=false. Elapsed: 4.161673ms
Jan 30 09:34:12.003: INFO: Pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014403804s
Jan 30 09:34:14.012: INFO: Pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023376921s
Jan 30 09:34:16.031: INFO: Pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.042446987s
STEP: Saw pod success
Jan 30 09:34:16.031: INFO: Pod "pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132" satisfied condition "Succeeded or Failed"
Jan 30 09:34:16.037: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:34:16.067: INFO: Waiting for pod pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132 to disappear
Jan 30 09:34:16.073: INFO: Pod pod-projected-configmaps-821dbf8a-fc7c-405a-8e34-50c0b63d1132 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 09:34:16.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9066" for this suite.

• [SLOW TEST:6.160 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6178,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:16.093: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename configmap
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-19451d40-3045-42c0-84bd-adb283c063c2
STEP: Creating a pod to test consume configMaps
Jan 30 09:34:16.149: INFO: Waiting up to 5m0s for pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09" in namespace "configmap-5391" to be "Succeeded or Failed"
Jan 30 09:34:16.153: INFO: Pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09": Phase="Pending", Reason="", readiness=false. Elapsed: 3.861945ms
Jan 30 09:34:18.168: INFO: Pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019446303s
Jan 30 09:34:20.184: INFO: Pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035378571s
Jan 30 09:34:22.202: INFO: Pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.052993045s
STEP: Saw pod success
Jan 30 09:34:22.202: INFO: Pod "pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09" satisfied condition "Succeeded or Failed"
Jan 30 09:34:22.207: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09 container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:34:22.236: INFO: Waiting for pod pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09 to disappear
Jan 30 09:34:22.240: INFO: Pod pod-configmaps-ef553639-082c-4aab-a432-e5a0eb78dc09 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jan 30 09:34:22.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5391" for this suite.

• [SLOW TEST:6.163 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":340,"skipped":6213,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:22.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 30 09:34:22.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1519 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 30 09:34:22.395: INFO: stderr: ""
Jan 30 09:34:22.395: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Jan 30 09:34:22.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1519 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Jan 30 09:34:23.748: INFO: stderr: ""
Jan 30 09:34:23.749: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jan 30 09:34:23.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-1519 delete pods e2e-test-httpd-pod'
Jan 30 09:34:25.507: INFO: stderr: ""
Jan 30 09:34:25.507: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 09:34:25.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1519" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":341,"skipped":6222,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:25.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:34:25.587: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611" in namespace "downward-api-344" to be "Succeeded or Failed"
Jan 30 09:34:25.595: INFO: Pod "downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611": Phase="Pending", Reason="", readiness=false. Elapsed: 7.252189ms
Jan 30 09:34:27.611: INFO: Pod "downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023186335s
Jan 30 09:34:29.622: INFO: Pod "downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034511994s
STEP: Saw pod success
Jan 30 09:34:29.622: INFO: Pod "downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611" satisfied condition "Succeeded or Failed"
Jan 30 09:34:29.628: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611 container client-container: <nil>
STEP: delete the pod
Jan 30 09:34:29.654: INFO: Waiting for pod downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611 to disappear
Jan 30 09:34:29.660: INFO: Pod downwardapi-volume-e1cf1691-910e-401f-ad91-a35eb7f8a611 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 09:34:29.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-344" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":342,"skipped":6243,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:29.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename container-probe
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jan 30 09:34:29.732: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:34:31.747: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:33.750: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:35.743: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:37.750: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:39.748: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:41.745: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:43.744: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:45.745: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:47.748: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:49.745: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = false)
Jan 30 09:34:51.747: INFO: The status of Pod test-webserver-eef806b8-bad4-43cb-8242-5d37b469d1ad is Running (Ready = true)
Jan 30 09:34:51.753: INFO: Container started at 2023-01-30 09:34:31 +0000 UTC, pod became ready at 2023-01-30 09:34:50 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jan 30 09:34:51.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3666" for this suite.

• [SLOW TEST:22.099 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6279,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:51.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:34:51.834: INFO: Waiting up to 5m0s for pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92" in namespace "projected-8455" to be "Succeeded or Failed"
Jan 30 09:34:51.839: INFO: Pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92": Phase="Pending", Reason="", readiness=false. Elapsed: 5.207992ms
Jan 30 09:34:53.856: INFO: Pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92": Phase="Running", Reason="", readiness=true. Elapsed: 2.022309943s
Jan 30 09:34:55.872: INFO: Pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92": Phase="Running", Reason="", readiness=false. Elapsed: 4.038032812s
Jan 30 09:34:57.886: INFO: Pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.05215264s
STEP: Saw pod success
Jan 30 09:34:57.886: INFO: Pod "downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92" satisfied condition "Succeeded or Failed"
Jan 30 09:34:57.892: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92 container client-container: <nil>
STEP: delete the pod
Jan 30 09:34:57.919: INFO: Waiting for pod downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92 to disappear
Jan 30 09:34:57.924: INFO: Pod downwardapi-volume-630d2848-1790-43e7-9c42-c5943749ad92 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 09:34:57.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8455" for this suite.

• [SLOW TEST:6.164 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6280,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:34:57.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:34:57.994: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa" in namespace "downward-api-4569" to be "Succeeded or Failed"
Jan 30 09:34:58.002: INFO: Pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa": Phase="Pending", Reason="", readiness=false. Elapsed: 8.302059ms
Jan 30 09:35:00.013: INFO: Pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019462961s
Jan 30 09:35:02.029: INFO: Pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa": Phase="Pending", Reason="", readiness=false. Elapsed: 4.034864357s
Jan 30 09:35:04.036: INFO: Pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.041949613s
STEP: Saw pod success
Jan 30 09:35:04.036: INFO: Pod "downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa" satisfied condition "Succeeded or Failed"
Jan 30 09:35:04.042: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa container client-container: <nil>
STEP: delete the pod
Jan 30 09:35:04.068: INFO: Waiting for pod downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa to disappear
Jan 30 09:35:04.073: INFO: Pod downwardapi-volume-ec77c597-77a1-4783-ad67-f8df4d3491fa no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jan 30 09:35:04.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4569" for this suite.

• [SLOW TEST:6.147 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":345,"skipped":6298,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:04.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename webhook
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jan 30 09:35:04.466: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 09:35:06.492: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 35, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 35, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 35, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 35, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jan 30 09:35:09.533: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jan 30 09:35:09.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4595" for this suite.
STEP: Destroying namespace "webhook-4595-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.730 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":346,"skipped":6320,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:09.822: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename disruption
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jan 30 09:35:15.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-7643" for this suite.

• [SLOW TEST:6.170 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":347,"skipped":6409,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:15.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jan 30 09:35:16.044: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502" in namespace "projected-6982" to be "Succeeded or Failed"
Jan 30 09:35:16.049: INFO: Pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502": Phase="Pending", Reason="", readiness=false. Elapsed: 4.944926ms
Jan 30 09:35:18.064: INFO: Pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020550443s
Jan 30 09:35:20.079: INFO: Pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035369959s
Jan 30 09:35:22.101: INFO: Pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.057295188s
STEP: Saw pod success
Jan 30 09:35:22.101: INFO: Pod "downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502" satisfied condition "Succeeded or Failed"
Jan 30 09:35:22.107: INFO: Trying to get logs from node conoa-prod01-wk003 pod downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502 container client-container: <nil>
STEP: delete the pod
Jan 30 09:35:22.141: INFO: Waiting for pod downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502 to disappear
Jan 30 09:35:22.145: INFO: Pod downwardapi-volume-ea260111-81c9-45de-ac2f-9e762c111502 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jan 30 09:35:22.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6982" for this suite.

• [SLOW TEST:6.171 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6410,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:22.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename projected
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-cfb1c950-d8be-4f43-8ebb-55e272586eca
STEP: Creating a pod to test consume configMaps
Jan 30 09:35:22.224: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c" in namespace "projected-4197" to be "Succeeded or Failed"
Jan 30 09:35:22.229: INFO: Pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.566979ms
Jan 30 09:35:24.239: INFO: Pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014725391s
Jan 30 09:35:26.252: INFO: Pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027824962s
Jan 30 09:35:28.268: INFO: Pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.043431936s
STEP: Saw pod success
Jan 30 09:35:28.268: INFO: Pod "pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c" satisfied condition "Succeeded or Failed"
Jan 30 09:35:28.274: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c container agnhost-container: <nil>
STEP: delete the pod
Jan 30 09:35:28.307: INFO: Waiting for pod pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c to disappear
Jan 30 09:35:28.312: INFO: Pod pod-projected-configmaps-9cd6d9db-08c4-40dc-ae57-13a803e5740c no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jan 30 09:35:28.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4197" for this suite.

• [SLOW TEST:6.164 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":349,"skipped":6421,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:28.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename endpointslice
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jan 30 09:35:28.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1877" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":350,"skipped":6476,"failed":0}
SSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:28.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename secrets
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jan 30 09:35:28.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6003" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":351,"skipped":6481,"failed":0}
SSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:35:28.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6516 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6516;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6516 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6516;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6516.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6516.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6516.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6516.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6516.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6516.svc;check="$$(dig +notcp +noall +answer +search 50.84.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.84.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.84.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.84.50_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6516 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6516;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6516 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6516;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6516.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6516.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6516.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6516.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6516.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6516.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6516.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6516.svc;check="$$(dig +notcp +noall +answer +search 50.84.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.84.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.84.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.84.50_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 09:35:34.744: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.750: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.756: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.762: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.768: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.774: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.779: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.785: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.815: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.821: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.828: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.834: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.840: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.846: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.852: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.857: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:34.880: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:35:39.889: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.898: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.904: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.910: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.917: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.924: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.930: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.936: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.965: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.970: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.976: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.982: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.987: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.993: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:39.999: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:40.004: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:40.025: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:35:44.888: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.895: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.901: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.906: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.911: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.916: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.921: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.926: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.950: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.955: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.960: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.964: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.969: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.973: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.977: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.981: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:44.996: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:35:49.888: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.894: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.901: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.906: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.912: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.918: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.924: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.930: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.960: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.966: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.971: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.977: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.983: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.989: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:49.995: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:50.001: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:50.025: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:35:54.888: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.896: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.902: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.909: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.915: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.921: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.926: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.932: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.963: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.969: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.973: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.979: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.985: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.990: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:54.997: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:55.003: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:55.025: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:35:59.889: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.896: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.902: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.907: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.912: INFO: Unable to read wheezy_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.917: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.923: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.932: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.958: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.964: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.969: INFO: Unable to read jessie_udp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.974: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516 from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.979: INFO: Unable to read jessie_udp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.985: INFO: Unable to read jessie_tcp@dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.989: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:35:59.994: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc from pod dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026: the server could not find the requested resource (get pods dns-test-80e2a83c-1804-48ab-8635-75027c744026)
Jan 30 09:36:00.016: INFO: Lookups using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6516 wheezy_tcp@dns-test-service.dns-6516 wheezy_udp@dns-test-service.dns-6516.svc wheezy_tcp@dns-test-service.dns-6516.svc wheezy_udp@_http._tcp.dns-test-service.dns-6516.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6516.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6516 jessie_tcp@dns-test-service.dns-6516 jessie_udp@dns-test-service.dns-6516.svc jessie_tcp@dns-test-service.dns-6516.svc jessie_udp@_http._tcp.dns-test-service.dns-6516.svc jessie_tcp@_http._tcp.dns-test-service.dns-6516.svc]

Jan 30 09:36:05.037: INFO: DNS probes using dns-6516/dns-test-80e2a83c-1804-48ab-8635-75027c744026 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 09:36:05.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6516" for this suite.

• [SLOW TEST:36.464 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":352,"skipped":6484,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:36:05.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename kubectl
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Jan 30 09:36:05.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 create -f -'
Jan 30 09:36:06.387: INFO: stderr: ""
Jan 30 09:36:06.387: INFO: stdout: "pod/pause created\n"
Jan 30 09:36:06.387: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jan 30 09:36:06.388: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-5442" to be "running and ready"
Jan 30 09:36:06.399: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 11.105144ms
Jan 30 09:36:08.416: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.028646705s
Jan 30 09:36:10.428: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 4.039856849s
Jan 30 09:36:10.428: INFO: Pod "pause" satisfied condition "running and ready"
Jan 30 09:36:10.428: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Jan 30 09:36:10.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 label pods pause testing-label=testing-label-value'
Jan 30 09:36:10.525: INFO: stderr: ""
Jan 30 09:36:10.525: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Jan 30 09:36:10.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 get pod pause -L testing-label'
Jan 30 09:36:10.600: INFO: stderr: ""
Jan 30 09:36:10.600: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Jan 30 09:36:10.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 label pods pause testing-label-'
Jan 30 09:36:10.683: INFO: stderr: ""
Jan 30 09:36:10.683: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Jan 30 09:36:10.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 get pod pause -L testing-label'
Jan 30 09:36:10.758: INFO: stderr: ""
Jan 30 09:36:10.758: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Jan 30 09:36:10.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 delete --grace-period=0 --force -f -'
Jan 30 09:36:10.850: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 09:36:10.850: INFO: stdout: "pod \"pause\" force deleted\n"
Jan 30 09:36:10.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 get rc,svc -l name=pause --no-headers'
Jan 30 09:36:10.934: INFO: stderr: "No resources found in kubectl-5442 namespace.\n"
Jan 30 09:36:10.934: INFO: stdout: ""
Jan 30 09:36:10.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3671202812 --namespace=kubectl-5442 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 09:36:10.999: INFO: stderr: ""
Jan 30 09:36:10.999: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jan 30 09:36:10.999: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5442" for this suite.

• [SLOW TEST:5.900 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1332
    should update the label on a resource  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":353,"skipped":6491,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:36:11.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename emptydir
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jan 30 09:36:11.061: INFO: Waiting up to 5m0s for pod "pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc" in namespace "emptydir-9791" to be "Succeeded or Failed"
Jan 30 09:36:11.066: INFO: Pod "pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.282901ms
Jan 30 09:36:13.076: INFO: Pod "pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014474116s
Jan 30 09:36:15.085: INFO: Pod "pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024224324s
STEP: Saw pod success
Jan 30 09:36:15.085: INFO: Pod "pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc" satisfied condition "Succeeded or Failed"
Jan 30 09:36:15.090: INFO: Trying to get logs from node conoa-prod01-wk003 pod pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc container test-container: <nil>
STEP: delete the pod
Jan 30 09:36:15.123: INFO: Waiting for pod pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc to disappear
Jan 30 09:36:15.128: INFO: Pod pod-8c3e0685-48fb-4ec5-b3ca-7097790f5abc no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jan 30 09:36:15.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9791" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":354,"skipped":6509,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:36:15.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename downward-api
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jan 30 09:36:15.201: INFO: Waiting up to 5m0s for pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6" in namespace "downward-api-1137" to be "Succeeded or Failed"
Jan 30 09:36:15.208: INFO: Pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 7.153209ms
Jan 30 09:36:17.219: INFO: Pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01868083s
Jan 30 09:36:19.230: INFO: Pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028845726s
Jan 30 09:36:21.246: INFO: Pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.045392529s
STEP: Saw pod success
Jan 30 09:36:21.246: INFO: Pod "downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6" satisfied condition "Succeeded or Failed"
Jan 30 09:36:21.253: INFO: Trying to get logs from node conoa-prod01-wk003 pod downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6 container dapi-container: <nil>
STEP: delete the pod
Jan 30 09:36:21.290: INFO: Waiting for pod downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6 to disappear
Jan 30 09:36:21.295: INFO: Pod downward-api-071183b7-48e0-48a2-9b27-84c57b8ec6e6 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jan 30 09:36:21.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1137" for this suite.

• [SLOW TEST:6.165 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":355,"skipped":6574,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jan 30 09:36:21.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3671202812
STEP: Building a namespace api object, basename dns
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9632.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jan 30 09:36:25.402: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.408: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.414: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.421: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.428: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.435: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.442: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.448: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:25.448: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:30.460: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.467: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.475: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.481: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.489: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.497: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.504: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.514: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:30.514: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:35.459: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.466: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.472: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.480: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.490: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.496: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.504: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.512: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:35.512: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:40.458: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.466: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.473: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.480: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.487: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.495: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.502: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.509: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:40.509: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:45.458: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.465: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.472: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.478: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.484: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.490: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.497: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.503: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:45.503: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:50.458: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.465: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.473: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.480: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.487: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.494: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.501: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.507: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:50.507: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9632.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local jessie_udp@dns-test-service-2.dns-9632.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:36:55.482: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local from pod dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b: the server could not find the requested resource (get pods dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b)
Jan 30 09:36:55.491: INFO: Lookups using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b failed for: [jessie_tcp@dns-querier-2.dns-test-service-2.dns-9632.svc.cluster.local]

Jan 30 09:37:00.498: INFO: DNS probes using dns-9632/dns-test-66abdfc7-92a8-40c0-ac7d-7b0465ce553b succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jan 30 09:37:00.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9632" for this suite.

• [SLOW TEST:39.236 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":356,"skipped":6607,"failed":0}
SSSSSSSSSSJan 30 09:37:00.553: INFO: Running AfterSuite actions on all nodes
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Jan 30 09:37:00.553: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Jan 30 09:37:00.553: INFO: Running AfterSuite actions on node 1
Jan 30 09:37:00.553: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6617,"failed":0}

Ran 356 of 6973 Specs in 6394.300 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6617 Skipped
PASS

Ginkgo ran 1 suite in 1h46m35.878730628s
Test Suite Passed
